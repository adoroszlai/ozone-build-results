<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250227 16:38:20.831" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-vault" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:32:37.133" endtime="20250227 16:32:37.133"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:37.134" level="INFO">${randStr} = 5939419630</msg>
<status status="PASS" starttime="20250227 16:32:37.134" endtime="20250227 16:32:37.134"/>
</kw>
<msg timestamp="20250227 16:32:37.134" level="INFO">${random} = ozone-test-5939419630</msg>
<status status="PASS" starttime="20250227 16:32:37.134" endtime="20250227 16:32:37.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:32:37.135" level="INFO">${PREFIX} = ozone-test-5939419630</msg>
<status status="PASS" starttime="20250227 16:32:37.134" endtime="20250227 16:32:37.135"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.134" endtime="20250227 16:32:37.135"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.133" endtime="20250227 16:32:37.135"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:37.138" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:37.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:37.140" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250227 16:32:37.136" endtime="20250227 16:32:37.140"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:32:37.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:37.141" endtime="20250227 16:32:37.141"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250227 16:32:37.141" endtime="20250227 16:32:37.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:37.141" endtime="20250227 16:32:37.141"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250227 16:32:37.141" endtime="20250227 16:32:37.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:37.141" endtime="20250227 16:32:37.142"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.135" endtime="20250227 16:32:37.142"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.135" endtime="20250227 16:32:37.142"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:32:37.143" endtime="20250227 16:32:37.143"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:37.145" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:37.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:37.149" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:32:37.144" endtime="20250227 16:32:37.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:37.149" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:32:37.149" endtime="20250227 16:32:37.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:37.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:37.149" endtime="20250227 16:32:37.150"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.143" endtime="20250227 16:32:37.150"/>
</kw>
<msg timestamp="20250227 16:32:37.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:37.143" endtime="20250227 16:32:37.150"/>
</kw>
<msg timestamp="20250227 16:32:37.150" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:32:37.143" endtime="20250227 16:32:37.150"/>
</kw>
<msg timestamp="20250227 16:32:37.150" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:32:37.143" endtime="20250227 16:32:37.150"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:32:37.151" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:32:37.150" endtime="20250227 16:32:37.151"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:37.154" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:37.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:37.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:37.152" endtime="20250227 16:32:37.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:37.187" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:37.186" endtime="20250227 16:32:37.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:37.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:37.187" endtime="20250227 16:32:37.187"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.152" endtime="20250227 16:32:37.187"/>
</kw>
<msg timestamp="20250227 16:32:37.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:37.151" endtime="20250227 16:32:37.187"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.151" endtime="20250227 16:32:37.188"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.151" endtime="20250227 16:32:37.188"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.142" endtime="20250227 16:32:37.188"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.142" endtime="20250227 16:32:37.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:37.190" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:39.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:39.996" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:32:37.189" endtime="20250227 16:32:39.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:39.997" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:32:39.997" endtime="20250227 16:32:39.997"/>
</kw>
<msg timestamp="20250227 16:32:39.997" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:32:37.188" endtime="20250227 16:32:39.997"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250227 16:32:39.998" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250227 16:32:39.998" endtime="20250227 16:32:39.998"/>
</kw>
<msg timestamp="20250227 16:32:39.998" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250227 16:32:39.998" endtime="20250227 16:32:39.998"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250227 16:32:39.999" endtime="20250227 16:32:39.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250227 16:32:39.999" endtime="20250227 16:32:39.999"/>
</kw>
<status status="NOT RUN" starttime="20250227 16:32:39.998" endtime="20250227 16:32:39.999"/>
</branch>
<status status="PASS" starttime="20250227 16:32:39.998" endtime="20250227 16:32:39.999"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250227 16:32:39.999" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250227 16:32:39.999" endtime="20250227 16:32:39.999"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250227 16:32:40.000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250227 16:32:39.999" endtime="20250227 16:32:40.000"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250227 16:32:40.000" level="INFO">${secret} = ['b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17']</msg>
<status status="PASS" starttime="20250227 16:32:40.000" endtime="20250227 16:32:40.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:40.001" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:32:40.000" endtime="20250227 16:32:40.001"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:40.001" level="INFO">${secret} = b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:32:40.001" endtime="20250227 16:32:40.002"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:40.004" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:40.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:40.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:40.002" endtime="20250227 16:32:40.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:40.354" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:40.354" endtime="20250227 16:32:40.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:40.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:40.354" endtime="20250227 16:32:40.354"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.002" endtime="20250227 16:32:40.355"/>
</kw>
<msg timestamp="20250227 16:32:40.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:40.002" endtime="20250227 16:32:40.355"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.002" endtime="20250227 16:32:40.355"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:40.358" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:40.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:40.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:40.356" endtime="20250227 16:32:40.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:40.695" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:40.695" endtime="20250227 16:32:40.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:40.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:40.695" endtime="20250227 16:32:40.696"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.355" endtime="20250227 16:32:40.696"/>
</kw>
<msg timestamp="20250227 16:32:40.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:40.355" endtime="20250227 16:32:40.696"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.355" endtime="20250227 16:32:40.696"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:40.699" level="INFO">Running command 'aws configure set aws_secret_access_key b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:41.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:41.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:40.697" endtime="20250227 16:32:41.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:41.028" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:41.028" endtime="20250227 16:32:41.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:41.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:41.028" endtime="20250227 16:32:41.029"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.697" endtime="20250227 16:32:41.029"/>
</kw>
<msg timestamp="20250227 16:32:41.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:40.697" endtime="20250227 16:32:41.029"/>
</kw>
<status status="PASS" starttime="20250227 16:32:40.696" endtime="20250227 16:32:41.029"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:41.032" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:41.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:41.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:41.030" endtime="20250227 16:32:41.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:41.353" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:41.353" endtime="20250227 16:32:41.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:41.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:41.353" endtime="20250227 16:32:41.354"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.029" endtime="20250227 16:32:41.354"/>
</kw>
<msg timestamp="20250227 16:32:41.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:41.029" endtime="20250227 16:32:41.354"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.029" endtime="20250227 16:32:41.354"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:41.357" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:41.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:41.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:41.355" endtime="20250227 16:32:41.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:41.694" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:41.693" endtime="20250227 16:32:41.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:41.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:41.694" endtime="20250227 16:32:41.694"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.355" endtime="20250227 16:32:41.694"/>
</kw>
<msg timestamp="20250227 16:32:41.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:41.354" endtime="20250227 16:32:41.694"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.354" endtime="20250227 16:32:41.694"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.188" endtime="20250227 16:32:41.694"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.188" endtime="20250227 16:32:41.694"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:32:41.695" endtime="20250227 16:32:41.695"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.142" endtime="20250227 16:32:41.695"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.142" endtime="20250227 16:32:41.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<arg>${BUCKET_LAYOUT}</arg>
<kw name="Create bucket with layout" library="shell">
<var>${BUCKET}</var>
<arg>s3v</arg>
<arg>${layout}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:41.696" level="INFO">${postfix} = diiacmavow</msg>
<status status="PASS" starttime="20250227 16:32:41.696" endtime="20250227 16:32:41.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:41.696" level="INFO">${bucket} = bucket-diiacmavow</msg>
<status status="PASS" starttime="20250227 16:32:41.696" endtime="20250227 16:32:41.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:41.699" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE s3v/bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:44.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:44.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:41.697" endtime="20250227 16:32:44.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:44.503" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:44.502" endtime="20250227 16:32:44.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:44.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:44.503" endtime="20250227 16:32:44.503"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.697" endtime="20250227 16:32:44.503"/>
</kw>
<msg timestamp="20250227 16:32:44.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:41.697" endtime="20250227 16:32:44.503"/>
</kw>
<msg timestamp="20250227 16:32:44.504" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:32:41.696" endtime="20250227 16:32:44.504"/>
</kw>
<msg timestamp="20250227 16:32:44.504" level="INFO">${BUCKET} = bucket-diiacmavow</msg>
<status status="PASS" starttime="20250227 16:32:41.696" endtime="20250227 16:32:44.504"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:32:44.504" level="INFO">${BUCKET} = bucket-diiacmavow</msg>
<status status="PASS" starttime="20250227 16:32:44.504" endtime="20250227 16:32:44.504"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.695" endtime="20250227 16:32:44.504"/>
</kw>
<status status="PASS" starttime="20250227 16:32:41.695" endtime="20250227 16:32:44.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:32:44.504" endtime="20250227 16:32:44.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:32:44.505" endtime="20250227 16:32:44.505"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:32:44.505" endtime="20250227 16:32:44.505"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:32:44.505" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250227 16:32:44.505" endtime="20250227 16:32:44.505"/>
</kw>
<status status="PASS" starttime="20250227 16:32:37.133" endtime="20250227 16:32:44.505"/>
</kw>
<suite id="s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:32:44.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:44.513" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.514" endtime="20250227 16:32:44.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.515" endtime="20250227 16:32:44.515"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:32:44.515" endtime="20250227 16:32:44.515"/>
</kw>
<status status="PASS" starttime="20250227 16:32:44.513" endtime="20250227 16:32:44.515"/>
</kw>
<test id="s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:44.518" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:32:44.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:44.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:44.516" endtime="20250227 16:32:44.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:44.522" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:44.522" endtime="20250227 16:32:44.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:44.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:44.522" endtime="20250227 16:32:44.523"/>
</kw>
<status status="PASS" starttime="20250227 16:32:44.516" endtime="20250227 16:32:44.523"/>
</kw>
<msg timestamp="20250227 16:32:44.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:44.515" endtime="20250227 16:32:44.523"/>
</kw>
<status status="PASS" starttime="20250227 16:32:44.515" endtime="20250227 16:32:44.523"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:44.526" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:48.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:48.302" level="INFO">${output} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/testfile   </msg>
<status status="PASS" starttime="20250227 16:32:44.524" endtime="20250227 16:32:48.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:48.303" level="INFO">Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/testfile   </msg>
<status status="PASS" starttime="20250227 16:32:48.303" endtime="20250227 16:32:48.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:48.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:48.304" endtime="20250227 16:32:48.304"/>
</kw>
<status status="PASS" starttime="20250227 16:32:44.524" endtime="20250227 16:32:48.304"/>
</kw>
<msg timestamp="20250227 16:32:48.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:44.524" endtime="20250227 16:32:48.304"/>
</kw>
<msg timestamp="20250227 16:32:48.305" level="INFO">${output} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/testfile   </msg>
<status status="PASS" starttime="20250227 16:32:44.523" endtime="20250227 16:32:48.305"/>
</kw>
<msg timestamp="20250227 16:32:48.305" level="INFO">${result} = Completed 29 Bytes/29 Bytes (8 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/testfile   </msg>
<status status="PASS" starttime="20250227 16:32:44.523" endtime="20250227 16:32:48.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:48.305" endtime="20250227 16:32:48.305"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:48.310" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-diiacmavow/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:48.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:48.925" level="INFO">${output} = Completed 29 Bytes/29 Bytes (296 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/dir1/dir2/file</msg>
<status status="PASS" starttime="20250227 16:32:48.307" endtime="20250227 16:32:48.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:48.927" level="INFO">Completed 29 Bytes/29 Bytes (296 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/dir1/dir2/file</msg>
<status status="PASS" starttime="20250227 16:32:48.926" endtime="20250227 16:32:48.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:48.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:48.927" endtime="20250227 16:32:48.927"/>
</kw>
<status status="PASS" starttime="20250227 16:32:48.307" endtime="20250227 16:32:48.927"/>
</kw>
<msg timestamp="20250227 16:32:48.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:48.306" endtime="20250227 16:32:48.929"/>
</kw>
<msg timestamp="20250227 16:32:48.929" level="INFO">${output} = Completed 29 Bytes/29 Bytes (296 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/dir1/dir2/file</msg>
<status status="PASS" starttime="20250227 16:32:48.306" endtime="20250227 16:32:48.929"/>
</kw>
<msg timestamp="20250227 16:32:48.929" level="INFO">${result} = Completed 29 Bytes/29 Bytes (296 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/dir1/dir2/file</msg>
<status status="PASS" starttime="20250227 16:32:48.305" endtime="20250227 16:32:48.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:48.929" endtime="20250227 16:32:48.932"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:48.939" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:49.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:49.732" level="INFO">${output} =                            PRE dir1/
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:32:48.933" endtime="20250227 16:32:49.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:49.733" level="INFO">                           PRE dir1/
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:32:49.733" endtime="20250227 16:32:49.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:49.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:49.733" endtime="20250227 16:32:49.734"/>
</kw>
<status status="PASS" starttime="20250227 16:32:48.933" endtime="20250227 16:32:49.734"/>
</kw>
<msg timestamp="20250227 16:32:49.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:48.933" endtime="20250227 16:32:49.734"/>
</kw>
<msg timestamp="20250227 16:32:49.734" level="INFO">${output} =                            PRE dir1/
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:32:48.932" endtime="20250227 16:32:49.734"/>
</kw>
<msg timestamp="20250227 16:32:49.734" level="INFO">${result} =                            PRE dir1/
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:32:48.932" endtime="20250227 16:32:49.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:49.734" endtime="20250227 16:32:49.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:49.734" endtime="20250227 16:32:49.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:49.735" endtime="20250227 16:32:49.735"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:49.738" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:50.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:50.191" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250227 16:32:49.736" endtime="20250227 16:32:50.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:50.192" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20250227 16:32:50.192" endtime="20250227 16:32:50.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:50.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:50.192" endtime="20250227 16:32:50.193"/>
</kw>
<status status="PASS" starttime="20250227 16:32:49.736" endtime="20250227 16:32:50.193"/>
</kw>
<msg timestamp="20250227 16:32:50.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:49.736" endtime="20250227 16:32:50.193"/>
</kw>
<msg timestamp="20250227 16:32:50.193" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250227 16:32:49.735" endtime="20250227 16:32:50.193"/>
</kw>
<msg timestamp="20250227 16:32:50.193" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250227 16:32:49.735" endtime="20250227 16:32:50.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.194" endtime="20250227 16:32:50.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.194" endtime="20250227 16:32:50.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.194" endtime="20250227 16:32:50.194"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:50.198" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:50.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:50.661" level="INFO">${output} = 2025-02-27 16:32:48         29 file</msg>
<status status="PASS" starttime="20250227 16:32:50.195" endtime="20250227 16:32:50.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:50.662" level="INFO">2025-02-27 16:32:48         29 file</msg>
<status status="PASS" starttime="20250227 16:32:50.661" endtime="20250227 16:32:50.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:50.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:50.662" endtime="20250227 16:32:50.662"/>
</kw>
<status status="PASS" starttime="20250227 16:32:50.195" endtime="20250227 16:32:50.663"/>
</kw>
<msg timestamp="20250227 16:32:50.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:50.195" endtime="20250227 16:32:50.663"/>
</kw>
<msg timestamp="20250227 16:32:50.663" level="INFO">${output} = 2025-02-27 16:32:48         29 file</msg>
<status status="PASS" starttime="20250227 16:32:50.195" endtime="20250227 16:32:50.663"/>
</kw>
<msg timestamp="20250227 16:32:50.663" level="INFO">${result} = 2025-02-27 16:32:48         29 file</msg>
<status status="PASS" starttime="20250227 16:32:50.194" endtime="20250227 16:32:50.663"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.663" endtime="20250227 16:32:50.663"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.663" endtime="20250227 16:32:50.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:50.664" endtime="20250227 16:32:50.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:44.515" endtime="20250227 16:32:50.664"/>
</test>
<test id="s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:50.668" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:32:50.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:50.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:32:50.666" endtime="20250227 16:32:50.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:50.673" level="INFO"/>
<status status="PASS" starttime="20250227 16:32:50.672" endtime="20250227 16:32:50.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:50.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:50.673" endtime="20250227 16:32:50.673"/>
</kw>
<status status="PASS" starttime="20250227 16:32:50.666" endtime="20250227 16:32:50.673"/>
</kw>
<msg timestamp="20250227 16:32:50.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:50.665" endtime="20250227 16:32:50.673"/>
</kw>
<status status="PASS" starttime="20250227 16:32:50.665" endtime="20250227 16:32:50.673"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:50.677" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-diiacmavow/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:51.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:51.184" level="INFO">${output} = Completed 29 Bytes/29 Bytes (360 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/specialchars/a+b</msg>
<status status="PASS" starttime="20250227 16:32:50.675" endtime="20250227 16:32:51.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:51.185" level="INFO">Completed 29 Bytes/29 Bytes (360 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/specialchars/a+b</msg>
<status status="PASS" starttime="20250227 16:32:51.184" endtime="20250227 16:32:51.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:51.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:51.185" endtime="20250227 16:32:51.185"/>
</kw>
<status status="PASS" starttime="20250227 16:32:50.674" endtime="20250227 16:32:51.185"/>
</kw>
<msg timestamp="20250227 16:32:51.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:50.674" endtime="20250227 16:32:51.186"/>
</kw>
<msg timestamp="20250227 16:32:51.186" level="INFO">${output} = Completed 29 Bytes/29 Bytes (360 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/specialchars/a+b</msg>
<status status="PASS" starttime="20250227 16:32:50.674" endtime="20250227 16:32:51.186"/>
</kw>
<msg timestamp="20250227 16:32:51.186" level="INFO">${result} = Completed 29 Bytes/29 Bytes (360 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/specialchars/a+b</msg>
<status status="PASS" starttime="20250227 16:32:50.673" endtime="20250227 16:32:51.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:51.186" endtime="20250227 16:32:51.186"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:51.189" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:51.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:51.648" level="INFO">${output} = 2025-02-27 16:32:51         29 a+b</msg>
<status status="PASS" starttime="20250227 16:32:51.187" endtime="20250227 16:32:51.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:51.649" level="INFO">2025-02-27 16:32:51         29 a+b</msg>
<status status="PASS" starttime="20250227 16:32:51.649" endtime="20250227 16:32:51.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:51.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:51.650" endtime="20250227 16:32:51.650"/>
</kw>
<status status="PASS" starttime="20250227 16:32:51.187" endtime="20250227 16:32:51.650"/>
</kw>
<msg timestamp="20250227 16:32:51.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:51.187" endtime="20250227 16:32:51.650"/>
</kw>
<msg timestamp="20250227 16:32:51.650" level="INFO">${output} = 2025-02-27 16:32:51         29 a+b</msg>
<status status="PASS" starttime="20250227 16:32:51.187" endtime="20250227 16:32:51.650"/>
</kw>
<msg timestamp="20250227 16:32:51.650" level="INFO">${result} = 2025-02-27 16:32:51         29 a+b</msg>
<status status="PASS" starttime="20250227 16:32:51.186" endtime="20250227 16:32:51.651"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:51.651" endtime="20250227 16:32:51.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:51.651" endtime="20250227 16:32:51.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:50.665" endtime="20250227 16:32:51.651"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:32:44.506" endtime="20250227 16:32:51.652"/>
</suite>
<suite id="s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:32:51.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.664" endtime="20250227 16:32:51.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.665" endtime="20250227 16:32:51.665"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:32:51.665" endtime="20250227 16:32:51.665"/>
</kw>
<status status="PASS" starttime="20250227 16:32:51.663" endtime="20250227 16:32:51.665"/>
</kw>
<test id="s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:51.668" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:55.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:55.653" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250227 16:32:51.666" endtime="20250227 16:32:55.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:55.654" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 3.755s

OK
{'ResponseMetadata': {'RequestId': 'f6da84d3-582d-445c-9ed2-a6fcfd039125', 'HostId': 'QKqpolUc6LKuRS', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:52 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:52 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-ngvesajhqb', 'server': 'Ozone', 'x-amz-id-2': 'QKqpolUc6LKuRS', 'x-amz-request-id': 'f6da84d3-582d-445c-9ed2-a6fcfd039125', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-ngvesajhqb'}
None
None
None
{'ResponseMetadata': {'RequestId': 'e6ff07b5-9809-4ef7-8641-1d57a22e2126', 'HostId': 'm7b1MOI8NrC7kQb', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:53 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-jyiacucdxv', 'server': 'Ozone', 'x-amz-id-2': 'm7b1MOI8NrC7kQb', 'x-amz-request-id': 'e6ff07b5-9809-4ef7-8641-1d57a22e2126', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-jyiacucdxv'}
{'ResponseMetadata': {'RequestId': '9dfc9788-ec81-4cc5-9e7a-cb91d721226f', 'HostId': 'deOBP3qFOX', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:53 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'deOBP3qFOX', 'x-amz-request-id': '9dfc9788-ec81-4cc5-9e7a-cb91d721226f', 'content-length': '475'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-diiacmavow', 'CreationDate': datetime.datetime(2025, 2, 27, 16, 32, 44, 388000, tzinfo=tzlocal())}, {'Name': 'bucket-jyiacucdxv', 'CreationDate': datetime.datetime(2025, 2, 27, 16, 32, 53, 780000, tzinfo=tzlocal())}, {'Name': 'ozone-test-ngvesajhqb', 'CreationDate': datetime.datetime(2025, 2, 27, 16, 32, 52, 53000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '5595a163-2419-4228-bc83-f76ccc53c8a3', 'HostId': 'b9BzogcDe1M', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:53 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'b9BzogcDe1M', 'x-amz-request-id': '5595a163-2419-4228-bc83-f76ccc53c8a3', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'ab3ac68c-e6e2-4452-8132-a79d14f43579', 'HostId': 'O87fx32hcFz', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:53 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'O87fx32hcFz', 'x-amz-request-id': 'ab3ac68c-e6e2-4452-8132-a79d14f43579'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'a0586ee9-78ed-4e9b-a415-22fa8e2d0536', 'HostId': 'vOewo2OI40r', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:53 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Thu, 27 Feb 2025 16:32:53 GMT', 'server': 'Ozone', 'x-amz-id-2': 'vOewo2OI40r', 'x-amz-request-id': 'a0586ee9-78ed-4e9b-a415-22fa8e2d0536', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 27, 16, 32, 53, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 27, 16, 32, 53, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Thu, 27 Feb 2025 16:32:53 GMT'}
{'ResponseMetadata': {'RequestId': '0ed139b7-5960-49a3-b4e1-b1f8115955be', 'HostId': 'dgaVaU5fW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:54 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:54 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'dgaVaU5fW', 'x-amz-request-id': '0ed139b7-5960-49a3-b4e1-b1f8115955be', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'def0932d-3647-42c7-829a-c06effb5d9a6', 'HostId': 'Y4JCDsFMQH', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:54 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:54 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Thu, 27 Feb 2025 16:32:52 GMT', 'server': 'Ozone', 'x-amz-id-2': 'Y4JCDsFMQH', 'x-amz-request-id': 'def0932d-3647-42c7-829a-c06effb5d9a6', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 27, 16, 32, 52, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 27, 16, 32, 54, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Thu, 27 Feb 2025 16:32:54 GMT'}
{'ResponseMetadata': {'RequestId': '87a457e8-3c1e-4f4e-91d8-073307fd7de7', 'HostId': 'D1JqjlkFH', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:54 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:54 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'D1JqjlkFH', 'x-amz-request-id': '87a457e8-3c1e-4f4e-91d8-073307fd7de7', 'content-length': '297'}, 'RetryAttempts': 0}, 'Bucket': 'bucket-diiacmavow', 'Key': 'ougwpkmkob', 'UploadId': '01954840-ffc8-74a0-bdb7-e42bada83e0d-114076809574219789'}
{'ResponseMetadata': {'RequestId': '80102f96-3273-4fc5-b617-84decc7c6059', 'HostId': 'OyEOF6V73YVHSY', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 27 Feb 2025 16:32:55 GMT', 'cache-control': 'no-cache', 'expires': 'Thu, 27 Feb 2025 16:32:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'OyEOF6V73YVHSY', 'x-amz-request-id': '80102f96-3273-4fc5-b617-84decc7c6059', 'content-length': '308'}, 'RetryAttempts': 0}, 'Location': 'bucket-diiacmavow', 'Bucket': 'bucket-diiacmavow', 'Key': 'ougwpkmkob', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20250227 16:32:55.653" endtime="20250227 16:32:55.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:55.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:55.654" endtime="20250227 16:32:55.655"/>
</kw>
<status status="PASS" starttime="20250227 16:32:51.666" endtime="20250227 16:32:55.655"/>
</kw>
<msg timestamp="20250227 16:32:55.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:51.666" endtime="20250227 16:32:55.655"/>
</kw>
<msg timestamp="20250227 16:32:55.655" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250227 16:32:51.665" endtime="20250227 16:32:55.655"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250227 16:32:51.665" endtime="20250227 16:32:55.655"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20250227 16:32:51.653" endtime="20250227 16:32:55.656"/>
</suite>
<suite id="s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:32:55.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:55.665" endtime="20250227 16:32:55.665"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.665" endtime="20250227 16:32:55.665"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.665" endtime="20250227 16:32:55.665"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:32:55.666" endtime="20250227 16:32:55.666"/>
</kw>
<status status="PASS" starttime="20250227 16:32:55.665" endtime="20250227 16:32:55.666"/>
</kw>
<test id="s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:55.667" level="INFO">${randStr} = 1782756458</msg>
<status status="PASS" starttime="20250227 16:32:55.667" endtime="20250227 16:32:55.667"/>
</kw>
<msg timestamp="20250227 16:32:55.668" level="INFO">${postfix} = ozone-test-1782756458</msg>
<status status="PASS" starttime="20250227 16:32:55.667" endtime="20250227 16:32:55.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:55.668" level="INFO">${bucket} = bucket-ozone-test-1782756458</msg>
<status status="PASS" starttime="20250227 16:32:55.668" endtime="20250227 16:32:55.668"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:55.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-1782756458 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:56.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:56.152" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1782756458"
}</msg>
<status status="PASS" starttime="20250227 16:32:55.669" endtime="20250227 16:32:56.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:56.153" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-1782756458"
}</msg>
<status status="PASS" starttime="20250227 16:32:56.152" endtime="20250227 16:32:56.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:56.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:56.153" endtime="20250227 16:32:56.154"/>
</kw>
<status status="PASS" starttime="20250227 16:32:55.669" endtime="20250227 16:32:56.154"/>
</kw>
<msg timestamp="20250227 16:32:56.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:55.669" endtime="20250227 16:32:56.154"/>
</kw>
<msg timestamp="20250227 16:32:56.154" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1782756458"
}</msg>
<status status="PASS" starttime="20250227 16:32:55.669" endtime="20250227 16:32:56.154"/>
</kw>
<msg timestamp="20250227 16:32:56.154" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1782756458"
}</msg>
<status status="PASS" starttime="20250227 16:32:55.668" endtime="20250227 16:32:56.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:56.154" endtime="20250227 16:32:56.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:56.155" endtime="20250227 16:32:56.155"/>
</kw>
<status status="PASS" starttime="20250227 16:32:55.668" endtime="20250227 16:32:56.155"/>
</kw>
<status status="PASS" starttime="20250227 16:32:55.667" endtime="20250227 16:32:56.155"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:55.666" endtime="20250227 16:32:56.155"/>
</test>
<test id="s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:56.157" level="INFO">${randStr} = 9782842707</msg>
<status status="PASS" starttime="20250227 16:32:56.156" endtime="20250227 16:32:56.157"/>
</kw>
<msg timestamp="20250227 16:32:56.157" level="INFO">${postfix} = ozone-test-9782842707</msg>
<status status="PASS" starttime="20250227 16:32:56.156" endtime="20250227 16:32:56.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:56.157" level="INFO">${bucket} = bucket-ozone-test-9782842707</msg>
<status status="PASS" starttime="20250227 16:32:56.157" endtime="20250227 16:32:56.157"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:56.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9782842707 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:56.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:56.609" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9782842707"
}</msg>
<status status="PASS" starttime="20250227 16:32:56.159" endtime="20250227 16:32:56.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:56.610" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9782842707"
}</msg>
<status status="PASS" starttime="20250227 16:32:56.610" endtime="20250227 16:32:56.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:56.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:56.610" endtime="20250227 16:32:56.611"/>
</kw>
<status status="PASS" starttime="20250227 16:32:56.158" endtime="20250227 16:32:56.611"/>
</kw>
<msg timestamp="20250227 16:32:56.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:56.158" endtime="20250227 16:32:56.611"/>
</kw>
<msg timestamp="20250227 16:32:56.611" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9782842707"
}</msg>
<status status="PASS" starttime="20250227 16:32:56.158" endtime="20250227 16:32:56.611"/>
</kw>
<msg timestamp="20250227 16:32:56.611" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9782842707"
}</msg>
<status status="PASS" starttime="20250227 16:32:56.158" endtime="20250227 16:32:56.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:56.611" endtime="20250227 16:32:56.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:56.612" endtime="20250227 16:32:56.612"/>
</kw>
<status status="PASS" starttime="20250227 16:32:56.157" endtime="20250227 16:32:56.612"/>
</kw>
<msg timestamp="20250227 16:32:56.612" level="INFO">${bucket} = bucket-ozone-test-9782842707</msg>
<status status="PASS" starttime="20250227 16:32:56.156" endtime="20250227 16:32:56.612"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:56.615" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9782842707 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:57.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:32:57.181" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250227 16:32:56.613" endtime="20250227 16:32:57.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:57.182" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250227 16:32:57.181" endtime="20250227 16:32:57.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:57.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:57.182" endtime="20250227 16:32:57.182"/>
</kw>
<msg timestamp="20250227 16:32:57.183" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250227 16:32:56.613" endtime="20250227 16:32:57.183"/>
</kw>
<msg timestamp="20250227 16:32:57.183" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250227 16:32:56.612" endtime="20250227 16:32:57.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:57.183" endtime="20250227 16:32:57.183"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:56.155" endtime="20250227 16:32:57.183"/>
</test>
<test id="s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:57.185" level="INFO">${randStr} = 7983033878</msg>
<status status="PASS" starttime="20250227 16:32:57.184" endtime="20250227 16:32:57.185"/>
</kw>
<msg timestamp="20250227 16:32:57.185" level="INFO">${randStr} = ozone-test-7983033878</msg>
<status status="PASS" starttime="20250227 16:32:57.184" endtime="20250227 16:32:57.185"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:57.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-7983033878 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:57.671" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:32:57.671" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250227 16:32:57.186" endtime="20250227 16:32:57.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:57.672" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250227 16:32:57.671" endtime="20250227 16:32:57.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:57.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:57.672" endtime="20250227 16:32:57.672"/>
</kw>
<msg timestamp="20250227 16:32:57.672" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250227 16:32:57.185" endtime="20250227 16:32:57.672"/>
</kw>
<msg timestamp="20250227 16:32:57.672" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250227 16:32:57.185" endtime="20250227 16:32:57.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:57.673" endtime="20250227 16:32:57.673"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:57.184" endtime="20250227 16:32:57.673"/>
</test>
<test id="s1-s3-t4" name="Create new bucket and check default group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:32:57.675" level="INFO">${randStr} = 3565548831</msg>
<status status="PASS" starttime="20250227 16:32:57.674" endtime="20250227 16:32:57.675"/>
</kw>
<msg timestamp="20250227 16:32:57.675" level="INFO">${postfix} = ozone-test-3565548831</msg>
<status status="PASS" starttime="20250227 16:32:57.674" endtime="20250227 16:32:57.675"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:32:57.675" level="INFO">${bucket} = bucket-ozone-test-3565548831</msg>
<status status="PASS" starttime="20250227 16:32:57.675" endtime="20250227 16:32:57.675"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:57.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3565548831 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:32:58.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:32:58.152" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3565548831"
}</msg>
<status status="PASS" starttime="20250227 16:32:57.677" endtime="20250227 16:32:58.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:32:58.153" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3565548831"
}</msg>
<status status="PASS" starttime="20250227 16:32:58.153" endtime="20250227 16:32:58.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:32:58.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:32:58.153" endtime="20250227 16:32:58.154"/>
</kw>
<status status="PASS" starttime="20250227 16:32:57.676" endtime="20250227 16:32:58.154"/>
</kw>
<msg timestamp="20250227 16:32:58.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:57.676" endtime="20250227 16:32:58.154"/>
</kw>
<msg timestamp="20250227 16:32:58.154" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3565548831"
}</msg>
<status status="PASS" starttime="20250227 16:32:57.676" endtime="20250227 16:32:58.154"/>
</kw>
<msg timestamp="20250227 16:32:58.154" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3565548831"
}</msg>
<status status="PASS" starttime="20250227 16:32:57.676" endtime="20250227 16:32:58.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:58.154" endtime="20250227 16:32:58.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:32:58.155" endtime="20250227 16:32:58.155"/>
</kw>
<status status="PASS" starttime="20250227 16:32:57.675" endtime="20250227 16:32:58.155"/>
</kw>
<msg timestamp="20250227 16:32:58.155" level="INFO">${bucket} = bucket-ozone-test-3565548831</msg>
<status status="PASS" starttime="20250227 16:32:57.674" endtime="20250227 16:32:58.155"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:32:58.158" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-3565548831 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:01.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:01.161" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250227 16:32:58.156" endtime="20250227 16:33:01.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:01.161" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250227 16:33:01.161" endtime="20250227 16:33:01.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:01.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:01.162" endtime="20250227 16:33:01.162"/>
</kw>
<status status="PASS" starttime="20250227 16:32:58.156" endtime="20250227 16:33:01.162"/>
</kw>
<msg timestamp="20250227 16:33:01.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:32:58.156" endtime="20250227 16:33:01.162"/>
</kw>
<msg timestamp="20250227 16:33:01.162" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250227 16:32:58.155" endtime="20250227 16:33:01.162"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250227 16:33:01.163" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20250227 16:33:01.163" endtime="20250227 16:33:01.163"/>
</kw>
<if>
<branch type="IF" condition="'${group}' != '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:01.164" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['READ', 'LIST']}]</msg>
<status status="PASS" starttime="20250227 16:33:01.163" endtime="20250227 16:33:01.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:01.164" endtime="20250227 16:33:01.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>READ</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:01.164" endtime="20250227 16:33:01.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>LIST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:01.165" endtime="20250227 16:33:01.165"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.163" endtime="20250227 16:33:01.165"/>
</branch>
<status status="PASS" starttime="20250227 16:33:01.163" endtime="20250227 16:33:01.165"/>
</if>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:32:57.673" endtime="20250227 16:33:01.165"/>
</test>
<test id="s1-s3-t5" name="Test buckets named like web endpoints" line="58">
<kw name="Create Random File KB" library="os">
<var>${path}</var>
<arg>64</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:01.168" level="INFO">${postfix} = skrraimivg</msg>
<status status="PASS" starttime="20250227 16:33:01.168" endtime="20250227 16:33:01.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:33:01.169" level="INFO">${tmpfile} = /tmp/tempfile-skrraimivg</msg>
<status status="PASS" starttime="20250227 16:33:01.168" endtime="20250227 16:33:01.169"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250227 16:33:01.169" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-skrraimivg"&gt;/tmp/tempfile-skrraimivg&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250227 16:33:01.169" endtime="20250227 16:33:01.169"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.168" endtime="20250227 16:33:01.169"/>
</kw>
<msg timestamp="20250227 16:33:01.169" level="INFO">${path} = /tmp/tempfile-skrraimivg</msg>
<status status="PASS" starttime="20250227 16:33:01.167" endtime="20250227 16:33:01.169"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:01.172" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-skrraimivg bs=1024 count=64 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:01.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:01.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:01.170" endtime="20250227 16:33:01.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:01.177" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:01.177" endtime="20250227 16:33:01.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:01.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:01.177" endtime="20250227 16:33:01.177"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.170" endtime="20250227 16:33:01.178"/>
</kw>
<msg timestamp="20250227 16:33:01.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:01.170" endtime="20250227 16:33:01.178"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.169" endtime="20250227 16:33:01.178"/>
</kw>
<msg timestamp="20250227 16:33:01.178" level="INFO">${path} = /tmp/tempfile-skrraimivg</msg>
<status status="PASS" starttime="20250227 16:33:01.167" endtime="20250227 16:33:01.178"/>
</kw>
<msg timestamp="20250227 16:33:01.178" level="INFO">${path} = /tmp/tempfile-skrraimivg</msg>
<status status="PASS" starttime="20250227 16:33:01.166" endtime="20250227 16:33:01.178"/>
</kw>
<for flavor="IN">
<var>${name}</var>
<value>conf</value>
<value>jmx</value>
<value>logs</value>
<value>logstream</value>
<value>prof</value>
<value>prom</value>
<value>secret</value>
<value>stacks</value>
<value>static</value>
<iter>
<var name="${name}">conf</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:01.181" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:01.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:01.643" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250227 16:33:01.180" endtime="20250227 16:33:01.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:01.644" level="INFO">{
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250227 16:33:01.643" endtime="20250227 16:33:01.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:01.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:01.644" endtime="20250227 16:33:01.644"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.179" endtime="20250227 16:33:01.644"/>
</kw>
<msg timestamp="20250227 16:33:01.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:01.179" endtime="20250227 16:33:01.644"/>
</kw>
<msg timestamp="20250227 16:33:01.644" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250227 16:33:01.179" endtime="20250227 16:33:01.644"/>
</kw>
<msg timestamp="20250227 16:33:01.644" level="INFO">${result} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250227 16:33:01.179" endtime="20250227 16:33:01.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:01.645" endtime="20250227 16:33:01.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:01.645" endtime="20250227 16:33:01.645"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.178" endtime="20250227 16:33:01.645"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:01.649" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket conf --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:02.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:02.183" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:01.647" endtime="20250227 16:33:02.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:02.183" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:02.183" endtime="20250227 16:33:02.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:02.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:02.184" endtime="20250227 16:33:02.184"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.647" endtime="20250227 16:33:02.184"/>
</kw>
<msg timestamp="20250227 16:33:02.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:01.646" endtime="20250227 16:33:02.184"/>
</kw>
<msg timestamp="20250227 16:33:02.184" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:01.646" endtime="20250227 16:33:02.184"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.646" endtime="20250227 16:33:02.185"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:02.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:02.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:02.651" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:02.133Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:02.186" endtime="20250227 16:33:02.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:02.652" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:02.133Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:02.651" endtime="20250227 16:33:02.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:02.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:02.652" endtime="20250227 16:33:02.652"/>
</kw>
<status status="PASS" starttime="20250227 16:33:02.186" endtime="20250227 16:33:02.653"/>
</kw>
<msg timestamp="20250227 16:33:02.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:02.185" endtime="20250227 16:33:02.653"/>
</kw>
<msg timestamp="20250227 16:33:02.653" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:02.133Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:02.185" endtime="20250227 16:33:02.653"/>
</kw>
<msg timestamp="20250227 16:33:02.653" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:02.133Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:02.185" endtime="20250227 16:33:02.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:02.653" endtime="20250227 16:33:02.653"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:02.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket conf --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:03.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:03.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:02 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:02.655" endtime="20250227 16:33:03.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:03.134" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:02 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:03 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:03 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:03.134" endtime="20250227 16:33:03.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:03.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:03.134" endtime="20250227 16:33:03.135"/>
</kw>
<status status="PASS" starttime="20250227 16:33:02.654" endtime="20250227 16:33:03.135"/>
</kw>
<msg timestamp="20250227 16:33:03.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:02.654" endtime="20250227 16:33:03.135"/>
</kw>
<msg timestamp="20250227 16:33:03.135" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:02 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:02.654" endtime="20250227 16:33:03.135"/>
</kw>
<status status="PASS" starttime="20250227 16:33:02.654" endtime="20250227 16:33:03.135"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:03.138" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:03.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:03.143" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.136" endtime="20250227 16:33:03.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:03.144" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.144" endtime="20250227 16:33:03.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:03.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:03.144" endtime="20250227 16:33:03.145"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.136" endtime="20250227 16:33:03.145"/>
</kw>
<msg timestamp="20250227 16:33:03.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:03.136" endtime="20250227 16:33:03.145"/>
</kw>
<msg timestamp="20250227 16:33:03.145" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.136" endtime="20250227 16:33:03.145"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:03.148" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:03.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:03.152" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.146" endtime="20250227 16:33:03.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:03.152" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.152" endtime="20250227 16:33:03.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:03.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:03.153" endtime="20250227 16:33:03.153"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.146" endtime="20250227 16:33:03.153"/>
</kw>
<msg timestamp="20250227 16:33:03.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:03.145" endtime="20250227 16:33:03.153"/>
</kw>
<msg timestamp="20250227 16:33:03.153" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:03.145" endtime="20250227 16:33:03.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:03.153" endtime="20250227 16:33:03.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.135" endtime="20250227 16:33:03.154"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:03.154" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:03.154" endtime="20250227 16:33:03.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.645" endtime="20250227 16:33:03.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:01.178" endtime="20250227 16:33:03.154"/>
</iter>
<iter>
<var name="${name}">jmx</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:03.158" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:03.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:03.609" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250227 16:33:03.156" endtime="20250227 16:33:03.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:03.610" level="INFO">{
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250227 16:33:03.609" endtime="20250227 16:33:03.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:03.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:03.610" endtime="20250227 16:33:03.611"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.156" endtime="20250227 16:33:03.611"/>
</kw>
<msg timestamp="20250227 16:33:03.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:03.155" endtime="20250227 16:33:03.611"/>
</kw>
<msg timestamp="20250227 16:33:03.611" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250227 16:33:03.155" endtime="20250227 16:33:03.611"/>
</kw>
<msg timestamp="20250227 16:33:03.611" level="INFO">${result} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250227 16:33:03.155" endtime="20250227 16:33:03.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:03.611" endtime="20250227 16:33:03.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:03.611" endtime="20250227 16:33:03.612"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.155" endtime="20250227 16:33:03.612"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:03.624" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket jmx --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:04.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:04.151" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:03.622" endtime="20250227 16:33:04.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:04.152" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:04.152" endtime="20250227 16:33:04.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:04.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:04.152" endtime="20250227 16:33:04.153"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.622" endtime="20250227 16:33:04.153"/>
</kw>
<msg timestamp="20250227 16:33:04.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:03.622" endtime="20250227 16:33:04.153"/>
</kw>
<msg timestamp="20250227 16:33:04.153" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:03.621" endtime="20250227 16:33:04.153"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.612" endtime="20250227 16:33:04.153"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:04.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:04.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:04.633" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:04.099Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:04.154" endtime="20250227 16:33:04.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:04.633" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:04.099Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:04.633" endtime="20250227 16:33:04.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:04.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:04.634" endtime="20250227 16:33:04.634"/>
</kw>
<status status="PASS" starttime="20250227 16:33:04.154" endtime="20250227 16:33:04.634"/>
</kw>
<msg timestamp="20250227 16:33:04.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:04.154" endtime="20250227 16:33:04.634"/>
</kw>
<msg timestamp="20250227 16:33:04.634" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:04.099Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:04.153" endtime="20250227 16:33:04.634"/>
</kw>
<msg timestamp="20250227 16:33:04.635" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:04.099Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:04.153" endtime="20250227 16:33:04.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:04.635" endtime="20250227 16:33:04.635"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:04.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket jmx --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:05.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:05.150" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:04.636" endtime="20250227 16:33:05.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:05.151" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:05 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:05 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:05.151" endtime="20250227 16:33:05.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:05.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:05.151" endtime="20250227 16:33:05.152"/>
</kw>
<status status="PASS" starttime="20250227 16:33:04.636" endtime="20250227 16:33:05.152"/>
</kw>
<msg timestamp="20250227 16:33:05.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:04.636" endtime="20250227 16:33:05.152"/>
</kw>
<msg timestamp="20250227 16:33:05.152" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:04.635" endtime="20250227 16:33:05.152"/>
</kw>
<status status="PASS" starttime="20250227 16:33:04.635" endtime="20250227 16:33:05.152"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:05.156" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:05.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:05.160" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.154" endtime="20250227 16:33:05.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:05.161" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.161" endtime="20250227 16:33:05.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:05.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:05.161" endtime="20250227 16:33:05.161"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.153" endtime="20250227 16:33:05.162"/>
</kw>
<msg timestamp="20250227 16:33:05.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:05.153" endtime="20250227 16:33:05.162"/>
</kw>
<msg timestamp="20250227 16:33:05.162" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.153" endtime="20250227 16:33:05.162"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:05.165" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:05.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:05.169" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.163" endtime="20250227 16:33:05.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:05.170" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.169" endtime="20250227 16:33:05.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:05.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:05.170" endtime="20250227 16:33:05.170"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.162" endtime="20250227 16:33:05.170"/>
</kw>
<msg timestamp="20250227 16:33:05.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:05.162" endtime="20250227 16:33:05.170"/>
</kw>
<msg timestamp="20250227 16:33:05.170" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:05.162" endtime="20250227 16:33:05.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:05.171" endtime="20250227 16:33:05.171"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.153" endtime="20250227 16:33:05.171"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:05.171" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:05.171" endtime="20250227 16:33:05.172"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.612" endtime="20250227 16:33:05.172"/>
</kw>
<status status="PASS" starttime="20250227 16:33:03.154" endtime="20250227 16:33:05.172"/>
</iter>
<iter>
<var name="${name}">logs</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:05.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:05.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:05.655" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250227 16:33:05.173" endtime="20250227 16:33:05.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:05.657" level="INFO">{
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250227 16:33:05.656" endtime="20250227 16:33:05.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:05.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:05.657" endtime="20250227 16:33:05.657"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.173" endtime="20250227 16:33:05.657"/>
</kw>
<msg timestamp="20250227 16:33:05.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:05.173" endtime="20250227 16:33:05.658"/>
</kw>
<msg timestamp="20250227 16:33:05.658" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250227 16:33:05.172" endtime="20250227 16:33:05.658"/>
</kw>
<msg timestamp="20250227 16:33:05.658" level="INFO">${result} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250227 16:33:05.172" endtime="20250227 16:33:05.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:05.658" endtime="20250227 16:33:05.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:05.659" endtime="20250227 16:33:05.659"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.172" endtime="20250227 16:33:05.659"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:05.664" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logs --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:06.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:06.187" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:05.661" endtime="20250227 16:33:06.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:06.187" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:06.187" endtime="20250227 16:33:06.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:06.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:06.188" endtime="20250227 16:33:06.188"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.661" endtime="20250227 16:33:06.188"/>
</kw>
<msg timestamp="20250227 16:33:06.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:05.661" endtime="20250227 16:33:06.188"/>
</kw>
<msg timestamp="20250227 16:33:06.188" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:05.660" endtime="20250227 16:33:06.188"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.660" endtime="20250227 16:33:06.188"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:06.192" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:06.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:06.656" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:06.119Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:06.190" endtime="20250227 16:33:06.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:06.657" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:06.119Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:06.656" endtime="20250227 16:33:06.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:06.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:06.657" endtime="20250227 16:33:06.657"/>
</kw>
<status status="PASS" starttime="20250227 16:33:06.189" endtime="20250227 16:33:06.657"/>
</kw>
<msg timestamp="20250227 16:33:06.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:06.189" endtime="20250227 16:33:06.658"/>
</kw>
<msg timestamp="20250227 16:33:06.658" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:06.119Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:06.189" endtime="20250227 16:33:06.658"/>
</kw>
<msg timestamp="20250227 16:33:06.658" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:06.119Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:06.189" endtime="20250227 16:33:06.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:06.658" endtime="20250227 16:33:06.658"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:06.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logs --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:07.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:07.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:06.659" endtime="20250227 16:33:07.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:07.134" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:07 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:07 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:07.134" endtime="20250227 16:33:07.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:07.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:07.134" endtime="20250227 16:33:07.135"/>
</kw>
<status status="PASS" starttime="20250227 16:33:06.659" endtime="20250227 16:33:07.135"/>
</kw>
<msg timestamp="20250227 16:33:07.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:06.659" endtime="20250227 16:33:07.135"/>
</kw>
<msg timestamp="20250227 16:33:07.135" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:06.659" endtime="20250227 16:33:07.135"/>
</kw>
<status status="PASS" starttime="20250227 16:33:06.658" endtime="20250227 16:33:07.135"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:07.139" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:07.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:07.143" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.137" endtime="20250227 16:33:07.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:07.144" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.143" endtime="20250227 16:33:07.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:07.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:07.144" endtime="20250227 16:33:07.144"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.136" endtime="20250227 16:33:07.144"/>
</kw>
<msg timestamp="20250227 16:33:07.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:07.136" endtime="20250227 16:33:07.145"/>
</kw>
<msg timestamp="20250227 16:33:07.145" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.136" endtime="20250227 16:33:07.145"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:07.148" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:07.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:07.152" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.146" endtime="20250227 16:33:07.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:07.152" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.152" endtime="20250227 16:33:07.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:07.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:07.153" endtime="20250227 16:33:07.153"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.145" endtime="20250227 16:33:07.153"/>
</kw>
<msg timestamp="20250227 16:33:07.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:07.145" endtime="20250227 16:33:07.153"/>
</kw>
<msg timestamp="20250227 16:33:07.153" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:07.145" endtime="20250227 16:33:07.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:07.153" endtime="20250227 16:33:07.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.135" endtime="20250227 16:33:07.154"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:07.154" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:07.154" endtime="20250227 16:33:07.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.659" endtime="20250227 16:33:07.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:05.172" endtime="20250227 16:33:07.154"/>
</iter>
<iter>
<var name="${name}">logstream</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:07.158" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:07.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:07.639" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250227 16:33:07.156" endtime="20250227 16:33:07.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:07.640" level="INFO">{
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250227 16:33:07.640" endtime="20250227 16:33:07.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:07.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:07.640" endtime="20250227 16:33:07.641"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.156" endtime="20250227 16:33:07.641"/>
</kw>
<msg timestamp="20250227 16:33:07.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:07.156" endtime="20250227 16:33:07.641"/>
</kw>
<msg timestamp="20250227 16:33:07.642" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250227 16:33:07.155" endtime="20250227 16:33:07.642"/>
</kw>
<msg timestamp="20250227 16:33:07.642" level="INFO">${result} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250227 16:33:07.155" endtime="20250227 16:33:07.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:07.642" endtime="20250227 16:33:07.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:07.642" endtime="20250227 16:33:07.642"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.155" endtime="20250227 16:33:07.642"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:07.646" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logstream --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:08.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:08.154" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:07.644" endtime="20250227 16:33:08.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:08.155" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:08.154" endtime="20250227 16:33:08.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:08.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:08.155" endtime="20250227 16:33:08.155"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.644" endtime="20250227 16:33:08.155"/>
</kw>
<msg timestamp="20250227 16:33:08.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:07.644" endtime="20250227 16:33:08.155"/>
</kw>
<msg timestamp="20250227 16:33:08.155" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:07.643" endtime="20250227 16:33:08.156"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.643" endtime="20250227 16:33:08.156"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:08.159" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:08.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:08.621" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:08.103Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:08.157" endtime="20250227 16:33:08.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:08.622" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:08.103Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:08.622" endtime="20250227 16:33:08.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:08.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:08.623" endtime="20250227 16:33:08.623"/>
</kw>
<status status="PASS" starttime="20250227 16:33:08.157" endtime="20250227 16:33:08.623"/>
</kw>
<msg timestamp="20250227 16:33:08.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:08.156" endtime="20250227 16:33:08.623"/>
</kw>
<msg timestamp="20250227 16:33:08.623" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:08.103Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:08.156" endtime="20250227 16:33:08.623"/>
</kw>
<msg timestamp="20250227 16:33:08.624" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:08.103Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:08.156" endtime="20250227 16:33:08.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:08.624" endtime="20250227 16:33:08.624"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:08.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logstream --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:09.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:09.085" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:08.625" endtime="20250227 16:33:09.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:09.086" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:09 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:09 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:09.086" endtime="20250227 16:33:09.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:09.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:09.087" endtime="20250227 16:33:09.087"/>
</kw>
<status status="PASS" starttime="20250227 16:33:08.625" endtime="20250227 16:33:09.087"/>
</kw>
<msg timestamp="20250227 16:33:09.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:08.625" endtime="20250227 16:33:09.087"/>
</kw>
<msg timestamp="20250227 16:33:09.087" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:08.624" endtime="20250227 16:33:09.087"/>
</kw>
<status status="PASS" starttime="20250227 16:33:08.624" endtime="20250227 16:33:09.087"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:09.091" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:09.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:09.097" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.089" endtime="20250227 16:33:09.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:09.098" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.097" endtime="20250227 16:33:09.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:09.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:09.098" endtime="20250227 16:33:09.098"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.089" endtime="20250227 16:33:09.098"/>
</kw>
<msg timestamp="20250227 16:33:09.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:09.088" endtime="20250227 16:33:09.098"/>
</kw>
<msg timestamp="20250227 16:33:09.098" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.088" endtime="20250227 16:33:09.098"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:09.102" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:09.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:09.107" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.100" endtime="20250227 16:33:09.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:09.108" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.107" endtime="20250227 16:33:09.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:09.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:09.108" endtime="20250227 16:33:09.108"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.099" endtime="20250227 16:33:09.109"/>
</kw>
<msg timestamp="20250227 16:33:09.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:09.099" endtime="20250227 16:33:09.109"/>
</kw>
<msg timestamp="20250227 16:33:09.109" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:09.099" endtime="20250227 16:33:09.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:09.109" endtime="20250227 16:33:09.109"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.088" endtime="20250227 16:33:09.109"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:09.110" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:09.109" endtime="20250227 16:33:09.110"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.643" endtime="20250227 16:33:09.110"/>
</kw>
<status status="PASS" starttime="20250227 16:33:07.155" endtime="20250227 16:33:09.110"/>
</iter>
<iter>
<var name="${name}">prof</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:09.114" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:09.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:09.600" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250227 16:33:09.112" endtime="20250227 16:33:09.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:09.601" level="INFO">{
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250227 16:33:09.600" endtime="20250227 16:33:09.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:09.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:09.601" endtime="20250227 16:33:09.602"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.111" endtime="20250227 16:33:09.602"/>
</kw>
<msg timestamp="20250227 16:33:09.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:09.111" endtime="20250227 16:33:09.602"/>
</kw>
<msg timestamp="20250227 16:33:09.602" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250227 16:33:09.111" endtime="20250227 16:33:09.602"/>
</kw>
<msg timestamp="20250227 16:33:09.602" level="INFO">${result} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250227 16:33:09.111" endtime="20250227 16:33:09.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:09.602" endtime="20250227 16:33:09.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:09.603" endtime="20250227 16:33:09.603"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.110" endtime="20250227 16:33:09.603"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:09.607" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prof --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:10.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:10.145" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:09.605" endtime="20250227 16:33:10.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:10.146" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:10.146" endtime="20250227 16:33:10.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:10.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:10.146" endtime="20250227 16:33:10.147"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.604" endtime="20250227 16:33:10.147"/>
</kw>
<msg timestamp="20250227 16:33:10.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:09.604" endtime="20250227 16:33:10.147"/>
</kw>
<msg timestamp="20250227 16:33:10.147" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:09.604" endtime="20250227 16:33:10.147"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.604" endtime="20250227 16:33:10.147"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:10.151" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:10.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:10.612" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:10.080Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:10.149" endtime="20250227 16:33:10.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:10.613" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:10.080Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:10.612" endtime="20250227 16:33:10.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:10.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:10.613" endtime="20250227 16:33:10.613"/>
</kw>
<status status="PASS" starttime="20250227 16:33:10.148" endtime="20250227 16:33:10.613"/>
</kw>
<msg timestamp="20250227 16:33:10.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:10.148" endtime="20250227 16:33:10.613"/>
</kw>
<msg timestamp="20250227 16:33:10.613" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:10.080Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:10.148" endtime="20250227 16:33:10.613"/>
</kw>
<msg timestamp="20250227 16:33:10.614" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:10.080Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:10.147" endtime="20250227 16:33:10.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:10.614" endtime="20250227 16:33:10.614"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:10.618" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prof --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:11.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:11.084" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:10.615" endtime="20250227 16:33:11.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:11.085" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:11 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:11 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:11.085" endtime="20250227 16:33:11.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:11.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:11.085" endtime="20250227 16:33:11.086"/>
</kw>
<status status="PASS" starttime="20250227 16:33:10.615" endtime="20250227 16:33:11.086"/>
</kw>
<msg timestamp="20250227 16:33:11.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:10.615" endtime="20250227 16:33:11.086"/>
</kw>
<msg timestamp="20250227 16:33:11.086" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:10.614" endtime="20250227 16:33:11.086"/>
</kw>
<status status="PASS" starttime="20250227 16:33:10.614" endtime="20250227 16:33:11.086"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:11.090" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:11.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:11.094" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.088" endtime="20250227 16:33:11.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:11.095" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.095" endtime="20250227 16:33:11.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:11.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:11.095" endtime="20250227 16:33:11.096"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.088" endtime="20250227 16:33:11.096"/>
</kw>
<msg timestamp="20250227 16:33:11.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:11.087" endtime="20250227 16:33:11.096"/>
</kw>
<msg timestamp="20250227 16:33:11.096" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.087" endtime="20250227 16:33:11.096"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:11.099" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:11.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:11.103" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.097" endtime="20250227 16:33:11.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:11.104" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.104" endtime="20250227 16:33:11.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:11.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:11.104" endtime="20250227 16:33:11.105"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.097" endtime="20250227 16:33:11.105"/>
</kw>
<msg timestamp="20250227 16:33:11.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:11.097" endtime="20250227 16:33:11.105"/>
</kw>
<msg timestamp="20250227 16:33:11.105" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:11.096" endtime="20250227 16:33:11.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:11.105" endtime="20250227 16:33:11.105"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.087" endtime="20250227 16:33:11.105"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:11.106" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:11.106" endtime="20250227 16:33:11.106"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.603" endtime="20250227 16:33:11.106"/>
</kw>
<status status="PASS" starttime="20250227 16:33:09.110" endtime="20250227 16:33:11.106"/>
</iter>
<iter>
<var name="${name}">prom</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:11.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:11.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:11.567" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250227 16:33:11.108" endtime="20250227 16:33:11.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:11.567" level="INFO">{
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250227 16:33:11.567" endtime="20250227 16:33:11.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:11.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:11.568" endtime="20250227 16:33:11.568"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.107" endtime="20250227 16:33:11.569"/>
</kw>
<msg timestamp="20250227 16:33:11.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:11.107" endtime="20250227 16:33:11.569"/>
</kw>
<msg timestamp="20250227 16:33:11.569" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250227 16:33:11.107" endtime="20250227 16:33:11.569"/>
</kw>
<msg timestamp="20250227 16:33:11.569" level="INFO">${result} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250227 16:33:11.107" endtime="20250227 16:33:11.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:11.569" endtime="20250227 16:33:11.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:11.569" endtime="20250227 16:33:11.570"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.106" endtime="20250227 16:33:11.570"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:11.573" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prom --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:12.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:12.078" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:11.571" endtime="20250227 16:33:12.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:12.079" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:12.079" endtime="20250227 16:33:12.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:12.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:12.080" endtime="20250227 16:33:12.080"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.571" endtime="20250227 16:33:12.080"/>
</kw>
<msg timestamp="20250227 16:33:12.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:11.571" endtime="20250227 16:33:12.080"/>
</kw>
<msg timestamp="20250227 16:33:12.080" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:11.571" endtime="20250227 16:33:12.080"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.570" endtime="20250227 16:33:12.080"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:12.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:12.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:12.549" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:12.022Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:12.082" endtime="20250227 16:33:12.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:12.550" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:12.022Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:12.550" endtime="20250227 16:33:12.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:12.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:12.551" endtime="20250227 16:33:12.551"/>
</kw>
<status status="PASS" starttime="20250227 16:33:12.081" endtime="20250227 16:33:12.551"/>
</kw>
<msg timestamp="20250227 16:33:12.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:12.081" endtime="20250227 16:33:12.551"/>
</kw>
<msg timestamp="20250227 16:33:12.551" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:12.022Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:12.081" endtime="20250227 16:33:12.551"/>
</kw>
<msg timestamp="20250227 16:33:12.552" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:12.022Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:12.081" endtime="20250227 16:33:12.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:12.552" endtime="20250227 16:33:12.552"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:12.556" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prom --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:13.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:13.036" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:12.553" endtime="20250227 16:33:13.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:13.036" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:12 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:12 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:13.036" endtime="20250227 16:33:13.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:13.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:13.037" endtime="20250227 16:33:13.037"/>
</kw>
<status status="PASS" starttime="20250227 16:33:12.553" endtime="20250227 16:33:13.037"/>
</kw>
<msg timestamp="20250227 16:33:13.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:12.553" endtime="20250227 16:33:13.037"/>
</kw>
<msg timestamp="20250227 16:33:13.037" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:12.552" endtime="20250227 16:33:13.037"/>
</kw>
<status status="PASS" starttime="20250227 16:33:12.552" endtime="20250227 16:33:13.038"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:13.041" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:13.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:13.046" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.039" endtime="20250227 16:33:13.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:13.047" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.046" endtime="20250227 16:33:13.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:13.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:13.047" endtime="20250227 16:33:13.047"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.039" endtime="20250227 16:33:13.047"/>
</kw>
<msg timestamp="20250227 16:33:13.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:13.039" endtime="20250227 16:33:13.047"/>
</kw>
<msg timestamp="20250227 16:33:13.047" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.038" endtime="20250227 16:33:13.047"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:13.050" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:13.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:13.055" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.048" endtime="20250227 16:33:13.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:13.055" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.055" endtime="20250227 16:33:13.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:13.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:13.056" endtime="20250227 16:33:13.056"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.048" endtime="20250227 16:33:13.056"/>
</kw>
<msg timestamp="20250227 16:33:13.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:13.048" endtime="20250227 16:33:13.056"/>
</kw>
<msg timestamp="20250227 16:33:13.056" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:13.048" endtime="20250227 16:33:13.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:13.056" endtime="20250227 16:33:13.057"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.038" endtime="20250227 16:33:13.057"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:13.057" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:13.057" endtime="20250227 16:33:13.057"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.570" endtime="20250227 16:33:13.057"/>
</kw>
<status status="PASS" starttime="20250227 16:33:11.106" endtime="20250227 16:33:13.057"/>
</iter>
<iter>
<var name="${name}">secret</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:13.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:13.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:13.516" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250227 16:33:13.059" endtime="20250227 16:33:13.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:13.517" level="INFO">{
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250227 16:33:13.516" endtime="20250227 16:33:13.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:13.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:13.517" endtime="20250227 16:33:13.518"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.059" endtime="20250227 16:33:13.518"/>
</kw>
<msg timestamp="20250227 16:33:13.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:13.059" endtime="20250227 16:33:13.518"/>
</kw>
<msg timestamp="20250227 16:33:13.518" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250227 16:33:13.058" endtime="20250227 16:33:13.518"/>
</kw>
<msg timestamp="20250227 16:33:13.518" level="INFO">${result} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250227 16:33:13.058" endtime="20250227 16:33:13.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:13.518" endtime="20250227 16:33:13.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:13.519" endtime="20250227 16:33:13.519"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.058" endtime="20250227 16:33:13.519"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:13.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket secret --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:14.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:14.046" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:13.521" endtime="20250227 16:33:14.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:14.046" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:14.046" endtime="20250227 16:33:14.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:14.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:14.047" endtime="20250227 16:33:14.047"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.520" endtime="20250227 16:33:14.047"/>
</kw>
<msg timestamp="20250227 16:33:14.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:13.520" endtime="20250227 16:33:14.047"/>
</kw>
<msg timestamp="20250227 16:33:14.047" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:13.520" endtime="20250227 16:33:14.047"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.520" endtime="20250227 16:33:14.047"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:14.051" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:14.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:14.513" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:13.996Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:14.049" endtime="20250227 16:33:14.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:14.514" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:13.996Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:14.513" endtime="20250227 16:33:14.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:14.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:14.514" endtime="20250227 16:33:14.514"/>
</kw>
<status status="PASS" starttime="20250227 16:33:14.048" endtime="20250227 16:33:14.514"/>
</kw>
<msg timestamp="20250227 16:33:14.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:14.048" endtime="20250227 16:33:14.514"/>
</kw>
<msg timestamp="20250227 16:33:14.515" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:13.996Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:14.048" endtime="20250227 16:33:14.515"/>
</kw>
<msg timestamp="20250227 16:33:14.515" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:13.996Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:14.048" endtime="20250227 16:33:14.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:14.515" endtime="20250227 16:33:14.515"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:14.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket secret --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:15.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:15.015" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:14.516" endtime="20250227 16:33:15.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:15.016" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:14 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:14 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:15.016" endtime="20250227 16:33:15.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:15.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:15.016" endtime="20250227 16:33:15.017"/>
</kw>
<status status="PASS" starttime="20250227 16:33:14.516" endtime="20250227 16:33:15.017"/>
</kw>
<msg timestamp="20250227 16:33:15.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:14.516" endtime="20250227 16:33:15.017"/>
</kw>
<msg timestamp="20250227 16:33:15.017" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:14.516" endtime="20250227 16:33:15.017"/>
</kw>
<status status="PASS" starttime="20250227 16:33:14.515" endtime="20250227 16:33:15.017"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:15.021" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:15.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:15.025" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.019" endtime="20250227 16:33:15.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:15.026" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.025" endtime="20250227 16:33:15.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:15.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:15.026" endtime="20250227 16:33:15.026"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.018" endtime="20250227 16:33:15.027"/>
</kw>
<msg timestamp="20250227 16:33:15.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:15.018" endtime="20250227 16:33:15.027"/>
</kw>
<msg timestamp="20250227 16:33:15.027" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.018" endtime="20250227 16:33:15.027"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:15.030" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:15.034" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.028" endtime="20250227 16:33:15.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:15.035" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.034" endtime="20250227 16:33:15.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:15.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:15.035" endtime="20250227 16:33:15.035"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.027" endtime="20250227 16:33:15.035"/>
</kw>
<msg timestamp="20250227 16:33:15.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:15.027" endtime="20250227 16:33:15.035"/>
</kw>
<msg timestamp="20250227 16:33:15.036" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:15.027" endtime="20250227 16:33:15.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:15.036" endtime="20250227 16:33:15.036"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.017" endtime="20250227 16:33:15.036"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:15.036" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:15.036" endtime="20250227 16:33:15.036"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.519" endtime="20250227 16:33:15.037"/>
</kw>
<status status="PASS" starttime="20250227 16:33:13.058" endtime="20250227 16:33:15.037"/>
</iter>
<iter>
<var name="${name}">stacks</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:15.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:15.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:15.510" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250227 16:33:15.038" endtime="20250227 16:33:15.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:15.511" level="INFO">{
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250227 16:33:15.510" endtime="20250227 16:33:15.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:15.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:15.511" endtime="20250227 16:33:15.512"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.038" endtime="20250227 16:33:15.512"/>
</kw>
<msg timestamp="20250227 16:33:15.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:15.038" endtime="20250227 16:33:15.512"/>
</kw>
<msg timestamp="20250227 16:33:15.512" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250227 16:33:15.037" endtime="20250227 16:33:15.512"/>
</kw>
<msg timestamp="20250227 16:33:15.513" level="INFO">${result} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250227 16:33:15.037" endtime="20250227 16:33:15.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:15.513" endtime="20250227 16:33:15.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:15.513" endtime="20250227 16:33:15.513"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.037" endtime="20250227 16:33:15.513"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:15.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket stacks --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:16.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:16.044" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:15.515" endtime="20250227 16:33:16.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:16.045" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:16.045" endtime="20250227 16:33:16.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:16.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:16.045" endtime="20250227 16:33:16.046"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.514" endtime="20250227 16:33:16.046"/>
</kw>
<msg timestamp="20250227 16:33:16.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:15.514" endtime="20250227 16:33:16.046"/>
</kw>
<msg timestamp="20250227 16:33:16.046" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:15.514" endtime="20250227 16:33:16.046"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.514" endtime="20250227 16:33:16.046"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:16.050" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:16.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:16.503" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:15.993Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:16.047" endtime="20250227 16:33:16.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:16.504" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:15.993Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:16.504" endtime="20250227 16:33:16.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:16.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:16.504" endtime="20250227 16:33:16.505"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.047" endtime="20250227 16:33:16.505"/>
</kw>
<msg timestamp="20250227 16:33:16.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:16.047" endtime="20250227 16:33:16.505"/>
</kw>
<msg timestamp="20250227 16:33:16.505" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:15.993Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:16.047" endtime="20250227 16:33:16.505"/>
</kw>
<msg timestamp="20250227 16:33:16.505" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:15.993Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:16.046" endtime="20250227 16:33:16.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:16.505" endtime="20250227 16:33:16.506"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:16.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket stacks --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:16.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:16.978" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:16.507" endtime="20250227 16:33:16.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:16.979" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:16 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:16 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:16.978" endtime="20250227 16:33:16.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:16.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:16.979" endtime="20250227 16:33:16.979"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.507" endtime="20250227 16:33:16.980"/>
</kw>
<msg timestamp="20250227 16:33:16.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:16.506" endtime="20250227 16:33:16.980"/>
</kw>
<msg timestamp="20250227 16:33:16.980" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:16.506" endtime="20250227 16:33:16.980"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.506" endtime="20250227 16:33:16.980"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:16.983" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:16.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:16.988" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.981" endtime="20250227 16:33:16.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:16.989" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.988" endtime="20250227 16:33:16.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:16.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:16.989" endtime="20250227 16:33:16.989"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.981" endtime="20250227 16:33:16.989"/>
</kw>
<msg timestamp="20250227 16:33:16.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:16.981" endtime="20250227 16:33:16.989"/>
</kw>
<msg timestamp="20250227 16:33:16.989" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.981" endtime="20250227 16:33:16.989"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:16.992" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:16.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:16.996" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.990" endtime="20250227 16:33:16.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:16.997" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.996" endtime="20250227 16:33:16.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:16.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:16.997" endtime="20250227 16:33:16.997"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.990" endtime="20250227 16:33:16.997"/>
</kw>
<msg timestamp="20250227 16:33:16.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:16.990" endtime="20250227 16:33:16.997"/>
</kw>
<msg timestamp="20250227 16:33:16.997" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:16.990" endtime="20250227 16:33:16.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:16.998" endtime="20250227 16:33:16.998"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.980" endtime="20250227 16:33:16.998"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:16.999" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:16.998" endtime="20250227 16:33:16.999"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.513" endtime="20250227 16:33:16.999"/>
</kw>
<status status="PASS" starttime="20250227 16:33:15.037" endtime="20250227 16:33:16.999"/>
</iter>
<iter>
<var name="${name}">static</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:17.002" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:17.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:17.456" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250227 16:33:17.000" endtime="20250227 16:33:17.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:17.457" level="INFO">{
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250227 16:33:17.457" endtime="20250227 16:33:17.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:17.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:17.458" endtime="20250227 16:33:17.458"/>
</kw>
<status status="PASS" starttime="20250227 16:33:17.000" endtime="20250227 16:33:17.458"/>
</kw>
<msg timestamp="20250227 16:33:17.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:17.000" endtime="20250227 16:33:17.458"/>
</kw>
<msg timestamp="20250227 16:33:17.458" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250227 16:33:16.999" endtime="20250227 16:33:17.458"/>
</kw>
<msg timestamp="20250227 16:33:17.459" level="INFO">${result} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250227 16:33:16.999" endtime="20250227 16:33:17.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:17.459" endtime="20250227 16:33:17.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:17.459" endtime="20250227 16:33:17.459"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.999" endtime="20250227 16:33:17.459"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:17.464" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket static --key testkey --body /tmp/tempfile-skrraimivg 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:18.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:18.061" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:17.462" endtime="20250227 16:33:18.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:18.062" level="INFO">{
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:18.061" endtime="20250227 16:33:18.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:18.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:18.062" endtime="20250227 16:33:18.062"/>
</kw>
<status status="PASS" starttime="20250227 16:33:17.461" endtime="20250227 16:33:18.063"/>
</kw>
<msg timestamp="20250227 16:33:18.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:17.461" endtime="20250227 16:33:18.063"/>
</kw>
<msg timestamp="20250227 16:33:18.063" level="INFO">${output} = {
    "ETag": "\"6633c36778ef069e8f9536966f95d556\""
}</msg>
<status status="PASS" starttime="20250227 16:33:17.461" endtime="20250227 16:33:18.063"/>
</kw>
<status status="PASS" starttime="20250227 16:33:17.460" endtime="20250227 16:33:18.063"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:18.067" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:18.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:18.524" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:17.978Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:18.064" endtime="20250227 16:33:18.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:18.525" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:17.978Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250227 16:33:18.525" endtime="20250227 16:33:18.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:18.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:18.525" endtime="20250227 16:33:18.526"/>
</kw>
<status status="PASS" starttime="20250227 16:33:18.064" endtime="20250227 16:33:18.526"/>
</kw>
<msg timestamp="20250227 16:33:18.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:18.064" endtime="20250227 16:33:18.526"/>
</kw>
<msg timestamp="20250227 16:33:18.526" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:17.978Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:18.064" endtime="20250227 16:33:18.526"/>
</kw>
<msg timestamp="20250227 16:33:18.526" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-27T16:33:17.978Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250227 16:33:18.063" endtime="20250227 16:33:18.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:18.526" endtime="20250227 16:33:18.526"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:18.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket static --key testkey /tmp/tempfile-skrraimivg.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:19.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:19.009" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:18.528" endtime="20250227 16:33:19.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:19.010" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:18 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:33:18 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:19.010" endtime="20250227 16:33:19.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:19.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:19.011" endtime="20250227 16:33:19.011"/>
</kw>
<status status="PASS" starttime="20250227 16:33:18.527" endtime="20250227 16:33:19.011"/>
</kw>
<msg timestamp="20250227 16:33:19.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:18.527" endtime="20250227 16:33:19.011"/>
</kw>
<msg timestamp="20250227 16:33:19.011" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"6633c36778ef069e8f9536966f95d556\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250227 16:33:18.527" endtime="20250227 16:33:19.011"/>
</kw>
<status status="PASS" starttime="20250227 16:33:18.526" endtime="20250227 16:33:19.011"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:19.015" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:19.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:19.020" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.013" endtime="20250227 16:33:19.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:19.020" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.020" endtime="20250227 16:33:19.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:19.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:19.020" endtime="20250227 16:33:19.021"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.013" endtime="20250227 16:33:19.021"/>
</kw>
<msg timestamp="20250227 16:33:19.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:19.012" endtime="20250227 16:33:19.021"/>
</kw>
<msg timestamp="20250227 16:33:19.021" level="INFO">${checksumbefore} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.012" endtime="20250227 16:33:19.021"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:19.024" level="INFO">Running command 'md5sum /tmp/tempfile-skrraimivg.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:19.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:19.028" level="INFO">${output} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.022" endtime="20250227 16:33:19.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:19.029" level="INFO">6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.029" endtime="20250227 16:33:19.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:19.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:19.029" endtime="20250227 16:33:19.029"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.022" endtime="20250227 16:33:19.030"/>
</kw>
<msg timestamp="20250227 16:33:19.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:19.022" endtime="20250227 16:33:19.030"/>
</kw>
<msg timestamp="20250227 16:33:19.030" level="INFO">${checksumafter} = 6633c36778ef069e8f9536966f95d556</msg>
<status status="PASS" starttime="20250227 16:33:19.021" endtime="20250227 16:33:19.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:19.030" endtime="20250227 16:33:19.030"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.012" endtime="20250227 16:33:19.030"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250227 16:33:19.031" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-skrraimivg.verify"&gt;/tmp/tempfile-skrraimivg.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250227 16:33:19.030" endtime="20250227 16:33:19.031"/>
</kw>
<status status="PASS" starttime="20250227 16:33:17.459" endtime="20250227 16:33:19.031"/>
</kw>
<status status="PASS" starttime="20250227 16:33:16.999" endtime="20250227 16:33:19.031"/>
</iter>
<status status="PASS" starttime="20250227 16:33:01.178" endtime="20250227 16:33:19.031"/>
</for>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:01.166" endtime="20250227 16:33:19.031"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:32:55.657" endtime="20250227 16:33:19.032"/>
</suite>
<suite id="s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:33:19.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:19.046" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.047" endtime="20250227 16:33:19.047"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:33:19.048" endtime="20250227 16:33:19.048"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.046" endtime="20250227 16:33:19.048"/>
</kw>
<test id="s1-s4-t1" name="Delete existing bucket" line="38">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:19.050" level="INFO">${randStr} = 2642544022</msg>
<status status="PASS" starttime="20250227 16:33:19.049" endtime="20250227 16:33:19.050"/>
</kw>
<msg timestamp="20250227 16:33:19.050" level="INFO">${postfix} = ozone-test-2642544022</msg>
<status status="PASS" starttime="20250227 16:33:19.049" endtime="20250227 16:33:19.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:33:19.050" level="INFO">${bucket} = bucket-ozone-test-2642544022</msg>
<status status="PASS" starttime="20250227 16:33:19.050" endtime="20250227 16:33:19.050"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:19.053" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2642544022 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:19.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:19.525" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2642544022"
}</msg>
<status status="PASS" starttime="20250227 16:33:19.052" endtime="20250227 16:33:19.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:19.526" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2642544022"
}</msg>
<status status="PASS" starttime="20250227 16:33:19.525" endtime="20250227 16:33:19.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:19.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:19.526" endtime="20250227 16:33:19.526"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.051" endtime="20250227 16:33:19.526"/>
</kw>
<msg timestamp="20250227 16:33:19.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:19.051" endtime="20250227 16:33:19.527"/>
</kw>
<msg timestamp="20250227 16:33:19.527" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2642544022"
}</msg>
<status status="PASS" starttime="20250227 16:33:19.051" endtime="20250227 16:33:19.527"/>
</kw>
<msg timestamp="20250227 16:33:19.527" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2642544022"
}</msg>
<status status="PASS" starttime="20250227 16:33:19.050" endtime="20250227 16:33:19.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:19.527" endtime="20250227 16:33:19.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:19.527" endtime="20250227 16:33:19.528"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.050" endtime="20250227 16:33:19.528"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.049" endtime="20250227 16:33:19.528"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.049" endtime="20250227 16:33:19.528"/>
</kw>
<msg timestamp="20250227 16:33:19.528" level="INFO">${bucket} = bucket-ozone-test-2642544022</msg>
<status status="PASS" starttime="20250227 16:33:19.048" endtime="20250227 16:33:19.528"/>
</kw>
<msg timestamp="20250227 16:33:19.528" level="INFO">${bucket} = bucket-ozone-test-2642544022</msg>
<status status="PASS" starttime="20250227 16:33:19.048" endtime="20250227 16:33:19.528"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:19.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2642544022 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:19.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:19.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:19.529" endtime="20250227 16:33:19.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:19.990" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:19.990" endtime="20250227 16:33:19.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:19.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:19.990" endtime="20250227 16:33:19.991"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.529" endtime="20250227 16:33:19.991"/>
</kw>
<msg timestamp="20250227 16:33:19.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:19.529" endtime="20250227 16:33:19.991"/>
</kw>
<msg timestamp="20250227 16:33:19.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:19.528" endtime="20250227 16:33:19.991"/>
</kw>
<status status="PASS" starttime="20250227 16:33:19.528" endtime="20250227 16:33:19.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:19.048" endtime="20250227 16:33:19.991"/>
</test>
<test id="s1-s4-t2" name="Delete non-existent bucket" line="42">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:19.993" level="INFO">${randStr} = 0082181678</msg>
<status status="PASS" starttime="20250227 16:33:19.993" endtime="20250227 16:33:19.993"/>
</kw>
<msg timestamp="20250227 16:33:19.993" level="INFO">${randStr} = ozone-test-0082181678</msg>
<status status="PASS" starttime="20250227 16:33:19.992" endtime="20250227 16:33:19.993"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:19.996" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-0082181678 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:20.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:20.449" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:33:19.994" endtime="20250227 16:33:20.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:20.450" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:33:20.450" endtime="20250227 16:33:20.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:20.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:20.451" endtime="20250227 16:33:20.451"/>
</kw>
<msg timestamp="20250227 16:33:20.451" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:33:19.994" endtime="20250227 16:33:20.451"/>
</kw>
<msg timestamp="20250227 16:33:20.451" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:33:19.993" endtime="20250227 16:33:20.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:20.452" endtime="20250227 16:33:20.452"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:19.992" endtime="20250227 16:33:20.452"/>
</test>
<test id="s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="48">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:20.454" level="INFO">${randStr} = 4750510386</msg>
<status status="PASS" starttime="20250227 16:33:20.453" endtime="20250227 16:33:20.454"/>
</kw>
<msg timestamp="20250227 16:33:20.454" level="INFO">${postfix} = ozone-test-4750510386</msg>
<status status="PASS" starttime="20250227 16:33:20.453" endtime="20250227 16:33:20.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:33:20.454" level="INFO">${bucket} = bucket-ozone-test-4750510386</msg>
<status status="PASS" starttime="20250227 16:33:20.454" endtime="20250227 16:33:20.454"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:20.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4750510386 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:20.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:20.920" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4750510386"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.457" endtime="20250227 16:33:20.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:20.921" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4750510386"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.920" endtime="20250227 16:33:20.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:20.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:20.921" endtime="20250227 16:33:20.921"/>
</kw>
<status status="PASS" starttime="20250227 16:33:20.456" endtime="20250227 16:33:20.921"/>
</kw>
<msg timestamp="20250227 16:33:20.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:20.456" endtime="20250227 16:33:20.921"/>
</kw>
<msg timestamp="20250227 16:33:20.922" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4750510386"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.455" endtime="20250227 16:33:20.922"/>
</kw>
<msg timestamp="20250227 16:33:20.922" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4750510386"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.455" endtime="20250227 16:33:20.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:20.922" endtime="20250227 16:33:20.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:20.922" endtime="20250227 16:33:20.922"/>
</kw>
<status status="PASS" starttime="20250227 16:33:20.455" endtime="20250227 16:33:20.922"/>
</kw>
<msg timestamp="20250227 16:33:20.923" level="INFO">${bucket} = bucket-ozone-test-4750510386</msg>
<status status="PASS" starttime="20250227 16:33:20.453" endtime="20250227 16:33:20.923"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:20.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-4750510386 --key incomplete-multipartkey  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:21.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:21.395" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-4750510386",
    "Key": "incomplete-multipartkey",
    "UploadId": "01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.924" endtime="20250227 16:33:21.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:21.396" level="INFO">{
    "Bucket": "bucket-ozone-test-4750510386",
    "Key": "incomplete-multipartkey",
    "UploadId": "01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945"
}</msg>
<status status="PASS" starttime="20250227 16:33:21.396" endtime="20250227 16:33:21.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:21.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:21.397" endtime="20250227 16:33:21.397"/>
</kw>
<msg timestamp="20250227 16:33:21.397" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-4750510386",
    "Key": "incomplete-multipartkey",
    "UploadId": "01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.924" endtime="20250227 16:33:21.397"/>
</kw>
<msg timestamp="20250227 16:33:21.397" level="INFO">${result} = {
    "Bucket": "bucket-ozone-test-4750510386",
    "Key": "incomplete-multipartkey",
    "UploadId": "01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945"
}</msg>
<status status="PASS" starttime="20250227 16:33:20.924" endtime="20250227 16:33:21.397"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:21.398" endtime="20250227 16:33:21.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:21.398" endtime="20250227 16:33:21.398"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:21.401" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-4750510386",
    "Key": "incomplete-multipartkey",
    "UploadId": "01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:21.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:21.409" level="INFO">${output} = 01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945</msg>
<status status="PASS" starttime="20250227 16:33:21.399" endtime="20250227 16:33:21.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:21.410" level="INFO">01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945</msg>
<status status="PASS" starttime="20250227 16:33:21.409" endtime="20250227 16:33:21.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:21.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:21.410" endtime="20250227 16:33:21.410"/>
</kw>
<msg timestamp="20250227 16:33:21.410" level="INFO">${upload_id} = 01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945</msg>
<status status="PASS" starttime="20250227 16:33:21.399" endtime="20250227 16:33:21.410"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:21.411" endtime="20250227 16:33:21.411"/>
</return>
<status status="PASS" starttime="20250227 16:33:21.398" endtime="20250227 16:33:21.411"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:21.411" endtime="20250227 16:33:21.411"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:21.411" endtime="20250227 16:33:21.411"/>
</branch>
<status status="PASS" starttime="20250227 16:33:21.397" endtime="20250227 16:33:21.411"/>
</if>
<msg timestamp="20250227 16:33:21.411" level="INFO">${uploadID} = 01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945</msg>
<status status="PASS" starttime="20250227 16:33:20.923" endtime="20250227 16:33:21.411"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:21.414" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-4750510386 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:21.868" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:21.868" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250227 16:33:21.412" endtime="20250227 16:33:21.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:21.869" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20250227 16:33:21.868" endtime="20250227 16:33:21.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:21.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:21.869" endtime="20250227 16:33:21.869"/>
</kw>
<msg timestamp="20250227 16:33:21.870" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250227 16:33:21.411" endtime="20250227 16:33:21.870"/>
</kw>
<msg timestamp="20250227 16:33:21.870" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250227 16:33:21.411" endtime="20250227 16:33:21.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:21.870" endtime="20250227 16:33:21.870"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${abort_result}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<arg>${uploadID}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:21.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-4750510386 --key incomplete-multipartkey --upload-id 01954841-69c1-7661-b29b-c8064b4877c8-114076811352145945 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:22.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:22.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:21.871" endtime="20250227 16:33:22.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:22.338" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:22.338" endtime="20250227 16:33:22.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:22.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:22.338" endtime="20250227 16:33:22.339"/>
</kw>
<msg timestamp="20250227 16:33:22.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:21.871" endtime="20250227 16:33:22.339"/>
</kw>
<msg timestamp="20250227 16:33:22.339" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:33:21.871" endtime="20250227 16:33:22.339"/>
</kw>
<msg timestamp="20250227 16:33:22.340" level="INFO">${abort_result} = None</msg>
<status status="PASS" starttime="20250227 16:33:21.870" endtime="20250227 16:33:22.340"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:22.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-4750510386 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:22.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:22.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:22.340" endtime="20250227 16:33:22.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:22.797" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:22.796" endtime="20250227 16:33:22.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:22.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:22.797" endtime="20250227 16:33:22.797"/>
</kw>
<msg timestamp="20250227 16:33:22.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:22.340" endtime="20250227 16:33:22.798"/>
</kw>
<msg timestamp="20250227 16:33:22.798" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20250227 16:33:22.340" endtime="20250227 16:33:22.798"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:20.452" endtime="20250227 16:33:22.798"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:33:19.033" endtime="20250227 16:33:22.798"/>
</suite>
<suite id="s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:33:22.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.807" endtime="20250227 16:33:22.808"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:33:22.808" endtime="20250227 16:33:22.808"/>
</kw>
<status status="PASS" starttime="20250227 16:33:22.806" endtime="20250227 16:33:22.808"/>
</kw>
<test id="s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:22.811" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:23.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:23.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:22.809" endtime="20250227 16:33:23.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:23.276" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:23.275" endtime="20250227 16:33:23.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:23.276" endtime="20250227 16:33:23.276"/>
</kw>
<status status="PASS" starttime="20250227 16:33:22.809" endtime="20250227 16:33:23.277"/>
</kw>
<msg timestamp="20250227 16:33:23.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:22.809" endtime="20250227 16:33:23.277"/>
</kw>
<msg timestamp="20250227 16:33:23.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:22.808" endtime="20250227 16:33:23.277"/>
</kw>
<msg timestamp="20250227 16:33:23.277" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:33:22.808" endtime="20250227 16:33:23.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:22.808" endtime="20250227 16:33:23.277"/>
</test>
<test id="s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:23.279" level="INFO">${randStr} = 6995618968</msg>
<status status="PASS" starttime="20250227 16:33:23.278" endtime="20250227 16:33:23.279"/>
</kw>
<msg timestamp="20250227 16:33:23.279" level="INFO">${randStr} = ozone-test-6995618968</msg>
<status status="PASS" starttime="20250227 16:33:23.278" endtime="20250227 16:33:23.279"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:23.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-6995618968 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:23.736" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:23.736" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:33:23.280" endtime="20250227 16:33:23.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:23.737" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:33:23.736" endtime="20250227 16:33:23.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:23.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:23.737" endtime="20250227 16:33:23.737"/>
</kw>
<msg timestamp="20250227 16:33:23.737" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:33:23.279" endtime="20250227 16:33:23.737"/>
</kw>
<msg timestamp="20250227 16:33:23.738" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:33:23.279" endtime="20250227 16:33:23.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:23.738" endtime="20250227 16:33:23.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:23.738" endtime="20250227 16:33:23.738"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:23.278" endtime="20250227 16:33:23.738"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:33:22.800" endtime="20250227 16:33:23.739"/>
</suite>
<suite id="s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:33:23.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:23.747" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:33:23.748" endtime="20250227 16:33:23.748"/>
</kw>
<status status="PASS" starttime="20250227 16:33:23.747" endtime="20250227 16:33:23.749"/>
</kw>
<test id="s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:23.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:24.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:24.210" level="INFO">${output} = bucket-diiacmavow
bucket-jyiacucdxv
bucket-ozone-test-1782756458
bucket-ozone-test-3565548831
bucket-ozone-test-9782842707
conf
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250227 16:33:23.750" endtime="20250227 16:33:24.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:24.211" level="INFO">bucket-diiacmavow
bucket-jyiacucdxv
bucket-ozone-test-1782756458
bucket-ozone-test-3565548831
bucket-ozone-test-9782842707
conf
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250227 16:33:24.210" endtime="20250227 16:33:24.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:24.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:24.211" endtime="20250227 16:33:24.211"/>
</kw>
<status status="PASS" starttime="20250227 16:33:23.750" endtime="20250227 16:33:24.211"/>
</kw>
<msg timestamp="20250227 16:33:24.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:23.750" endtime="20250227 16:33:24.211"/>
</kw>
<msg timestamp="20250227 16:33:24.212" level="INFO">${output} = bucket-diiacmavow
bucket-jyiacucdxv
bucket-ozone-test-1782756458
bucket-ozone-test-3565548831
bucket-ozone-test-9782842707
conf
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250227 16:33:23.749" endtime="20250227 16:33:24.212"/>
</kw>
<msg timestamp="20250227 16:33:24.212" level="INFO">${result} = bucket-diiacmavow
bucket-jyiacucdxv
bucket-ozone-test-1782756458
bucket-ozone-test-3565548831
bucket-ozone-test-9782842707
conf
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250227 16:33:23.749" endtime="20250227 16:33:24.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:24.212" endtime="20250227 16:33:24.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:23.749" endtime="20250227 16:33:24.212"/>
</test>
<test id="s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:33:24.213" endtime="20250227 16:33:24.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:24.217" level="INFO">Running command 'ozone sh bucket info /s3v/bucket-diiacmavow | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:27.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:27.342" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250227 16:33:24.215" endtime="20250227 16:33:27.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:27.343" level="INFO">testuser</msg>
<status status="PASS" starttime="20250227 16:33:27.342" endtime="20250227 16:33:27.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:27.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:27.343" endtime="20250227 16:33:27.343"/>
</kw>
<status status="PASS" starttime="20250227 16:33:24.215" endtime="20250227 16:33:27.343"/>
</kw>
<msg timestamp="20250227 16:33:27.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:24.215" endtime="20250227 16:33:27.343"/>
</kw>
<msg timestamp="20250227 16:33:27.343" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250227 16:33:24.214" endtime="20250227 16:33:27.343"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:27.344" endtime="20250227 16:33:27.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:24.213" endtime="20250227 16:33:27.344"/>
</test>
<test id="s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:27.348" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:27.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:27.689" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:27.346" endtime="20250227 16:33:27.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:27.690" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:27.689" endtime="20250227 16:33:27.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:27.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:27.690" endtime="20250227 16:33:27.690"/>
</kw>
<status status="PASS" starttime="20250227 16:33:27.346" endtime="20250227 16:33:27.690"/>
</kw>
<msg timestamp="20250227 16:33:27.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:27.345" endtime="20250227 16:33:27.691"/>
</kw>
<msg timestamp="20250227 16:33:27.691" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:27.345" endtime="20250227 16:33:27.691"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250227 16:33:27.691" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:27.691" endtime="20250227 16:33:27.691"/>
</kw>
<status status="PASS" starttime="20250227 16:33:27.345" endtime="20250227 16:33:27.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:27.694" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:28.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:28.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:27.692" endtime="20250227 16:33:28.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:28.033" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:28.032" endtime="20250227 16:33:28.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:28.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:28.033" endtime="20250227 16:33:28.033"/>
</kw>
<status status="PASS" starttime="20250227 16:33:27.692" endtime="20250227 16:33:28.033"/>
</kw>
<msg timestamp="20250227 16:33:28.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:27.692" endtime="20250227 16:33:28.034"/>
</kw>
<status status="PASS" starttime="20250227 16:33:27.691" endtime="20250227 16:33:28.034"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:28.036" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:28.489" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:28.489" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250227 16:33:28.034" endtime="20250227 16:33:28.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:28.490" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250227 16:33:28.489" endtime="20250227 16:33:28.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:28.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:28.490" endtime="20250227 16:33:28.490"/>
</kw>
<msg timestamp="20250227 16:33:28.491" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250227 16:33:28.034" endtime="20250227 16:33:28.491"/>
</kw>
<msg timestamp="20250227 16:33:28.491" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250227 16:33:28.034" endtime="20250227 16:33:28.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:28.491" endtime="20250227 16:33:28.491"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:28.495" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:28.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:28.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:28.493" endtime="20250227 16:33:28.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:28.831" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:28.831" endtime="20250227 16:33:28.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:28.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:28.831" endtime="20250227 16:33:28.832"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.492" endtime="20250227 16:33:28.832"/>
</kw>
<msg timestamp="20250227 16:33:28.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:28.492" endtime="20250227 16:33:28.832"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.492" endtime="20250227 16:33:28.832"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.491" endtime="20250227 16:33:28.832"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:27.344" endtime="20250227 16:33:28.832"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:33:23.740" endtime="20250227 16:33:28.833"/>
</suite>
<suite id="s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:33:28.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.842"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.842"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.842" endtime="20250227 16:33:28.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.843" endtime="20250227 16:33:28.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.843" endtime="20250227 16:33:28.843"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:33:28.843" endtime="20250227 16:33:28.843"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.841" endtime="20250227 16:33:28.843"/>
</kw>
<test id="s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:28.847" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:29.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:29.184" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:28.844" endtime="20250227 16:33:29.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:29.185" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:29.185" endtime="20250227 16:33:29.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:29.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:29.185" endtime="20250227 16:33:29.185"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.844" endtime="20250227 16:33:29.186"/>
</kw>
<msg timestamp="20250227 16:33:29.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:28.844" endtime="20250227 16:33:29.186"/>
</kw>
<msg timestamp="20250227 16:33:29.186" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:33:28.844" endtime="20250227 16:33:29.186"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:29.189" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:29.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:29.530" level="INFO">${output} = b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:33:29.187" endtime="20250227 16:33:29.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:29.531" level="INFO">b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:33:29.531" endtime="20250227 16:33:29.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:29.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:29.531" endtime="20250227 16:33:29.531"/>
</kw>
<status status="PASS" starttime="20250227 16:33:29.187" endtime="20250227 16:33:29.532"/>
</kw>
<msg timestamp="20250227 16:33:29.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:29.186" endtime="20250227 16:33:29.532"/>
</kw>
<msg timestamp="20250227 16:33:29.532" level="INFO">${secret} = b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:33:29.186" endtime="20250227 16:33:29.532"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:33:29.532" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17'.</msg>
<status status="PASS" starttime="20250227 16:33:29.532" endtime="20250227 16:33:29.532"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:33:29.532" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250227 16:33:29.532" endtime="20250227 16:33:29.533"/>
</kw>
<status status="PASS" starttime="20250227 16:33:28.843" endtime="20250227 16:33:29.533"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:29.537" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-bucket-diiacmavow  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.324" level="INFO">${output} = 2025-02-27 16:33:30,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:33:31,042 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:33:29.535" endtime="20250227 16:33:33.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.325" level="INFO">2025-02-27 16:33:30,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:33:31,042 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:33:31,043 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:33:31,196 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-bucket-diiacmavow and number-of-tests 100
2025-02-27 16:33:31,264 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:33:32,267 [Thread-5] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2025-02-27 16:33:33,268 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:33:33,281 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=44.657305, max=207.843557, mean=84.61464732607242, stddev=35.64989747922387, median=76.396981, p75=87.06223, p95=187.359873, p98=198.669726, p99=207.843557, p999=207.843557, mean_rate=68.65935584546226, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:33:33,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:33:33,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:33:33,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:33:33.325" endtime="20250227 16:33:33.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.325" endtime="20250227 16:33:33.326"/>
</kw>
<status status="PASS" starttime="20250227 16:33:29.534" endtime="20250227 16:33:33.326"/>
</kw>
<msg timestamp="20250227 16:33:33.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:29.534" endtime="20250227 16:33:33.326"/>
</kw>
<msg timestamp="20250227 16:33:33.326" level="INFO">${result} = 2025-02-27 16:33:30,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:33:31,042 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:33:29.534" endtime="20250227 16:33:33.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:33.327" endtime="20250227 16:33:33.327"/>
</kw>
<status status="PASS" starttime="20250227 16:33:29.533" endtime="20250227 16:33:33.327"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20250227 16:33:28.843" endtime="20250227 16:33:33.327"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:33:28.834" endtime="20250227 16:33:33.328"/>
</suite>
<suite id="s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:33:33.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.339"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.339"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.339"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.340"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.340"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250227 16:33:33.341" endtime="20250227 16:33:33.342"/>
</kw>
<msg timestamp="20250227 16:33:33.342" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250227 16:33:33.341" endtime="20250227 16:33:33.342"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.345" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:33.342" endtime="20250227 16:33:33.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.378" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:33.378" endtime="20250227 16:33:33.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.379" endtime="20250227 16:33:33.379"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.342" endtime="20250227 16:33:33.379"/>
</kw>
<msg timestamp="20250227 16:33:33.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.342" endtime="20250227 16:33:33.379"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.342" endtime="20250227 16:33:33.379"/>
</kw>
<msg timestamp="20250227 16:33:33.379" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.379"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.340" endtime="20250227 16:33:33.379"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250227 16:33:33.381" endtime="20250227 16:33:33.381"/>
</kw>
<msg timestamp="20250227 16:33:33.381" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250227 16:33:33.380" endtime="20250227 16:33:33.381"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.384" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:33.382" endtime="20250227 16:33:33.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.394" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:33.394" endtime="20250227 16:33:33.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.394" endtime="20250227 16:33:33.395"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.382" endtime="20250227 16:33:33.395"/>
</kw>
<msg timestamp="20250227 16:33:33.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.382" endtime="20250227 16:33:33.395"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.381" endtime="20250227 16:33:33.395"/>
</kw>
<msg timestamp="20250227 16:33:33.395" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250227 16:33:33.380" endtime="20250227 16:33:33.395"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.380" endtime="20250227 16:33:33.395"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250227 16:33:33.397" endtime="20250227 16:33:33.397"/>
</kw>
<msg timestamp="20250227 16:33:33.397" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250227 16:33:33.396" endtime="20250227 16:33:33.397"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.400" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:33.398" endtime="20250227 16:33:33.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.440" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:33.440" endtime="20250227 16:33:33.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.440" endtime="20250227 16:33:33.440"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.397" endtime="20250227 16:33:33.441"/>
</kw>
<msg timestamp="20250227 16:33:33.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.397" endtime="20250227 16:33:33.441"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.397" endtime="20250227 16:33:33.441"/>
</kw>
<msg timestamp="20250227 16:33:33.441" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250227 16:33:33.396" endtime="20250227 16:33:33.441"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.395" endtime="20250227 16:33:33.441"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250227 16:33:33.443" endtime="20250227 16:33:33.443"/>
</kw>
<msg timestamp="20250227 16:33:33.443" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250227 16:33:33.442" endtime="20250227 16:33:33.443"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.446" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:33.444" endtime="20250227 16:33:33.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.528" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:33.527" endtime="20250227 16:33:33.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.528" endtime="20250227 16:33:33.528"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.444" endtime="20250227 16:33:33.528"/>
</kw>
<msg timestamp="20250227 16:33:33.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.443" endtime="20250227 16:33:33.528"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.443" endtime="20250227 16:33:33.529"/>
</kw>
<msg timestamp="20250227 16:33:33.529" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250227 16:33:33.441" endtime="20250227 16:33:33.529"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.441" endtime="20250227 16:33:33.529"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250227 16:33:33.530" endtime="20250227 16:33:33.531"/>
</kw>
<msg timestamp="20250227 16:33:33.531" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250227 16:33:33.530" endtime="20250227 16:33:33.531"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.533" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:33.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:33.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:33.531" endtime="20250227 16:33:33.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:33.538" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:33.537" endtime="20250227 16:33:33.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:33.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:33.538" endtime="20250227 16:33:33.538"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.531" endtime="20250227 16:33:33.538"/>
</kw>
<msg timestamp="20250227 16:33:33.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:33.531" endtime="20250227 16:33:33.538"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.531" endtime="20250227 16:33:33.538"/>
</kw>
<msg timestamp="20250227 16:33:33.538" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250227 16:33:33.529" endtime="20250227 16:33:33.538"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.529" endtime="20250227 16:33:33.539"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.339" endtime="20250227 16:33:33.539"/>
</kw>
<test id="s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="60">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:33.540" level="INFO">${randStr} = 3131831838</msg>
<status status="PASS" starttime="20250227 16:33:33.540" endtime="20250227 16:33:33.540"/>
</kw>
<msg timestamp="20250227 16:33:33.540" level="INFO">${random} = ozone-test-3131831838</msg>
<status status="PASS" starttime="20250227 16:33:33.540" endtime="20250227 16:33:33.540"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:33.541" level="INFO">${PREFIX} = ozone-test-3131831838</msg>
<status status="PASS" starttime="20250227 16:33:33.541" endtime="20250227 16:33:33.541"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.539" endtime="20250227 16:33:33.541"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:33.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key multipart/adjusted_length_ozone-test-3131831838  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:34.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:34.050" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "UploadId": "01954841-9b2f-7695-a311-397f59b79368-114076812181438490"
}</msg>
<status status="PASS" starttime="20250227 16:33:33.543" endtime="20250227 16:33:34.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:34.051" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "UploadId": "01954841-9b2f-7695-a311-397f59b79368-114076812181438490"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.050" endtime="20250227 16:33:34.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:34.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:34.051" endtime="20250227 16:33:34.051"/>
</kw>
<msg timestamp="20250227 16:33:34.051" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "UploadId": "01954841-9b2f-7695-a311-397f59b79368-114076812181438490"
}</msg>
<status status="PASS" starttime="20250227 16:33:33.543" endtime="20250227 16:33:34.051"/>
</kw>
<msg timestamp="20250227 16:33:34.051" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "UploadId": "01954841-9b2f-7695-a311-397f59b79368-114076812181438490"
}</msg>
<status status="PASS" starttime="20250227 16:33:33.542" endtime="20250227 16:33:34.051"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:34.052" endtime="20250227 16:33:34.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:34.052" endtime="20250227 16:33:34.052"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:34.055" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "UploadId": "01954841-9b2f-7695-a311-397f59b79368-114076812181438490"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:34.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:34.060" level="INFO">${output} = 01954841-9b2f-7695-a311-397f59b79368-114076812181438490</msg>
<status status="PASS" starttime="20250227 16:33:34.053" endtime="20250227 16:33:34.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:34.061" level="INFO">01954841-9b2f-7695-a311-397f59b79368-114076812181438490</msg>
<status status="PASS" starttime="20250227 16:33:34.061" endtime="20250227 16:33:34.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:34.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:34.061" endtime="20250227 16:33:34.062"/>
</kw>
<msg timestamp="20250227 16:33:34.062" level="INFO">${upload_id} = 01954841-9b2f-7695-a311-397f59b79368-114076812181438490</msg>
<status status="PASS" starttime="20250227 16:33:34.053" endtime="20250227 16:33:34.062"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:34.062" endtime="20250227 16:33:34.062"/>
</return>
<status status="PASS" starttime="20250227 16:33:34.052" endtime="20250227 16:33:34.062"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:34.062" endtime="20250227 16:33:34.062"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:34.062" endtime="20250227 16:33:34.062"/>
</branch>
<status status="PASS" starttime="20250227 16:33:34.052" endtime="20250227 16:33:34.062"/>
</if>
<msg timestamp="20250227 16:33:34.062" level="INFO">${upload_id} = 01954841-9b2f-7695-a311-397f59b79368-114076812181438490</msg>
<status status="PASS" starttime="20250227 16:33:33.541" endtime="20250227 16:33:34.062"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250227 16:33:34.063" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250227 16:33:34.063" endtime="20250227 16:33:34.063"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:34.064" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250227 16:33:34.064" endtime="20250227 16:33:34.064"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:34.067" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key multipart/adjusted_length_ozone-test-3131831838 --part-number 1 --body /tmp/part1 --upload-id 01954841-9b2f-7695-a311-397f59b79368-114076812181438490 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:34.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:34.882" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.065" endtime="20250227 16:33:34.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:34.885" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.882" endtime="20250227 16:33:34.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:34.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:34.885" endtime="20250227 16:33:34.886"/>
</kw>
<msg timestamp="20250227 16:33:34.886" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.065" endtime="20250227 16:33:34.886"/>
</kw>
<msg timestamp="20250227 16:33:34.888" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.065" endtime="20250227 16:33:34.888"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:34.888" endtime="20250227 16:33:34.889"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:34.896" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:34.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:34.913" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.892" endtime="20250227 16:33:34.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:34.915" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.914" endtime="20250227 16:33:34.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:34.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:34.916" endtime="20250227 16:33:34.916"/>
</kw>
<status status="PASS" starttime="20250227 16:33:34.891" endtime="20250227 16:33:34.917"/>
</kw>
<msg timestamp="20250227 16:33:34.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:34.891" endtime="20250227 16:33:34.917"/>
</kw>
<msg timestamp="20250227 16:33:34.917" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.889" endtime="20250227 16:33:34.917"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:34.923" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:34.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:34.947" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.919" endtime="20250227 16:33:34.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:34.948" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.948" endtime="20250227 16:33:34.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:34.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:34.948" endtime="20250227 16:33:34.949"/>
</kw>
<status status="PASS" starttime="20250227 16:33:34.919" endtime="20250227 16:33:34.950"/>
</kw>
<msg timestamp="20250227 16:33:34.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:34.918" endtime="20250227 16:33:34.950"/>
</kw>
<msg timestamp="20250227 16:33:34.950" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.917" endtime="20250227 16:33:34.950"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:34.950" endtime="20250227 16:33:34.951"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:34.951" endtime="20250227 16:33:34.951"/>
</return>
<status status="PASS" starttime="20250227 16:33:34.888" endtime="20250227 16:33:34.951"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:34.951" endtime="20250227 16:33:34.951"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:34.951" endtime="20250227 16:33:34.951"/>
</branch>
<status status="PASS" starttime="20250227 16:33:34.888" endtime="20250227 16:33:34.951"/>
</if>
<msg timestamp="20250227 16:33:34.951" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:34.064" endtime="20250227 16:33:34.951"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:34.951" endtime="20250227 16:33:34.952"/>
</kw>
<status status="PASS" starttime="20250227 16:33:34.063" endtime="20250227 16:33:34.952"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:34.953" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250227 16:33:34.952" endtime="20250227 16:33:34.953"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:34.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key multipart/adjusted_length_ozone-test-3131831838 --part-number 2 --body /tmp/part2 --upload-id 01954841-9b2f-7695-a311-397f59b79368-114076812181438490 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:35.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:35.578" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.955" endtime="20250227 16:33:35.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:35.579" level="INFO">{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:35.578" endtime="20250227 16:33:35.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:35.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:35.579" endtime="20250227 16:33:35.580"/>
</kw>
<msg timestamp="20250227 16:33:35.580" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.955" endtime="20250227 16:33:35.580"/>
</kw>
<msg timestamp="20250227 16:33:35.580" level="INFO">${result} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:34.954" endtime="20250227 16:33:35.580"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:35.580" endtime="20250227 16:33:35.581"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:35.584" level="INFO">Running command 'echo '{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:35.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:35.590" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.582" endtime="20250227 16:33:35.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:35.591" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.590" endtime="20250227 16:33:35.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:35.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:35.591" endtime="20250227 16:33:35.592"/>
</kw>
<status status="PASS" starttime="20250227 16:33:35.581" endtime="20250227 16:33:35.592"/>
</kw>
<msg timestamp="20250227 16:33:35.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:35.581" endtime="20250227 16:33:35.592"/>
</kw>
<msg timestamp="20250227 16:33:35.592" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.581" endtime="20250227 16:33:35.592"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:35.595" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:35.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:35.601" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.593" endtime="20250227 16:33:35.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:35.601" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.601" endtime="20250227 16:33:35.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:35.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:35.602" endtime="20250227 16:33:35.602"/>
</kw>
<status status="PASS" starttime="20250227 16:33:35.593" endtime="20250227 16:33:35.602"/>
</kw>
<msg timestamp="20250227 16:33:35.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:35.592" endtime="20250227 16:33:35.602"/>
</kw>
<msg timestamp="20250227 16:33:35.602" level="INFO">${md5sum} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:35.592" endtime="20250227 16:33:35.602"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:35.602" endtime="20250227 16:33:35.603"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:35.603" endtime="20250227 16:33:35.603"/>
</return>
<status status="PASS" starttime="20250227 16:33:35.580" endtime="20250227 16:33:35.603"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:35.603" endtime="20250227 16:33:35.603"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:35.603" endtime="20250227 16:33:35.603"/>
</branch>
<status status="PASS" starttime="20250227 16:33:35.580" endtime="20250227 16:33:35.603"/>
</if>
<msg timestamp="20250227 16:33:35.603" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:34.953" endtime="20250227 16:33:35.603"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:35.603" endtime="20250227 16:33:35.604"/>
</kw>
<status status="PASS" starttime="20250227 16:33:34.952" endtime="20250227 16:33:35.604"/>
</iter>
<status status="PASS" starttime="20250227 16:33:34.063" endtime="20250227 16:33:35.604"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:33:35.604" level="INFO">${parts} = {ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:35.604" endtime="20250227 16:33:35.604"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250227 16:33:35.604" endtime="20250227 16:33:35.604"/>
</return>
<msg timestamp="20250227 16:33:35.604" level="INFO">${parts} = {ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:34.062" endtime="20250227 16:33:35.604"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:35.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key multipart/adjusted_length_ozone-test-3131831838 --upload-id 01954841-9b2f-7695-a311-397f59b79368-114076812181438490 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.111" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:35.606" endtime="20250227 16:33:36.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.112" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:36.112" endtime="20250227 16:33:36.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.112" endtime="20250227 16:33:36.113"/>
</kw>
<msg timestamp="20250227 16:33:36.113" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:35.605" endtime="20250227 16:33:36.113"/>
</kw>
<msg timestamp="20250227 16:33:36.113" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:35.605" endtime="20250227 16:33:36.113"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:36.114" endtime="20250227 16:33:36.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:36.114" endtime="20250227 16:33:36.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:36.114" endtime="20250227 16:33:36.115"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.118" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "multipart/adjusted_length_ozone-test-3131831838",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.124" level="INFO">${output} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:36.116" endtime="20250227 16:33:36.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.124" level="INFO">"127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:36.124" endtime="20250227 16:33:36.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.125" endtime="20250227 16:33:36.125"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.115" endtime="20250227 16:33:36.125"/>
</kw>
<msg timestamp="20250227 16:33:36.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.115" endtime="20250227 16:33:36.125"/>
</kw>
<msg timestamp="20250227 16:33:36.125" level="INFO">${etag} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:36.115" endtime="20250227 16:33:36.125"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:36.126" endtime="20250227 16:33:36.126"/>
</return>
<status status="PASS" starttime="20250227 16:33:36.113" endtime="20250227 16:33:36.126"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:36.126" endtime="20250227 16:33:36.126"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:36.126" endtime="20250227 16:33:36.126"/>
</branch>
<status status="PASS" starttime="20250227 16:33:36.113" endtime="20250227 16:33:36.126"/>
</if>
<status status="PASS" starttime="20250227 16:33:35.604" endtime="20250227 16:33:36.126"/>
</kw>
<status status="PASS" starttime="20250227 16:33:33.541" endtime="20250227 16:33:36.126"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:36.127" level="INFO">${randStr} = 0972095903</msg>
<status status="PASS" starttime="20250227 16:33:36.127" endtime="20250227 16:33:36.127"/>
</kw>
<msg timestamp="20250227 16:33:36.127" level="INFO">${random} = ozone-test-0972095903</msg>
<status status="PASS" starttime="20250227 16:33:36.127" endtime="20250227 16:33:36.127"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key multipart/adjusted_length_ozone-test-3131831838 /tmp/verifyozone-test-0972095903 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.869" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:36 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:36.129" endtime="20250227 16:33:36.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.869" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:36 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:36 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:36 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:36.869" endtime="20250227 16:33:36.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.870" endtime="20250227 16:33:36.870"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.128" endtime="20250227 16:33:36.870"/>
</kw>
<msg timestamp="20250227 16:33:36.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.128" endtime="20250227 16:33:36.870"/>
</kw>
<msg timestamp="20250227 16:33:36.870" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:36 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:36.128" endtime="20250227 16:33:36.870"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.127" endtime="20250227 16:33:36.871"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:33:36.871" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250227 16:33:36.871" endtime="20250227 16:33:36.871"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.874" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-0972095903'.</msg>
<msg timestamp="20250227 16:33:36.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:36.872" endtime="20250227 16:33:36.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.884" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:36.883" endtime="20250227 16:33:36.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.884" endtime="20250227 16:33:36.884"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.872" endtime="20250227 16:33:36.884"/>
</kw>
<msg timestamp="20250227 16:33:36.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.871" endtime="20250227 16:33:36.884"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.871" endtime="20250227 16:33:36.885"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.888" level="INFO">Running command 'md5sum /tmp/originalozone-test-0972095903 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.902" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.886" endtime="20250227 16:33:36.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.902" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.902" endtime="20250227 16:33:36.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.903" endtime="20250227 16:33:36.903"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.885" endtime="20250227 16:33:36.903"/>
</kw>
<msg timestamp="20250227 16:33:36.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.885" endtime="20250227 16:33:36.903"/>
</kw>
<msg timestamp="20250227 16:33:36.903" level="INFO">${checksumbefore} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.885" endtime="20250227 16:33:36.903"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.906" level="INFO">Running command 'md5sum /tmp/verifyozone-test-0972095903 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.920" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.904" endtime="20250227 16:33:36.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.921" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.920" endtime="20250227 16:33:36.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.921" endtime="20250227 16:33:36.921"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.904" endtime="20250227 16:33:36.921"/>
</kw>
<msg timestamp="20250227 16:33:36.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.904" endtime="20250227 16:33:36.921"/>
</kw>
<msg timestamp="20250227 16:33:36.922" level="INFO">${checksumafter} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:36.903" endtime="20250227 16:33:36.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:36.922" endtime="20250227 16:33:36.922"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.885" endtime="20250227 16:33:36.922"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.126" endtime="20250227 16:33:36.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:33.539" endtime="20250227 16:33:36.922"/>
</test>
<test id="s1-s8-t2" name="Overwrite Empty File" line="64">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:36.924" level="INFO">${randStr} = 5833426157</msg>
<status status="PASS" starttime="20250227 16:33:36.923" endtime="20250227 16:33:36.924"/>
</kw>
<msg timestamp="20250227 16:33:36.924" level="INFO">${random} = ozone-test-5833426157</msg>
<status status="PASS" starttime="20250227 16:33:36.923" endtime="20250227 16:33:36.924"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:36.924" level="INFO">${PREFIX} = ozone-test-5833426157</msg>
<status status="PASS" starttime="20250227 16:33:36.924" endtime="20250227 16:33:36.924"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.923" endtime="20250227 16:33:36.924"/>
</kw>
<kw name="Execute" library="os">
<arg>touch ${TEMP_DIR}/empty</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.927" level="INFO">Running command 'touch /tmp/empty 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:36.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:36.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:36.925" endtime="20250227 16:33:36.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:36.931" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:36.930" endtime="20250227 16:33:36.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:36.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:36.931" endtime="20250227 16:33:36.931"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.925" endtime="20250227 16:33:36.931"/>
</kw>
<msg timestamp="20250227 16:33:36.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.925" endtime="20250227 16:33:36.932"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.924" endtime="20250227 16:33:36.932"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${TEMP_DIR}/empty s3://${BUCKET}/empty_file_${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:36.935" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/empty s3://bucket-diiacmavow/empty_file_ozone-test-5833426157 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:37.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:37.419" level="INFO">${output} = upload: ../../tmp/empty to s3://bucket-diiacmavow/empty_file_ozone-test-5833426157</msg>
<status status="PASS" starttime="20250227 16:33:36.933" endtime="20250227 16:33:37.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:37.420" level="INFO">upload: ../../tmp/empty to s3://bucket-diiacmavow/empty_file_ozone-test-5833426157</msg>
<status status="PASS" starttime="20250227 16:33:37.420" endtime="20250227 16:33:37.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:37.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:37.420" endtime="20250227 16:33:37.421"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.933" endtime="20250227 16:33:37.421"/>
</kw>
<msg timestamp="20250227 16:33:37.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:36.933" endtime="20250227 16:33:37.421"/>
</kw>
<msg timestamp="20250227 16:33:37.421" level="INFO">${output} = upload: ../../tmp/empty to s3://bucket-diiacmavow/empty_file_ozone-test-5833426157</msg>
<status status="PASS" starttime="20250227 16:33:36.932" endtime="20250227 16:33:37.421"/>
</kw>
<status status="PASS" starttime="20250227 16:33:36.932" endtime="20250227 16:33:37.421"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:37.425" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key empty_file_ozone-test-5833426157  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:37.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:37.890" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "UploadId": "01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.423" endtime="20250227 16:33:37.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:37.891" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "UploadId": "01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.890" endtime="20250227 16:33:37.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:37.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:37.891" endtime="20250227 16:33:37.891"/>
</kw>
<msg timestamp="20250227 16:33:37.891" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "UploadId": "01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.423" endtime="20250227 16:33:37.891"/>
</kw>
<msg timestamp="20250227 16:33:37.892" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "UploadId": "01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.423" endtime="20250227 16:33:37.892"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:37.892" endtime="20250227 16:33:37.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:37.892" endtime="20250227 16:33:37.893"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:37.895" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "UploadId": "01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:37.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:37.900" level="INFO">${output} = 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662</msg>
<status status="PASS" starttime="20250227 16:33:37.893" endtime="20250227 16:33:37.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:37.901" level="INFO">01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662</msg>
<status status="PASS" starttime="20250227 16:33:37.900" endtime="20250227 16:33:37.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:37.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:37.901" endtime="20250227 16:33:37.901"/>
</kw>
<msg timestamp="20250227 16:33:37.901" level="INFO">${upload_id} = 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662</msg>
<status status="PASS" starttime="20250227 16:33:37.893" endtime="20250227 16:33:37.901"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:37.902" endtime="20250227 16:33:37.902"/>
</return>
<status status="PASS" starttime="20250227 16:33:37.892" endtime="20250227 16:33:37.902"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:37.902" endtime="20250227 16:33:37.902"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:37.902" endtime="20250227 16:33:37.902"/>
</branch>
<status status="PASS" starttime="20250227 16:33:37.892" endtime="20250227 16:33:37.902"/>
</if>
<msg timestamp="20250227 16:33:37.902" level="INFO">${upload_id} = 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662</msg>
<status status="PASS" starttime="20250227 16:33:37.422" endtime="20250227 16:33:37.902"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250227 16:33:37.903" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250227 16:33:37.903" endtime="20250227 16:33:37.903"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:37.904" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250227 16:33:37.903" endtime="20250227 16:33:37.904"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:37.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key empty_file_ozone-test-5833426157 --part-number 1 --body /tmp/part1 --upload-id 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:38.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:38.609" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.905" endtime="20250227 16:33:38.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:38.610" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:38.610" endtime="20250227 16:33:38.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:38.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:38.610" endtime="20250227 16:33:38.611"/>
</kw>
<msg timestamp="20250227 16:33:38.611" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.905" endtime="20250227 16:33:38.611"/>
</kw>
<msg timestamp="20250227 16:33:38.611" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:37.904" endtime="20250227 16:33:38.611"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:38.611" endtime="20250227 16:33:38.611"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:38.615" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:38.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:38.619" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.612" endtime="20250227 16:33:38.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:38.620" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.619" endtime="20250227 16:33:38.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:38.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:38.620" endtime="20250227 16:33:38.620"/>
</kw>
<status status="PASS" starttime="20250227 16:33:38.612" endtime="20250227 16:33:38.620"/>
</kw>
<msg timestamp="20250227 16:33:38.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:38.612" endtime="20250227 16:33:38.621"/>
</kw>
<msg timestamp="20250227 16:33:38.621" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.612" endtime="20250227 16:33:38.621"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:38.623" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:38.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:38.636" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.622" endtime="20250227 16:33:38.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:38.637" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.636" endtime="20250227 16:33:38.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:38.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:38.637" endtime="20250227 16:33:38.637"/>
</kw>
<status status="PASS" starttime="20250227 16:33:38.621" endtime="20250227 16:33:38.637"/>
</kw>
<msg timestamp="20250227 16:33:38.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:38.621" endtime="20250227 16:33:38.638"/>
</kw>
<msg timestamp="20250227 16:33:38.638" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:38.621" endtime="20250227 16:33:38.638"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:38.638" endtime="20250227 16:33:38.638"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:38.638" endtime="20250227 16:33:38.638"/>
</return>
<status status="PASS" starttime="20250227 16:33:38.611" endtime="20250227 16:33:38.638"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:38.638" endtime="20250227 16:33:38.638"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:38.638" endtime="20250227 16:33:38.638"/>
</branch>
<status status="PASS" starttime="20250227 16:33:38.611" endtime="20250227 16:33:38.639"/>
</if>
<msg timestamp="20250227 16:33:38.639" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:37.904" endtime="20250227 16:33:38.639"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:38.639" endtime="20250227 16:33:38.639"/>
</kw>
<status status="PASS" starttime="20250227 16:33:37.903" endtime="20250227 16:33:38.639"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:38.640" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250227 16:33:38.639" endtime="20250227 16:33:38.640"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:38.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key empty_file_ozone-test-5833426157 --part-number 2 --body /tmp/part2 --upload-id 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:39.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:39.229" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:38.641" endtime="20250227 16:33:39.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:39.230" level="INFO">{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:39.229" endtime="20250227 16:33:39.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:39.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:39.230" endtime="20250227 16:33:39.231"/>
</kw>
<msg timestamp="20250227 16:33:39.231" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:38.641" endtime="20250227 16:33:39.231"/>
</kw>
<msg timestamp="20250227 16:33:39.231" level="INFO">${result} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:38.640" endtime="20250227 16:33:39.231"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:39.231" endtime="20250227 16:33:39.231"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:39.235" level="INFO">Running command 'echo '{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:39.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:39.239" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.233" endtime="20250227 16:33:39.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:39.240" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.240" endtime="20250227 16:33:39.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:39.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:39.240" endtime="20250227 16:33:39.241"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.232" endtime="20250227 16:33:39.241"/>
</kw>
<msg timestamp="20250227 16:33:39.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:39.232" endtime="20250227 16:33:39.241"/>
</kw>
<msg timestamp="20250227 16:33:39.241" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.231" endtime="20250227 16:33:39.241"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:39.244" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:39.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:39.249" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.242" endtime="20250227 16:33:39.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:39.250" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.250" endtime="20250227 16:33:39.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:39.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:39.250" endtime="20250227 16:33:39.250"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.242" endtime="20250227 16:33:39.251"/>
</kw>
<msg timestamp="20250227 16:33:39.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:39.241" endtime="20250227 16:33:39.251"/>
</kw>
<msg timestamp="20250227 16:33:39.251" level="INFO">${md5sum} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:39.241" endtime="20250227 16:33:39.251"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:39.251" endtime="20250227 16:33:39.251"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:39.251" endtime="20250227 16:33:39.251"/>
</return>
<status status="PASS" starttime="20250227 16:33:39.231" endtime="20250227 16:33:39.251"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:39.251" endtime="20250227 16:33:39.251"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:39.251" endtime="20250227 16:33:39.251"/>
</branch>
<status status="PASS" starttime="20250227 16:33:39.231" endtime="20250227 16:33:39.252"/>
</if>
<msg timestamp="20250227 16:33:39.252" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:38.640" endtime="20250227 16:33:39.252"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:39.252" endtime="20250227 16:33:39.252"/>
</kw>
<status status="PASS" starttime="20250227 16:33:38.639" endtime="20250227 16:33:39.252"/>
</iter>
<status status="PASS" starttime="20250227 16:33:37.903" endtime="20250227 16:33:39.252"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:33:39.252" level="INFO">${parts} = {ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:39.252" endtime="20250227 16:33:39.253"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250227 16:33:39.253" endtime="20250227 16:33:39.253"/>
</return>
<msg timestamp="20250227 16:33:39.253" level="INFO">${parts} = {ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:37.902" endtime="20250227 16:33:39.253"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:39.256" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key empty_file_ozone-test-5833426157 --upload-id 01954841-aa2d-76b7-bd4b-1e8fed462904-114076812432965662 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:39.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:39.747" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:39.254" endtime="20250227 16:33:39.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:39.748" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:39.747" endtime="20250227 16:33:39.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:39.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:39.748" endtime="20250227 16:33:39.748"/>
</kw>
<msg timestamp="20250227 16:33:39.748" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:39.254" endtime="20250227 16:33:39.748"/>
</kw>
<msg timestamp="20250227 16:33:39.748" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:39.253" endtime="20250227 16:33:39.748"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:39.749" endtime="20250227 16:33:39.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:39.749" endtime="20250227 16:33:39.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:39.749" endtime="20250227 16:33:39.750"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:39.753" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "empty_file_ozone-test-5833426157",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:39.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:39.758" level="INFO">${output} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:39.751" endtime="20250227 16:33:39.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:39.758" level="INFO">"127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:39.758" endtime="20250227 16:33:39.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:39.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:39.759" endtime="20250227 16:33:39.759"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.750" endtime="20250227 16:33:39.759"/>
</kw>
<msg timestamp="20250227 16:33:39.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:39.750" endtime="20250227 16:33:39.759"/>
</kw>
<msg timestamp="20250227 16:33:39.759" level="INFO">${etag} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:39.750" endtime="20250227 16:33:39.759"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:39.759" endtime="20250227 16:33:39.759"/>
</return>
<status status="PASS" starttime="20250227 16:33:39.748" endtime="20250227 16:33:39.760"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:39.760" endtime="20250227 16:33:39.760"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:39.760" endtime="20250227 16:33:39.760"/>
</branch>
<status status="PASS" starttime="20250227 16:33:39.748" endtime="20250227 16:33:39.760"/>
</if>
<status status="PASS" starttime="20250227 16:33:39.253" endtime="20250227 16:33:39.760"/>
</kw>
<status status="PASS" starttime="20250227 16:33:37.421" endtime="20250227 16:33:39.760"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:39.761" level="INFO">${randStr} = 3956564871</msg>
<status status="PASS" starttime="20250227 16:33:39.761" endtime="20250227 16:33:39.761"/>
</kw>
<msg timestamp="20250227 16:33:39.761" level="INFO">${random} = ozone-test-3956564871</msg>
<status status="PASS" starttime="20250227 16:33:39.760" endtime="20250227 16:33:39.761"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:39.764" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key empty_file_ozone-test-5833426157 /tmp/verifyozone-test-3956564871 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:40.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.363" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:39.763" endtime="20250227 16:33:40.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.364" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:40 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:40 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.363" endtime="20250227 16:33:40.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.364" endtime="20250227 16:33:40.364"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.762" endtime="20250227 16:33:40.364"/>
</kw>
<msg timestamp="20250227 16:33:40.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:39.762" endtime="20250227 16:33:40.365"/>
</kw>
<msg timestamp="20250227 16:33:40.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:39.762" endtime="20250227 16:33:40.365"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.761" endtime="20250227 16:33:40.365"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:33:40.365" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250227 16:33:40.365" endtime="20250227 16:33:40.365"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.368" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-3956564871'.</msg>
<msg timestamp="20250227 16:33:40.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:40.366" endtime="20250227 16:33:40.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.378" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:40.378" endtime="20250227 16:33:40.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.378" endtime="20250227 16:33:40.378"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.366" endtime="20250227 16:33:40.379"/>
</kw>
<msg timestamp="20250227 16:33:40.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:40.366" endtime="20250227 16:33:40.379"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.365" endtime="20250227 16:33:40.379"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.382" level="INFO">Running command 'md5sum /tmp/originalozone-test-3956564871 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:40.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.397" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.380" endtime="20250227 16:33:40.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.398" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.397" endtime="20250227 16:33:40.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.398" endtime="20250227 16:33:40.398"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.380" endtime="20250227 16:33:40.398"/>
</kw>
<msg timestamp="20250227 16:33:40.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:40.380" endtime="20250227 16:33:40.399"/>
</kw>
<msg timestamp="20250227 16:33:40.399" level="INFO">${checksumbefore} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.379" endtime="20250227 16:33:40.399"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.402" level="INFO">Running command 'md5sum /tmp/verifyozone-test-3956564871 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:40.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.417" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.400" endtime="20250227 16:33:40.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.417" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.417" endtime="20250227 16:33:40.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.417" endtime="20250227 16:33:40.418"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.399" endtime="20250227 16:33:40.418"/>
</kw>
<msg timestamp="20250227 16:33:40.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:40.399" endtime="20250227 16:33:40.418"/>
</kw>
<msg timestamp="20250227 16:33:40.418" level="INFO">${checksumafter} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:40.399" endtime="20250227 16:33:40.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:40.418" endtime="20250227 16:33:40.419"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.379" endtime="20250227 16:33:40.419"/>
</kw>
<status status="PASS" starttime="20250227 16:33:39.760" endtime="20250227 16:33:40.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:36.923" endtime="20250227 16:33:40.419"/>
</test>
<test id="s1-s8-t3" name="Test Multipart Upload" line="70">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:40.420" level="INFO">${randStr} = 2031384631</msg>
<status status="PASS" starttime="20250227 16:33:40.420" endtime="20250227 16:33:40.420"/>
</kw>
<msg timestamp="20250227 16:33:40.421" level="INFO">${random} = ozone-test-2031384631</msg>
<status status="PASS" starttime="20250227 16:33:40.420" endtime="20250227 16:33:40.421"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:40.421" level="INFO">${PREFIX} = ozone-test-2031384631</msg>
<status status="PASS" starttime="20250227 16:33:40.421" endtime="20250227 16:33:40.421"/>
</kw>
<status status="PASS" starttime="20250227 16:33:40.420" endtime="20250227 16:33:40.421"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.425" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-2031384631/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:40.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.908" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.423" endtime="20250227 16:33:40.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.909" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.908" endtime="20250227 16:33:40.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.909" endtime="20250227 16:33:40.909"/>
</kw>
<msg timestamp="20250227 16:33:40.910" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.422" endtime="20250227 16:33:40.910"/>
</kw>
<msg timestamp="20250227 16:33:40.910" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.422" endtime="20250227 16:33:40.910"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:40.910" endtime="20250227 16:33:40.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:40.911" endtime="20250227 16:33:40.911"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.913" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:40.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:40.919" level="INFO">${output} = 01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953</msg>
<status status="PASS" starttime="20250227 16:33:40.911" endtime="20250227 16:33:40.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:40.919" level="INFO">01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953</msg>
<status status="PASS" starttime="20250227 16:33:40.919" endtime="20250227 16:33:40.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:40.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:40.919" endtime="20250227 16:33:40.920"/>
</kw>
<msg timestamp="20250227 16:33:40.920" level="INFO">${upload_id} = 01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953</msg>
<status status="PASS" starttime="20250227 16:33:40.911" endtime="20250227 16:33:40.920"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:40.920" endtime="20250227 16:33:40.920"/>
</return>
<status status="PASS" starttime="20250227 16:33:40.910" endtime="20250227 16:33:40.920"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:40.920" endtime="20250227 16:33:40.920"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:40.920" endtime="20250227 16:33:40.920"/>
</branch>
<status status="PASS" starttime="20250227 16:33:40.910" endtime="20250227 16:33:40.920"/>
</if>
<msg timestamp="20250227 16:33:40.921" level="INFO">${uploadID} = 01954841-b5ed-7d68-9a86-c79fd4f4b3ad-114076812630097953</msg>
<status status="PASS" starttime="20250227 16:33:40.421" endtime="20250227 16:33:40.921"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${nextUploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:40.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-2031384631/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:41.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:41.383" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.922" endtime="20250227 16:33:41.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:41.384" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130"
}</msg>
<status status="PASS" starttime="20250227 16:33:41.384" endtime="20250227 16:33:41.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:41.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:41.384" endtime="20250227 16:33:41.385"/>
</kw>
<msg timestamp="20250227 16:33:41.385" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.922" endtime="20250227 16:33:41.385"/>
</kw>
<msg timestamp="20250227 16:33:41.385" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130"
}</msg>
<status status="PASS" starttime="20250227 16:33:40.922" endtime="20250227 16:33:41.385"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:41.386" endtime="20250227 16:33:41.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:41.386" endtime="20250227 16:33:41.386"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:41.389" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-2031384631/multipartKey",
    "UploadId": "01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:41.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:41.394" level="INFO">${output} = 01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130</msg>
<status status="PASS" starttime="20250227 16:33:41.387" endtime="20250227 16:33:41.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:41.395" level="INFO">01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130</msg>
<status status="PASS" starttime="20250227 16:33:41.395" endtime="20250227 16:33:41.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:41.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:41.395" endtime="20250227 16:33:41.395"/>
</kw>
<msg timestamp="20250227 16:33:41.396" level="INFO">${upload_id} = 01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130</msg>
<status status="PASS" starttime="20250227 16:33:41.386" endtime="20250227 16:33:41.396"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:41.396" endtime="20250227 16:33:41.396"/>
</return>
<status status="PASS" starttime="20250227 16:33:41.385" endtime="20250227 16:33:41.396"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:41.396" endtime="20250227 16:33:41.396"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:41.396" endtime="20250227 16:33:41.396"/>
</branch>
<status status="PASS" starttime="20250227 16:33:41.385" endtime="20250227 16:33:41.396"/>
</if>
<msg timestamp="20250227 16:33:41.396" level="INFO">${nextUploadID} = 01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130</msg>
<status status="PASS" starttime="20250227 16:33:40.921" endtime="20250227 16:33:41.396"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250227 16:33:41.396" endtime="20250227 16:33:41.397"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:41.400" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-2031384631/multipartKey --part-number 1 --body /tmp/part1 --upload-id 01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.141" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:41.398" endtime="20250227 16:33:42.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.142" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.142" endtime="20250227 16:33:42.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.143" endtime="20250227 16:33:42.143"/>
</kw>
<msg timestamp="20250227 16:33:42.143" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:41.398" endtime="20250227 16:33:42.143"/>
</kw>
<msg timestamp="20250227 16:33:42.143" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:41.397" endtime="20250227 16:33:42.143"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:42.144" endtime="20250227 16:33:42.144"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.148" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.153" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.145" endtime="20250227 16:33:42.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.154" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.154" endtime="20250227 16:33:42.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.154" endtime="20250227 16:33:42.154"/>
</kw>
<status status="PASS" starttime="20250227 16:33:42.145" endtime="20250227 16:33:42.155"/>
</kw>
<msg timestamp="20250227 16:33:42.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:42.145" endtime="20250227 16:33:42.155"/>
</kw>
<msg timestamp="20250227 16:33:42.155" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.144" endtime="20250227 16:33:42.155"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.158" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.171" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.156" endtime="20250227 16:33:42.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.172" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.171" endtime="20250227 16:33:42.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.172" endtime="20250227 16:33:42.172"/>
</kw>
<status status="PASS" starttime="20250227 16:33:42.155" endtime="20250227 16:33:42.172"/>
</kw>
<msg timestamp="20250227 16:33:42.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:42.155" endtime="20250227 16:33:42.172"/>
</kw>
<msg timestamp="20250227 16:33:42.173" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.155" endtime="20250227 16:33:42.173"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:42.173" endtime="20250227 16:33:42.173"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:42.173" endtime="20250227 16:33:42.173"/>
</return>
<status status="PASS" starttime="20250227 16:33:42.144" endtime="20250227 16:33:42.173"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:42.173" endtime="20250227 16:33:42.173"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:42.173" endtime="20250227 16:33:42.173"/>
</branch>
<status status="PASS" starttime="20250227 16:33:42.144" endtime="20250227 16:33:42.173"/>
</if>
<status status="PASS" starttime="20250227 16:33:41.397" endtime="20250227 16:33:42.174"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-2031384631/multipartKey --part-number 1 --body /tmp/part1 --upload-id 01954841-b7d8-7e90-a3a9-4242f2900e12-114076812662276130 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.890" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.175" endtime="20250227 16:33:42.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.891" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.890" endtime="20250227 16:33:42.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.891" endtime="20250227 16:33:42.891"/>
</kw>
<msg timestamp="20250227 16:33:42.892" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.175" endtime="20250227 16:33:42.892"/>
</kw>
<msg timestamp="20250227 16:33:42.892" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.174" endtime="20250227 16:33:42.892"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:42.892" endtime="20250227 16:33:42.892"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.896" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.901" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.893" endtime="20250227 16:33:42.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.902" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.901" endtime="20250227 16:33:42.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.902" endtime="20250227 16:33:42.902"/>
</kw>
<status status="PASS" starttime="20250227 16:33:42.893" endtime="20250227 16:33:42.902"/>
</kw>
<msg timestamp="20250227 16:33:42.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:42.893" endtime="20250227 16:33:42.902"/>
</kw>
<msg timestamp="20250227 16:33:42.902" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.892" endtime="20250227 16:33:42.902"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.905" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:42.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:42.919" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.903" endtime="20250227 16:33:42.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:42.919" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.919" endtime="20250227 16:33:42.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:42.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:42.920" endtime="20250227 16:33:42.920"/>
</kw>
<status status="PASS" starttime="20250227 16:33:42.903" endtime="20250227 16:33:42.920"/>
</kw>
<msg timestamp="20250227 16:33:42.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:42.903" endtime="20250227 16:33:42.920"/>
</kw>
<msg timestamp="20250227 16:33:42.920" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:42.903" endtime="20250227 16:33:42.920"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:42.921" endtime="20250227 16:33:42.921"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:42.921" endtime="20250227 16:33:42.921"/>
</return>
<status status="PASS" starttime="20250227 16:33:42.892" endtime="20250227 16:33:42.921"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:42.921" endtime="20250227 16:33:42.921"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:42.921" endtime="20250227 16:33:42.921"/>
</branch>
<status status="PASS" starttime="20250227 16:33:42.892" endtime="20250227 16:33:42.921"/>
</if>
<status status="PASS" starttime="20250227 16:33:42.174" endtime="20250227 16:33:42.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:40.419" endtime="20250227 16:33:42.921"/>
</test>
<test id="s1-s8-t4" name="Test Multipart Upload Complete" line="84">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:42.923" level="INFO">${randStr} = 5098979036</msg>
<status status="PASS" starttime="20250227 16:33:42.923" endtime="20250227 16:33:42.923"/>
</kw>
<msg timestamp="20250227 16:33:42.923" level="INFO">${random} = ozone-test-5098979036</msg>
<status status="PASS" starttime="20250227 16:33:42.923" endtime="20250227 16:33:42.923"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:42.924" level="INFO">${PREFIX} = ozone-test-5098979036</msg>
<status status="PASS" starttime="20250227 16:33:42.923" endtime="20250227 16:33:42.924"/>
</kw>
<status status="PASS" starttime="20250227 16:33:42.922" endtime="20250227 16:33:42.924"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>0</arg>
<arg>--metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:42.927" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:43.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:43.402" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "UploadId": "01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.925" endtime="20250227 16:33:43.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:43.403" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "UploadId": "01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173"
}</msg>
<status status="PASS" starttime="20250227 16:33:43.402" endtime="20250227 16:33:43.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:43.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:43.403" endtime="20250227 16:33:43.404"/>
</kw>
<msg timestamp="20250227 16:33:43.404" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "UploadId": "01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.925" endtime="20250227 16:33:43.404"/>
</kw>
<msg timestamp="20250227 16:33:43.404" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "UploadId": "01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173"
}</msg>
<status status="PASS" starttime="20250227 16:33:42.924" endtime="20250227 16:33:43.404"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:43.405" endtime="20250227 16:33:43.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:43.405" endtime="20250227 16:33:43.405"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:43.408" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "UploadId": "01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:43.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:43.413" level="INFO">${output} = 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173</msg>
<status status="PASS" starttime="20250227 16:33:43.406" endtime="20250227 16:33:43.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:43.413" level="INFO">01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173</msg>
<status status="PASS" starttime="20250227 16:33:43.413" endtime="20250227 16:33:43.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:43.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:43.413" endtime="20250227 16:33:43.414"/>
</kw>
<msg timestamp="20250227 16:33:43.414" level="INFO">${upload_id} = 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173</msg>
<status status="PASS" starttime="20250227 16:33:43.405" endtime="20250227 16:33:43.414"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:43.414" endtime="20250227 16:33:43.414"/>
</return>
<status status="PASS" starttime="20250227 16:33:43.404" endtime="20250227 16:33:43.414"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:43.414" endtime="20250227 16:33:43.414"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:43.414" endtime="20250227 16:33:43.414"/>
</branch>
<status status="PASS" starttime="20250227 16:33:43.404" endtime="20250227 16:33:43.414"/>
</if>
<msg timestamp="20250227 16:33:43.414" level="INFO">${uploadID} = 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173</msg>
<status status="PASS" starttime="20250227 16:33:42.924" endtime="20250227 16:33:43.415"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:43.418" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.186" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:43.416" endtime="20250227 16:33:44.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.190" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:44.188" endtime="20250227 16:33:44.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.191" endtime="20250227 16:33:44.191"/>
</kw>
<msg timestamp="20250227 16:33:44.191" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:43.416" endtime="20250227 16:33:44.193"/>
</kw>
<msg timestamp="20250227 16:33:44.193" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:43.415" endtime="20250227 16:33:44.195"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:44.195" endtime="20250227 16:33:44.195"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.204" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.211" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.199" endtime="20250227 16:33:44.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.212" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.211" endtime="20250227 16:33:44.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.212" endtime="20250227 16:33:44.213"/>
</kw>
<status status="PASS" starttime="20250227 16:33:44.199" endtime="20250227 16:33:44.213"/>
</kw>
<msg timestamp="20250227 16:33:44.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:44.198" endtime="20250227 16:33:44.213"/>
</kw>
<msg timestamp="20250227 16:33:44.213" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.195" endtime="20250227 16:33:44.213"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.220" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.234" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.215" endtime="20250227 16:33:44.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.235" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.235" endtime="20250227 16:33:44.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.236" endtime="20250227 16:33:44.236"/>
</kw>
<status status="PASS" starttime="20250227 16:33:44.214" endtime="20250227 16:33:44.237"/>
</kw>
<msg timestamp="20250227 16:33:44.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:44.214" endtime="20250227 16:33:44.237"/>
</kw>
<msg timestamp="20250227 16:33:44.237" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:44.213" endtime="20250227 16:33:44.237"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:44.237" endtime="20250227 16:33:44.238"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:44.238" endtime="20250227 16:33:44.238"/>
</return>
<status status="PASS" starttime="20250227 16:33:44.195" endtime="20250227 16:33:44.238"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:44.238" endtime="20250227 16:33:44.238"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:44.238" endtime="20250227 16:33:44.238"/>
</branch>
<status status="PASS" starttime="20250227 16:33:44.195" endtime="20250227 16:33:44.238"/>
</if>
<msg timestamp="20250227 16:33:44.238" level="INFO">${eTag1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:43.415" endtime="20250227 16:33:44.238"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.244" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.866" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:44.240" endtime="20250227 16:33:44.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.867" level="INFO">{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:44.866" endtime="20250227 16:33:44.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.867" endtime="20250227 16:33:44.867"/>
</kw>
<msg timestamp="20250227 16:33:44.868" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:44.240" endtime="20250227 16:33:44.868"/>
</kw>
<msg timestamp="20250227 16:33:44.868" level="INFO">${result} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:44.239" endtime="20250227 16:33:44.868"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:44.868" endtime="20250227 16:33:44.869"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.875" level="INFO">Running command 'echo '{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.880" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.870" endtime="20250227 16:33:44.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.881" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.880" endtime="20250227 16:33:44.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.881" endtime="20250227 16:33:44.881"/>
</kw>
<status status="PASS" starttime="20250227 16:33:44.869" endtime="20250227 16:33:44.882"/>
</kw>
<msg timestamp="20250227 16:33:44.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:44.869" endtime="20250227 16:33:44.882"/>
</kw>
<msg timestamp="20250227 16:33:44.882" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.869" endtime="20250227 16:33:44.882"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.887" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:44.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:44.896" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.883" endtime="20250227 16:33:44.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:44.897" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.896" endtime="20250227 16:33:44.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:44.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:44.897" endtime="20250227 16:33:44.897"/>
</kw>
<status status="PASS" starttime="20250227 16:33:44.883" endtime="20250227 16:33:44.897"/>
</kw>
<msg timestamp="20250227 16:33:44.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:44.883" endtime="20250227 16:33:44.898"/>
</kw>
<msg timestamp="20250227 16:33:44.898" level="INFO">${md5sum} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.882" endtime="20250227 16:33:44.898"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:44.898" endtime="20250227 16:33:44.898"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:44.898" endtime="20250227 16:33:44.898"/>
</return>
<status status="PASS" starttime="20250227 16:33:44.868" endtime="20250227 16:33:44.899"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:44.899" endtime="20250227 16:33:44.899"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:44.899" endtime="20250227 16:33:44.899"/>
</branch>
<status status="PASS" starttime="20250227 16:33:44.868" endtime="20250227 16:33:44.899"/>
</if>
<msg timestamp="20250227 16:33:44.899" level="INFO">${eTag2} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:44.239" endtime="20250227 16:33:44.899"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:44.904" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173 --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:45.381" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:45.381" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250227 16:33:44.900" endtime="20250227 16:33:45.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:45.382" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250227 16:33:45.382" endtime="20250227 16:33:45.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:45.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:45.382" endtime="20250227 16:33:45.383"/>
</kw>
<msg timestamp="20250227 16:33:45.383" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250227 16:33:44.900" endtime="20250227 16:33:45.383"/>
</kw>
<msg timestamp="20250227 16:33:45.384" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250227 16:33:44.899" endtime="20250227 16:33:45.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:45.384" endtime="20250227 16:33:45.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:45.384" endtime="20250227 16:33:45.384"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${resultETag}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:45.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --upload-id 01954841-bfb7-7252-affc-4b57c3e38674-114076812794331173 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:45.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:45.867" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:45.386" endtime="20250227 16:33:45.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:45.868" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:45.867" endtime="20250227 16:33:45.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:45.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:45.868" endtime="20250227 16:33:45.868"/>
</kw>
<msg timestamp="20250227 16:33:45.868" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:45.386" endtime="20250227 16:33:45.868"/>
</kw>
<msg timestamp="20250227 16:33:45.869" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}</msg>
<status status="PASS" starttime="20250227 16:33:45.385" endtime="20250227 16:33:45.869"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:45.869" endtime="20250227 16:33:45.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:45.869" endtime="20250227 16:33:45.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:45.870" endtime="20250227 16:33:45.870"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:45.873" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-5098979036/multipartKey1",
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:45.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:45.878" level="INFO">${output} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:45.871" endtime="20250227 16:33:45.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:45.879" level="INFO">"127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:45.878" endtime="20250227 16:33:45.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:45.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:45.879" endtime="20250227 16:33:45.879"/>
</kw>
<status status="PASS" starttime="20250227 16:33:45.871" endtime="20250227 16:33:45.879"/>
</kw>
<msg timestamp="20250227 16:33:45.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:45.870" endtime="20250227 16:33:45.880"/>
</kw>
<msg timestamp="20250227 16:33:45.880" level="INFO">${etag} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:45.870" endtime="20250227 16:33:45.880"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:45.880" endtime="20250227 16:33:45.880"/>
</return>
<status status="PASS" starttime="20250227 16:33:45.869" endtime="20250227 16:33:45.880"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:45.880" endtime="20250227 16:33:45.880"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:45.880" endtime="20250227 16:33:45.880"/>
</branch>
<status status="PASS" starttime="20250227 16:33:45.869" endtime="20250227 16:33:45.880"/>
</if>
<msg timestamp="20250227 16:33:45.880" level="INFO">${resultETag} = "127c7bd80a1e10913494d63a5aa9c404-2"</msg>
<status status="PASS" starttime="20250227 16:33:45.384" endtime="20250227 16:33:45.880"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:45.883" level="INFO">Running command 'echo -n 2bd464090908c176e61c4908210ccfbdf01def72c40ddd648b7acfbb40a00c63 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:45.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:45.888" level="INFO">${output} = 127c7bd80a1e10913494d63a5aa9c404</msg>
<status status="PASS" starttime="20250227 16:33:45.881" endtime="20250227 16:33:45.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:45.888" level="INFO">127c7bd80a1e10913494d63a5aa9c404</msg>
<status status="PASS" starttime="20250227 16:33:45.888" endtime="20250227 16:33:45.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:45.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:45.889" endtime="20250227 16:33:45.889"/>
</kw>
<status status="PASS" starttime="20250227 16:33:45.881" endtime="20250227 16:33:45.889"/>
</kw>
<msg timestamp="20250227 16:33:45.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:45.881" endtime="20250227 16:33:45.889"/>
</kw>
<msg timestamp="20250227 16:33:45.889" level="INFO">${expectedResultETag} = 127c7bd80a1e10913494d63a5aa9c404</msg>
<status status="PASS" starttime="20250227 16:33:45.880" endtime="20250227 16:33:45.889"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:45.889" endtime="20250227 16:33:45.890"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:45.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:46.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:46.346" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250227 16:33:45.891" endtime="20250227 16:33:46.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:46.348" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:46 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:46 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:46.347" endtime="20250227 16:33:46.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:46.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:46.348" endtime="20250227 16:33:46.348"/>
</kw>
<status status="PASS" starttime="20250227 16:33:45.891" endtime="20250227 16:33:46.349"/>
</kw>
<msg timestamp="20250227 16:33:46.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:45.891" endtime="20250227 16:33:46.349"/>
</kw>
<msg timestamp="20250227 16:33:46.349" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250227 16:33:45.890" endtime="20250227 16:33:46.349"/>
</kw>
<msg timestamp="20250227 16:33:46.349" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250227 16:33:45.890" endtime="20250227 16:33:46.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:46.349" endtime="20250227 16:33:46.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:46.350" endtime="20250227 16:33:46.350"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:46.353" level="INFO">Running command 'echo '{
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:46 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:46 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:46.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:46.358" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:33:46.351" endtime="20250227 16:33:46.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:46.359" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:33:46.358" endtime="20250227 16:33:46.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:46.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:46.359" endtime="20250227 16:33:46.359"/>
</kw>
<msg timestamp="20250227 16:33:46.359" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250227 16:33:46.350" endtime="20250227 16:33:46.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:46.360" endtime="20250227 16:33:46.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:46.363" level="INFO">Running command 'ozone sh key info /s3v/bucket-diiacmavow/ozone-test-5098979036/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:49.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:49.523" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-5098979036/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-27T16:33:4...</msg>
<status status="PASS" starttime="20250227 16:33:46.361" endtime="20250227 16:33:49.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:49.526" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-5098979036/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-27T16:33:45.809Z",
  "modificationTime" : "2025-02-27T16:33:45.809Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "127c7bd80a1e10913494d63a5aa9c404-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600030,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 1,
    "localID" : 115816896921600031,
    "length" : 1047552,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 412,
  "file" : true
}</msg>
<status status="PASS" starttime="20250227 16:33:49.525" endtime="20250227 16:33:49.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:49.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:49.526" endtime="20250227 16:33:49.526"/>
</kw>
<status status="PASS" starttime="20250227 16:33:46.361" endtime="20250227 16:33:49.527"/>
</kw>
<msg timestamp="20250227 16:33:49.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:46.360" endtime="20250227 16:33:49.527"/>
</kw>
<msg timestamp="20250227 16:33:49.527" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-5098979036/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-27T16:33:4...</msg>
<status status="PASS" starttime="20250227 16:33:46.360" endtime="20250227 16:33:49.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:49.527" endtime="20250227 16:33:49.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:49.528" endtime="20250227 16:33:49.528"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:49.528" endtime="20250227 16:33:49.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:49.529" endtime="20250227 16:33:49.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:49.529" endtime="20250227 16:33:49.530"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:49.536" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 /tmp/ozone-test-5098979036-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.233" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:49.532" endtime="20250227 16:33:50.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.234" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:50.233" endtime="20250227 16:33:50.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.234" endtime="20250227 16:33:50.235"/>
</kw>
<status status="PASS" starttime="20250227 16:33:49.531" endtime="20250227 16:33:50.235"/>
</kw>
<msg timestamp="20250227 16:33:50.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:49.531" endtime="20250227 16:33:50.235"/>
</kw>
<msg timestamp="20250227 16:33:50.235" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:49.530" endtime="20250227 16:33:50.235"/>
</kw>
<msg timestamp="20250227 16:33:50.235" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:49.530" endtime="20250227 16:33:50.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:50.235" endtime="20250227 16:33:50.236"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.239" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.245" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.236" endtime="20250227 16:33:50.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.246" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:33:50.245" endtime="20250227 16:33:50.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.246" endtime="20250227 16:33:50.246"/>
</kw>
<msg timestamp="20250227 16:33:50.246" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.236" endtime="20250227 16:33:50.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.246" endtime="20250227 16:33:50.247"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.249" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.255" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.247" endtime="20250227 16:33:50.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.255" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:33:50.255" endtime="20250227 16:33:50.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.256" endtime="20250227 16:33:50.256"/>
</kw>
<msg timestamp="20250227 16:33:50.256" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.247" endtime="20250227 16:33:50.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.256" endtime="20250227 16:33:50.257"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.260" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-5098979036-multipartKey1'.</msg>
<msg timestamp="20250227 16:33:50.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:50.258" endtime="20250227 16:33:50.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.270" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:50.270" endtime="20250227 16:33:50.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.270" endtime="20250227 16:33:50.271"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.257" endtime="20250227 16:33:50.271"/>
</kw>
<msg timestamp="20250227 16:33:50.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.257" endtime="20250227 16:33:50.271"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.257" endtime="20250227 16:33:50.271"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.275" level="INFO">Running command 'md5sum /tmp/ozone-test-5098979036-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.289" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.273" endtime="20250227 16:33:50.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.290" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.290" endtime="20250227 16:33:50.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.290" endtime="20250227 16:33:50.291"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.272" endtime="20250227 16:33:50.291"/>
</kw>
<msg timestamp="20250227 16:33:50.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.272" endtime="20250227 16:33:50.291"/>
</kw>
<msg timestamp="20250227 16:33:50.291" level="INFO">${checksumbefore} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.272" endtime="20250227 16:33:50.291"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.294" level="INFO">Running command 'md5sum /tmp/ozone-test-5098979036-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.308" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.292" endtime="20250227 16:33:50.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.309" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.309" endtime="20250227 16:33:50.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.309" endtime="20250227 16:33:50.310"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.292" endtime="20250227 16:33:50.310"/>
</kw>
<msg timestamp="20250227 16:33:50.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.292" endtime="20250227 16:33:50.310"/>
</kw>
<msg timestamp="20250227 16:33:50.310" level="INFO">${checksumafter} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:50.291" endtime="20250227 16:33:50.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.310" endtime="20250227 16:33:50.310"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.271" endtime="20250227 16:33:50.311"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.314" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --part-number 1 /tmp/ozone-test-5098979036-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.863" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.312" endtime="20250227 16:33:50.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.864" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:50.864" endtime="20250227 16:33:50.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.865" endtime="20250227 16:33:50.865"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.312" endtime="20250227 16:33:50.865"/>
</kw>
<msg timestamp="20250227 16:33:50.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.312" endtime="20250227 16:33:50.865"/>
</kw>
<msg timestamp="20250227 16:33:50.865" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.311" endtime="20250227 16:33:50.865"/>
</kw>
<msg timestamp="20250227 16:33:50.866" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.311" endtime="20250227 16:33:50.866"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.869" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.882" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.867" endtime="20250227 16:33:50.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.883" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.882" endtime="20250227 16:33:50.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.883" endtime="20250227 16:33:50.883"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.867" endtime="20250227 16:33:50.883"/>
</kw>
<msg timestamp="20250227 16:33:50.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.866" endtime="20250227 16:33:50.884"/>
</kw>
<msg timestamp="20250227 16:33:50.884" level="INFO">${checksumbefore} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.866" endtime="20250227 16:33:50.884"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.887" level="INFO">Running command 'md5sum /tmp/ozone-test-5098979036-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.899" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.885" endtime="20250227 16:33:50.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.900" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.900" endtime="20250227 16:33:50.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.900" endtime="20250227 16:33:50.901"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.884" endtime="20250227 16:33:50.901"/>
</kw>
<msg timestamp="20250227 16:33:50.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.884" endtime="20250227 16:33:50.901"/>
</kw>
<msg timestamp="20250227 16:33:50.901" level="INFO">${checksumafter} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:50.884" endtime="20250227 16:33:50.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.901" endtime="20250227 16:33:50.902"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.866" endtime="20250227 16:33:50.902"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.904" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.909" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.902" endtime="20250227 16:33:50.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.910" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:33:50.910" endtime="20250227 16:33:50.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.910" endtime="20250227 16:33:50.911"/>
</kw>
<msg timestamp="20250227 16:33:50.911" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.902" endtime="20250227 16:33:50.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.911" endtime="20250227 16:33:50.911"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.914" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:50 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:50.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:50.919" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.912" endtime="20250227 16:33:50.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:50.919" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:33:50.919" endtime="20250227 16:33:50.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:50.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:50.920" endtime="20250227 16:33:50.920"/>
</kw>
<msg timestamp="20250227 16:33:50.920" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250227 16:33:50.911" endtime="20250227 16:33:50.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:50.920" endtime="20250227 16:33:50.920"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:50.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-5098979036/multipartKey1 --part-number 2 /tmp/ozone-test-5098979036-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:51.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:51.414" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 1047552,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.922" endtime="20250227 16:33:51.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:51.415" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 1047552,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:51 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:51 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:51.415" endtime="20250227 16:33:51.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:51.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:51.416" endtime="20250227 16:33:51.416"/>
</kw>
<status status="PASS" starttime="20250227 16:33:50.922" endtime="20250227 16:33:51.416"/>
</kw>
<msg timestamp="20250227 16:33:51.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:50.922" endtime="20250227 16:33:51.416"/>
</kw>
<msg timestamp="20250227 16:33:51.417" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 1047552,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.921" endtime="20250227 16:33:51.417"/>
</kw>
<msg timestamp="20250227 16:33:51.417" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:45 GMT",
    "ContentLength": 1047552,
    "ETag": "\"127c7bd80a1e10913494d63a5aa9c404-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:50.921" endtime="20250227 16:33:51.417"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:51.421" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:51.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:51.427" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.419" endtime="20250227 16:33:51.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:51.428" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.428" endtime="20250227 16:33:51.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:51.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:51.428" endtime="20250227 16:33:51.429"/>
</kw>
<status status="PASS" starttime="20250227 16:33:51.418" endtime="20250227 16:33:51.429"/>
</kw>
<msg timestamp="20250227 16:33:51.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:51.418" endtime="20250227 16:33:51.429"/>
</kw>
<msg timestamp="20250227 16:33:51.429" level="INFO">${checksumbefore} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.418" endtime="20250227 16:33:51.429"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:51.432" level="INFO">Running command 'md5sum /tmp/ozone-test-5098979036-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:51.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:51.438" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.430" endtime="20250227 16:33:51.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:51.439" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.438" endtime="20250227 16:33:51.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:51.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:51.439" endtime="20250227 16:33:51.439"/>
</kw>
<status status="PASS" starttime="20250227 16:33:51.430" endtime="20250227 16:33:51.439"/>
</kw>
<msg timestamp="20250227 16:33:51.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:51.429" endtime="20250227 16:33:51.440"/>
</kw>
<msg timestamp="20250227 16:33:51.440" level="INFO">${checksumafter} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:51.429" endtime="20250227 16:33:51.440"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:33:51.440" endtime="20250227 16:33:51.440"/>
</kw>
<status status="PASS" starttime="20250227 16:33:51.417" endtime="20250227 16:33:51.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:42.922" endtime="20250227 16:33:51.440"/>
</test>
<test id="s1-s8-t5" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="140">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:51.442" level="INFO">${randStr} = 0255737970</msg>
<status status="PASS" starttime="20250227 16:33:51.442" endtime="20250227 16:33:51.442"/>
</kw>
<msg timestamp="20250227 16:33:51.442" level="INFO">${random} = ozone-test-0255737970</msg>
<status status="PASS" starttime="20250227 16:33:51.442" endtime="20250227 16:33:51.442"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:51.443" level="INFO">${PREFIX} = ozone-test-0255737970</msg>
<status status="PASS" starttime="20250227 16:33:51.443" endtime="20250227 16:33:51.443"/>
</kw>
<status status="PASS" starttime="20250227 16:33:51.441" endtime="20250227 16:33:51.443"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:51.445" level="INFO">${custom_metadata_value} = tIcICZLqumQx8oM9rRDJHLHQwQeSTJcsifPDiRU4mZRAch3zI0jPnFmBYPJvrORi88HID8sogjnTJwvWM5OEfdztR1B7pbbhTdjXfOILlY1e00j2gwgXejKD1uB6yHzbM0NCrxtON9FT2mbRFcg0fvPyWeGbybthEiHTNJdbXXSAWueJvlJpIhSx8ksMRVzwEottHuZr...</msg>
<status status="PASS" starttime="20250227 16:33:51.443" endtime="20250227 16:33:51.445"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/mpuWithLargeMetadata</arg>
<arg>255</arg>
<arg>--metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:51.449" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-0255737970/mpuWithLargeMetadata --metadata="custom-key1=tIcICZLqumQx8oM9rRDJHLHQwQeSTJcsifPDiRU4mZRAch3zI0jPnFmBYPJvrORi88HID8sogjnTJwvWM5OEfdztR1B7pbbhTdjXfOILlY1e00j2gwgXejKD1uB6yHzbM0NCrxtON9FT2mbRFcg0fvPyWeGbybthEiHTNJdbXXSAWueJvlJpIhSx8ksMRVzwEottHuZrtWntpOua5XsO9dKdE4mXCQbR0YlrPMZtgc0H1setS4rD3b6WQOQIMC53OBhyNxJPGTqoHRJIhPQreH5RGw7KPhzMdwWTBreP9XMlByT8EyvivizQMCdrfrjP2YlTUyr4MTiVuDjH8BvCUJwNzhChwRSBSjyuYhB1dWtIvHPBIhOazkV9tL50HIpWZC55QfbUC6jcPiwqrz1iCgsOxOLgAOdS2h5fR8ouqrVFDaB01zHPfHHngwLNGjbM30AqprKaTBwX0Mse7zYgmXoqyVd2aHGcHkgLBehsxN5f2HkaSOhs4iVpn7jlVcw7rIrDCo9vCfIKt5XeBdaIAwjl8Tko7qWXXaeWoCMJlP5TJd7euG1JbDxNSuMiRWZQtJeFvK45RCam4nhjghVNWkfPZ6km3QtPBmATgKq2lu9C0MlGrOOQyNmy2JnV1fil1pBrCZVWJWa90xeJeIKEKgc4hnYg8vPG8YfmBCWrK2z2B7a53upL20KSuK0a6KOmFFPiNDtXHnNhvBw7b2P3RKpgnUfOhnJsRXosICGAxmTJsEligEuA8x8QfLNlsFWhgIaKTspxpbgTuQOC487UcjsyWfN92V77lVGXdShMWIg2MUQQUOdZqtfijxZsBV3Eg3iKFUFZOd7vqsMhY0656KREWVej4U8DOjF8SjBcGgXj97ZY6LZhnMW7cHXZnOvGBlMFiJWUqtltzHQTSiXzLPktRVhmBey4okPacyj4IOIBGUh1fH2swDBA00WJ4sNgzqcPGjXInLRDgf6S3qhv25u614LMg21HUyARXfhA248ZNMupifLxp1dDCOEchgUDOnsNkdj7YZt7VdPT4IQgMMdJU4MQRsWeenI5Up6hSBqsqLRkC9wXdd0RILWWhiitfPv1X6lypOcglEXhWogenGMYCm3FsuscPZMl00SCLlLqaOFXjLjLXFFwbxSuU6EyjWN0pe9LZuVJFArO2cfijvEhV98kfvuuDa7uf1vnGsZWf4CCvdMySRjOYhB9Z4mo26SwOTfi3fWtIu3GiJSBBtFe0XBp1rqbWksgPD7iK2efLYf9Z5qPVQE14T5lSOjFPXDE0jv45QNKLxlbyoOehrn3oI9B8AtO3GEE4XmhV4oQl4WY4byxVTDOnJGWO33yjVDRY23WE9oMfhSuh2jdAwf9TSLELUAcqTf81ZsP5NILvwyoZsijJsfw0yQsTjOExvKrbaIHFdZPymbNvJ7FHFPs5gAAGqGu36x0MZos2Loulo1rAcYTCI3A3Rw6YrmVUJYlOiHQoWX7cdmWMi1kJCQrPV4tEWDX8E8Qdgkq55VaZ6lrOukV11ZZ2EaDjLd6Bemc24dbhKvHipldCqySEKkZ7HGXLRaZgHpRwCIzPtwZjNPfLdXTfTDlfV3ZKu4IBUT0U0LIzd7s09i5m6g5mgLLwUy6kCOHFar5pAqNuXgaI7e5uuyFQOkWQsldaGVVtOmW7oqJrweChaMCXmxVdzBh1BxazN9YF11RGJ3EZ84NYm1GjQtkH0U7WeZltSwYUsMY9N39ThTEZn5TfwdAuB928HlAxNCW9GNK4u87I8ucNRt8dTQ4pfNPen4HVY0tt46MTY713zZ4a6pkXOsIgf87FSSsp3J3zthU0kGhYOm6PjZdMEa2fye8JWOvyuidzATjmuWC6ikB8Yh1uOltFJaLqwPfmUqjC1tYrFzle2TpCcLvFSZV7xd0fZeKlTFCpZ7kUzki5GIP5IhLUHc0mux5U4wwrh91qza9jik1VJ1zMePV3xhoPr2HCS4N8XuDk2Luc3MbVEp3PjgExpyO3QVvCj0qr9VOMxsr4EjwJawf4UIRxFSU9m05uwiIOp0CVpHZv84DlAOBPXL6cua4FLCRYGpwSbsGSRKSKzpCDURGxHSFk9KpCm3fgga2AEo4fq3jmYEM1afSUxNiJm6cBcgysPEtmND1RE9qW4vS2jArdkCEksghd4HKbHuVYx90xZvRQlFDste1xgKh608NDU3Cx04IGK9RAJsn31rp4e6KNSYOnCpN67KlizwkCmmzVoZWGy4iqAtjgAXJBor5zf2BIWxhxHigCVPkl1ENUulW2eOQea8RGx1Nc4tB2SHllNlqqAWL8Oe1ylOmZcgIscGx19muyjT1igUkCC6fHZ4DEVZruYwkamSnNzuX2AI3LxxBOnLhP9PG1BPA16VLBP6ghDFYJhNwXu4Wfx5uMvXtR611GjqLi2MhjFyCKsG2Id8mxz3p8zzEUoA24aQZYnponXdixGDozlr2xm4sjc3a6MLCd1thKLJnUEynvu4zl5Gi9TKeUn5bWZ7lveM1d138M0Fs3ulNwwSknWNFWEDXS8VglC0XGSyF5STYpity8ccCaWl20kcK4FpC15PdsbLiBoKqu922gFs7suFMuCd4f2Khw1pEP1dljQyis7OSvxKIHJ8UNCDcwLhJBADgs18EZBoiR1Jp8x9SYtTB90yKKLcet0dfNmWkUYJeM6Yd4uPyWZPoNqeRolOO32Z9GnsHCrqDY2zkxowldN3bDOKnfO6Qs892rXBbtPefEDsfSul2HxPrKcMh2KKfIy0uhDlyjISBH6aS4SiO8s2sVJZ1xGoYSGhx7EAtD6yfB94dUZC4lwhdZ6v6hptZZwwNaYy4ob4VaFdvqweth0MZ6FC4vzaVuQr2al4j8hfoVuHcayKjgJ8Bxb6ECr9t3LZkisZQc9Qw5MNdq0fgNMf9yKmP2foodlAtzBRMiHXbIXGFpLOtHCRZfs7ZcGam30atf9MKZZ8z7YwgL3fnwtvcJEX3BV8CLak7VR8T" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:51.900" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:51.900" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:33:51.447" endtime="20250227 16:33:51.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:51.901" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:33:51.900" endtime="20250227 16:33:51.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:51.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:51.901" endtime="20250227 16:33:51.901"/>
</kw>
<msg timestamp="20250227 16:33:51.901" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:33:51.446" endtime="20250227 16:33:51.901"/>
</kw>
<msg timestamp="20250227 16:33:51.902" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:33:51.446" endtime="20250227 16:33:51.902"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="NOT RUN" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</return>
<status status="PASS" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</branch>
<status status="PASS" starttime="20250227 16:33:51.902" endtime="20250227 16:33:51.902"/>
</if>
<msg timestamp="20250227 16:33:51.903" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:33:51.445" endtime="20250227 16:33:51.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:51.903" endtime="20250227 16:33:51.903"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:51.903" endtime="20250227 16:33:51.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:51.441" endtime="20250227 16:33:51.903"/>
</test>
<test id="s1-s8-t6" name="Test Multipart Upload Complete Entity too small" line="146">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:51.905" level="INFO">${randStr} = 7051997976</msg>
<status status="PASS" starttime="20250227 16:33:51.905" endtime="20250227 16:33:51.905"/>
</kw>
<msg timestamp="20250227 16:33:51.905" level="INFO">${random} = ozone-test-7051997976</msg>
<status status="PASS" starttime="20250227 16:33:51.905" endtime="20250227 16:33:51.905"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:51.906" level="INFO">${PREFIX} = ozone-test-7051997976</msg>
<status status="PASS" starttime="20250227 16:33:51.905" endtime="20250227 16:33:51.906"/>
</kw>
<status status="PASS" starttime="20250227 16:33:51.904" endtime="20250227 16:33:51.906"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:51.910" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7051997976/multipartKey2  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:52.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:52.364" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7051997976/multipartKey2",
    "UploadId": "01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344"
}</msg>
<status status="PASS" starttime="20250227 16:33:51.908" endtime="20250227 16:33:52.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:52.365" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7051997976/multipartKey2",
    "UploadId": "01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.364" endtime="20250227 16:33:52.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:52.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:52.365" endtime="20250227 16:33:52.365"/>
</kw>
<msg timestamp="20250227 16:33:52.365" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7051997976/multipartKey2",
    "UploadId": "01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344"
}</msg>
<status status="PASS" starttime="20250227 16:33:51.907" endtime="20250227 16:33:52.365"/>
</kw>
<msg timestamp="20250227 16:33:52.366" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7051997976/multipartKey2",
    "UploadId": "01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344"
}</msg>
<status status="PASS" starttime="20250227 16:33:51.907" endtime="20250227 16:33:52.366"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:52.366" endtime="20250227 16:33:52.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:52.366" endtime="20250227 16:33:52.367"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:52.369" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7051997976/multipartKey2",
    "UploadId": "01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:52.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:52.374" level="INFO">${output} = 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344</msg>
<status status="PASS" starttime="20250227 16:33:52.367" endtime="20250227 16:33:52.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:52.375" level="INFO">01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344</msg>
<status status="PASS" starttime="20250227 16:33:52.374" endtime="20250227 16:33:52.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:52.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:52.375" endtime="20250227 16:33:52.375"/>
</kw>
<msg timestamp="20250227 16:33:52.375" level="INFO">${upload_id} = 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344</msg>
<status status="PASS" starttime="20250227 16:33:52.367" endtime="20250227 16:33:52.375"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:52.376" endtime="20250227 16:33:52.376"/>
</return>
<status status="PASS" starttime="20250227 16:33:52.366" endtime="20250227 16:33:52.376"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:52.376" endtime="20250227 16:33:52.376"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:52.376" endtime="20250227 16:33:52.376"/>
</branch>
<status status="PASS" starttime="20250227 16:33:52.366" endtime="20250227 16:33:52.376"/>
</if>
<msg timestamp="20250227 16:33:52.376" level="INFO">${uploadID} = 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344</msg>
<status status="PASS" starttime="20250227 16:33:51.906" endtime="20250227 16:33:52.376"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>/tmp/10kb</arg>
<arg>/tmp/10kb</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250227 16:33:52.377" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250227 16:33:52.377" endtime="20250227 16:33:52.377"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:52.377" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250227 16:33:52.377" endtime="20250227 16:33:52.378"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:52.381" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-7051997976/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:52.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:52.876" level="INFO">${output} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.379" endtime="20250227 16:33:52.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:52.877" level="INFO">{
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.876" endtime="20250227 16:33:52.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:52.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:52.877" endtime="20250227 16:33:52.877"/>
</kw>
<msg timestamp="20250227 16:33:52.877" level="INFO">${output} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.379" endtime="20250227 16:33:52.877"/>
</kw>
<msg timestamp="20250227 16:33:52.878" level="INFO">${result} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.378" endtime="20250227 16:33:52.878"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:52.878" endtime="20250227 16:33:52.878"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:52.881" level="INFO">Running command 'echo '{
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:52.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:52.886" level="INFO">${output} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.879" endtime="20250227 16:33:52.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:52.887" level="INFO">4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.887" endtime="20250227 16:33:52.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:52.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:52.887" endtime="20250227 16:33:52.888"/>
</kw>
<status status="PASS" starttime="20250227 16:33:52.879" endtime="20250227 16:33:52.888"/>
</kw>
<msg timestamp="20250227 16:33:52.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:52.879" endtime="20250227 16:33:52.888"/>
</kw>
<msg timestamp="20250227 16:33:52.888" level="INFO">${etag} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.878" endtime="20250227 16:33:52.888"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:52.891" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:52.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:52.895" level="INFO">${output} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.889" endtime="20250227 16:33:52.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:52.896" level="INFO">4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.895" endtime="20250227 16:33:52.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:52.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:52.896" endtime="20250227 16:33:52.896"/>
</kw>
<status status="PASS" starttime="20250227 16:33:52.889" endtime="20250227 16:33:52.896"/>
</kw>
<msg timestamp="20250227 16:33:52.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:52.888" endtime="20250227 16:33:52.896"/>
</kw>
<msg timestamp="20250227 16:33:52.897" level="INFO">${md5sum} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.888" endtime="20250227 16:33:52.897"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:52.897" endtime="20250227 16:33:52.897"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:52.897" endtime="20250227 16:33:52.897"/>
</return>
<status status="PASS" starttime="20250227 16:33:52.878" endtime="20250227 16:33:52.897"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:52.897" endtime="20250227 16:33:52.897"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:52.897" endtime="20250227 16:33:52.897"/>
</branch>
<status status="PASS" starttime="20250227 16:33:52.878" endtime="20250227 16:33:52.897"/>
</if>
<msg timestamp="20250227 16:33:52.898" level="INFO">${etag} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.378" endtime="20250227 16:33:52.898"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:52.898" endtime="20250227 16:33:52.898"/>
</kw>
<status status="PASS" starttime="20250227 16:33:52.377" endtime="20250227 16:33:52.898"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250227 16:33:52.899" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250227 16:33:52.898" endtime="20250227 16:33:52.899"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:52.902" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-7051997976/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:53.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:53.409" level="INFO">${output} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.900" endtime="20250227 16:33:53.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:53.410" level="INFO">{
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:53.409" endtime="20250227 16:33:53.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:53.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:53.410" endtime="20250227 16:33:53.410"/>
</kw>
<msg timestamp="20250227 16:33:53.411" level="INFO">${output} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.900" endtime="20250227 16:33:53.411"/>
</kw>
<msg timestamp="20250227 16:33:53.411" level="INFO">${result} = {
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}</msg>
<status status="PASS" starttime="20250227 16:33:52.899" endtime="20250227 16:33:53.411"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:53.411" endtime="20250227 16:33:53.411"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:53.414" level="INFO">Running command 'echo '{
    "ETag": "4e54107c760ad77fd220e3983cbad804"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:53.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:53.419" level="INFO">${output} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.412" endtime="20250227 16:33:53.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:53.420" level="INFO">4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.420" endtime="20250227 16:33:53.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:53.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:53.420" endtime="20250227 16:33:53.421"/>
</kw>
<status status="PASS" starttime="20250227 16:33:53.412" endtime="20250227 16:33:53.421"/>
</kw>
<msg timestamp="20250227 16:33:53.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:53.412" endtime="20250227 16:33:53.421"/>
</kw>
<msg timestamp="20250227 16:33:53.421" level="INFO">${etag} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.411" endtime="20250227 16:33:53.421"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:53.424" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:53.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:53.429" level="INFO">${output} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.422" endtime="20250227 16:33:53.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:53.429" level="INFO">4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.429" endtime="20250227 16:33:53.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:53.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:53.430" endtime="20250227 16:33:53.430"/>
</kw>
<status status="PASS" starttime="20250227 16:33:53.422" endtime="20250227 16:33:53.430"/>
</kw>
<msg timestamp="20250227 16:33:53.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:53.421" endtime="20250227 16:33:53.430"/>
</kw>
<msg timestamp="20250227 16:33:53.430" level="INFO">${md5sum} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:53.421" endtime="20250227 16:33:53.430"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:53.430" endtime="20250227 16:33:53.431"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:53.431" endtime="20250227 16:33:53.431"/>
</return>
<status status="PASS" starttime="20250227 16:33:53.411" endtime="20250227 16:33:53.431"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:53.431" endtime="20250227 16:33:53.431"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:53.431" endtime="20250227 16:33:53.431"/>
</branch>
<status status="PASS" starttime="20250227 16:33:53.411" endtime="20250227 16:33:53.431"/>
</if>
<msg timestamp="20250227 16:33:53.431" level="INFO">${etag} = 4e54107c760ad77fd220e3983cbad804</msg>
<status status="PASS" starttime="20250227 16:33:52.899" endtime="20250227 16:33:53.431"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:33:53.431" endtime="20250227 16:33:53.432"/>
</kw>
<status status="PASS" starttime="20250227 16:33:52.898" endtime="20250227 16:33:53.432"/>
</iter>
<status status="PASS" starttime="20250227 16:33:52.377" endtime="20250227 16:33:53.432"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:33:53.432" level="INFO">${parts} = {ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=1},{ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:53.432" endtime="20250227 16:33:53.432"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250227 16:33:53.432" endtime="20250227 16:33:53.432"/>
</return>
<msg timestamp="20250227 16:33:53.432" level="INFO">${parts} = {ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=1},{ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=2}</msg>
<status status="PASS" starttime="20250227 16:33:52.376" endtime="20250227 16:33:53.432"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>${parts}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:53.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7051997976/multipartKey2 --upload-id 01954841-e2ba-74c0-b71c-4021594d5868-114076813381730344 --multipart-upload 'Parts=[{ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=1},{ETag=4e54107c760ad77fd220e3983cbad804,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:53.901" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:53.901" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250227 16:33:53.434" endtime="20250227 16:33:53.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:53.902" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20250227 16:33:53.902" endtime="20250227 16:33:53.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:53.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:53.902" endtime="20250227 16:33:53.903"/>
</kw>
<msg timestamp="20250227 16:33:53.903" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250227 16:33:53.433" endtime="20250227 16:33:53.903"/>
</kw>
<msg timestamp="20250227 16:33:53.903" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250227 16:33:53.433" endtime="20250227 16:33:53.903"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:53.903" endtime="20250227 16:33:53.904"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</return>
<status status="PASS" starttime="20250227 16:33:53.904" endtime="20250227 16:33:53.904"/>
</branch>
<status status="PASS" starttime="20250227 16:33:53.903" endtime="20250227 16:33:53.904"/>
</if>
<msg timestamp="20250227 16:33:53.904" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250227 16:33:53.433" endtime="20250227 16:33:53.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:53.905" endtime="20250227 16:33:53.905"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:51.904" endtime="20250227 16:33:53.905"/>
</test>
<test id="s1-s8-t7" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="153">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:33:53.907" level="INFO">${randStr} = 1493229377</msg>
<status status="PASS" starttime="20250227 16:33:53.907" endtime="20250227 16:33:53.907"/>
</kw>
<msg timestamp="20250227 16:33:53.907" level="INFO">${random} = ozone-test-1493229377</msg>
<status status="PASS" starttime="20250227 16:33:53.906" endtime="20250227 16:33:53.907"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:33:53.908" level="INFO">${PREFIX} = ozone-test-1493229377</msg>
<status status="PASS" starttime="20250227 16:33:53.908" endtime="20250227 16:33:53.908"/>
</kw>
<status status="PASS" starttime="20250227 16:33:53.906" endtime="20250227 16:33:53.908"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:53.912" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:54.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:54.377" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "UploadId": "01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315"
}</msg>
<status status="PASS" starttime="20250227 16:33:53.910" endtime="20250227 16:33:54.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:54.378" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "UploadId": "01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315"
}</msg>
<status status="PASS" starttime="20250227 16:33:54.377" endtime="20250227 16:33:54.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:54.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:54.378" endtime="20250227 16:33:54.378"/>
</kw>
<msg timestamp="20250227 16:33:54.379" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "UploadId": "01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315"
}</msg>
<status status="PASS" starttime="20250227 16:33:53.909" endtime="20250227 16:33:54.379"/>
</kw>
<msg timestamp="20250227 16:33:54.379" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "UploadId": "01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315"
}</msg>
<status status="PASS" starttime="20250227 16:33:53.909" endtime="20250227 16:33:54.379"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:54.379" endtime="20250227 16:33:54.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:54.379" endtime="20250227 16:33:54.380"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:54.383" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "UploadId": "01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:54.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:54.388" level="INFO">${output} = 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315</msg>
<status status="PASS" starttime="20250227 16:33:54.380" endtime="20250227 16:33:54.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:54.389" level="INFO">01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315</msg>
<status status="PASS" starttime="20250227 16:33:54.388" endtime="20250227 16:33:54.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:54.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:54.389" endtime="20250227 16:33:54.389"/>
</kw>
<msg timestamp="20250227 16:33:54.389" level="INFO">${upload_id} = 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315</msg>
<status status="PASS" starttime="20250227 16:33:54.380" endtime="20250227 16:33:54.390"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:33:54.390" endtime="20250227 16:33:54.390"/>
</return>
<status status="PASS" starttime="20250227 16:33:54.379" endtime="20250227 16:33:54.390"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:54.390" endtime="20250227 16:33:54.390"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:54.390" endtime="20250227 16:33:54.390"/>
</branch>
<status status="PASS" starttime="20250227 16:33:54.379" endtime="20250227 16:33:54.390"/>
</if>
<msg timestamp="20250227 16:33:54.390" level="INFO">${uploadID} = 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315</msg>
<status status="PASS" starttime="20250227 16:33:53.908" endtime="20250227 16:33:54.390"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:54.394" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:54.859" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:54.859" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.392" endtime="20250227 16:33:54.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:54.861" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250227 16:33:54.860" endtime="20250227 16:33:54.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:54.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:54.861" endtime="20250227 16:33:54.861"/>
</kw>
<msg timestamp="20250227 16:33:54.861" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.391" endtime="20250227 16:33:54.861"/>
</kw>
<msg timestamp="20250227 16:33:54.861" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.391" endtime="20250227 16:33:54.861"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:54.861" endtime="20250227 16:33:54.862"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</return>
<status status="PASS" starttime="20250227 16:33:54.862" endtime="20250227 16:33:54.862"/>
</branch>
<status status="PASS" starttime="20250227 16:33:54.861" endtime="20250227 16:33:54.862"/>
</if>
<msg timestamp="20250227 16:33:54.862" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.390" endtime="20250227 16:33:54.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:54.863" endtime="20250227 16:33:54.863"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:54.867" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:55.345" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:55.345" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.864" endtime="20250227 16:33:55.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:55.346" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250227 16:33:55.345" endtime="20250227 16:33:55.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:55.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:55.346" endtime="20250227 16:33:55.347"/>
</kw>
<msg timestamp="20250227 16:33:55.347" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.864" endtime="20250227 16:33:55.347"/>
</kw>
<msg timestamp="20250227 16:33:55.347" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.863" endtime="20250227 16:33:55.347"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:55.347" endtime="20250227 16:33:55.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:55.347" endtime="20250227 16:33:55.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:55.347" endtime="20250227 16:33:55.348"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:55.348" endtime="20250227 16:33:55.348"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:55.348" endtime="20250227 16:33:55.348"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:55.347" endtime="20250227 16:33:55.348"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:55.348" endtime="20250227 16:33:55.348"/>
</return>
<status status="PASS" starttime="20250227 16:33:55.348" endtime="20250227 16:33:55.348"/>
</branch>
<status status="PASS" starttime="20250227 16:33:55.347" endtime="20250227 16:33:55.348"/>
</if>
<msg timestamp="20250227 16:33:55.348" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:54.863" endtime="20250227 16:33:55.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:55.348" endtime="20250227 16:33:55.349"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:55.352" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.054" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:55.350" endtime="20250227 16:33:56.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.055" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.055" endtime="20250227 16:33:56.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.056" endtime="20250227 16:33:56.056"/>
</kw>
<msg timestamp="20250227 16:33:56.056" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:55.350" endtime="20250227 16:33:56.056"/>
</kw>
<msg timestamp="20250227 16:33:56.056" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:55.349" endtime="20250227 16:33:56.056"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:56.057" endtime="20250227 16:33:56.057"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.060" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.065" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.058" endtime="20250227 16:33:56.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.066" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.065" endtime="20250227 16:33:56.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.066" endtime="20250227 16:33:56.066"/>
</kw>
<status status="PASS" starttime="20250227 16:33:56.058" endtime="20250227 16:33:56.067"/>
</kw>
<msg timestamp="20250227 16:33:56.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:56.057" endtime="20250227 16:33:56.067"/>
</kw>
<msg timestamp="20250227 16:33:56.067" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.057" endtime="20250227 16:33:56.067"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.070" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.083" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.068" endtime="20250227 16:33:56.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.083" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.083" endtime="20250227 16:33:56.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.084" endtime="20250227 16:33:56.084"/>
</kw>
<status status="PASS" starttime="20250227 16:33:56.068" endtime="20250227 16:33:56.084"/>
</kw>
<msg timestamp="20250227 16:33:56.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:56.068" endtime="20250227 16:33:56.084"/>
</kw>
<msg timestamp="20250227 16:33:56.084" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.067" endtime="20250227 16:33:56.084"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:56.084" endtime="20250227 16:33:56.085"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:56.085" endtime="20250227 16:33:56.085"/>
</return>
<status status="PASS" starttime="20250227 16:33:56.057" endtime="20250227 16:33:56.085"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:56.085" endtime="20250227 16:33:56.085"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:56.085" endtime="20250227 16:33:56.085"/>
</branch>
<status status="PASS" starttime="20250227 16:33:56.056" endtime="20250227 16:33:56.085"/>
</if>
<msg timestamp="20250227 16:33:56.085" level="INFO">${eTag1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:55.349" endtime="20250227 16:33:56.085"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.807" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.087" endtime="20250227 16:33:56.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.808" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.808" endtime="20250227 16:33:56.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.809" endtime="20250227 16:33:56.809"/>
</kw>
<msg timestamp="20250227 16:33:56.809" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.086" endtime="20250227 16:33:56.809"/>
</kw>
<msg timestamp="20250227 16:33:56.810" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.086" endtime="20250227 16:33:56.810"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:56.810" endtime="20250227 16:33:56.810"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.815" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.822" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.812" endtime="20250227 16:33:56.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.823" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.822" endtime="20250227 16:33:56.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.823" endtime="20250227 16:33:56.824"/>
</kw>
<status status="PASS" starttime="20250227 16:33:56.811" endtime="20250227 16:33:56.824"/>
</kw>
<msg timestamp="20250227 16:33:56.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:56.811" endtime="20250227 16:33:56.824"/>
</kw>
<msg timestamp="20250227 16:33:56.824" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.810" endtime="20250227 16:33:56.824"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.829" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:56.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:56.844" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.825" endtime="20250227 16:33:56.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:56.845" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.844" endtime="20250227 16:33:56.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:56.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:56.845" endtime="20250227 16:33:56.846"/>
</kw>
<status status="PASS" starttime="20250227 16:33:56.825" endtime="20250227 16:33:56.846"/>
</kw>
<msg timestamp="20250227 16:33:56.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:56.825" endtime="20250227 16:33:56.846"/>
</kw>
<msg timestamp="20250227 16:33:56.846" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.824" endtime="20250227 16:33:56.846"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:56.846" endtime="20250227 16:33:56.847"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:56.847" endtime="20250227 16:33:56.847"/>
</return>
<status status="PASS" starttime="20250227 16:33:56.810" endtime="20250227 16:33:56.847"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:56.847" endtime="20250227 16:33:56.847"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:56.847" endtime="20250227 16:33:56.847"/>
</branch>
<status status="PASS" starttime="20250227 16:33:56.810" endtime="20250227 16:33:56.847"/>
</if>
<msg timestamp="20250227 16:33:56.847" level="INFO">${eTag2} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:33:56.085" endtime="20250227 16:33:56.847"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag3}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>3</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:56.852" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --part-number 3 --body /tmp/part2 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:57.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:57.435" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.849" endtime="20250227 16:33:57.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:57.436" level="INFO">{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:57.435" endtime="20250227 16:33:57.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:57.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:57.436" endtime="20250227 16:33:57.436"/>
</kw>
<msg timestamp="20250227 16:33:57.436" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.849" endtime="20250227 16:33:57.436"/>
</kw>
<msg timestamp="20250227 16:33:57.437" level="INFO">${result} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:33:56.848" endtime="20250227 16:33:57.437"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:57.437" endtime="20250227 16:33:57.437"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:57.441" level="INFO">Running command 'echo '{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:57.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:57.446" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.438" endtime="20250227 16:33:57.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:57.447" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.447" endtime="20250227 16:33:57.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:57.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:57.447" endtime="20250227 16:33:57.448"/>
</kw>
<status status="PASS" starttime="20250227 16:33:57.438" endtime="20250227 16:33:57.448"/>
</kw>
<msg timestamp="20250227 16:33:57.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:57.438" endtime="20250227 16:33:57.448"/>
</kw>
<msg timestamp="20250227 16:33:57.448" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.437" endtime="20250227 16:33:57.448"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:57.452" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:57.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:57.458" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.450" endtime="20250227 16:33:57.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:57.459" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.459" endtime="20250227 16:33:57.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:57.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:57.459" endtime="20250227 16:33:57.460"/>
</kw>
<status status="PASS" starttime="20250227 16:33:57.449" endtime="20250227 16:33:57.460"/>
</kw>
<msg timestamp="20250227 16:33:57.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:57.449" endtime="20250227 16:33:57.460"/>
</kw>
<msg timestamp="20250227 16:33:57.460" level="INFO">${md5sum} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:57.449" endtime="20250227 16:33:57.460"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:33:57.460" endtime="20250227 16:33:57.461"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:57.461" endtime="20250227 16:33:57.461"/>
</return>
<status status="PASS" starttime="20250227 16:33:57.437" endtime="20250227 16:33:57.461"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:57.461" endtime="20250227 16:33:57.461"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:57.461" endtime="20250227 16:33:57.461"/>
</branch>
<status status="PASS" starttime="20250227 16:33:57.437" endtime="20250227 16:33:57.461"/>
</if>
<msg timestamp="20250227 16:33:57.461" level="INFO">${eTag3} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:33:56.847" endtime="20250227 16:33:57.461"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:57.464" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:57.930" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:57.930" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.462" endtime="20250227 16:33:57.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:57.931" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250227 16:33:57.931" endtime="20250227 16:33:57.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:57.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:57.931" endtime="20250227 16:33:57.932"/>
</kw>
<msg timestamp="20250227 16:33:57.932" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.462" endtime="20250227 16:33:57.932"/>
</kw>
<msg timestamp="20250227 16:33:57.932" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.462" endtime="20250227 16:33:57.932"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:57.932" endtime="20250227 16:33:57.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:57.932" endtime="20250227 16:33:57.933"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</return>
<status status="PASS" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.933"/>
</branch>
<status status="PASS" starttime="20250227 16:33:57.932" endtime="20250227 16:33:57.933"/>
</if>
<msg timestamp="20250227 16:33:57.933" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.461" endtime="20250227 16:33:57.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:57.933" endtime="20250227 16:33:57.934"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:57.937" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:58.401" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:58.401" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.935" endtime="20250227 16:33:58.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:58.402" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250227 16:33:58.401" endtime="20250227 16:33:58.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:58.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:58.402" endtime="20250227 16:33:58.402"/>
</kw>
<msg timestamp="20250227 16:33:58.402" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.935" endtime="20250227 16:33:58.402"/>
</kw>
<msg timestamp="20250227 16:33:58.403" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.934" endtime="20250227 16:33:58.403"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.403"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.403"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.404"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.404"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:58.404" endtime="20250227 16:33:58.404"/>
</return>
<status status="PASS" starttime="20250227 16:33:58.404" endtime="20250227 16:33:58.404"/>
</branch>
<status status="PASS" starttime="20250227 16:33:58.403" endtime="20250227 16:33:58.404"/>
</if>
<msg timestamp="20250227 16:33:58.404" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250227 16:33:57.934" endtime="20250227 16:33:58.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:58.404" endtime="20250227 16:33:58.404"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:58.408" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:58.899" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:33:58.899" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250227 16:33:58.406" endtime="20250227 16:33:58.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:58.900" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250227 16:33:58.900" endtime="20250227 16:33:58.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:58.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:58.900" endtime="20250227 16:33:58.901"/>
</kw>
<msg timestamp="20250227 16:33:58.901" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250227 16:33:58.405" endtime="20250227 16:33:58.901"/>
</kw>
<msg timestamp="20250227 16:33:58.901" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250227 16:33:58.405" endtime="20250227 16:33:58.901"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.901" endtime="20250227 16:33:58.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:58.901" endtime="20250227 16:33:58.902"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</return>
<status status="PASS" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.902"/>
</branch>
<status status="PASS" starttime="20250227 16:33:58.901" endtime="20250227 16:33:58.902"/>
</if>
<msg timestamp="20250227 16:33:58.902" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250227 16:33:58.404" endtime="20250227 16:33:58.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:58.902" endtime="20250227 16:33:58.903"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:58.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --upload-id 01954841-ea97-727e-a79b-2a9d33dec76e-114076813513654315 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1},{ETag=f01def72c40ddd648b7acfbb40a00c63,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:59.364" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\""
}</msg>
<status status="PASS" starttime="20250227 16:33:58.904" endtime="20250227 16:33:59.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:59.365" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\""
}</msg>
<status status="PASS" starttime="20250227 16:33:59.364" endtime="20250227 16:33:59.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:59.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:59.365" endtime="20250227 16:33:59.365"/>
</kw>
<msg timestamp="20250227 16:33:59.365" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\""
}</msg>
<status status="PASS" starttime="20250227 16:33:58.904" endtime="20250227 16:33:59.365"/>
</kw>
<msg timestamp="20250227 16:33:59.365" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\""
}</msg>
<status status="PASS" starttime="20250227 16:33:58.903" endtime="20250227 16:33:59.365"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:59.366" endtime="20250227 16:33:59.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:59.366" endtime="20250227 16:33:59.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:33:59.366" endtime="20250227 16:33:59.367"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:59.370" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-1493229377/multipartKey3",
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:59.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:59.375" level="INFO">${output} = "1d57481b4432ea8acb05fdc78457edd7-3"</msg>
<status status="PASS" starttime="20250227 16:33:59.368" endtime="20250227 16:33:59.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:59.376" level="INFO">"1d57481b4432ea8acb05fdc78457edd7-3"</msg>
<status status="PASS" starttime="20250227 16:33:59.375" endtime="20250227 16:33:59.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:59.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:59.376" endtime="20250227 16:33:59.376"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.367" endtime="20250227 16:33:59.376"/>
</kw>
<msg timestamp="20250227 16:33:59.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:59.367" endtime="20250227 16:33:59.377"/>
</kw>
<msg timestamp="20250227 16:33:59.377" level="INFO">${etag} = "1d57481b4432ea8acb05fdc78457edd7-3"</msg>
<status status="PASS" starttime="20250227 16:33:59.367" endtime="20250227 16:33:59.377"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:33:59.377" endtime="20250227 16:33:59.377"/>
</return>
<status status="PASS" starttime="20250227 16:33:59.366" endtime="20250227 16:33:59.377"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:33:59.377" endtime="20250227 16:33:59.377"/>
</return>
<status status="NOT RUN" starttime="20250227 16:33:59.377" endtime="20250227 16:33:59.377"/>
</branch>
<status status="PASS" starttime="20250227 16:33:59.366" endtime="20250227 16:33:59.377"/>
</if>
<msg timestamp="20250227 16:33:59.378" level="INFO">${result} = "1d57481b4432ea8acb05fdc78457edd7-3"</msg>
<status status="PASS" starttime="20250227 16:33:58.903" endtime="20250227 16:33:59.378"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:59.381" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 /tmp/ozone-test-1493229377-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:33:59.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:59.973" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:59.379" endtime="20250227 16:33:59.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:59.974" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:33:59 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Thu, 27 Feb 2025 16:33:59 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:33:59.973" endtime="20250227 16:33:59.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:59.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:59.974" endtime="20250227 16:33:59.974"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.379" endtime="20250227 16:33:59.975"/>
</kw>
<msg timestamp="20250227 16:33:59.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:59.378" endtime="20250227 16:33:59.975"/>
</kw>
<msg timestamp="20250227 16:33:59.975" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:59.378" endtime="20250227 16:33:59.975"/>
</kw>
<msg timestamp="20250227 16:33:59.975" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:33:59.378" endtime="20250227 16:33:59.975"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:59.978" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-1493229377-multipartKey3'.</msg>
<msg timestamp="20250227 16:33:59.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:33:59.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:33:59.976" endtime="20250227 16:33:59.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:33:59.988" level="INFO"/>
<status status="PASS" starttime="20250227 16:33:59.987" endtime="20250227 16:33:59.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:33:59.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:33:59.988" endtime="20250227 16:33:59.988"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.976" endtime="20250227 16:33:59.989"/>
</kw>
<msg timestamp="20250227 16:33:59.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:59.975" endtime="20250227 16:33:59.989"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.975" endtime="20250227 16:33:59.989"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:33:59.992" level="INFO">Running command 'md5sum /tmp/ozone-test-1493229377-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:00.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:00.008" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:59.990" endtime="20250227 16:34:00.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:00.009" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:34:00.008" endtime="20250227 16:34:00.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:00.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:00.009" endtime="20250227 16:34:00.010"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.990" endtime="20250227 16:34:00.010"/>
</kw>
<msg timestamp="20250227 16:34:00.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:33:59.990" endtime="20250227 16:34:00.010"/>
</kw>
<msg timestamp="20250227 16:34:00.010" level="INFO">${checksumbefore} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:33:59.989" endtime="20250227 16:34:00.010"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:00.015" level="INFO">Running command 'md5sum /tmp/ozone-test-1493229377-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:00.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:00.031" level="INFO">${output} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:34:00.011" endtime="20250227 16:34:00.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:00.032" level="INFO">0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:34:00.032" endtime="20250227 16:34:00.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:00.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:00.032" endtime="20250227 16:34:00.033"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.011" endtime="20250227 16:34:00.033"/>
</kw>
<msg timestamp="20250227 16:34:00.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:00.011" endtime="20250227 16:34:00.033"/>
</kw>
<msg timestamp="20250227 16:34:00.033" level="INFO">${checksumafter} = 0d97975cc38873be99dafca7bb3a4d23</msg>
<status status="PASS" starttime="20250227 16:34:00.010" endtime="20250227 16:34:00.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:00.033" endtime="20250227 16:34:00.034"/>
</kw>
<status status="PASS" starttime="20250227 16:33:59.989" endtime="20250227 16:34:00.034"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:00.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --part-number 1 /tmp/ozone-test-1493229377-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:00.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:00.593" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.035" endtime="20250227 16:34:00.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:00.594" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:00 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:00 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:00.594" endtime="20250227 16:34:00.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:00.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:00.594" endtime="20250227 16:34:00.595"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.035" endtime="20250227 16:34:00.595"/>
</kw>
<msg timestamp="20250227 16:34:00.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:00.035" endtime="20250227 16:34:00.595"/>
</kw>
<msg timestamp="20250227 16:34:00.595" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.034" endtime="20250227 16:34:00.595"/>
</kw>
<msg timestamp="20250227 16:34:00.595" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.034" endtime="20250227 16:34:00.595"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:00.599" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:00.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:00.612" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.597" endtime="20250227 16:34:00.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:00.612" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.612" endtime="20250227 16:34:00.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:00.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:00.613" endtime="20250227 16:34:00.613"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.596" endtime="20250227 16:34:00.613"/>
</kw>
<msg timestamp="20250227 16:34:00.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:00.596" endtime="20250227 16:34:00.613"/>
</kw>
<msg timestamp="20250227 16:34:00.613" level="INFO">${checksumbefore} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.596" endtime="20250227 16:34:00.613"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:00.616" level="INFO">Running command 'md5sum /tmp/ozone-test-1493229377-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:00.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:00.629" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.614" endtime="20250227 16:34:00.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:00.629" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.629" endtime="20250227 16:34:00.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:00.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:00.629" endtime="20250227 16:34:00.630"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.614" endtime="20250227 16:34:00.630"/>
</kw>
<msg timestamp="20250227 16:34:00.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:00.614" endtime="20250227 16:34:00.630"/>
</kw>
<msg timestamp="20250227 16:34:00.630" level="INFO">${checksumafter} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:00.613" endtime="20250227 16:34:00.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:00.630" endtime="20250227 16:34:00.631"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.595" endtime="20250227 16:34:00.631"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:00.634" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-1493229377/multipartKey3 --part-number 3 /tmp/ozone-test-1493229377-multipartKey3-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:01.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:01.112" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 1047552,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.632" endtime="20250227 16:34:01.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:01.113" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 1047552,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:01 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:01 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:01.113" endtime="20250227 16:34:01.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:01.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:01.114" endtime="20250227 16:34:01.114"/>
</kw>
<status status="PASS" starttime="20250227 16:34:00.632" endtime="20250227 16:34:01.114"/>
</kw>
<msg timestamp="20250227 16:34:01.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:00.632" endtime="20250227 16:34:01.114"/>
</kw>
<msg timestamp="20250227 16:34:01.114" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 1047552,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.631" endtime="20250227 16:34:01.114"/>
</kw>
<msg timestamp="20250227 16:34:01.115" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:33:59 GMT",
    "ContentLength": 1047552,
    "ETag": "\"1d57481b4432ea8acb05fdc78457edd7-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:00.631" endtime="20250227 16:34:01.115"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:01.119" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:01.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:01.125" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.117" endtime="20250227 16:34:01.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:01.125" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.125" endtime="20250227 16:34:01.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:01.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:01.125" endtime="20250227 16:34:01.126"/>
</kw>
<status status="PASS" starttime="20250227 16:34:01.116" endtime="20250227 16:34:01.126"/>
</kw>
<msg timestamp="20250227 16:34:01.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:01.115" endtime="20250227 16:34:01.126"/>
</kw>
<msg timestamp="20250227 16:34:01.126" level="INFO">${checksumbefore} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.115" endtime="20250227 16:34:01.126"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:01.129" level="INFO">Running command 'md5sum /tmp/ozone-test-1493229377-multipartKey3-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:01.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:01.134" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.127" endtime="20250227 16:34:01.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:01.135" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.135" endtime="20250227 16:34:01.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:01.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:01.135" endtime="20250227 16:34:01.136"/>
</kw>
<status status="PASS" starttime="20250227 16:34:01.127" endtime="20250227 16:34:01.136"/>
</kw>
<msg timestamp="20250227 16:34:01.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:01.127" endtime="20250227 16:34:01.136"/>
</kw>
<msg timestamp="20250227 16:34:01.136" level="INFO">${checksumafter} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:01.126" endtime="20250227 16:34:01.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:01.136" endtime="20250227 16:34:01.136"/>
</kw>
<status status="PASS" starttime="20250227 16:34:01.115" endtime="20250227 16:34:01.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:33:53.905" endtime="20250227 16:34:01.137"/>
</test>
<test id="s1-s8-t8" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:01.138" level="INFO">${randStr} = 8006457370</msg>
<status status="PASS" starttime="20250227 16:34:01.138" endtime="20250227 16:34:01.138"/>
</kw>
<msg timestamp="20250227 16:34:01.139" level="INFO">${random} = ozone-test-8006457370</msg>
<status status="PASS" starttime="20250227 16:34:01.138" endtime="20250227 16:34:01.139"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:01.139" level="INFO">${PREFIX} = ozone-test-8006457370</msg>
<status status="PASS" starttime="20250227 16:34:01.139" endtime="20250227 16:34:01.139"/>
</kw>
<status status="PASS" starttime="20250227 16:34:01.138" endtime="20250227 16:34:01.139"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>0</arg>
<arg>--storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:01.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-8006457370/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:01.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:01.606" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-8006457370/multipartKey4",
    "UploadId": "01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063"
}</msg>
<status status="PASS" starttime="20250227 16:34:01.140" endtime="20250227 16:34:01.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:01.607" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-8006457370/multipartKey4",
    "UploadId": "01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063"
}</msg>
<status status="PASS" starttime="20250227 16:34:01.607" endtime="20250227 16:34:01.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:01.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:01.607" endtime="20250227 16:34:01.608"/>
</kw>
<msg timestamp="20250227 16:34:01.608" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-8006457370/multipartKey4",
    "UploadId": "01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063"
}</msg>
<status status="PASS" starttime="20250227 16:34:01.140" endtime="20250227 16:34:01.608"/>
</kw>
<msg timestamp="20250227 16:34:01.608" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-8006457370/multipartKey4",
    "UploadId": "01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063"
}</msg>
<status status="PASS" starttime="20250227 16:34:01.140" endtime="20250227 16:34:01.608"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:01.608" endtime="20250227 16:34:01.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:01.609" endtime="20250227 16:34:01.609"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:01.612" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-8006457370/multipartKey4",
    "UploadId": "01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:01.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:01.617" level="INFO">${output} = 01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063</msg>
<status status="PASS" starttime="20250227 16:34:01.609" endtime="20250227 16:34:01.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:01.617" level="INFO">01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063</msg>
<status status="PASS" starttime="20250227 16:34:01.617" endtime="20250227 16:34:01.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:01.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:01.617" endtime="20250227 16:34:01.618"/>
</kw>
<msg timestamp="20250227 16:34:01.618" level="INFO">${upload_id} = 01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063</msg>
<status status="PASS" starttime="20250227 16:34:01.609" endtime="20250227 16:34:01.618"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:01.618" endtime="20250227 16:34:01.618"/>
</return>
<status status="PASS" starttime="20250227 16:34:01.608" endtime="20250227 16:34:01.618"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:01.618" endtime="20250227 16:34:01.618"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:01.618" endtime="20250227 16:34:01.618"/>
</branch>
<status status="PASS" starttime="20250227 16:34:01.608" endtime="20250227 16:34:01.618"/>
</if>
<msg timestamp="20250227 16:34:01.618" level="INFO">${uploadID} = 01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063</msg>
<status status="PASS" starttime="20250227 16:34:01.139" endtime="20250227 16:34:01.618"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:01.622" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-8006457370/multipartKey4 --upload-id 01954842-06d4-7981-b5cd-d151ad643ff0-114076813987414063 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:02.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:02.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:01.620" endtime="20250227 16:34:02.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:02.073" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:02.072" endtime="20250227 16:34:02.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:02.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:02.073" endtime="20250227 16:34:02.073"/>
</kw>
<msg timestamp="20250227 16:34:02.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:01.619" endtime="20250227 16:34:02.073"/>
</kw>
<msg timestamp="20250227 16:34:02.073" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:01.619" endtime="20250227 16:34:02.073"/>
</kw>
<msg timestamp="20250227 16:34:02.074" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250227 16:34:01.619" endtime="20250227 16:34:02.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:01.137" endtime="20250227 16:34:02.074"/>
</test>
<test id="s1-s8-t9" name="Test abort Multipart upload with invalid uploadId" line="190">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:02.076" level="INFO">${randStr} = 7759043901</msg>
<status status="PASS" starttime="20250227 16:34:02.075" endtime="20250227 16:34:02.076"/>
</kw>
<msg timestamp="20250227 16:34:02.076" level="INFO">${random} = ozone-test-7759043901</msg>
<status status="PASS" starttime="20250227 16:34:02.075" endtime="20250227 16:34:02.076"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:02.076" level="INFO">${PREFIX} = ozone-test-7759043901</msg>
<status status="PASS" starttime="20250227 16:34:02.076" endtime="20250227 16:34:02.076"/>
</kw>
<status status="PASS" starttime="20250227 16:34:02.075" endtime="20250227 16:34:02.076"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>"random"</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:02.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7759043901/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:02.551" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:02.551" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250227 16:34:02.077" endtime="20250227 16:34:02.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:02.552" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250227 16:34:02.551" endtime="20250227 16:34:02.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:02.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:02.552" endtime="20250227 16:34:02.552"/>
</kw>
<msg timestamp="20250227 16:34:02.552" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250227 16:34:02.077" endtime="20250227 16:34:02.552"/>
</kw>
<msg timestamp="20250227 16:34:02.553" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250227 16:34:02.077" endtime="20250227 16:34:02.553"/>
</kw>
<msg timestamp="20250227 16:34:02.553" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250227 16:34:02.076" endtime="20250227 16:34:02.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:02.074" endtime="20250227 16:34:02.553"/>
</test>
<test id="s1-s8-t10" name="Upload part with Incorrect uploadID" line="193">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:02.555" level="INFO">${randStr} = 9115549595</msg>
<status status="PASS" starttime="20250227 16:34:02.554" endtime="20250227 16:34:02.555"/>
</kw>
<msg timestamp="20250227 16:34:02.555" level="INFO">${random} = ozone-test-9115549595</msg>
<status status="PASS" starttime="20250227 16:34:02.554" endtime="20250227 16:34:02.555"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:02.555" level="INFO">${PREFIX} = ozone-test-9115549595</msg>
<status status="PASS" starttime="20250227 16:34:02.555" endtime="20250227 16:34:02.555"/>
</kw>
<status status="PASS" starttime="20250227 16:34:02.554" endtime="20250227 16:34:02.556"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:02.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-9115549595/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:03.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:03.028" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9115549595/multipartKey",
    "UploadId": "01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720"
}</msg>
<status status="PASS" starttime="20250227 16:34:02.557" endtime="20250227 16:34:03.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:03.029" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9115549595/multipartKey",
    "UploadId": "01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.029" endtime="20250227 16:34:03.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:03.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:03.030" endtime="20250227 16:34:03.030"/>
</kw>
<msg timestamp="20250227 16:34:03.030" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9115549595/multipartKey",
    "UploadId": "01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720"
}</msg>
<status status="PASS" starttime="20250227 16:34:02.557" endtime="20250227 16:34:03.030"/>
</kw>
<msg timestamp="20250227 16:34:03.030" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9115549595/multipartKey",
    "UploadId": "01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720"
}</msg>
<status status="PASS" starttime="20250227 16:34:02.556" endtime="20250227 16:34:03.030"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:03.031" endtime="20250227 16:34:03.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:03.031" endtime="20250227 16:34:03.031"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:03.034" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9115549595/multipartKey",
    "UploadId": "01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:03.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:03.039" level="INFO">${output} = 01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720</msg>
<status status="PASS" starttime="20250227 16:34:03.032" endtime="20250227 16:34:03.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:03.040" level="INFO">01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720</msg>
<status status="PASS" starttime="20250227 16:34:03.039" endtime="20250227 16:34:03.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:03.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:03.040" endtime="20250227 16:34:03.040"/>
</kw>
<msg timestamp="20250227 16:34:03.040" level="INFO">${upload_id} = 01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720</msg>
<status status="PASS" starttime="20250227 16:34:03.031" endtime="20250227 16:34:03.040"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:03.040" endtime="20250227 16:34:03.040"/>
</return>
<status status="PASS" starttime="20250227 16:34:03.030" endtime="20250227 16:34:03.040"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:03.041" endtime="20250227 16:34:03.041"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:03.041" endtime="20250227 16:34:03.041"/>
</branch>
<status status="PASS" starttime="20250227 16:34:03.030" endtime="20250227 16:34:03.041"/>
</if>
<msg timestamp="20250227 16:34:03.041" level="INFO">${uploadID} = 01954842-0c61-703b-aa1b-56e69e8ada36-114076814080540720</msg>
<status status="PASS" starttime="20250227 16:34:02.556" endtime="20250227 16:34:03.041"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>"no-such-upload-id"</arg>
<arg>1</arg>
<arg>/tmp/10kb</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:03.044" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-9115549595/multipartKey --part-number 1 --body /tmp/10kb --upload-id "no-such-upload-id" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:03.505" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:03.505" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250227 16:34:03.042" endtime="20250227 16:34:03.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:03.506" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250227 16:34:03.506" endtime="20250227 16:34:03.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:03.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:03.507" endtime="20250227 16:34:03.507"/>
</kw>
<msg timestamp="20250227 16:34:03.507" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250227 16:34:03.042" endtime="20250227 16:34:03.507"/>
</kw>
<msg timestamp="20250227 16:34:03.507" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250227 16:34:03.041" endtime="20250227 16:34:03.507"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:03.507" endtime="20250227 16:34:03.508"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</return>
<status status="PASS" starttime="20250227 16:34:03.508" endtime="20250227 16:34:03.508"/>
</branch>
<status status="PASS" starttime="20250227 16:34:03.507" endtime="20250227 16:34:03.508"/>
</if>
<msg timestamp="20250227 16:34:03.508" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250227 16:34:03.041" endtime="20250227 16:34:03.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:03.509" endtime="20250227 16:34:03.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:02.553" endtime="20250227 16:34:03.509"/>
</test>
<test id="s1-s8-t11" name="Test list parts" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:03.511" level="INFO">${randStr} = 7995275502</msg>
<status status="PASS" starttime="20250227 16:34:03.510" endtime="20250227 16:34:03.511"/>
</kw>
<msg timestamp="20250227 16:34:03.511" level="INFO">${random} = ozone-test-7995275502</msg>
<status status="PASS" starttime="20250227 16:34:03.510" endtime="20250227 16:34:03.511"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:03.511" level="INFO">${PREFIX} = ozone-test-7995275502</msg>
<status status="PASS" starttime="20250227 16:34:03.511" endtime="20250227 16:34:03.511"/>
</kw>
<status status="PASS" starttime="20250227 16:34:03.510" endtime="20250227 16:34:03.511"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:03.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:03.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:03.981" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7995275502/multipartKey5",
    "UploadId": "01954842-1019-7454-96ab-7a0387c5324a-114076814142930994"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.513" endtime="20250227 16:34:03.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:03.982" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7995275502/multipartKey5",
    "UploadId": "01954842-1019-7454-96ab-7a0387c5324a-114076814142930994"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.982" endtime="20250227 16:34:03.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:03.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:03.983" endtime="20250227 16:34:03.983"/>
</kw>
<msg timestamp="20250227 16:34:03.983" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7995275502/multipartKey5",
    "UploadId": "01954842-1019-7454-96ab-7a0387c5324a-114076814142930994"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.513" endtime="20250227 16:34:03.983"/>
</kw>
<msg timestamp="20250227 16:34:03.983" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7995275502/multipartKey5",
    "UploadId": "01954842-1019-7454-96ab-7a0387c5324a-114076814142930994"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.512" endtime="20250227 16:34:03.983"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:03.984" endtime="20250227 16:34:03.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:03.984" endtime="20250227 16:34:03.984"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:03.987" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7995275502/multipartKey5",
    "UploadId": "01954842-1019-7454-96ab-7a0387c5324a-114076814142930994"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:03.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:03.992" level="INFO">${output} = 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994</msg>
<status status="PASS" starttime="20250227 16:34:03.985" endtime="20250227 16:34:03.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:03.993" level="INFO">01954842-1019-7454-96ab-7a0387c5324a-114076814142930994</msg>
<status status="PASS" starttime="20250227 16:34:03.992" endtime="20250227 16:34:03.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:03.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:03.993" endtime="20250227 16:34:03.993"/>
</kw>
<msg timestamp="20250227 16:34:03.993" level="INFO">${upload_id} = 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994</msg>
<status status="PASS" starttime="20250227 16:34:03.984" endtime="20250227 16:34:03.993"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:03.993" endtime="20250227 16:34:03.993"/>
</return>
<status status="PASS" starttime="20250227 16:34:03.983" endtime="20250227 16:34:03.993"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:03.994" endtime="20250227 16:34:03.994"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:03.993" endtime="20250227 16:34:03.994"/>
</branch>
<status status="PASS" starttime="20250227 16:34:03.983" endtime="20250227 16:34:03.994"/>
</if>
<msg timestamp="20250227 16:34:03.994" level="INFO">${uploadID} = 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994</msg>
<status status="PASS" starttime="20250227 16:34:03.512" endtime="20250227 16:34:03.994"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:03.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:04.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:04.767" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.995" endtime="20250227 16:34:04.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:04.768" level="INFO">{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:34:04.767" endtime="20250227 16:34:04.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:04.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:04.768" endtime="20250227 16:34:04.768"/>
</kw>
<msg timestamp="20250227 16:34:04.769" level="INFO">${output} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.995" endtime="20250227 16:34:04.769"/>
</kw>
<msg timestamp="20250227 16:34:04.769" level="INFO">${result} = {
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}</msg>
<status status="PASS" starttime="20250227 16:34:03.994" endtime="20250227 16:34:04.769"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:04.769" endtime="20250227 16:34:04.769"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:04.773" level="INFO">Running command 'echo '{
    "ETag": "2bd464090908c176e61c4908210ccfbd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:04.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:04.779" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.770" endtime="20250227 16:34:04.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:04.780" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.779" endtime="20250227 16:34:04.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:04.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:04.780" endtime="20250227 16:34:04.780"/>
</kw>
<status status="PASS" starttime="20250227 16:34:04.770" endtime="20250227 16:34:04.780"/>
</kw>
<msg timestamp="20250227 16:34:04.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:04.770" endtime="20250227 16:34:04.781"/>
</kw>
<msg timestamp="20250227 16:34:04.781" level="INFO">${etag} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.769" endtime="20250227 16:34:04.781"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:04.784" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:04.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:04.797" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.782" endtime="20250227 16:34:04.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:04.798" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.797" endtime="20250227 16:34:04.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:04.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:04.798" endtime="20250227 16:34:04.798"/>
</kw>
<status status="PASS" starttime="20250227 16:34:04.781" endtime="20250227 16:34:04.798"/>
</kw>
<msg timestamp="20250227 16:34:04.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:04.781" endtime="20250227 16:34:04.798"/>
</kw>
<msg timestamp="20250227 16:34:04.799" level="INFO">${md5sum} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:04.781" endtime="20250227 16:34:04.799"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:34:04.799" endtime="20250227 16:34:04.799"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:34:04.799" endtime="20250227 16:34:04.799"/>
</return>
<status status="PASS" starttime="20250227 16:34:04.769" endtime="20250227 16:34:04.799"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:04.799" endtime="20250227 16:34:04.799"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:04.799" endtime="20250227 16:34:04.799"/>
</branch>
<status status="PASS" starttime="20250227 16:34:04.769" endtime="20250227 16:34:04.799"/>
</if>
<msg timestamp="20250227 16:34:04.800" level="INFO">${eTag1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:03.994" endtime="20250227 16:34:04.800"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:04.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.391" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:34:04.801" endtime="20250227 16:34:05.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.392" level="INFO">{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:34:05.391" endtime="20250227 16:34:05.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.392" endtime="20250227 16:34:05.392"/>
</kw>
<msg timestamp="20250227 16:34:05.393" level="INFO">${output} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:34:04.801" endtime="20250227 16:34:05.393"/>
</kw>
<msg timestamp="20250227 16:34:05.393" level="INFO">${result} = {
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}</msg>
<status status="PASS" starttime="20250227 16:34:04.800" endtime="20250227 16:34:05.393"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:05.393" endtime="20250227 16:34:05.393"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.397" level="INFO">Running command 'echo '{
    "ETag": "f01def72c40ddd648b7acfbb40a00c63"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.402" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.394" endtime="20250227 16:34:05.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.403" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.403" endtime="20250227 16:34:05.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.403" endtime="20250227 16:34:05.404"/>
</kw>
<status status="PASS" starttime="20250227 16:34:05.394" endtime="20250227 16:34:05.404"/>
</kw>
<msg timestamp="20250227 16:34:05.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:05.394" endtime="20250227 16:34:05.404"/>
</kw>
<msg timestamp="20250227 16:34:05.404" level="INFO">${etag} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.393" endtime="20250227 16:34:05.404"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.407" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.412" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.405" endtime="20250227 16:34:05.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.413" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.413" endtime="20250227 16:34:05.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.413" endtime="20250227 16:34:05.414"/>
</kw>
<status status="PASS" starttime="20250227 16:34:05.405" endtime="20250227 16:34:05.414"/>
</kw>
<msg timestamp="20250227 16:34:05.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:05.404" endtime="20250227 16:34:05.414"/>
</kw>
<msg timestamp="20250227 16:34:05.414" level="INFO">${md5sum} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.404" endtime="20250227 16:34:05.414"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:34:05.414" endtime="20250227 16:34:05.414"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:34:05.414" endtime="20250227 16:34:05.414"/>
</return>
<status status="PASS" starttime="20250227 16:34:05.393" endtime="20250227 16:34:05.415"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:05.415" endtime="20250227 16:34:05.415"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:05.415" endtime="20250227 16:34:05.415"/>
</branch>
<status status="PASS" starttime="20250227 16:34:05.393" endtime="20250227 16:34:05.415"/>
</if>
<msg timestamp="20250227 16:34:05.415" level="INFO">${eTag2} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:04.800" endtime="20250227 16:34:05.415"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.418" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.902" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.416" endtime="20250227 16:34:05.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.903" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250227 16:34:05.903" endtime="20250227 16:34:05.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.904" endtime="20250227 16:34:05.904"/>
</kw>
<status status="PASS" starttime="20250227 16:34:05.416" endtime="20250227 16:34:05.904"/>
</kw>
<msg timestamp="20250227 16:34:05.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:05.416" endtime="20250227 16:34:05.904"/>
</kw>
<msg timestamp="20250227 16:34:05.904" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.415" endtime="20250227 16:34:05.904"/>
</kw>
<msg timestamp="20250227 16:34:05.904" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.415" endtime="20250227 16:34:05.904"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.907" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.912" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:05.905" endtime="20250227 16:34:05.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.913" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:05.913" endtime="20250227 16:34:05.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.914" endtime="20250227 16:34:05.914"/>
</kw>
<msg timestamp="20250227 16:34:05.914" level="INFO">${part1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:05.905" endtime="20250227 16:34:05.914"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.917" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:05.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:05.921" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.915" endtime="20250227 16:34:05.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:05.922" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.922" endtime="20250227 16:34:05.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:05.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:05.922" endtime="20250227 16:34:05.923"/>
</kw>
<msg timestamp="20250227 16:34:05.923" level="INFO">${part2} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:05.914" endtime="20250227 16:34:05.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:05.923" endtime="20250227 16:34:05.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:05.923" endtime="20250227 16:34:05.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:05.924" endtime="20250227 16:34:05.924"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:05.927" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:06.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:06.384" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.925" endtime="20250227 16:34:06.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:06.385" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20250227 16:34:06.384" endtime="20250227 16:34:06.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:06.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:06.385" endtime="20250227 16:34:06.385"/>
</kw>
<status status="PASS" starttime="20250227 16:34:05.925" endtime="20250227 16:34:06.385"/>
</kw>
<msg timestamp="20250227 16:34:06.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:05.925" endtime="20250227 16:34:06.385"/>
</kw>
<msg timestamp="20250227 16:34:06.386" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.924" endtime="20250227 16:34:06.386"/>
</kw>
<msg timestamp="20250227 16:34:06.386" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250227 16:34:05.924" endtime="20250227 16:34:06.386"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:06.389" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:06.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:06.394" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:06.386" endtime="20250227 16:34:06.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:06.394" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:06.394" endtime="20250227 16:34:06.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:06.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:06.394" endtime="20250227 16:34:06.395"/>
</kw>
<msg timestamp="20250227 16:34:06.395" level="INFO">${part1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:06.386" endtime="20250227 16:34:06.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:06.397" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-27T16:34:04.663Z",
            "ETag": "2bd464090908c176e61c4908210ccfbd",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:06.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:06.402" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250227 16:34:06.395" endtime="20250227 16:34:06.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:06.403" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250227 16:34:06.402" endtime="20250227 16:34:06.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:06.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:06.403" endtime="20250227 16:34:06.403"/>
</kw>
<msg timestamp="20250227 16:34:06.403" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250227 16:34:06.395" endtime="20250227 16:34:06.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:06.403" endtime="20250227 16:34:06.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:06.404" endtime="20250227 16:34:06.404"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:06.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:06.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:06.859" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250227 16:34:06.405" endtime="20250227 16:34:06.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:06.860" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250227 16:34:06.859" endtime="20250227 16:34:06.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:06.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:06.860" endtime="20250227 16:34:06.860"/>
</kw>
<status status="PASS" starttime="20250227 16:34:06.405" endtime="20250227 16:34:06.860"/>
</kw>
<msg timestamp="20250227 16:34:06.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:06.405" endtime="20250227 16:34:06.861"/>
</kw>
<msg timestamp="20250227 16:34:06.861" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250227 16:34:06.404" endtime="20250227 16:34:06.861"/>
</kw>
<msg timestamp="20250227 16:34:06.861" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250227 16:34:06.404" endtime="20250227 16:34:06.861"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:06.864" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-27T16:34:05.315Z",
            "ETag": "f01def72c40ddd648b7acfbb40a00c63",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:06.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:06.869" level="INFO">${output} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:06.861" endtime="20250227 16:34:06.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:06.869" level="INFO">f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:06.869" endtime="20250227 16:34:06.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:06.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:06.869" endtime="20250227 16:34:06.870"/>
</kw>
<msg timestamp="20250227 16:34:06.870" level="INFO">${part2} = f01def72c40ddd648b7acfbb40a00c63</msg>
<status status="PASS" starttime="20250227 16:34:06.861" endtime="20250227 16:34:06.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:06.870" endtime="20250227 16:34:06.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:06.870" endtime="20250227 16:34:06.871"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:06.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7995275502/multipartKey5 --upload-id 01954842-1019-7454-96ab-7a0387c5324a-114076814142930994 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:07.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:07.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:06.872" endtime="20250227 16:34:07.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:07.336" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:07.335" endtime="20250227 16:34:07.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:07.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:07.336" endtime="20250227 16:34:07.336"/>
</kw>
<msg timestamp="20250227 16:34:07.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:06.872" endtime="20250227 16:34:07.336"/>
</kw>
<msg timestamp="20250227 16:34:07.336" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:06.871" endtime="20250227 16:34:07.337"/>
</kw>
<msg timestamp="20250227 16:34:07.337" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250227 16:34:06.871" endtime="20250227 16:34:07.337"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:03.509" endtime="20250227 16:34:07.337"/>
</test>
<test id="s1-s8-t12" name="Test Multipart Upload with the simplified aws s3 cp API" line="229">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:07.339" level="INFO">${randStr} = 5277845382</msg>
<status status="PASS" starttime="20250227 16:34:07.338" endtime="20250227 16:34:07.339"/>
</kw>
<msg timestamp="20250227 16:34:07.339" level="INFO">${random} = ozone-test-5277845382</msg>
<status status="PASS" starttime="20250227 16:34:07.338" endtime="20250227 16:34:07.339"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:07.339" level="INFO">${PREFIX} = ozone-test-5277845382</msg>
<status status="PASS" starttime="20250227 16:34:07.339" endtime="20250227 16:34:07.339"/>
</kw>
<status status="PASS" starttime="20250227 16:34:07.338" endtime="20250227 16:34:07.339"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:07.342" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://bucket-diiacmavow/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:08.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:08.437" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250227 16:34:07.340" endtime="20250227 16:34:08.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:08.438" level="INFO">Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (12.4 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (18.7 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (22.8 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (24.9 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (26.8 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (30.4 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (34.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (36.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (41.7 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (44.9 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (46.3 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (48.1 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (49.7 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (51.3 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (52.7 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (54.0 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (58.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (59.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (61.4 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (63.6 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (64.5 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (67.6 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (68.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (70.3 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (71.1 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (71.7 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (73.2 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (74.1 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (74.3 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (75.7 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (76.5 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (77.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (78.8 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (79.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (79.7 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (80.9 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (81.5 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (82.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (83.2 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (83.6 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (84.9 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (85.9 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (87.2 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (88.3 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (89.6 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (90.2 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (89.5 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (90.7 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (91.5 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (92.6 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (93.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (94.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (95.0 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (95.7 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (96.7 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (97.8 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (98.8 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (99.4 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (100.6 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (100.7 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (101.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (102.3 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (103.5 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (103.6 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (99.5 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (100.4 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (100.6 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (101.1 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (101.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (101.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://bucket-diiacmavow/mpyawscli        </msg>
<status status="PASS" starttime="20250227 16:34:08.438" endtime="20250227 16:34:08.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:08.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:08.439" endtime="20250227 16:34:08.439"/>
</kw>
<status status="PASS" starttime="20250227 16:34:07.340" endtime="20250227 16:34:08.439"/>
</kw>
<msg timestamp="20250227 16:34:08.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:07.340" endtime="20250227 16:34:08.439"/>
</kw>
<msg timestamp="20250227 16:34:08.439" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250227 16:34:07.340" endtime="20250227 16:34:08.439"/>
</kw>
<status status="PASS" starttime="20250227 16:34:07.339" endtime="20250227 16:34:08.440"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:08.443" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-diiacmavow/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:09.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:09.198" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250227 16:34:08.441" endtime="20250227 16:34:09.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:09.199" level="INFO">Completed 256.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (12.2 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (15.9 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (19.4 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (21.1 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (22.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (24.3 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (30.5 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (32.1 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (37.7 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (41.0 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (42.6 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (44.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (46.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (48.2 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (49.6 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (51.1 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (52.7 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (55.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (58.0 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (60.4 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (61.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (63.3 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (64.6 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (65.8 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (67.1 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (68.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (69.9 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (71.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (72.2 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (69.7 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (70.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (71.7 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (73.0 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (70.2 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (71.1 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (71.8 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (59.4 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (61.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (62.2 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (63.0 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (63.9 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (64.7 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (66.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (68.5 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (69.5 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (70.5 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (71.2 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (72.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (73.0 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (73.7 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (74.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (76.0 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (76.9 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (77.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (78.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (79.6 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (79.5 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (80.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (81.1 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (81.4 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (82.3 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (83.1 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (84.0 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (84.9 MiB/s) with 1 file(s) remaining
download: s3://bucket-diiacmavow/mpyawscli to ../../tmp/22mb.result</msg>
<status status="PASS" starttime="20250227 16:34:09.198" endtime="20250227 16:34:09.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:09.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:09.199" endtime="20250227 16:34:09.199"/>
</kw>
<status status="PASS" starttime="20250227 16:34:08.441" endtime="20250227 16:34:09.200"/>
</kw>
<msg timestamp="20250227 16:34:09.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:08.440" endtime="20250227 16:34:09.200"/>
</kw>
<msg timestamp="20250227 16:34:09.200" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250227 16:34:08.440" endtime="20250227 16:34:09.200"/>
</kw>
<status status="PASS" starttime="20250227 16:34:08.440" endtime="20250227 16:34:09.200"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:09.210" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:09.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:09.712" level="INFO">${output} = delete: s3://bucket-diiacmavow/mpyawscli</msg>
<status status="PASS" starttime="20250227 16:34:09.203" endtime="20250227 16:34:09.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:09.713" level="INFO">delete: s3://bucket-diiacmavow/mpyawscli</msg>
<status status="PASS" starttime="20250227 16:34:09.713" endtime="20250227 16:34:09.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:09.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:09.713" endtime="20250227 16:34:09.714"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.201" endtime="20250227 16:34:09.714"/>
</kw>
<msg timestamp="20250227 16:34:09.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:09.201" endtime="20250227 16:34:09.714"/>
</kw>
<msg timestamp="20250227 16:34:09.714" level="INFO">${output} = delete: s3://bucket-diiacmavow/mpyawscli</msg>
<status status="PASS" starttime="20250227 16:34:09.201" endtime="20250227 16:34:09.714"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.200" endtime="20250227 16:34:09.714"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:09.717" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:09.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:09.761" level="INFO">${output} = d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.715" endtime="20250227 16:34:09.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:09.762" level="INFO">d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.761" endtime="20250227 16:34:09.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:09.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:09.762" endtime="20250227 16:34:09.762"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.715" endtime="20250227 16:34:09.762"/>
</kw>
<msg timestamp="20250227 16:34:09.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:09.715" endtime="20250227 16:34:09.762"/>
</kw>
<msg timestamp="20250227 16:34:09.763" level="INFO">${checksumbefore} = d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.715" endtime="20250227 16:34:09.763"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:09.766" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:09.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:09.808" level="INFO">${output} = d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.763" endtime="20250227 16:34:09.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:09.809" level="INFO">d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.809" endtime="20250227 16:34:09.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:09.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:09.809" endtime="20250227 16:34:09.810"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.763" endtime="20250227 16:34:09.810"/>
</kw>
<msg timestamp="20250227 16:34:09.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:09.763" endtime="20250227 16:34:09.810"/>
</kw>
<msg timestamp="20250227 16:34:09.810" level="INFO">${checksumafter} = d8079497c6eeabee6b193e4807c188e8</msg>
<status status="PASS" starttime="20250227 16:34:09.763" endtime="20250227 16:34:09.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:09.810" endtime="20250227 16:34:09.810"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.714" endtime="20250227 16:34:09.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:07.337" endtime="20250227 16:34:09.811"/>
</test>
<test id="s1-s8-t13" name="Test Multipart Upload Put With Copy" line="235">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:09.812" level="INFO">${randStr} = 7705814677</msg>
<status status="PASS" starttime="20250227 16:34:09.812" endtime="20250227 16:34:09.812"/>
</kw>
<msg timestamp="20250227 16:34:09.812" level="INFO">${random} = ozone-test-7705814677</msg>
<status status="PASS" starttime="20250227 16:34:09.812" endtime="20250227 16:34:09.812"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:09.813" level="INFO">${PREFIX} = ozone-test-7705814677</msg>
<status status="PASS" starttime="20250227 16:34:09.813" endtime="20250227 16:34:09.813"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.811" endtime="20250227 16:34:09.813"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:09.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7705814677/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:10.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:10.463" level="INFO">${output} = {
    "ETag": "\"2bd464090908c176e61c4908210ccfbd\""
}</msg>
<status status="PASS" starttime="20250227 16:34:09.814" endtime="20250227 16:34:10.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:10.464" level="INFO">{
    "ETag": "\"2bd464090908c176e61c4908210ccfbd\""
}</msg>
<status status="PASS" starttime="20250227 16:34:10.463" endtime="20250227 16:34:10.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:10.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:10.464" endtime="20250227 16:34:10.464"/>
</kw>
<status status="PASS" starttime="20250227 16:34:09.814" endtime="20250227 16:34:10.464"/>
</kw>
<msg timestamp="20250227 16:34:10.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:09.814" endtime="20250227 16:34:10.465"/>
</kw>
<msg timestamp="20250227 16:34:10.465" level="INFO">${output} = {
    "ETag": "\"2bd464090908c176e61c4908210ccfbd\""
}</msg>
<status status="PASS" starttime="20250227 16:34:09.813" endtime="20250227 16:34:10.465"/>
</kw>
<msg timestamp="20250227 16:34:10.465" level="INFO">${result} = {
    "ETag": "\"2bd464090908c176e61c4908210ccfbd\""
}</msg>
<status status="PASS" starttime="20250227 16:34:09.813" endtime="20250227 16:34:10.465"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:10.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7705814677/copytest/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:10.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:10.949" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "UploadId": "01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386"
}</msg>
<status status="PASS" starttime="20250227 16:34:10.467" endtime="20250227 16:34:10.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:10.950" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "UploadId": "01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386"
}</msg>
<status status="PASS" starttime="20250227 16:34:10.950" endtime="20250227 16:34:10.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:10.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:10.950" endtime="20250227 16:34:10.951"/>
</kw>
<msg timestamp="20250227 16:34:10.951" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "UploadId": "01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386"
}</msg>
<status status="PASS" starttime="20250227 16:34:10.466" endtime="20250227 16:34:10.951"/>
</kw>
<msg timestamp="20250227 16:34:10.951" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "UploadId": "01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386"
}</msg>
<status status="PASS" starttime="20250227 16:34:10.466" endtime="20250227 16:34:10.951"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:10.951" endtime="20250227 16:34:10.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:10.952" endtime="20250227 16:34:10.952"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:10.955" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "UploadId": "01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:10.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:10.960" level="INFO">${output} = 01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386</msg>
<status status="PASS" starttime="20250227 16:34:10.952" endtime="20250227 16:34:10.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:10.960" level="INFO">01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386</msg>
<status status="PASS" starttime="20250227 16:34:10.960" endtime="20250227 16:34:10.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:10.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:10.961" endtime="20250227 16:34:10.961"/>
</kw>
<msg timestamp="20250227 16:34:10.961" level="INFO">${upload_id} = 01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386</msg>
<status status="PASS" starttime="20250227 16:34:10.952" endtime="20250227 16:34:10.961"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:10.961" endtime="20250227 16:34:10.961"/>
</return>
<status status="PASS" starttime="20250227 16:34:10.951" endtime="20250227 16:34:10.961"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:10.961" endtime="20250227 16:34:10.961"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:10.961" endtime="20250227 16:34:10.961"/>
</branch>
<status status="PASS" starttime="20250227 16:34:10.951" endtime="20250227 16:34:10.961"/>
</if>
<msg timestamp="20250227 16:34:10.962" level="INFO">${uploadID} = 01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386</msg>
<status status="PASS" starttime="20250227 16:34:10.465" endtime="20250227 16:34:10.962"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:10.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-7705814677/copytest/destination --upload-id 01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386 --part-number 1 --copy-source bucket-diiacmavow/ozone-test-7705814677/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:11.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:11.673" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "2bd464090908c176e61c4908210ccfbd",
        "LastModified": "2025-02-27T16:34:11.616Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:10.963" endtime="20250227 16:34:11.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:11.674" level="INFO">{
    "CopyPartResult": {
        "ETag": "2bd464090908c176e61c4908210ccfbd",
        "LastModified": "2025-02-27T16:34:11.616Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:11.673" endtime="20250227 16:34:11.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:11.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:11.674" endtime="20250227 16:34:11.674"/>
</kw>
<status status="PASS" starttime="20250227 16:34:10.963" endtime="20250227 16:34:11.674"/>
</kw>
<msg timestamp="20250227 16:34:11.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:10.963" endtime="20250227 16:34:11.675"/>
</kw>
<msg timestamp="20250227 16:34:11.675" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "2bd464090908c176e61c4908210ccfbd",
        "LastModified": "2025-02-27T16:34:11.616Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:10.962" endtime="20250227 16:34:11.675"/>
</kw>
<msg timestamp="20250227 16:34:11.675" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "2bd464090908c176e61c4908210ccfbd",
        "LastModified": "2025-02-27T16:34:11.616Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:10.962" endtime="20250227 16:34:11.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:11.675" endtime="20250227 16:34:11.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:11.675" endtime="20250227 16:34:11.676"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:11.679" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "2bd464090908c176e61c4908210ccfbd",
        "LastModified": "2025-02-27T16:34:11.616Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:11.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:11.684" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:11.676" endtime="20250227 16:34:11.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:11.685" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:11.685" endtime="20250227 16:34:11.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:11.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:11.685" endtime="20250227 16:34:11.686"/>
</kw>
<msg timestamp="20250227 16:34:11.686" level="INFO">${eTag1} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:11.676" endtime="20250227 16:34:11.686"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:11.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7705814677/copytest/destination --upload-id 01954842-2b52-75d7-8789-1a0d119eae9f-114076814599651386 --multipart-upload 'Parts=[{ETag=2bd464090908c176e61c4908210ccfbd,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:12.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:12.168" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\""
}</msg>
<status status="PASS" starttime="20250227 16:34:11.688" endtime="20250227 16:34:12.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:12.169" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\""
}</msg>
<status status="PASS" starttime="20250227 16:34:12.168" endtime="20250227 16:34:12.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:12.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:12.169" endtime="20250227 16:34:12.169"/>
</kw>
<msg timestamp="20250227 16:34:12.169" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\""
}</msg>
<status status="PASS" starttime="20250227 16:34:11.687" endtime="20250227 16:34:12.169"/>
</kw>
<msg timestamp="20250227 16:34:12.170" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\""
}</msg>
<status status="PASS" starttime="20250227 16:34:11.687" endtime="20250227 16:34:12.170"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:12.170" endtime="20250227 16:34:12.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:12.170" endtime="20250227 16:34:12.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:12.171" endtime="20250227 16:34:12.171"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:12.174" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7705814677/copytest/destination",
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:12.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:12.179" level="INFO">${output} = "749e7240a77a3bdf9cfebed59435afb9-1"</msg>
<status status="PASS" starttime="20250227 16:34:12.172" endtime="20250227 16:34:12.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:12.180" level="INFO">"749e7240a77a3bdf9cfebed59435afb9-1"</msg>
<status status="PASS" starttime="20250227 16:34:12.179" endtime="20250227 16:34:12.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:12.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:12.180" endtime="20250227 16:34:12.180"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.172" endtime="20250227 16:34:12.180"/>
</kw>
<msg timestamp="20250227 16:34:12.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:12.171" endtime="20250227 16:34:12.180"/>
</kw>
<msg timestamp="20250227 16:34:12.181" level="INFO">${etag} = "749e7240a77a3bdf9cfebed59435afb9-1"</msg>
<status status="PASS" starttime="20250227 16:34:12.171" endtime="20250227 16:34:12.181"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:34:12.181" endtime="20250227 16:34:12.181"/>
</return>
<status status="PASS" starttime="20250227 16:34:12.170" endtime="20250227 16:34:12.181"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:12.181" endtime="20250227 16:34:12.181"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:12.181" endtime="20250227 16:34:12.181"/>
</branch>
<status status="PASS" starttime="20250227 16:34:12.170" endtime="20250227 16:34:12.181"/>
</if>
<status status="PASS" starttime="20250227 16:34:11.686" endtime="20250227 16:34:12.181"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:12.184" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7705814677/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:12.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:12.714" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:12 GMT",
    "ContentLength": 5243904,
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:12.182" endtime="20250227 16:34:12.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:12.715" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:12 GMT",
    "ContentLength": 5243904,
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:12 GMT",
    "Metadata": {},
    "PartsCount": 1,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:12 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:12.715" endtime="20250227 16:34:12.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:12.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:12.716" endtime="20250227 16:34:12.716"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.182" endtime="20250227 16:34:12.716"/>
</kw>
<msg timestamp="20250227 16:34:12.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:12.182" endtime="20250227 16:34:12.716"/>
</kw>
<msg timestamp="20250227 16:34:12.716" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:12 GMT",
    "ContentLength": 5243904,
    "ETag": "\"749e7240a77a3bdf9cfebed59435afb9-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:34:12.181" endtime="20250227 16:34:12.716"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.181" endtime="20250227 16:34:12.717"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:12.720" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:12.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:12.734" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.718" endtime="20250227 16:34:12.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:12.735" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.735" endtime="20250227 16:34:12.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:12.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:12.735" endtime="20250227 16:34:12.736"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.718" endtime="20250227 16:34:12.736"/>
</kw>
<msg timestamp="20250227 16:34:12.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:12.717" endtime="20250227 16:34:12.737"/>
</kw>
<msg timestamp="20250227 16:34:12.737" level="INFO">${checksumbefore} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.717" endtime="20250227 16:34:12.737"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:12.740" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:12.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:12.753" level="INFO">${output} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.738" endtime="20250227 16:34:12.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:12.754" level="INFO">2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.753" endtime="20250227 16:34:12.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:12.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:12.754" endtime="20250227 16:34:12.754"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.737" endtime="20250227 16:34:12.754"/>
</kw>
<msg timestamp="20250227 16:34:12.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:12.737" endtime="20250227 16:34:12.754"/>
</kw>
<msg timestamp="20250227 16:34:12.754" level="INFO">${checksumafter} = 2bd464090908c176e61c4908210ccfbd</msg>
<status status="PASS" starttime="20250227 16:34:12.737" endtime="20250227 16:34:12.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:12.755" endtime="20250227 16:34:12.755"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.717" endtime="20250227 16:34:12.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:09.811" endtime="20250227 16:34:12.755"/>
</test>
<test id="s1-s8-t14" name="Test Multipart Upload Put With Copy and range" line="251">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:12.757" level="INFO">${randStr} = 9870874286</msg>
<status status="PASS" starttime="20250227 16:34:12.757" endtime="20250227 16:34:12.757"/>
</kw>
<msg timestamp="20250227 16:34:12.757" level="INFO">${random} = ozone-test-9870874286</msg>
<status status="PASS" starttime="20250227 16:34:12.756" endtime="20250227 16:34:12.757"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:12.757" level="INFO">${PREFIX} = ozone-test-9870874286</msg>
<status status="PASS" starttime="20250227 16:34:12.757" endtime="20250227 16:34:12.757"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.756" endtime="20250227 16:34:12.757"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:12.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:13.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:13.493" level="INFO">${output} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:12.759" endtime="20250227 16:34:13.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:13.494" level="INFO">{
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:13.493" endtime="20250227 16:34:13.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:13.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:13.494" endtime="20250227 16:34:13.495"/>
</kw>
<status status="PASS" starttime="20250227 16:34:12.758" endtime="20250227 16:34:13.495"/>
</kw>
<msg timestamp="20250227 16:34:13.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:12.758" endtime="20250227 16:34:13.495"/>
</kw>
<msg timestamp="20250227 16:34:13.495" level="INFO">${output} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:12.758" endtime="20250227 16:34:13.495"/>
</kw>
<msg timestamp="20250227 16:34:13.495" level="INFO">${result} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:12.758" endtime="20250227 16:34:13.495"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:13.499" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:13.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:13.964" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "UploadId": "01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965"
}</msg>
<status status="PASS" starttime="20250227 16:34:13.497" endtime="20250227 16:34:13.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:13.965" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "UploadId": "01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965"
}</msg>
<status status="PASS" starttime="20250227 16:34:13.965" endtime="20250227 16:34:13.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:13.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:13.965" endtime="20250227 16:34:13.966"/>
</kw>
<msg timestamp="20250227 16:34:13.966" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "UploadId": "01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965"
}</msg>
<status status="PASS" starttime="20250227 16:34:13.497" endtime="20250227 16:34:13.966"/>
</kw>
<msg timestamp="20250227 16:34:13.966" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "UploadId": "01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965"
}</msg>
<status status="PASS" starttime="20250227 16:34:13.496" endtime="20250227 16:34:13.966"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:13.966" endtime="20250227 16:34:13.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:13.967" endtime="20250227 16:34:13.967"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:13.970" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "UploadId": "01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:13.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:13.975" level="INFO">${output} = 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965</msg>
<status status="PASS" starttime="20250227 16:34:13.968" endtime="20250227 16:34:13.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:13.976" level="INFO">01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965</msg>
<status status="PASS" starttime="20250227 16:34:13.975" endtime="20250227 16:34:13.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:13.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:13.976" endtime="20250227 16:34:13.976"/>
</kw>
<msg timestamp="20250227 16:34:13.976" level="INFO">${upload_id} = 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965</msg>
<status status="PASS" starttime="20250227 16:34:13.967" endtime="20250227 16:34:13.976"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:13.977" endtime="20250227 16:34:13.977"/>
</return>
<status status="PASS" starttime="20250227 16:34:13.966" endtime="20250227 16:34:13.977"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:13.977" endtime="20250227 16:34:13.977"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:13.977" endtime="20250227 16:34:13.977"/>
</branch>
<status status="PASS" starttime="20250227 16:34:13.966" endtime="20250227 16:34:13.977"/>
</if>
<msg timestamp="20250227 16:34:13.977" level="INFO">${uploadID} = 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965</msg>
<status status="PASS" starttime="20250227 16:34:13.495" endtime="20250227 16:34:13.977"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:13.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/destination --upload-id 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965 --part-number 1 --copy-source bucket-diiacmavow/ozone-test-9870874286/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:14.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:14.726" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:14.675Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:13.979" endtime="20250227 16:34:14.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:14.727" level="INFO">{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:14.675Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:14.726" endtime="20250227 16:34:14.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:14.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:14.727" endtime="20250227 16:34:14.728"/>
</kw>
<status status="PASS" starttime="20250227 16:34:13.978" endtime="20250227 16:34:14.728"/>
</kw>
<msg timestamp="20250227 16:34:14.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:13.978" endtime="20250227 16:34:14.728"/>
</kw>
<msg timestamp="20250227 16:34:14.728" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:14.675Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:13.978" endtime="20250227 16:34:14.728"/>
</kw>
<msg timestamp="20250227 16:34:14.728" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:14.675Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:13.977" endtime="20250227 16:34:14.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:14.728" endtime="20250227 16:34:14.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:14.729" endtime="20250227 16:34:14.729"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:14.732" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:14.675Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:14.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:14.737" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:14.729" endtime="20250227 16:34:14.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:14.738" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:14.738" endtime="20250227 16:34:14.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:14.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:14.738" endtime="20250227 16:34:14.739"/>
</kw>
<msg timestamp="20250227 16:34:14.739" level="INFO">${eTag1} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:14.729" endtime="20250227 16:34:14.739"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:14.743" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/destination --upload-id 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965 --part-number 2 --copy-source bucket-diiacmavow/ozone-test-9870874286/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:15.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:15.268" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:15.220Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:14.740" endtime="20250227 16:34:15.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:15.269" level="INFO">{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:15.220Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:15.269" endtime="20250227 16:34:15.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:15.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:15.269" endtime="20250227 16:34:15.270"/>
</kw>
<status status="PASS" starttime="20250227 16:34:14.740" endtime="20250227 16:34:15.270"/>
</kw>
<msg timestamp="20250227 16:34:15.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:14.740" endtime="20250227 16:34:15.270"/>
</kw>
<msg timestamp="20250227 16:34:15.270" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:15.220Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:14.740" endtime="20250227 16:34:15.270"/>
</kw>
<msg timestamp="20250227 16:34:15.270" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:15.220Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:14.739" endtime="20250227 16:34:15.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:15.270" endtime="20250227 16:34:15.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:15.271" endtime="20250227 16:34:15.271"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:15.274" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:15.220Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:15.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:15.279" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:15.271" endtime="20250227 16:34:15.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:15.279" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:15.279" endtime="20250227 16:34:15.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:15.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:15.279" endtime="20250227 16:34:15.280"/>
</kw>
<msg timestamp="20250227 16:34:15.280" level="INFO">${eTag2} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:15.271" endtime="20250227 16:34:15.280"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:15.283" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/destination --upload-id 01954842-371a-74a6-ae5f-2c9eeaeb9bfb-114076814797307965 --multipart-upload 'Parts=[{ETag=437d57874c622f827c1030cfe5308348,PartNumber=1},{ETag=437d57874c622f827c1030cfe5308348,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:15.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:15.762" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:15.281" endtime="20250227 16:34:15.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:15.763" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:15.763" endtime="20250227 16:34:15.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:15.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:15.763" endtime="20250227 16:34:15.764"/>
</kw>
<msg timestamp="20250227 16:34:15.764" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:15.281" endtime="20250227 16:34:15.764"/>
</kw>
<msg timestamp="20250227 16:34:15.764" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:15.281" endtime="20250227 16:34:15.764"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:15.764" endtime="20250227 16:34:15.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:15.765" endtime="20250227 16:34:15.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:15.765" endtime="20250227 16:34:15.765"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:15.768" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9870874286/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:15.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:15.773" level="INFO">${output} = "25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:15.766" endtime="20250227 16:34:15.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:15.774" level="INFO">"25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:15.774" endtime="20250227 16:34:15.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:15.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:15.774" endtime="20250227 16:34:15.774"/>
</kw>
<status status="PASS" starttime="20250227 16:34:15.766" endtime="20250227 16:34:15.775"/>
</kw>
<msg timestamp="20250227 16:34:15.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:15.766" endtime="20250227 16:34:15.775"/>
</kw>
<msg timestamp="20250227 16:34:15.775" level="INFO">${etag} = "25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:15.765" endtime="20250227 16:34:15.775"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:34:15.775" endtime="20250227 16:34:15.775"/>
</return>
<status status="PASS" starttime="20250227 16:34:15.764" endtime="20250227 16:34:15.775"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:15.775" endtime="20250227 16:34:15.775"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:15.775" endtime="20250227 16:34:15.775"/>
</branch>
<status status="PASS" starttime="20250227 16:34:15.764" endtime="20250227 16:34:15.775"/>
</if>
<status status="PASS" starttime="20250227 16:34:15.280" endtime="20250227 16:34:15.775"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:15.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-9870874286/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:16.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:16.356" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250227 16:34:15.777" endtime="20250227 16:34:16.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:16.357" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:16 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:16 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:16.356" endtime="20250227 16:34:16.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:16.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:16.357" endtime="20250227 16:34:16.357"/>
</kw>
<status status="PASS" starttime="20250227 16:34:15.776" endtime="20250227 16:34:16.357"/>
</kw>
<msg timestamp="20250227 16:34:16.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:15.776" endtime="20250227 16:34:16.357"/>
</kw>
<msg timestamp="20250227 16:34:16.358" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250227 16:34:15.776" endtime="20250227 16:34:16.358"/>
</kw>
<status status="PASS" starttime="20250227 16:34:15.775" endtime="20250227 16:34:16.358"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:16.362" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:16.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:16.384" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.359" endtime="20250227 16:34:16.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:16.384" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.384" endtime="20250227 16:34:16.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:16.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:16.385" endtime="20250227 16:34:16.385"/>
</kw>
<status status="PASS" starttime="20250227 16:34:16.359" endtime="20250227 16:34:16.385"/>
</kw>
<msg timestamp="20250227 16:34:16.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:16.359" endtime="20250227 16:34:16.385"/>
</kw>
<msg timestamp="20250227 16:34:16.385" level="INFO">${checksumbefore} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.358" endtime="20250227 16:34:16.385"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:16.388" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:16.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:16.410" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.386" endtime="20250227 16:34:16.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:16.411" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.410" endtime="20250227 16:34:16.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:16.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:16.411" endtime="20250227 16:34:16.411"/>
</kw>
<status status="PASS" starttime="20250227 16:34:16.386" endtime="20250227 16:34:16.411"/>
</kw>
<msg timestamp="20250227 16:34:16.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:16.386" endtime="20250227 16:34:16.411"/>
</kw>
<msg timestamp="20250227 16:34:16.412" level="INFO">${checksumafter} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:16.385" endtime="20250227 16:34:16.412"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:16.412" endtime="20250227 16:34:16.412"/>
</kw>
<status status="PASS" starttime="20250227 16:34:16.358" endtime="20250227 16:34:16.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:12.755" endtime="20250227 16:34:16.412"/>
</test>
<test id="s1-s8-t15" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="273">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:16.414" level="INFO">${randStr} = 9639950216</msg>
<status status="PASS" starttime="20250227 16:34:16.414" endtime="20250227 16:34:16.414"/>
</kw>
<msg timestamp="20250227 16:34:16.414" level="INFO">${random} = ozone-test-9639950216</msg>
<status status="PASS" starttime="20250227 16:34:16.413" endtime="20250227 16:34:16.414"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:16.414" level="INFO">${PREFIX} = ozone-test-9639950216</msg>
<status status="PASS" starttime="20250227 16:34:16.414" endtime="20250227 16:34:16.415"/>
</kw>
<status status="PASS" starttime="20250227 16:34:16.413" endtime="20250227 16:34:16.415"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250227 16:34:16.415" level="INFO">${curDate} = 2025-02-27 16:34:16.415</msg>
<status status="PASS" starttime="20250227 16:34:16.415" endtime="20250227 16:34:16.415"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20250227 16:34:16.418" level="INFO">${beforeCreate} = 2025-02-26 16:34:16.415</msg>
<status status="PASS" starttime="20250227 16:34:16.415" endtime="20250227 16:34:16.418"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250227 16:34:16.418" level="INFO">${tomorrow} = 2025-02-28 16:34:16.415</msg>
<status status="PASS" starttime="20250227 16:34:16.418" endtime="20250227 16:34:16.418"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:16.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:17.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:17.070" level="INFO">${output} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:16.420" endtime="20250227 16:34:17.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:17.071" level="INFO">{
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:17.071" endtime="20250227 16:34:17.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:17.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:17.071" endtime="20250227 16:34:17.072"/>
</kw>
<status status="PASS" starttime="20250227 16:34:16.419" endtime="20250227 16:34:17.072"/>
</kw>
<msg timestamp="20250227 16:34:17.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:16.419" endtime="20250227 16:34:17.072"/>
</kw>
<msg timestamp="20250227 16:34:17.072" level="INFO">${output} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:16.419" endtime="20250227 16:34:17.073"/>
</kw>
<msg timestamp="20250227 16:34:17.073" level="INFO">${result} = {
    "ETag": "\"437d57874c622f827c1030cfe5308348\""
}</msg>
<status status="PASS" starttime="20250227 16:34:16.418" endtime="20250227 16:34:17.073"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:17.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:17.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:17.547" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "UploadId": "01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457"
}</msg>
<status status="PASS" starttime="20250227 16:34:17.075" endtime="20250227 16:34:17.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:17.548" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "UploadId": "01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457"
}</msg>
<status status="PASS" starttime="20250227 16:34:17.548" endtime="20250227 16:34:17.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:17.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:17.548" endtime="20250227 16:34:17.549"/>
</kw>
<msg timestamp="20250227 16:34:17.549" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "UploadId": "01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457"
}</msg>
<status status="PASS" starttime="20250227 16:34:17.074" endtime="20250227 16:34:17.549"/>
</kw>
<msg timestamp="20250227 16:34:17.549" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "UploadId": "01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457"
}</msg>
<status status="PASS" starttime="20250227 16:34:17.074" endtime="20250227 16:34:17.549"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:17.550" endtime="20250227 16:34:17.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:17.550" endtime="20250227 16:34:17.550"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:17.553" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "UploadId": "01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:17.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:17.558" level="INFO">${output} = 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457</msg>
<status status="PASS" starttime="20250227 16:34:17.551" endtime="20250227 16:34:17.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:17.559" level="INFO">01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457</msg>
<status status="PASS" starttime="20250227 16:34:17.558" endtime="20250227 16:34:17.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:17.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:17.559" endtime="20250227 16:34:17.559"/>
</kw>
<msg timestamp="20250227 16:34:17.559" level="INFO">${upload_id} = 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457</msg>
<status status="PASS" starttime="20250227 16:34:17.550" endtime="20250227 16:34:17.559"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:17.559" endtime="20250227 16:34:17.559"/>
</return>
<status status="PASS" starttime="20250227 16:34:17.549" endtime="20250227 16:34:17.560"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:17.560" endtime="20250227 16:34:17.560"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:17.560" endtime="20250227 16:34:17.560"/>
</branch>
<status status="PASS" starttime="20250227 16:34:17.549" endtime="20250227 16:34:17.560"/>
</if>
<msg timestamp="20250227 16:34:17.560" level="INFO">${uploadID} = 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457</msg>
<status status="PASS" starttime="20250227 16:34:17.073" endtime="20250227 16:34:17.560"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:17.563" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:18.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:18.052" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:17 GMT",
    "ContentLength": 10485760,
    "ETag": "\"437d57874c622f827c1030cfe5308348\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250227 16:34:17.561" endtime="20250227 16:34:18.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:18.053" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:34:17 GMT",
    "ContentLength": 10485760,
    "ETag": "\"437d57874c622f827c1030cfe5308348\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:18 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:34:18 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:18.052" endtime="20250227 16:34:18.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:18.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:18.053" endtime="20250227 16:34:18.053"/>
</kw>
<status status="PASS" starttime="20250227 16:34:17.561" endtime="20250227 16:34:18.053"/>
</kw>
<msg timestamp="20250227 16:34:18.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:17.561" endtime="20250227 16:34:18.054"/>
</kw>
<msg timestamp="20250227 16:34:18.054" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:17 GMT",
    "ContentLength": 10485760,
    "ETag": "\"437d57874c622f827c1030cfe5308348\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250227 16:34:17.561" endtime="20250227 16:34:18.054"/>
</kw>
<msg timestamp="20250227 16:34:18.054" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:17 GMT",
    "ContentLength": 10485760,
    "ETag": "\"437d57874c622f827c1030cfe5308348\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250227 16:34:17.560" endtime="20250227 16:34:18.054"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:18.057" level="INFO">Running command 'echo '{
    "LastModified": "Thu, 27 Feb 2025 16:34:17 GMT",
    "ContentLength": 10485760,
    "ETag": "\"437d57874c622f827c1030cfe5308348\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:18 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:34:18 GMT"
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:18.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:18.062" level="INFO">${output} = Thu, 27 Feb 2025 16:34:17 GMT</msg>
<status status="PASS" starttime="20250227 16:34:18.054" endtime="20250227 16:34:18.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:18.062" level="INFO">Thu, 27 Feb 2025 16:34:17 GMT</msg>
<status status="PASS" starttime="20250227 16:34:18.062" endtime="20250227 16:34:18.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:18.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:18.063" endtime="20250227 16:34:18.063"/>
</kw>
<msg timestamp="20250227 16:34:18.063" level="INFO">${lastModified} = Thu, 27 Feb 2025 16:34:17 GMT</msg>
<status status="PASS" starttime="20250227 16:34:18.054" endtime="20250227 16:34:18.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:18.063" endtime="20250227 16:34:18.064"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250227 16:34:18.065" level="INFO">${lmDate} = 2025-02-27 16:34:17.000</msg>
<status status="PASS" starttime="20250227 16:34:18.064" endtime="20250227 16:34:18.065"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250227 16:34:18.066" level="INFO">${afterCreate} = 2025-02-27 16:34:20.000</msg>
<status status="PASS" starttime="20250227 16:34:18.065" endtime="20250227 16:34:18.066"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250227 16:34:18.066" level="INFO">${latestDate} = 2025-02-27 16:34:18.066</msg>
<status status="PASS" starttime="20250227 16:34:18.066" endtime="20250227 16:34:18.066"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20250227 16:34:18.067" level="INFO">${sleepSeconds} = 1.934</msg>
<status status="PASS" starttime="20250227 16:34:18.067" endtime="20250227 16:34:18.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250227 16:34:20.002" level="INFO">Slept 1 second 934 milliseconds</msg>
<status status="PASS" starttime="20250227 16:34:18.067" endtime="20250227 16:34:20.002"/>
</kw>
<status status="PASS" starttime="20250227 16:34:18.067" endtime="20250227 16:34:20.002"/>
</kw>
<status status="PASS" starttime="20250227 16:34:18.066" endtime="20250227 16:34:20.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:20.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --part-number 1 --copy-source bucket-diiacmavow/ozone-test-9639950216/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-27 16:34:20.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:20.464" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:20.464" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.003" endtime="20250227 16:34:20.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:20.465" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.464" endtime="20250227 16:34:20.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:20.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:20.465" endtime="20250227 16:34:20.465"/>
</kw>
<msg timestamp="20250227 16:34:20.465" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.003" endtime="20250227 16:34:20.465"/>
</kw>
<msg timestamp="20250227 16:34:20.465" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.002" endtime="20250227 16:34:20.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:20.466" endtime="20250227 16:34:20.466"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:20.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --part-number 2 --copy-source bucket-diiacmavow/ozone-test-9639950216/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-26 16:34:16.415' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:20.939" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:20.939" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.467" endtime="20250227 16:34:20.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:20.940" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.940" endtime="20250227 16:34:20.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:20.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:20.940" endtime="20250227 16:34:20.941"/>
</kw>
<msg timestamp="20250227 16:34:20.941" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.467" endtime="20250227 16:34:20.941"/>
</kw>
<msg timestamp="20250227 16:34:20.941" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250227 16:34:20.466" endtime="20250227 16:34:20.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:20.941" endtime="20250227 16:34:20.941"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:20.945" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --part-number 1 --copy-source bucket-diiacmavow/ozone-test-9639950216/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-26 16:34:16.415' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:21.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:21.819" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:21.762Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:20.943" endtime="20250227 16:34:21.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:21.820" level="INFO">{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:21.762Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:21.820" endtime="20250227 16:34:21.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:21.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:21.821" endtime="20250227 16:34:21.821"/>
</kw>
<msg timestamp="20250227 16:34:21.821" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:21.762Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:20.942" endtime="20250227 16:34:21.821"/>
</kw>
<msg timestamp="20250227 16:34:21.821" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:21.762Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:20.941" endtime="20250227 16:34:21.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:21.821" endtime="20250227 16:34:21.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:21.822" endtime="20250227 16:34:21.822"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:21.825" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:21.762Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:21.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:21.830" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:21.822" endtime="20250227 16:34:21.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:21.830" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:21.830" endtime="20250227 16:34:21.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:21.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:21.830" endtime="20250227 16:34:21.831"/>
</kw>
<msg timestamp="20250227 16:34:21.831" level="INFO">${eTag1} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:21.822" endtime="20250227 16:34:21.831"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:21.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --part-number 2 --copy-source bucket-diiacmavow/ozone-test-9639950216/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-27 16:34:20.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:22.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:22.346" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:22.301Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:21.832" endtime="20250227 16:34:22.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:22.347" level="INFO">{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:22.301Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:22.346" endtime="20250227 16:34:22.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:22.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:22.347" endtime="20250227 16:34:22.347"/>
</kw>
<msg timestamp="20250227 16:34:22.348" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:22.301Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:21.832" endtime="20250227 16:34:22.348"/>
</kw>
<msg timestamp="20250227 16:34:22.348" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:22.301Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:21.831" endtime="20250227 16:34:22.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:22.348" endtime="20250227 16:34:22.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:22.348" endtime="20250227 16:34:22.348"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:22.351" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:22.301Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:22.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:22.356" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:22.349" endtime="20250227 16:34:22.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:22.357" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:22.357" endtime="20250227 16:34:22.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:22.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:22.357" endtime="20250227 16:34:22.357"/>
</kw>
<msg timestamp="20250227 16:34:22.358" level="INFO">${eTag2} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:22.348" endtime="20250227 16:34:22.358"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:22.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --part-number 1 --copy-source bucket-diiacmavow/ozone-test-9639950216/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-28 16:34:16.415' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:23.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:23.248" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:23.170Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:22.359" endtime="20250227 16:34:23.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:23.249" level="INFO">{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:23.170Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:23.248" endtime="20250227 16:34:23.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:23.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:23.249" endtime="20250227 16:34:23.249"/>
</kw>
<msg timestamp="20250227 16:34:23.249" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:23.170Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:22.359" endtime="20250227 16:34:23.249"/>
</kw>
<msg timestamp="20250227 16:34:23.250" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:23.170Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:22.358" endtime="20250227 16:34:23.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:23.250" endtime="20250227 16:34:23.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:23.250" endtime="20250227 16:34:23.250"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:23.253" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "437d57874c622f827c1030cfe5308348",
        "LastModified": "2025-02-27T16:34:23.170Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:23.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:23.259" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:23.251" endtime="20250227 16:34:23.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:23.260" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:23.259" endtime="20250227 16:34:23.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:23.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:23.260" endtime="20250227 16:34:23.260"/>
</kw>
<msg timestamp="20250227 16:34:23.261" level="INFO">${eTag1} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:23.250" endtime="20250227 16:34:23.261"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:23.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination --upload-id 01954842-4519-7006-b17a-56fb90a2ac25-114076815032123457 --multipart-upload 'Parts=[{ETag=437d57874c622f827c1030cfe5308348,PartNumber=1},{ETag=437d57874c622f827c1030cfe5308348,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:23.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:23.730" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:23.262" endtime="20250227 16:34:23.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:23.731" level="INFO">{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:23.731" endtime="20250227 16:34:23.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:23.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:23.731" endtime="20250227 16:34:23.732"/>
</kw>
<msg timestamp="20250227 16:34:23.732" level="INFO">${output} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:23.262" endtime="20250227 16:34:23.732"/>
</kw>
<msg timestamp="20250227 16:34:23.732" level="INFO">${result} = {
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}</msg>
<status status="PASS" starttime="20250227 16:34:23.261" endtime="20250227 16:34:23.732"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:23.733" endtime="20250227 16:34:23.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:23.733" endtime="20250227 16:34:23.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:23.734" endtime="20250227 16:34:23.734"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:23.740" level="INFO">Running command 'echo '{
    "Location": "bucket-diiacmavow",
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-9639950216/copyrange/destination",
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:23.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:23.745" level="INFO">${output} = "25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:23.735" endtime="20250227 16:34:23.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:23.746" level="INFO">"25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:23.745" endtime="20250227 16:34:23.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:23.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:23.746" endtime="20250227 16:34:23.746"/>
</kw>
<status status="PASS" starttime="20250227 16:34:23.735" endtime="20250227 16:34:23.746"/>
</kw>
<msg timestamp="20250227 16:34:23.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:23.734" endtime="20250227 16:34:23.747"/>
</kw>
<msg timestamp="20250227 16:34:23.747" level="INFO">${etag} = "25a2b98722a6e731e442d9a11f0db3eb-2"</msg>
<status status="PASS" starttime="20250227 16:34:23.734" endtime="20250227 16:34:23.747"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250227 16:34:23.747" endtime="20250227 16:34:23.747"/>
</return>
<status status="PASS" starttime="20250227 16:34:23.732" endtime="20250227 16:34:23.747"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:23.747" endtime="20250227 16:34:23.747"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:23.747" endtime="20250227 16:34:23.747"/>
</branch>
<status status="PASS" starttime="20250227 16:34:23.732" endtime="20250227 16:34:23.747"/>
</if>
<status status="PASS" starttime="20250227 16:34:23.261" endtime="20250227 16:34:23.747"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:23.750" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-9639950216/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:24.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:24.327" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:23 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250227 16:34:23.748" endtime="20250227 16:34:24.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:24.328" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:23 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:24 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.327" endtime="20250227 16:34:24.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:24.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:24.328" endtime="20250227 16:34:24.328"/>
</kw>
<status status="PASS" starttime="20250227 16:34:23.748" endtime="20250227 16:34:24.329"/>
</kw>
<msg timestamp="20250227 16:34:24.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:23.748" endtime="20250227 16:34:24.329"/>
</kw>
<msg timestamp="20250227 16:34:24.329" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:23 GMT",
    "ContentLength": 10485760,
    "ETag": "\"25a2b98722a6e731e442d9a11f0db3eb-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250227 16:34:23.748" endtime="20250227 16:34:24.329"/>
</kw>
<status status="PASS" starttime="20250227 16:34:23.747" endtime="20250227 16:34:24.329"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:24.332" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:24.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:24.354" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.330" endtime="20250227 16:34:24.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:24.355" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.354" endtime="20250227 16:34:24.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:24.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:24.355" endtime="20250227 16:34:24.355"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.330" endtime="20250227 16:34:24.356"/>
</kw>
<msg timestamp="20250227 16:34:24.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:24.330" endtime="20250227 16:34:24.356"/>
</kw>
<msg timestamp="20250227 16:34:24.356" level="INFO">${checksumbefore} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.329" endtime="20250227 16:34:24.356"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:24.359" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:24.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:24.380" level="INFO">${output} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.357" endtime="20250227 16:34:24.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:24.381" level="INFO">437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.380" endtime="20250227 16:34:24.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:24.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:24.381" endtime="20250227 16:34:24.381"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.356" endtime="20250227 16:34:24.381"/>
</kw>
<msg timestamp="20250227 16:34:24.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:24.356" endtime="20250227 16:34:24.382"/>
</kw>
<msg timestamp="20250227 16:34:24.382" level="INFO">${checksumafter} = 437d57874c622f827c1030cfe5308348</msg>
<status status="PASS" starttime="20250227 16:34:24.356" endtime="20250227 16:34:24.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:24.382" endtime="20250227 16:34:24.382"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.329" endtime="20250227 16:34:24.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:16.413" endtime="20250227 16:34:24.382"/>
</test>
<test id="s1-s8-t16" name="Test Multipart Upload list" line="320">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:24.384" level="INFO">${randStr} = 7231122653</msg>
<status status="PASS" starttime="20250227 16:34:24.384" endtime="20250227 16:34:24.385"/>
</kw>
<msg timestamp="20250227 16:34:24.385" level="INFO">${random} = ozone-test-7231122653</msg>
<status status="PASS" starttime="20250227 16:34:24.384" endtime="20250227 16:34:24.385"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250227 16:34:24.385" level="INFO">${PREFIX} = ozone-test-7231122653</msg>
<status status="PASS" starttime="20250227 16:34:24.385" endtime="20250227 16:34:24.385"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.383" endtime="20250227 16:34:24.385"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${uploadIDs}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250227 16:34:24.385" level="INFO">${uploadIDs} = []</msg>
<status status="PASS" starttime="20250227 16:34:24.385" endtime="20250227 16:34:24.385"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>25</value>
<iter>
<var name="${index}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:24.386" level="INFO">${key} = ozone-test-7231122653/listtest/key-0</msg>
<status status="PASS" starttime="20250227 16:34:24.386" endtime="20250227 16:34:24.386"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:24.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-0  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:24.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:24.872" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-0",
    "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.388" endtime="20250227 16:34:24.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:24.873" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-0",
    "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.872" endtime="20250227 16:34:24.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:24.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:24.873" endtime="20250227 16:34:24.873"/>
</kw>
<msg timestamp="20250227 16:34:24.873" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-0",
    "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.387" endtime="20250227 16:34:24.873"/>
</kw>
<msg timestamp="20250227 16:34:24.874" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-0",
    "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.387" endtime="20250227 16:34:24.874"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:24.874" endtime="20250227 16:34:24.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:24.874" endtime="20250227 16:34:24.875"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:24.877" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-0",
    "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:24.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:24.882" level="INFO">${output} = 01954842-61b1-7944-a639-577a56c31487-114076815511846981</msg>
<status status="PASS" starttime="20250227 16:34:24.875" endtime="20250227 16:34:24.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:24.883" level="INFO">01954842-61b1-7944-a639-577a56c31487-114076815511846981</msg>
<status status="PASS" starttime="20250227 16:34:24.882" endtime="20250227 16:34:24.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:24.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:24.883" endtime="20250227 16:34:24.883"/>
</kw>
<msg timestamp="20250227 16:34:24.884" level="INFO">${upload_id} = 01954842-61b1-7944-a639-577a56c31487-114076815511846981</msg>
<status status="PASS" starttime="20250227 16:34:24.875" endtime="20250227 16:34:24.884"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:24.884" endtime="20250227 16:34:24.884"/>
</return>
<status status="PASS" starttime="20250227 16:34:24.874" endtime="20250227 16:34:24.884"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:24.884" endtime="20250227 16:34:24.884"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:24.884" endtime="20250227 16:34:24.884"/>
</branch>
<status status="PASS" starttime="20250227 16:34:24.874" endtime="20250227 16:34:24.884"/>
</if>
<msg timestamp="20250227 16:34:24.884" level="INFO">${uploadID} = 01954842-61b1-7944-a639-577a56c31487-114076815511846981</msg>
<status status="PASS" starttime="20250227 16:34:24.386" endtime="20250227 16:34:24.884"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:24.884" endtime="20250227 16:34:24.885"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.386" endtime="20250227 16:34:24.885"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:24.885" level="INFO">${key} = ozone-test-7231122653/listtest/key-1</msg>
<status status="PASS" starttime="20250227 16:34:24.885" endtime="20250227 16:34:24.885"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:24.889" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-1  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:25.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:25.356" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-1",
    "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.887" endtime="20250227 16:34:25.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:25.357" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-1",
    "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.357" endtime="20250227 16:34:25.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:25.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:25.357" endtime="20250227 16:34:25.358"/>
</kw>
<msg timestamp="20250227 16:34:25.358" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-1",
    "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.886" endtime="20250227 16:34:25.358"/>
</kw>
<msg timestamp="20250227 16:34:25.358" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-1",
    "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694"
}</msg>
<status status="PASS" starttime="20250227 16:34:24.886" endtime="20250227 16:34:25.358"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:25.358" endtime="20250227 16:34:25.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:25.359" endtime="20250227 16:34:25.359"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:25.362" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-1",
    "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:25.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:25.367" level="INFO">${output} = 01954842-639d-79be-9675-44cf52e029ce-114076815544090694</msg>
<status status="PASS" starttime="20250227 16:34:25.359" endtime="20250227 16:34:25.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:25.368" level="INFO">01954842-639d-79be-9675-44cf52e029ce-114076815544090694</msg>
<status status="PASS" starttime="20250227 16:34:25.367" endtime="20250227 16:34:25.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:25.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:25.368" endtime="20250227 16:34:25.368"/>
</kw>
<msg timestamp="20250227 16:34:25.368" level="INFO">${upload_id} = 01954842-639d-79be-9675-44cf52e029ce-114076815544090694</msg>
<status status="PASS" starttime="20250227 16:34:25.359" endtime="20250227 16:34:25.368"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:25.368" endtime="20250227 16:34:25.368"/>
</return>
<status status="PASS" starttime="20250227 16:34:25.358" endtime="20250227 16:34:25.369"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:25.369" endtime="20250227 16:34:25.369"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:25.369" endtime="20250227 16:34:25.369"/>
</branch>
<status status="PASS" starttime="20250227 16:34:25.358" endtime="20250227 16:34:25.369"/>
</if>
<msg timestamp="20250227 16:34:25.369" level="INFO">${uploadID} = 01954842-639d-79be-9675-44cf52e029ce-114076815544090694</msg>
<status status="PASS" starttime="20250227 16:34:24.885" endtime="20250227 16:34:25.369"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:25.369" endtime="20250227 16:34:25.369"/>
</kw>
<status status="PASS" starttime="20250227 16:34:24.885" endtime="20250227 16:34:25.369"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:25.370" level="INFO">${key} = ozone-test-7231122653/listtest/key-2</msg>
<status status="PASS" starttime="20250227 16:34:25.369" endtime="20250227 16:34:25.370"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:25.373" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-2  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:25.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:25.851" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-2",
    "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.371" endtime="20250227 16:34:25.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:25.852" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-2",
    "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.851" endtime="20250227 16:34:25.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:25.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:25.852" endtime="20250227 16:34:25.852"/>
</kw>
<msg timestamp="20250227 16:34:25.852" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-2",
    "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.371" endtime="20250227 16:34:25.852"/>
</kw>
<msg timestamp="20250227 16:34:25.853" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-2",
    "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.371" endtime="20250227 16:34:25.853"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:25.853" endtime="20250227 16:34:25.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:25.853" endtime="20250227 16:34:25.853"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:25.856" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-2",
    "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:25.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:25.861" level="INFO">${output} = 01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015</msg>
<status status="PASS" starttime="20250227 16:34:25.854" endtime="20250227 16:34:25.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:25.862" level="INFO">01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015</msg>
<status status="PASS" starttime="20250227 16:34:25.861" endtime="20250227 16:34:25.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:25.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:25.862" endtime="20250227 16:34:25.862"/>
</kw>
<msg timestamp="20250227 16:34:25.863" level="INFO">${upload_id} = 01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015</msg>
<status status="PASS" starttime="20250227 16:34:25.854" endtime="20250227 16:34:25.863"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:25.863" endtime="20250227 16:34:25.863"/>
</return>
<status status="PASS" starttime="20250227 16:34:25.853" endtime="20250227 16:34:25.863"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:25.863" endtime="20250227 16:34:25.863"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:25.863" endtime="20250227 16:34:25.863"/>
</branch>
<status status="PASS" starttime="20250227 16:34:25.853" endtime="20250227 16:34:25.863"/>
</if>
<msg timestamp="20250227 16:34:25.863" level="INFO">${uploadID} = 01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015</msg>
<status status="PASS" starttime="20250227 16:34:25.370" endtime="20250227 16:34:25.863"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:25.863" endtime="20250227 16:34:25.863"/>
</kw>
<status status="PASS" starttime="20250227 16:34:25.369" endtime="20250227 16:34:25.864"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:25.864" level="INFO">${key} = ozone-test-7231122653/listtest/key-3</msg>
<status status="PASS" starttime="20250227 16:34:25.864" endtime="20250227 16:34:25.864"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:25.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-3  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:26.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:26.333" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-3",
    "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.866" endtime="20250227 16:34:26.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:26.334" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-3",
    "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.334" endtime="20250227 16:34:26.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:26.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:26.334" endtime="20250227 16:34:26.335"/>
</kw>
<msg timestamp="20250227 16:34:26.335" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-3",
    "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.865" endtime="20250227 16:34:26.335"/>
</kw>
<msg timestamp="20250227 16:34:26.335" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-3",
    "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832"
}</msg>
<status status="PASS" starttime="20250227 16:34:25.865" endtime="20250227 16:34:26.335"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:26.335" endtime="20250227 16:34:26.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:26.336" endtime="20250227 16:34:26.336"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:26.339" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-3",
    "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:26.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:26.344" level="INFO">${output} = 01954842-676d-7242-bcb7-77eccd564213-114076815608053832</msg>
<status status="PASS" starttime="20250227 16:34:26.336" endtime="20250227 16:34:26.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:26.344" level="INFO">01954842-676d-7242-bcb7-77eccd564213-114076815608053832</msg>
<status status="PASS" starttime="20250227 16:34:26.344" endtime="20250227 16:34:26.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:26.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:26.345" endtime="20250227 16:34:26.345"/>
</kw>
<msg timestamp="20250227 16:34:26.345" level="INFO">${upload_id} = 01954842-676d-7242-bcb7-77eccd564213-114076815608053832</msg>
<status status="PASS" starttime="20250227 16:34:26.336" endtime="20250227 16:34:26.345"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:26.345" endtime="20250227 16:34:26.345"/>
</return>
<status status="PASS" starttime="20250227 16:34:26.335" endtime="20250227 16:34:26.345"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:26.345" endtime="20250227 16:34:26.345"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:26.345" endtime="20250227 16:34:26.345"/>
</branch>
<status status="PASS" starttime="20250227 16:34:26.335" endtime="20250227 16:34:26.345"/>
</if>
<msg timestamp="20250227 16:34:26.346" level="INFO">${uploadID} = 01954842-676d-7242-bcb7-77eccd564213-114076815608053832</msg>
<status status="PASS" starttime="20250227 16:34:25.864" endtime="20250227 16:34:26.346"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:26.346" endtime="20250227 16:34:26.346"/>
</kw>
<status status="PASS" starttime="20250227 16:34:25.864" endtime="20250227 16:34:26.346"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:26.346" level="INFO">${key} = ozone-test-7231122653/listtest/key-4</msg>
<status status="PASS" starttime="20250227 16:34:26.346" endtime="20250227 16:34:26.346"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:26.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-4  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:26.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:26.809" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-4",
    "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.348" endtime="20250227 16:34:26.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:26.810" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-4",
    "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.809" endtime="20250227 16:34:26.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:26.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:26.810" endtime="20250227 16:34:26.810"/>
</kw>
<msg timestamp="20250227 16:34:26.810" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-4",
    "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.348" endtime="20250227 16:34:26.810"/>
</kw>
<msg timestamp="20250227 16:34:26.810" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-4",
    "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.347" endtime="20250227 16:34:26.810"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:26.811" endtime="20250227 16:34:26.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:26.811" endtime="20250227 16:34:26.811"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:26.814" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-4",
    "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:26.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:26.819" level="INFO">${output} = 01954842-6948-7490-85d5-c86c07997560-114076815639183433</msg>
<status status="PASS" starttime="20250227 16:34:26.812" endtime="20250227 16:34:26.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:26.820" level="INFO">01954842-6948-7490-85d5-c86c07997560-114076815639183433</msg>
<status status="PASS" starttime="20250227 16:34:26.820" endtime="20250227 16:34:26.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:26.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:26.820" endtime="20250227 16:34:26.820"/>
</kw>
<msg timestamp="20250227 16:34:26.821" level="INFO">${upload_id} = 01954842-6948-7490-85d5-c86c07997560-114076815639183433</msg>
<status status="PASS" starttime="20250227 16:34:26.812" endtime="20250227 16:34:26.821"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:26.821" endtime="20250227 16:34:26.821"/>
</return>
<status status="PASS" starttime="20250227 16:34:26.811" endtime="20250227 16:34:26.821"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:26.821" endtime="20250227 16:34:26.821"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:26.821" endtime="20250227 16:34:26.821"/>
</branch>
<status status="PASS" starttime="20250227 16:34:26.811" endtime="20250227 16:34:26.821"/>
</if>
<msg timestamp="20250227 16:34:26.821" level="INFO">${uploadID} = 01954842-6948-7490-85d5-c86c07997560-114076815639183433</msg>
<status status="PASS" starttime="20250227 16:34:26.347" endtime="20250227 16:34:26.821"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:26.821" endtime="20250227 16:34:26.821"/>
</kw>
<status status="PASS" starttime="20250227 16:34:26.346" endtime="20250227 16:34:26.822"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:26.822" level="INFO">${key} = ozone-test-7231122653/listtest/key-5</msg>
<status status="PASS" starttime="20250227 16:34:26.822" endtime="20250227 16:34:26.822"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:26.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-5  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:27.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:27.302" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-5",
    "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.824" endtime="20250227 16:34:27.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:27.303" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-5",
    "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.302" endtime="20250227 16:34:27.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:27.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:27.303" endtime="20250227 16:34:27.303"/>
</kw>
<msg timestamp="20250227 16:34:27.303" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-5",
    "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.823" endtime="20250227 16:34:27.303"/>
</kw>
<msg timestamp="20250227 16:34:27.303" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-5",
    "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002"
}</msg>
<status status="PASS" starttime="20250227 16:34:26.823" endtime="20250227 16:34:27.303"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:27.304" endtime="20250227 16:34:27.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:27.304" endtime="20250227 16:34:27.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:27.307" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-5",
    "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:27.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:27.313" level="INFO">${output} = 01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002</msg>
<status status="PASS" starttime="20250227 16:34:27.305" endtime="20250227 16:34:27.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:27.313" level="INFO">01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002</msg>
<status status="PASS" starttime="20250227 16:34:27.313" endtime="20250227 16:34:27.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:27.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:27.313" endtime="20250227 16:34:27.314"/>
</kw>
<msg timestamp="20250227 16:34:27.314" level="INFO">${upload_id} = 01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002</msg>
<status status="PASS" starttime="20250227 16:34:27.305" endtime="20250227 16:34:27.314"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:27.314" endtime="20250227 16:34:27.314"/>
</return>
<status status="PASS" starttime="20250227 16:34:27.304" endtime="20250227 16:34:27.314"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:27.314" endtime="20250227 16:34:27.314"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:27.314" endtime="20250227 16:34:27.314"/>
</branch>
<status status="PASS" starttime="20250227 16:34:27.304" endtime="20250227 16:34:27.314"/>
</if>
<msg timestamp="20250227 16:34:27.314" level="INFO">${uploadID} = 01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002</msg>
<status status="PASS" starttime="20250227 16:34:26.822" endtime="20250227 16:34:27.315"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:27.315" endtime="20250227 16:34:27.315"/>
</kw>
<status status="PASS" starttime="20250227 16:34:26.822" endtime="20250227 16:34:27.315"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:27.315" level="INFO">${key} = ozone-test-7231122653/listtest/key-6</msg>
<status status="PASS" starttime="20250227 16:34:27.315" endtime="20250227 16:34:27.315"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:27.319" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-6  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:27.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:27.795" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-6",
    "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.317" endtime="20250227 16:34:27.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:27.796" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-6",
    "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.796" endtime="20250227 16:34:27.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:27.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:27.797" endtime="20250227 16:34:27.797"/>
</kw>
<msg timestamp="20250227 16:34:27.797" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-6",
    "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.317" endtime="20250227 16:34:27.797"/>
</kw>
<msg timestamp="20250227 16:34:27.797" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-6",
    "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.316" endtime="20250227 16:34:27.797"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:27.798" endtime="20250227 16:34:27.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:27.798" endtime="20250227 16:34:27.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:27.801" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-6",
    "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:27.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:27.806" level="INFO">${output} = 01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859</msg>
<status status="PASS" starttime="20250227 16:34:27.799" endtime="20250227 16:34:27.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:27.807" level="INFO">01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859</msg>
<status status="PASS" starttime="20250227 16:34:27.806" endtime="20250227 16:34:27.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:27.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:27.807" endtime="20250227 16:34:27.807"/>
</kw>
<msg timestamp="20250227 16:34:27.807" level="INFO">${upload_id} = 01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859</msg>
<status status="PASS" starttime="20250227 16:34:27.798" endtime="20250227 16:34:27.807"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:27.807" endtime="20250227 16:34:27.808"/>
</return>
<status status="PASS" starttime="20250227 16:34:27.798" endtime="20250227 16:34:27.808"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:27.808" endtime="20250227 16:34:27.808"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:27.808" endtime="20250227 16:34:27.808"/>
</branch>
<status status="PASS" starttime="20250227 16:34:27.797" endtime="20250227 16:34:27.808"/>
</if>
<msg timestamp="20250227 16:34:27.808" level="INFO">${uploadID} = 01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859</msg>
<status status="PASS" starttime="20250227 16:34:27.315" endtime="20250227 16:34:27.808"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:27.808" endtime="20250227 16:34:27.808"/>
</kw>
<status status="PASS" starttime="20250227 16:34:27.315" endtime="20250227 16:34:27.808"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:27.809" level="INFO">${key} = ozone-test-7231122653/listtest/key-7</msg>
<status status="PASS" starttime="20250227 16:34:27.809" endtime="20250227 16:34:27.809"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:27.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-7  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:28.287" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-7",
    "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.811" endtime="20250227 16:34:28.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:28.288" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-7",
    "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.287" endtime="20250227 16:34:28.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:28.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:28.288" endtime="20250227 16:34:28.288"/>
</kw>
<msg timestamp="20250227 16:34:28.289" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-7",
    "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.810" endtime="20250227 16:34:28.289"/>
</kw>
<msg timestamp="20250227 16:34:28.289" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-7",
    "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180"
}</msg>
<status status="PASS" starttime="20250227 16:34:27.810" endtime="20250227 16:34:28.289"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:28.289" endtime="20250227 16:34:28.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:28.289" endtime="20250227 16:34:28.290"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:28.292" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-7",
    "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:28.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:28.298" level="INFO">${output} = 01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180</msg>
<status status="PASS" starttime="20250227 16:34:28.290" endtime="20250227 16:34:28.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:28.298" level="INFO">01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180</msg>
<status status="PASS" starttime="20250227 16:34:28.298" endtime="20250227 16:34:28.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:28.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:28.298" endtime="20250227 16:34:28.299"/>
</kw>
<msg timestamp="20250227 16:34:28.299" level="INFO">${upload_id} = 01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180</msg>
<status status="PASS" starttime="20250227 16:34:28.290" endtime="20250227 16:34:28.299"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:28.299" endtime="20250227 16:34:28.299"/>
</return>
<status status="PASS" starttime="20250227 16:34:28.289" endtime="20250227 16:34:28.299"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:28.299" endtime="20250227 16:34:28.299"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:28.299" endtime="20250227 16:34:28.299"/>
</branch>
<status status="PASS" starttime="20250227 16:34:28.289" endtime="20250227 16:34:28.299"/>
</if>
<msg timestamp="20250227 16:34:28.299" level="INFO">${uploadID} = 01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180</msg>
<status status="PASS" starttime="20250227 16:34:27.809" endtime="20250227 16:34:28.299"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:28.299" endtime="20250227 16:34:28.300"/>
</kw>
<status status="PASS" starttime="20250227 16:34:27.809" endtime="20250227 16:34:28.300"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:28.300" level="INFO">${key} = ozone-test-7231122653/listtest/key-8</msg>
<status status="PASS" starttime="20250227 16:34:28.300" endtime="20250227 16:34:28.300"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:28.304" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-8  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:28.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:28.771" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-8",
    "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.302" endtime="20250227 16:34:28.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:28.772" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-8",
    "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.771" endtime="20250227 16:34:28.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:28.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:28.772" endtime="20250227 16:34:28.772"/>
</kw>
<msg timestamp="20250227 16:34:28.773" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-8",
    "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.302" endtime="20250227 16:34:28.773"/>
</kw>
<msg timestamp="20250227 16:34:28.773" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-8",
    "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.301" endtime="20250227 16:34:28.773"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:28.773" endtime="20250227 16:34:28.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:28.773" endtime="20250227 16:34:28.774"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:28.776" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-8",
    "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:28.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:28.781" level="INFO">${output} = 01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461</msg>
<status status="PASS" starttime="20250227 16:34:28.774" endtime="20250227 16:34:28.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:28.782" level="INFO">01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461</msg>
<status status="PASS" starttime="20250227 16:34:28.782" endtime="20250227 16:34:28.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:28.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:28.782" endtime="20250227 16:34:28.783"/>
</kw>
<msg timestamp="20250227 16:34:28.783" level="INFO">${upload_id} = 01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461</msg>
<status status="PASS" starttime="20250227 16:34:28.774" endtime="20250227 16:34:28.783"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:28.783" endtime="20250227 16:34:28.783"/>
</return>
<status status="PASS" starttime="20250227 16:34:28.773" endtime="20250227 16:34:28.783"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:28.783" endtime="20250227 16:34:28.783"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:28.783" endtime="20250227 16:34:28.783"/>
</branch>
<status status="PASS" starttime="20250227 16:34:28.773" endtime="20250227 16:34:28.783"/>
</if>
<msg timestamp="20250227 16:34:28.783" level="INFO">${uploadID} = 01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461</msg>
<status status="PASS" starttime="20250227 16:34:28.300" endtime="20250227 16:34:28.783"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:28.783" endtime="20250227 16:34:28.784"/>
</kw>
<status status="PASS" starttime="20250227 16:34:28.300" endtime="20250227 16:34:28.784"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:28.784" level="INFO">${key} = ozone-test-7231122653/listtest/key-9</msg>
<status status="PASS" starttime="20250227 16:34:28.784" endtime="20250227 16:34:28.784"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:28.788" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-9  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:29.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:29.252" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-9",
    "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.786" endtime="20250227 16:34:29.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:29.253" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-9",
    "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.253" endtime="20250227 16:34:29.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:29.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:29.254" endtime="20250227 16:34:29.254"/>
</kw>
<msg timestamp="20250227 16:34:29.254" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-9",
    "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.785" endtime="20250227 16:34:29.254"/>
</kw>
<msg timestamp="20250227 16:34:29.254" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-9",
    "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422"
}</msg>
<status status="PASS" starttime="20250227 16:34:28.785" endtime="20250227 16:34:29.254"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:29.255" endtime="20250227 16:34:29.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:29.255" endtime="20250227 16:34:29.255"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:29.258" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-9",
    "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:29.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:29.263" level="INFO">${output} = 01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422</msg>
<status status="PASS" starttime="20250227 16:34:29.256" endtime="20250227 16:34:29.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:29.263" level="INFO">01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422</msg>
<status status="PASS" starttime="20250227 16:34:29.263" endtime="20250227 16:34:29.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:29.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:29.264" endtime="20250227 16:34:29.264"/>
</kw>
<msg timestamp="20250227 16:34:29.264" level="INFO">${upload_id} = 01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422</msg>
<status status="PASS" starttime="20250227 16:34:29.255" endtime="20250227 16:34:29.264"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:29.264" endtime="20250227 16:34:29.264"/>
</return>
<status status="PASS" starttime="20250227 16:34:29.254" endtime="20250227 16:34:29.264"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:29.264" endtime="20250227 16:34:29.264"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:29.264" endtime="20250227 16:34:29.264"/>
</branch>
<status status="PASS" starttime="20250227 16:34:29.254" endtime="20250227 16:34:29.264"/>
</if>
<msg timestamp="20250227 16:34:29.264" level="INFO">${uploadID} = 01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422</msg>
<status status="PASS" starttime="20250227 16:34:28.784" endtime="20250227 16:34:29.264"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:29.265" endtime="20250227 16:34:29.265"/>
</kw>
<status status="PASS" starttime="20250227 16:34:28.784" endtime="20250227 16:34:29.265"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:29.265" level="INFO">${key} = ozone-test-7231122653/listtest/key-10</msg>
<status status="PASS" starttime="20250227 16:34:29.265" endtime="20250227 16:34:29.265"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:29.269" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-10  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:29.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:29.776" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-10",
    "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.267" endtime="20250227 16:34:29.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:29.777" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-10",
    "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.777" endtime="20250227 16:34:29.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:29.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:29.777" endtime="20250227 16:34:29.778"/>
</kw>
<msg timestamp="20250227 16:34:29.778" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-10",
    "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.266" endtime="20250227 16:34:29.778"/>
</kw>
<msg timestamp="20250227 16:34:29.778" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-10",
    "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.266" endtime="20250227 16:34:29.778"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:29.778" endtime="20250227 16:34:29.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:29.779" endtime="20250227 16:34:29.779"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:29.782" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-10",
    "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:29.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:29.787" level="INFO">${output} = 01954842-74de-7946-8e43-b9092eac2e56-114076815833563215</msg>
<status status="PASS" starttime="20250227 16:34:29.780" endtime="20250227 16:34:29.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:29.787" level="INFO">01954842-74de-7946-8e43-b9092eac2e56-114076815833563215</msg>
<status status="PASS" starttime="20250227 16:34:29.787" endtime="20250227 16:34:29.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:29.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:29.787" endtime="20250227 16:34:29.788"/>
</kw>
<msg timestamp="20250227 16:34:29.788" level="INFO">${upload_id} = 01954842-74de-7946-8e43-b9092eac2e56-114076815833563215</msg>
<status status="PASS" starttime="20250227 16:34:29.779" endtime="20250227 16:34:29.788"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:29.788" endtime="20250227 16:34:29.788"/>
</return>
<status status="PASS" starttime="20250227 16:34:29.778" endtime="20250227 16:34:29.788"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:29.788" endtime="20250227 16:34:29.788"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:29.788" endtime="20250227 16:34:29.788"/>
</branch>
<status status="PASS" starttime="20250227 16:34:29.778" endtime="20250227 16:34:29.788"/>
</if>
<msg timestamp="20250227 16:34:29.789" level="INFO">${uploadID} = 01954842-74de-7946-8e43-b9092eac2e56-114076815833563215</msg>
<status status="PASS" starttime="20250227 16:34:29.265" endtime="20250227 16:34:29.789"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:29.789" endtime="20250227 16:34:29.789"/>
</kw>
<status status="PASS" starttime="20250227 16:34:29.265" endtime="20250227 16:34:29.789"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:29.789" level="INFO">${key} = ozone-test-7231122653/listtest/key-11</msg>
<status status="PASS" starttime="20250227 16:34:29.789" endtime="20250227 16:34:29.789"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:29.793" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-11  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:30.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:30.258" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-11",
    "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.791" endtime="20250227 16:34:30.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:30.259" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-11",
    "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.258" endtime="20250227 16:34:30.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:30.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:30.259" endtime="20250227 16:34:30.259"/>
</kw>
<msg timestamp="20250227 16:34:30.260" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-11",
    "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.791" endtime="20250227 16:34:30.260"/>
</kw>
<msg timestamp="20250227 16:34:30.260" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-11",
    "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640"
}</msg>
<status status="PASS" starttime="20250227 16:34:29.790" endtime="20250227 16:34:30.260"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:30.260" endtime="20250227 16:34:30.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:30.260" endtime="20250227 16:34:30.261"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:30.264" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-11",
    "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:30.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:30.268" level="INFO">${output} = 01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640</msg>
<status status="PASS" starttime="20250227 16:34:30.261" endtime="20250227 16:34:30.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:30.269" level="INFO">01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640</msg>
<status status="PASS" starttime="20250227 16:34:30.269" endtime="20250227 16:34:30.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:30.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:30.269" endtime="20250227 16:34:30.269"/>
</kw>
<msg timestamp="20250227 16:34:30.270" level="INFO">${upload_id} = 01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640</msg>
<status status="PASS" starttime="20250227 16:34:30.261" endtime="20250227 16:34:30.270"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:30.270" endtime="20250227 16:34:30.270"/>
</return>
<status status="PASS" starttime="20250227 16:34:30.260" endtime="20250227 16:34:30.270"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:30.270" endtime="20250227 16:34:30.270"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:30.270" endtime="20250227 16:34:30.270"/>
</branch>
<status status="PASS" starttime="20250227 16:34:30.260" endtime="20250227 16:34:30.270"/>
</if>
<msg timestamp="20250227 16:34:30.270" level="INFO">${uploadID} = 01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640</msg>
<status status="PASS" starttime="20250227 16:34:29.790" endtime="20250227 16:34:30.270"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:30.270" endtime="20250227 16:34:30.270"/>
</kw>
<status status="PASS" starttime="20250227 16:34:29.789" endtime="20250227 16:34:30.270"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:30.271" level="INFO">${key} = ozone-test-7231122653/listtest/key-12</msg>
<status status="PASS" starttime="20250227 16:34:30.271" endtime="20250227 16:34:30.271"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:30.274" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-12  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:30.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:30.736" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-12",
    "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.272" endtime="20250227 16:34:30.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:30.737" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-12",
    "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.736" endtime="20250227 16:34:30.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:30.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:30.737" endtime="20250227 16:34:30.737"/>
</kw>
<msg timestamp="20250227 16:34:30.738" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-12",
    "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.272" endtime="20250227 16:34:30.738"/>
</kw>
<msg timestamp="20250227 16:34:30.738" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-12",
    "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.272" endtime="20250227 16:34:30.738"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:30.738" endtime="20250227 16:34:30.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:30.739" endtime="20250227 16:34:30.739"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:30.741" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-12",
    "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:30.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:30.747" level="INFO">${output} = 01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849</msg>
<status status="PASS" starttime="20250227 16:34:30.739" endtime="20250227 16:34:30.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:30.747" level="INFO">01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849</msg>
<status status="PASS" starttime="20250227 16:34:30.747" endtime="20250227 16:34:30.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:30.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:30.747" endtime="20250227 16:34:30.748"/>
</kw>
<msg timestamp="20250227 16:34:30.748" level="INFO">${upload_id} = 01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849</msg>
<status status="PASS" starttime="20250227 16:34:30.739" endtime="20250227 16:34:30.748"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:30.748" endtime="20250227 16:34:30.748"/>
</return>
<status status="PASS" starttime="20250227 16:34:30.738" endtime="20250227 16:34:30.748"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:30.748" endtime="20250227 16:34:30.748"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:30.748" endtime="20250227 16:34:30.748"/>
</branch>
<status status="PASS" starttime="20250227 16:34:30.738" endtime="20250227 16:34:30.748"/>
</if>
<msg timestamp="20250227 16:34:30.749" level="INFO">${uploadID} = 01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849</msg>
<status status="PASS" starttime="20250227 16:34:30.271" endtime="20250227 16:34:30.749"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:30.749" endtime="20250227 16:34:30.749"/>
</kw>
<status status="PASS" starttime="20250227 16:34:30.271" endtime="20250227 16:34:30.749"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:30.749" level="INFO">${key} = ozone-test-7231122653/listtest/key-13</msg>
<status status="PASS" starttime="20250227 16:34:30.749" endtime="20250227 16:34:30.749"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:30.753" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-13  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:31.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:31.216" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-13",
    "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.751" endtime="20250227 16:34:31.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:31.217" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-13",
    "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.216" endtime="20250227 16:34:31.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:31.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:31.217" endtime="20250227 16:34:31.217"/>
</kw>
<msg timestamp="20250227 16:34:31.217" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-13",
    "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.751" endtime="20250227 16:34:31.217"/>
</kw>
<msg timestamp="20250227 16:34:31.218" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-13",
    "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130"
}</msg>
<status status="PASS" starttime="20250227 16:34:30.750" endtime="20250227 16:34:31.218"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:31.218" endtime="20250227 16:34:31.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:31.218" endtime="20250227 16:34:31.219"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:31.221" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-13",
    "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:31.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:31.226" level="INFO">${output} = 01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130</msg>
<status status="PASS" starttime="20250227 16:34:31.219" endtime="20250227 16:34:31.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:31.227" level="INFO">01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130</msg>
<status status="PASS" starttime="20250227 16:34:31.227" endtime="20250227 16:34:31.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:31.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:31.227" endtime="20250227 16:34:31.227"/>
</kw>
<msg timestamp="20250227 16:34:31.228" level="INFO">${upload_id} = 01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130</msg>
<status status="PASS" starttime="20250227 16:34:31.219" endtime="20250227 16:34:31.228"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:31.228" endtime="20250227 16:34:31.228"/>
</return>
<status status="PASS" starttime="20250227 16:34:31.218" endtime="20250227 16:34:31.228"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:31.228" endtime="20250227 16:34:31.228"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:31.228" endtime="20250227 16:34:31.228"/>
</branch>
<status status="PASS" starttime="20250227 16:34:31.218" endtime="20250227 16:34:31.228"/>
</if>
<msg timestamp="20250227 16:34:31.228" level="INFO">${uploadID} = 01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130</msg>
<status status="PASS" starttime="20250227 16:34:30.749" endtime="20250227 16:34:31.228"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:31.228" endtime="20250227 16:34:31.228"/>
</kw>
<status status="PASS" starttime="20250227 16:34:30.749" endtime="20250227 16:34:31.228"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:31.229" level="INFO">${key} = ozone-test-7231122653/listtest/key-14</msg>
<status status="PASS" starttime="20250227 16:34:31.229" endtime="20250227 16:34:31.229"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:31.232" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-14  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:31.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:31.695" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-14",
    "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.230" endtime="20250227 16:34:31.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:31.696" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-14",
    "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.695" endtime="20250227 16:34:31.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:31.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:31.696" endtime="20250227 16:34:31.696"/>
</kw>
<msg timestamp="20250227 16:34:31.696" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-14",
    "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.230" endtime="20250227 16:34:31.696"/>
</kw>
<msg timestamp="20250227 16:34:31.697" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-14",
    "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.230" endtime="20250227 16:34:31.697"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:31.697" endtime="20250227 16:34:31.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:31.697" endtime="20250227 16:34:31.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:31.700" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-14",
    "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:31.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:31.705" level="INFO">${output} = 01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875</msg>
<status status="PASS" starttime="20250227 16:34:31.698" endtime="20250227 16:34:31.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:31.706" level="INFO">01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875</msg>
<status status="PASS" starttime="20250227 16:34:31.705" endtime="20250227 16:34:31.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:31.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:31.706" endtime="20250227 16:34:31.706"/>
</kw>
<msg timestamp="20250227 16:34:31.706" level="INFO">${upload_id} = 01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875</msg>
<status status="PASS" starttime="20250227 16:34:31.698" endtime="20250227 16:34:31.706"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:31.706" endtime="20250227 16:34:31.707"/>
</return>
<status status="PASS" starttime="20250227 16:34:31.697" endtime="20250227 16:34:31.707"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:31.707" endtime="20250227 16:34:31.707"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:31.707" endtime="20250227 16:34:31.707"/>
</branch>
<status status="PASS" starttime="20250227 16:34:31.697" endtime="20250227 16:34:31.707"/>
</if>
<msg timestamp="20250227 16:34:31.707" level="INFO">${uploadID} = 01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875</msg>
<status status="PASS" starttime="20250227 16:34:31.229" endtime="20250227 16:34:31.707"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:31.707" endtime="20250227 16:34:31.707"/>
</kw>
<status status="PASS" starttime="20250227 16:34:31.228" endtime="20250227 16:34:31.707"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:31.708" level="INFO">${key} = ozone-test-7231122653/listtest/key-15</msg>
<status status="PASS" starttime="20250227 16:34:31.708" endtime="20250227 16:34:31.708"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:31.711" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-15  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:32.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:32.178" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-15",
    "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.710" endtime="20250227 16:34:32.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:32.179" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-15",
    "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.178" endtime="20250227 16:34:32.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:32.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:32.179" endtime="20250227 16:34:32.179"/>
</kw>
<msg timestamp="20250227 16:34:32.180" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-15",
    "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.709" endtime="20250227 16:34:32.180"/>
</kw>
<msg timestamp="20250227 16:34:32.180" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-15",
    "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764"
}</msg>
<status status="PASS" starttime="20250227 16:34:31.709" endtime="20250227 16:34:32.180"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:32.180" endtime="20250227 16:34:32.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:32.180" endtime="20250227 16:34:32.181"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:32.183" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-15",
    "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:32.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:32.188" level="INFO">${output} = 01954842-7e42-7eb0-9325-709e44304849-114076815991111764</msg>
<status status="PASS" starttime="20250227 16:34:32.181" endtime="20250227 16:34:32.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:32.189" level="INFO">01954842-7e42-7eb0-9325-709e44304849-114076815991111764</msg>
<status status="PASS" starttime="20250227 16:34:32.189" endtime="20250227 16:34:32.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:32.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:32.189" endtime="20250227 16:34:32.190"/>
</kw>
<msg timestamp="20250227 16:34:32.190" level="INFO">${upload_id} = 01954842-7e42-7eb0-9325-709e44304849-114076815991111764</msg>
<status status="PASS" starttime="20250227 16:34:32.181" endtime="20250227 16:34:32.190"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:32.190" endtime="20250227 16:34:32.190"/>
</return>
<status status="PASS" starttime="20250227 16:34:32.180" endtime="20250227 16:34:32.190"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:32.190" endtime="20250227 16:34:32.190"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:32.190" endtime="20250227 16:34:32.190"/>
</branch>
<status status="PASS" starttime="20250227 16:34:32.180" endtime="20250227 16:34:32.190"/>
</if>
<msg timestamp="20250227 16:34:32.190" level="INFO">${uploadID} = 01954842-7e42-7eb0-9325-709e44304849-114076815991111764</msg>
<status status="PASS" starttime="20250227 16:34:31.708" endtime="20250227 16:34:32.190"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:32.190" endtime="20250227 16:34:32.191"/>
</kw>
<status status="PASS" starttime="20250227 16:34:31.707" endtime="20250227 16:34:32.191"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:32.191" level="INFO">${key} = ozone-test-7231122653/listtest/key-16</msg>
<status status="PASS" starttime="20250227 16:34:32.191" endtime="20250227 16:34:32.191"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:32.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-16  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:32.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:32.665" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-16",
    "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.193" endtime="20250227 16:34:32.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:32.665" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-16",
    "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.665" endtime="20250227 16:34:32.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:32.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:32.666" endtime="20250227 16:34:32.666"/>
</kw>
<msg timestamp="20250227 16:34:32.666" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-16",
    "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.192" endtime="20250227 16:34:32.666"/>
</kw>
<msg timestamp="20250227 16:34:32.666" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-16",
    "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.192" endtime="20250227 16:34:32.666"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:32.667" endtime="20250227 16:34:32.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:32.667" endtime="20250227 16:34:32.667"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:32.670" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-16",
    "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:32.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:32.674" level="INFO">${output} = 01954842-8029-7210-acb1-9e3669fef597-114076816023027797</msg>
<status status="PASS" starttime="20250227 16:34:32.668" endtime="20250227 16:34:32.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:32.675" level="INFO">01954842-8029-7210-acb1-9e3669fef597-114076816023027797</msg>
<status status="PASS" starttime="20250227 16:34:32.675" endtime="20250227 16:34:32.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:32.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:32.675" endtime="20250227 16:34:32.675"/>
</kw>
<msg timestamp="20250227 16:34:32.676" level="INFO">${upload_id} = 01954842-8029-7210-acb1-9e3669fef597-114076816023027797</msg>
<status status="PASS" starttime="20250227 16:34:32.667" endtime="20250227 16:34:32.676"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:32.676" endtime="20250227 16:34:32.676"/>
</return>
<status status="PASS" starttime="20250227 16:34:32.666" endtime="20250227 16:34:32.676"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:32.676" endtime="20250227 16:34:32.676"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:32.676" endtime="20250227 16:34:32.676"/>
</branch>
<status status="PASS" starttime="20250227 16:34:32.666" endtime="20250227 16:34:32.676"/>
</if>
<msg timestamp="20250227 16:34:32.676" level="INFO">${uploadID} = 01954842-8029-7210-acb1-9e3669fef597-114076816023027797</msg>
<status status="PASS" starttime="20250227 16:34:32.191" endtime="20250227 16:34:32.676"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:32.676" endtime="20250227 16:34:32.676"/>
</kw>
<status status="PASS" starttime="20250227 16:34:32.191" endtime="20250227 16:34:32.676"/>
</iter>
<iter>
<var name="${index}">17</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:32.677" level="INFO">${key} = ozone-test-7231122653/listtest/key-17</msg>
<status status="PASS" starttime="20250227 16:34:32.677" endtime="20250227 16:34:32.677"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:32.680" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-17  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:33.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:33.157" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-17",
    "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.678" endtime="20250227 16:34:33.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:33.158" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-17",
    "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.158" endtime="20250227 16:34:33.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:33.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:33.158" endtime="20250227 16:34:33.159"/>
</kw>
<msg timestamp="20250227 16:34:33.159" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-17",
    "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.678" endtime="20250227 16:34:33.159"/>
</kw>
<msg timestamp="20250227 16:34:33.159" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-17",
    "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006"
}</msg>
<status status="PASS" starttime="20250227 16:34:32.678" endtime="20250227 16:34:33.159"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:33.159" endtime="20250227 16:34:33.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:33.160" endtime="20250227 16:34:33.160"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:33.163" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-17",
    "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:33.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:33.168" level="INFO">${output} = 01954842-8207-7c57-b090-62fc830d2705-114076816054354006</msg>
<status status="PASS" starttime="20250227 16:34:33.160" endtime="20250227 16:34:33.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:33.168" level="INFO">01954842-8207-7c57-b090-62fc830d2705-114076816054354006</msg>
<status status="PASS" starttime="20250227 16:34:33.168" endtime="20250227 16:34:33.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:33.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:33.169" endtime="20250227 16:34:33.169"/>
</kw>
<msg timestamp="20250227 16:34:33.169" level="INFO">${upload_id} = 01954842-8207-7c57-b090-62fc830d2705-114076816054354006</msg>
<status status="PASS" starttime="20250227 16:34:33.160" endtime="20250227 16:34:33.169"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:33.169" endtime="20250227 16:34:33.169"/>
</return>
<status status="PASS" starttime="20250227 16:34:33.159" endtime="20250227 16:34:33.169"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:33.169" endtime="20250227 16:34:33.169"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:33.169" endtime="20250227 16:34:33.169"/>
</branch>
<status status="PASS" starttime="20250227 16:34:33.159" endtime="20250227 16:34:33.169"/>
</if>
<msg timestamp="20250227 16:34:33.169" level="INFO">${uploadID} = 01954842-8207-7c57-b090-62fc830d2705-114076816054354006</msg>
<status status="PASS" starttime="20250227 16:34:32.677" endtime="20250227 16:34:33.169"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:33.170" endtime="20250227 16:34:33.170"/>
</kw>
<status status="PASS" starttime="20250227 16:34:32.677" endtime="20250227 16:34:33.170"/>
</iter>
<iter>
<var name="${index}">18</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:33.170" level="INFO">${key} = ozone-test-7231122653/listtest/key-18</msg>
<status status="PASS" starttime="20250227 16:34:33.170" endtime="20250227 16:34:33.170"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:33.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-18  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:33.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:33.638" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-18",
    "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.172" endtime="20250227 16:34:33.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:33.639" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-18",
    "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.639" endtime="20250227 16:34:33.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:33.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:33.639" endtime="20250227 16:34:33.640"/>
</kw>
<msg timestamp="20250227 16:34:33.640" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-18",
    "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.172" endtime="20250227 16:34:33.640"/>
</kw>
<msg timestamp="20250227 16:34:33.640" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-18",
    "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.171" endtime="20250227 16:34:33.640"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:33.640" endtime="20250227 16:34:33.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:33.641" endtime="20250227 16:34:33.641"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:33.644" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-18",
    "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:33.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:33.649" level="INFO">${output} = 01954842-83f4-72bb-8770-502b2e82589c-114076816086663255</msg>
<status status="PASS" starttime="20250227 16:34:33.641" endtime="20250227 16:34:33.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:33.649" level="INFO">01954842-83f4-72bb-8770-502b2e82589c-114076816086663255</msg>
<status status="PASS" starttime="20250227 16:34:33.649" endtime="20250227 16:34:33.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:33.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:33.649" endtime="20250227 16:34:33.650"/>
</kw>
<msg timestamp="20250227 16:34:33.650" level="INFO">${upload_id} = 01954842-83f4-72bb-8770-502b2e82589c-114076816086663255</msg>
<status status="PASS" starttime="20250227 16:34:33.641" endtime="20250227 16:34:33.650"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:33.650" endtime="20250227 16:34:33.650"/>
</return>
<status status="PASS" starttime="20250227 16:34:33.640" endtime="20250227 16:34:33.650"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:33.650" endtime="20250227 16:34:33.650"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:33.650" endtime="20250227 16:34:33.650"/>
</branch>
<status status="PASS" starttime="20250227 16:34:33.640" endtime="20250227 16:34:33.650"/>
</if>
<msg timestamp="20250227 16:34:33.651" level="INFO">${uploadID} = 01954842-83f4-72bb-8770-502b2e82589c-114076816086663255</msg>
<status status="PASS" starttime="20250227 16:34:33.170" endtime="20250227 16:34:33.651"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:33.651" endtime="20250227 16:34:33.651"/>
</kw>
<status status="PASS" starttime="20250227 16:34:33.170" endtime="20250227 16:34:33.651"/>
</iter>
<iter>
<var name="${index}">19</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:33.652" level="INFO">${key} = ozone-test-7231122653/listtest/key-19</msg>
<status status="PASS" starttime="20250227 16:34:33.651" endtime="20250227 16:34:33.652"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:33.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-19  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:34.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:34.126" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-19",
    "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.653" endtime="20250227 16:34:34.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:34.127" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-19",
    "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.126" endtime="20250227 16:34:34.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:34.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:34.127" endtime="20250227 16:34:34.127"/>
</kw>
<msg timestamp="20250227 16:34:34.127" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-19",
    "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.653" endtime="20250227 16:34:34.127"/>
</kw>
<msg timestamp="20250227 16:34:34.128" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-19",
    "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360"
}</msg>
<status status="PASS" starttime="20250227 16:34:33.653" endtime="20250227 16:34:34.128"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:34.128" endtime="20250227 16:34:34.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:34.128" endtime="20250227 16:34:34.128"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:34.131" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-19",
    "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:34.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:34.136" level="INFO">${output} = 01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360</msg>
<status status="PASS" starttime="20250227 16:34:34.129" endtime="20250227 16:34:34.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:34.137" level="INFO">01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360</msg>
<status status="PASS" starttime="20250227 16:34:34.136" endtime="20250227 16:34:34.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:34.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:34.137" endtime="20250227 16:34:34.137"/>
</kw>
<msg timestamp="20250227 16:34:34.137" level="INFO">${upload_id} = 01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360</msg>
<status status="PASS" starttime="20250227 16:34:34.129" endtime="20250227 16:34:34.137"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:34.137" endtime="20250227 16:34:34.137"/>
</return>
<status status="PASS" starttime="20250227 16:34:34.128" endtime="20250227 16:34:34.137"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:34.137" endtime="20250227 16:34:34.137"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:34.137" endtime="20250227 16:34:34.137"/>
</branch>
<status status="PASS" starttime="20250227 16:34:34.128" endtime="20250227 16:34:34.138"/>
</if>
<msg timestamp="20250227 16:34:34.138" level="INFO">${uploadID} = 01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360</msg>
<status status="PASS" starttime="20250227 16:34:33.652" endtime="20250227 16:34:34.138"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:34.138" endtime="20250227 16:34:34.138"/>
</kw>
<status status="PASS" starttime="20250227 16:34:33.651" endtime="20250227 16:34:34.138"/>
</iter>
<iter>
<var name="${index}">20</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:34.138" level="INFO">${key} = ozone-test-7231122653/listtest/key-20</msg>
<status status="PASS" starttime="20250227 16:34:34.138" endtime="20250227 16:34:34.139"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:34.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-20  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:34.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:34.605" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-20",
    "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.140" endtime="20250227 16:34:34.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:34.606" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-20",
    "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.606" endtime="20250227 16:34:34.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:34.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:34.606" endtime="20250227 16:34:34.607"/>
</kw>
<msg timestamp="20250227 16:34:34.607" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-20",
    "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.140" endtime="20250227 16:34:34.607"/>
</kw>
<msg timestamp="20250227 16:34:34.607" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-20",
    "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.139" endtime="20250227 16:34:34.607"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:34.607" endtime="20250227 16:34:34.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:34.608" endtime="20250227 16:34:34.608"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:34.611" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-20",
    "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:34.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:34.615" level="INFO">${output} = 01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497</msg>
<status status="PASS" starttime="20250227 16:34:34.608" endtime="20250227 16:34:34.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:34.616" level="INFO">01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497</msg>
<status status="PASS" starttime="20250227 16:34:34.616" endtime="20250227 16:34:34.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:34.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:34.616" endtime="20250227 16:34:34.617"/>
</kw>
<msg timestamp="20250227 16:34:34.617" level="INFO">${upload_id} = 01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497</msg>
<status status="PASS" starttime="20250227 16:34:34.608" endtime="20250227 16:34:34.617"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:34.617" endtime="20250227 16:34:34.617"/>
</return>
<status status="PASS" starttime="20250227 16:34:34.607" endtime="20250227 16:34:34.617"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:34.617" endtime="20250227 16:34:34.617"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:34.617" endtime="20250227 16:34:34.617"/>
</branch>
<status status="PASS" starttime="20250227 16:34:34.607" endtime="20250227 16:34:34.617"/>
</if>
<msg timestamp="20250227 16:34:34.617" level="INFO">${uploadID} = 01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497</msg>
<status status="PASS" starttime="20250227 16:34:34.139" endtime="20250227 16:34:34.617"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:34.618" endtime="20250227 16:34:34.618"/>
</kw>
<status status="PASS" starttime="20250227 16:34:34.138" endtime="20250227 16:34:34.618"/>
</iter>
<iter>
<var name="${index}">21</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:34.618" level="INFO">${key} = ozone-test-7231122653/listtest/key-21</msg>
<status status="PASS" starttime="20250227 16:34:34.618" endtime="20250227 16:34:34.618"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:34.622" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-21  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:35.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:35.098" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-21",
    "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.620" endtime="20250227 16:34:35.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:35.098" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-21",
    "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.098" endtime="20250227 16:34:35.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:35.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:35.099" endtime="20250227 16:34:35.099"/>
</kw>
<msg timestamp="20250227 16:34:35.099" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-21",
    "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.620" endtime="20250227 16:34:35.099"/>
</kw>
<msg timestamp="20250227 16:34:35.099" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-21",
    "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818"
}</msg>
<status status="PASS" starttime="20250227 16:34:34.619" endtime="20250227 16:34:35.099"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:35.100" endtime="20250227 16:34:35.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:35.100" endtime="20250227 16:34:35.100"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:35.103" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-21",
    "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:35.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:35.108" level="INFO">${output} = 01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818</msg>
<status status="PASS" starttime="20250227 16:34:35.101" endtime="20250227 16:34:35.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:35.109" level="INFO">01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818</msg>
<status status="PASS" starttime="20250227 16:34:35.108" endtime="20250227 16:34:35.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:35.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:35.109" endtime="20250227 16:34:35.109"/>
</kw>
<msg timestamp="20250227 16:34:35.109" level="INFO">${upload_id} = 01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818</msg>
<status status="PASS" starttime="20250227 16:34:35.100" endtime="20250227 16:34:35.109"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:35.109" endtime="20250227 16:34:35.109"/>
</return>
<status status="PASS" starttime="20250227 16:34:35.100" endtime="20250227 16:34:35.109"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:35.109" endtime="20250227 16:34:35.109"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:35.109" endtime="20250227 16:34:35.109"/>
</branch>
<status status="PASS" starttime="20250227 16:34:35.099" endtime="20250227 16:34:35.110"/>
</if>
<msg timestamp="20250227 16:34:35.110" level="INFO">${uploadID} = 01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818</msg>
<status status="PASS" starttime="20250227 16:34:34.618" endtime="20250227 16:34:35.110"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:35.110" endtime="20250227 16:34:35.110"/>
</kw>
<status status="PASS" starttime="20250227 16:34:34.618" endtime="20250227 16:34:35.110"/>
</iter>
<iter>
<var name="${index}">22</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:35.110" level="INFO">${key} = ozone-test-7231122653/listtest/key-22</msg>
<status status="PASS" starttime="20250227 16:34:35.110" endtime="20250227 16:34:35.111"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:35.114" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-22  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:35.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:35.588" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-22",
    "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.112" endtime="20250227 16:34:35.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:35.589" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-22",
    "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.588" endtime="20250227 16:34:35.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:35.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:35.589" endtime="20250227 16:34:35.589"/>
</kw>
<msg timestamp="20250227 16:34:35.589" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-22",
    "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.112" endtime="20250227 16:34:35.589"/>
</kw>
<msg timestamp="20250227 16:34:35.590" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-22",
    "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.111" endtime="20250227 16:34:35.590"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:35.590" endtime="20250227 16:34:35.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:35.590" endtime="20250227 16:34:35.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:35.593" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-22",
    "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:35.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:35.598" level="INFO">${output} = 01954842-8b92-7631-8043-cea8224e569f-114076816214458459</msg>
<status status="PASS" starttime="20250227 16:34:35.591" endtime="20250227 16:34:35.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:35.599" level="INFO">01954842-8b92-7631-8043-cea8224e569f-114076816214458459</msg>
<status status="PASS" starttime="20250227 16:34:35.599" endtime="20250227 16:34:35.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:35.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:35.599" endtime="20250227 16:34:35.600"/>
</kw>
<msg timestamp="20250227 16:34:35.600" level="INFO">${upload_id} = 01954842-8b92-7631-8043-cea8224e569f-114076816214458459</msg>
<status status="PASS" starttime="20250227 16:34:35.591" endtime="20250227 16:34:35.600"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:35.600" endtime="20250227 16:34:35.600"/>
</return>
<status status="PASS" starttime="20250227 16:34:35.590" endtime="20250227 16:34:35.600"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:35.600" endtime="20250227 16:34:35.600"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:35.600" endtime="20250227 16:34:35.600"/>
</branch>
<status status="PASS" starttime="20250227 16:34:35.590" endtime="20250227 16:34:35.600"/>
</if>
<msg timestamp="20250227 16:34:35.600" level="INFO">${uploadID} = 01954842-8b92-7631-8043-cea8224e569f-114076816214458459</msg>
<status status="PASS" starttime="20250227 16:34:35.111" endtime="20250227 16:34:35.600"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:35.600" endtime="20250227 16:34:35.601"/>
</kw>
<status status="PASS" starttime="20250227 16:34:35.110" endtime="20250227 16:34:35.601"/>
</iter>
<iter>
<var name="${index}">23</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:35.601" level="INFO">${key} = ozone-test-7231122653/listtest/key-23</msg>
<status status="PASS" starttime="20250227 16:34:35.601" endtime="20250227 16:34:35.601"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:35.605" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-23  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:36.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:36.078" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-23",
    "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.603" endtime="20250227 16:34:36.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:36.079" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-23",
    "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636"
}</msg>
<status status="PASS" starttime="20250227 16:34:36.079" endtime="20250227 16:34:36.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:36.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:36.080" endtime="20250227 16:34:36.080"/>
</kw>
<msg timestamp="20250227 16:34:36.080" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-23",
    "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.602" endtime="20250227 16:34:36.080"/>
</kw>
<msg timestamp="20250227 16:34:36.080" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-23",
    "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636"
}</msg>
<status status="PASS" starttime="20250227 16:34:35.602" endtime="20250227 16:34:36.080"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:36.081" endtime="20250227 16:34:36.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:36.081" endtime="20250227 16:34:36.081"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:36.084" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-23",
    "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:36.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:36.089" level="INFO">${output} = 01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636</msg>
<status status="PASS" starttime="20250227 16:34:36.082" endtime="20250227 16:34:36.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:36.090" level="INFO">01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636</msg>
<status status="PASS" starttime="20250227 16:34:36.089" endtime="20250227 16:34:36.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:36.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:36.090" endtime="20250227 16:34:36.090"/>
</kw>
<msg timestamp="20250227 16:34:36.090" level="INFO">${upload_id} = 01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636</msg>
<status status="PASS" starttime="20250227 16:34:36.081" endtime="20250227 16:34:36.090"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:36.090" endtime="20250227 16:34:36.090"/>
</return>
<status status="PASS" starttime="20250227 16:34:36.080" endtime="20250227 16:34:36.090"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:36.091" endtime="20250227 16:34:36.091"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:36.091" endtime="20250227 16:34:36.091"/>
</branch>
<status status="PASS" starttime="20250227 16:34:36.080" endtime="20250227 16:34:36.091"/>
</if>
<msg timestamp="20250227 16:34:36.091" level="INFO">${uploadID} = 01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636</msg>
<status status="PASS" starttime="20250227 16:34:35.601" endtime="20250227 16:34:36.091"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:36.091" endtime="20250227 16:34:36.091"/>
</kw>
<status status="PASS" starttime="20250227 16:34:35.601" endtime="20250227 16:34:36.091"/>
</iter>
<iter>
<var name="${index}">24</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:36.092" level="INFO">${key} = ozone-test-7231122653/listtest/key-24</msg>
<status status="PASS" starttime="20250227 16:34:36.091" endtime="20250227 16:34:36.092"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:36.095" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-24  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:36.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:36.552" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-24",
    "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237"
}</msg>
<status status="PASS" starttime="20250227 16:34:36.093" endtime="20250227 16:34:36.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:36.553" level="INFO">{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-24",
    "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237"
}</msg>
<status status="PASS" starttime="20250227 16:34:36.552" endtime="20250227 16:34:36.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:36.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:36.553" endtime="20250227 16:34:36.553"/>
</kw>
<msg timestamp="20250227 16:34:36.554" level="INFO">${output} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-24",
    "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237"
}</msg>
<status status="PASS" starttime="20250227 16:34:36.093" endtime="20250227 16:34:36.554"/>
</kw>
<msg timestamp="20250227 16:34:36.554" level="INFO">${result} = {
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-24",
    "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237"
}</msg>
<status status="PASS" starttime="20250227 16:34:36.093" endtime="20250227 16:34:36.554"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:36.554" endtime="20250227 16:34:36.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:36.554" endtime="20250227 16:34:36.555"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:36.557" level="INFO">Running command 'echo '{
    "Bucket": "bucket-diiacmavow",
    "Key": "ozone-test-7231122653/listtest/key-24",
    "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:36.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:36.563" level="INFO">${output} = 01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237</msg>
<status status="PASS" starttime="20250227 16:34:36.555" endtime="20250227 16:34:36.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:36.563" level="INFO">01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237</msg>
<status status="PASS" starttime="20250227 16:34:36.563" endtime="20250227 16:34:36.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:36.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:36.564" endtime="20250227 16:34:36.564"/>
</kw>
<msg timestamp="20250227 16:34:36.564" level="INFO">${upload_id} = 01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237</msg>
<status status="PASS" starttime="20250227 16:34:36.555" endtime="20250227 16:34:36.564"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250227 16:34:36.564" endtime="20250227 16:34:36.564"/>
</return>
<status status="PASS" starttime="20250227 16:34:36.554" endtime="20250227 16:34:36.564"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250227 16:34:36.564" endtime="20250227 16:34:36.565"/>
</return>
<status status="NOT RUN" starttime="20250227 16:34:36.564" endtime="20250227 16:34:36.565"/>
</branch>
<status status="PASS" starttime="20250227 16:34:36.554" endtime="20250227 16:34:36.565"/>
</if>
<msg timestamp="20250227 16:34:36.565" level="INFO">${uploadID} = 01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237</msg>
<status status="PASS" starttime="20250227 16:34:36.092" endtime="20250227 16:34:36.565"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:34:36.565" endtime="20250227 16:34:36.565"/>
</kw>
<status status="PASS" starttime="20250227 16:34:36.091" endtime="20250227 16:34:36.565"/>
</iter>
<status status="PASS" starttime="20250227 16:34:24.386" endtime="20250227 16:34:36.565"/>
</for>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:36.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-diiacmavow --prefix ozone-test-7231122653/listtest --max-items 10 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.048" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:36.567" endtime="20250227 16:34:37.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.049" level="INFO">{
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "2025-02-27T16:34:24.817Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}</msg>
<status status="PASS" starttime="20250227 16:34:37.048" endtime="20250227 16:34:37.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.049" endtime="20250227 16:34:37.050"/>
</kw>
<status status="PASS" starttime="20250227 16:34:36.566" endtime="20250227 16:34:37.050"/>
</kw>
<msg timestamp="20250227 16:34:37.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:36.566" endtime="20250227 16:34:37.050"/>
</kw>
<msg timestamp="20250227 16:34:37.050" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:36.566" endtime="20250227 16:34:37.050"/>
</kw>
<msg timestamp="20250227 16:34:37.050" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:36.565" endtime="20250227 16:34:37.050"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.053" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "2025-02-27T16:34:24.817Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.058" level="INFO">${output} = 10</msg>
<status status="PASS" starttime="20250227 16:34:37.051" endtime="20250227 16:34:37.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.059" level="INFO">10</msg>
<status status="PASS" starttime="20250227 16:34:37.059" endtime="20250227 16:34:37.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.059" endtime="20250227 16:34:37.060"/>
</kw>
<msg timestamp="20250227 16:34:37.060" level="INFO">${count} = 10</msg>
<status status="PASS" starttime="20250227 16:34:37.050" endtime="20250227 16:34:37.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>10</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:37.060" endtime="20250227 16:34:37.060"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.063" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "2025-02-27T16:34:24.817Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.068" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250227 16:34:37.061" endtime="20250227 16:34:37.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.069" level="INFO">true</msg>
<status status="PASS" starttime="20250227 16:34:37.068" endtime="20250227 16:34:37.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.069" endtime="20250227 16:34:37.069"/>
</kw>
<msg timestamp="20250227 16:34:37.069" level="INFO">${hasNext} = true</msg>
<status status="PASS" starttime="20250227 16:34:37.060" endtime="20250227 16:34:37.069"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:37.069" endtime="20250227 16:34:37.070"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextToken}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.072" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-61b1-7944-a639-577a56c31487-114076815511846981",
            "Key": "ozone-test-7231122653/listtest/key-0",
            "Initiated": "2025-02-27T16:34:24.817Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.077" level="INFO">${output} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.070" endtime="20250227 16:34:37.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.078" level="INFO">eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.077" endtime="20250227 16:34:37.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.078" endtime="20250227 16:34:37.078"/>
</kw>
<msg timestamp="20250227 16:34:37.078" level="INFO">${nextToken} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.070" endtime="20250227 16:34:37.078"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${nextToken}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250227 16:34:37.079" level="INFO">Length is 96</msg>
<status status="PASS" starttime="20250227 16:34:37.079" endtime="20250227 16:34:37.079"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10 --starting-token ${nextToken}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.082" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-diiacmavow --prefix ozone-test-7231122653/listtest --max-items 10 --starting-token eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.553" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250227 16:34:37.080" endtime="20250227 16:34:37.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.554" level="INFO">{
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015",
            "Key": "ozone-test-7231122653/listtest/key-2",
            "Initiated": "2025-02-27T16:34:25.804Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497",
            "Key": "ozone-test-7231122653/listtest/key-20",
            "Initiated": "2025-02-27T16:34:34.553Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818",
            "Key": "ozone-test-7231122653/listtest/key-21",
            "Initiated": "2025-02-27T16:34:35.048Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459",
            "Key": "ozone-test-7231122653/listtest/key-22",
            "Initiated": "2025-02-27T16:34:35.538Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636",
            "Key": "ozone-test-7231122653/listtest/key-23",
            "Initiated": "2025-02-27T16:34:36.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237",
            "Key": "ozone-test-7231122653/listtest/key-24",
            "Initiated": "2025-02-27T16:34:36.504Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832",
            "Key": "ozone-test-7231122653/listtest/key-3",
            "Initiated": "2025-02-27T16:34:26.285Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433",
            "Key": "ozone-test-7231122653/listtest/key-4",
            "Initiated": "2025-02-27T16:34:26.760Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}</msg>
<status status="PASS" starttime="20250227 16:34:37.553" endtime="20250227 16:34:37.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.554" endtime="20250227 16:34:37.554"/>
</kw>
<status status="PASS" starttime="20250227 16:34:37.080" endtime="20250227 16:34:37.555"/>
</kw>
<msg timestamp="20250227 16:34:37.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:37.080" endtime="20250227 16:34:37.555"/>
</kw>
<msg timestamp="20250227 16:34:37.555" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250227 16:34:37.079" endtime="20250227 16:34:37.555"/>
</kw>
<msg timestamp="20250227 16:34:37.555" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250227 16:34:37.079" endtime="20250227 16:34:37.555"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.558" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015",
            "Key": "ozone-test-7231122653/listtest/key-2",
            "Initiated": "2025-02-27T16:34:25.804Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497",
            "Key": "ozone-test-7231122653/listtest/key-20",
            "Initiated": "2025-02-27T16:34:34.553Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818",
            "Key": "ozone-test-7231122653/listtest/key-21",
            "Initiated": "2025-02-27T16:34:35.048Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459",
            "Key": "ozone-test-7231122653/listtest/key-22",
            "Initiated": "2025-02-27T16:34:35.538Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636",
            "Key": "ozone-test-7231122653/listtest/key-23",
            "Initiated": "2025-02-27T16:34:36.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237",
            "Key": "ozone-test-7231122653/listtest/key-24",
            "Initiated": "2025-02-27T16:34:36.504Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832",
            "Key": "ozone-test-7231122653/listtest/key-3",
            "Initiated": "2025-02-27T16:34:26.285Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433",
            "Key": "ozone-test-7231122653/listtest/key-4",
            "Initiated": "2025-02-27T16:34:26.760Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.564" level="INFO">${output} = 10</msg>
<status status="PASS" starttime="20250227 16:34:37.556" endtime="20250227 16:34:37.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.564" level="INFO">10</msg>
<status status="PASS" starttime="20250227 16:34:37.564" endtime="20250227 16:34:37.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.565" endtime="20250227 16:34:37.565"/>
</kw>
<msg timestamp="20250227 16:34:37.565" level="INFO">${count} = 10</msg>
<status status="PASS" starttime="20250227 16:34:37.555" endtime="20250227 16:34:37.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>10</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:37.565" endtime="20250227 16:34:37.566"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.568" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015",
            "Key": "ozone-test-7231122653/listtest/key-2",
            "Initiated": "2025-02-27T16:34:25.804Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497",
            "Key": "ozone-test-7231122653/listtest/key-20",
            "Initiated": "2025-02-27T16:34:34.553Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818",
            "Key": "ozone-test-7231122653/listtest/key-21",
            "Initiated": "2025-02-27T16:34:35.048Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459",
            "Key": "ozone-test-7231122653/listtest/key-22",
            "Initiated": "2025-02-27T16:34:35.538Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636",
            "Key": "ozone-test-7231122653/listtest/key-23",
            "Initiated": "2025-02-27T16:34:36.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237",
            "Key": "ozone-test-7231122653/listtest/key-24",
            "Initiated": "2025-02-27T16:34:36.504Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832",
            "Key": "ozone-test-7231122653/listtest/key-3",
            "Initiated": "2025-02-27T16:34:26.285Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433",
            "Key": "ozone-test-7231122653/listtest/key-4",
            "Initiated": "2025-02-27T16:34:26.760Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.573" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250227 16:34:37.566" endtime="20250227 16:34:37.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.574" level="INFO">true</msg>
<status status="PASS" starttime="20250227 16:34:37.573" endtime="20250227 16:34:37.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.574" endtime="20250227 16:34:37.574"/>
</kw>
<msg timestamp="20250227 16:34:37.574" level="INFO">${hasNext} = true</msg>
<status status="PASS" starttime="20250227 16:34:37.566" endtime="20250227 16:34:37.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:37.575" endtime="20250227 16:34:37.575"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextToken}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.577" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015",
            "Key": "ozone-test-7231122653/listtest/key-2",
            "Initiated": "2025-02-27T16:34:25.804Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497",
            "Key": "ozone-test-7231122653/listtest/key-20",
            "Initiated": "2025-02-27T16:34:34.553Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818",
            "Key": "ozone-test-7231122653/listtest/key-21",
            "Initiated": "2025-02-27T16:34:35.048Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8b92-7631-8043-cea8224e569f-114076816214458459",
            "Key": "ozone-test-7231122653/listtest/key-22",
            "Initiated": "2025-02-27T16:34:35.538Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636",
            "Key": "ozone-test-7231122653/listtest/key-23",
            "Initiated": "2025-02-27T16:34:36.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237",
            "Key": "ozone-test-7231122653/listtest/key-24",
            "Initiated": "2025-02-27T16:34:36.504Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-676d-7242-bcb7-77eccd564213-114076815608053832",
            "Key": "ozone-test-7231122653/listtest/key-3",
            "Initiated": "2025-02-27T16:34:26.285Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6948-7490-85d5-c86c07997560-114076815639183433",
            "Key": "ozone-test-7231122653/listtest/key-4",
            "Initiated": "2025-02-27T16:34:26.760Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:37.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:37.582" level="INFO">${output} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.575" endtime="20250227 16:34:37.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:37.583" level="INFO">eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.583" endtime="20250227 16:34:37.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:37.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:37.583" endtime="20250227 16:34:37.584"/>
</kw>
<msg timestamp="20250227 16:34:37.584" level="INFO">${nextToken} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250227 16:34:37.575" endtime="20250227 16:34:37.584"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${nextToken}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250227 16:34:37.584" level="INFO">Length is 96</msg>
<status status="PASS" starttime="20250227 16:34:37.584" endtime="20250227 16:34:37.584"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10 --starting-token ${nextToken}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:37.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-diiacmavow --prefix ozone-test-7231122653/listtest --max-items 10 --starting-token eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:38.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:38.047" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:37.586" endtime="20250227 16:34:38.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:38.048" level="INFO">{
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "2025-02-27T16:34:27.248Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859",
            "Key": "ozone-test-7231122653/listtest/key-6",
            "Initiated": "2025-02-27T16:34:27.744Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180",
            "Key": "ozone-test-7231122653/listtest/key-7",
            "Initiated": "2025-02-27T16:34:28.239Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461",
            "Key": "ozone-test-7231122653/listtest/key-8",
            "Initiated": "2025-02-27T16:34:28.719Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422",
            "Key": "ozone-test-7231122653/listtest/key-9",
            "Initiated": "2025-02-27T16:34:29.204Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest"
}</msg>
<status status="PASS" starttime="20250227 16:34:38.047" endtime="20250227 16:34:38.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:38.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:38.048" endtime="20250227 16:34:38.048"/>
</kw>
<status status="PASS" starttime="20250227 16:34:37.585" endtime="20250227 16:34:38.049"/>
</kw>
<msg timestamp="20250227 16:34:38.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:37.585" endtime="20250227 16:34:38.049"/>
</kw>
<msg timestamp="20250227 16:34:38.049" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:37.585" endtime="20250227 16:34:38.049"/>
</kw>
<msg timestamp="20250227 16:34:38.049" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:37.584" endtime="20250227 16:34:38.049"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:38.052" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "2025-02-27T16:34:27.248Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859",
            "Key": "ozone-test-7231122653/listtest/key-6",
            "Initiated": "2025-02-27T16:34:27.744Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180",
            "Key": "ozone-test-7231122653/listtest/key-7",
            "Initiated": "2025-02-27T16:34:28.239Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461",
            "Key": "ozone-test-7231122653/listtest/key-8",
            "Initiated": "2025-02-27T16:34:28.719Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422",
            "Key": "ozone-test-7231122653/listtest/key-9",
            "Initiated": "2025-02-27T16:34:29.204Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest"
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:38.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:38.057" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250227 16:34:38.050" endtime="20250227 16:34:38.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:38.057" level="INFO">5</msg>
<status status="PASS" starttime="20250227 16:34:38.057" endtime="20250227 16:34:38.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:38.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:38.058" endtime="20250227 16:34:38.058"/>
</kw>
<msg timestamp="20250227 16:34:38.058" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20250227 16:34:38.049" endtime="20250227 16:34:38.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:38.058" endtime="20250227 16:34:38.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:38.061" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002",
            "Key": "ozone-test-7231122653/listtest/key-5",
            "Initiated": "2025-02-27T16:34:27.248Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859",
            "Key": "ozone-test-7231122653/listtest/key-6",
            "Initiated": "2025-02-27T16:34:27.744Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180",
            "Key": "ozone-test-7231122653/listtest/key-7",
            "Initiated": "2025-02-27T16:34:28.239Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461",
            "Key": "ozone-test-7231122653/listtest/key-8",
            "Initiated": "2025-02-27T16:34:28.719Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422",
            "Key": "ozone-test-7231122653/listtest/key-9",
            "Initiated": "2025-02-27T16:34:29.204Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest"
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:38.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:38.066" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250227 16:34:38.059" endtime="20250227 16:34:38.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:38.067" level="INFO">false</msg>
<status status="PASS" starttime="20250227 16:34:38.066" endtime="20250227 16:34:38.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:38.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:38.067" endtime="20250227 16:34:38.067"/>
</kw>
<msg timestamp="20250227 16:34:38.067" level="INFO">${hasNext} = false</msg>
<status status="PASS" starttime="20250227 16:34:38.059" endtime="20250227 16:34:38.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>false</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:38.067" endtime="20250227 16:34:38.068"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest/key-1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:38.071" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-diiacmavow --prefix ozone-test-7231122653/listtest/key-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:38.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:38.534" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:38.069" endtime="20250227 16:34:38.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:38.535" level="INFO">{
    "Uploads": [
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest/key-1"
}</msg>
<status status="PASS" starttime="20250227 16:34:38.534" endtime="20250227 16:34:38.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:38.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:38.535" endtime="20250227 16:34:38.535"/>
</kw>
<status status="PASS" starttime="20250227 16:34:38.069" endtime="20250227 16:34:38.535"/>
</kw>
<msg timestamp="20250227 16:34:38.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:38.068" endtime="20250227 16:34:38.535"/>
</kw>
<msg timestamp="20250227 16:34:38.536" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:38.068" endtime="20250227 16:34:38.536"/>
</kw>
<msg timestamp="20250227 16:34:38.536" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250227 16:34:38.068" endtime="20250227 16:34:38.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:38.538" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "01954842-639d-79be-9675-44cf52e029ce-114076815544090694",
            "Key": "ozone-test-7231122653/listtest/key-1",
            "Initiated": "2025-02-27T16:34:25.309Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-74de-7946-8e43-b9092eac2e56-114076815833563215",
            "Key": "ozone-test-7231122653/listtest/key-10",
            "Initiated": "2025-02-27T16:34:29.726Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640",
            "Key": "ozone-test-7231122653/listtest/key-11",
            "Initiated": "2025-02-27T16:34:30.210Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849",
            "Key": "ozone-test-7231122653/listtest/key-12",
            "Initiated": "2025-02-27T16:34:30.688Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130",
            "Key": "ozone-test-7231122653/listtest/key-13",
            "Initiated": "2025-02-27T16:34:31.168Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875",
            "Key": "ozone-test-7231122653/listtest/key-14",
            "Initiated": "2025-02-27T16:34:31.647Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-7e42-7eb0-9325-709e44304849-114076815991111764",
            "Key": "ozone-test-7231122653/listtest/key-15",
            "Initiated": "2025-02-27T16:34:32.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8029-7210-acb1-9e3669fef597-114076816023027797",
            "Key": "ozone-test-7231122653/listtest/key-16",
            "Initiated": "2025-02-27T16:34:32.617Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-8207-7c57-b090-62fc830d2705-114076816054354006",
            "Key": "ozone-test-7231122653/listtest/key-17",
            "Initiated": "2025-02-27T16:34:33.095Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-83f4-72bb-8770-502b2e82589c-114076816086663255",
            "Key": "ozone-test-7231122653/listtest/key-18",
            "Initiated": "2025-02-27T16:34:33.588Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360",
            "Key": "ozone-test-7231122653/listtest/key-19",
            "Initiated": "2025-02-27T16:34:34.077Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/listtest/key-1"
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:38.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:38.544" level="INFO">${output} = 11</msg>
<status status="PASS" starttime="20250227 16:34:38.536" endtime="20250227 16:34:38.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:38.544" level="INFO">11</msg>
<status status="PASS" starttime="20250227 16:34:38.544" endtime="20250227 16:34:38.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:38.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:38.545" endtime="20250227 16:34:38.545"/>
</kw>
<msg timestamp="20250227 16:34:38.545" level="INFO">${count} = 11</msg>
<status status="PASS" starttime="20250227 16:34:38.536" endtime="20250227 16:34:38.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>11</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:38.545" endtime="20250227 16:34:38.545"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>25</value>
<iter>
<var name="${index}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:38.546" level="INFO">${key} = ozone-test-7231122653/listtest/key-0</msg>
<status status="PASS" starttime="20250227 16:34:38.546" endtime="20250227 16:34:38.546"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:38.547" level="INFO">${uploadID} = 01954842-61b1-7944-a639-577a56c31487-114076815511846981</msg>
<status status="PASS" starttime="20250227 16:34:38.546" endtime="20250227 16:34:38.547"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:38.550" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-0 --upload-id 01954842-61b1-7944-a639-577a56c31487-114076815511846981 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:39.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:39.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:38.548" endtime="20250227 16:34:39.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:39.002" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:39.002" endtime="20250227 16:34:39.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:39.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:39.002" endtime="20250227 16:34:39.003"/>
</kw>
<msg timestamp="20250227 16:34:39.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:38.548" endtime="20250227 16:34:39.003"/>
</kw>
<msg timestamp="20250227 16:34:39.003" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:38.547" endtime="20250227 16:34:39.003"/>
</kw>
<status status="PASS" starttime="20250227 16:34:38.547" endtime="20250227 16:34:39.003"/>
</kw>
<status status="PASS" starttime="20250227 16:34:38.546" endtime="20250227 16:34:39.003"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:39.004" level="INFO">${key} = ozone-test-7231122653/listtest/key-1</msg>
<status status="PASS" starttime="20250227 16:34:39.003" endtime="20250227 16:34:39.004"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:39.004" level="INFO">${uploadID} = 01954842-639d-79be-9675-44cf52e029ce-114076815544090694</msg>
<status status="PASS" starttime="20250227 16:34:39.004" endtime="20250227 16:34:39.004"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:39.008" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-1 --upload-id 01954842-639d-79be-9675-44cf52e029ce-114076815544090694 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:39.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:39.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.005" endtime="20250227 16:34:39.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:39.469" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:39.469" endtime="20250227 16:34:39.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:39.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:39.469" endtime="20250227 16:34:39.470"/>
</kw>
<msg timestamp="20250227 16:34:39.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.005" endtime="20250227 16:34:39.470"/>
</kw>
<msg timestamp="20250227 16:34:39.470" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:39.005" endtime="20250227 16:34:39.470"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.004" endtime="20250227 16:34:39.470"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.003" endtime="20250227 16:34:39.470"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:39.471" level="INFO">${key} = ozone-test-7231122653/listtest/key-2</msg>
<status status="PASS" starttime="20250227 16:34:39.470" endtime="20250227 16:34:39.471"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:39.471" level="INFO">${uploadID} = 01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015</msg>
<status status="PASS" starttime="20250227 16:34:39.471" endtime="20250227 16:34:39.471"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:39.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-2 --upload-id 01954842-658c-71a5-abdf-55da00e4e50d-114076815576531015 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:39.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:39.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.472" endtime="20250227 16:34:39.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:39.938" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:39.937" endtime="20250227 16:34:39.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:39.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:39.938" endtime="20250227 16:34:39.938"/>
</kw>
<msg timestamp="20250227 16:34:39.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.472" endtime="20250227 16:34:39.938"/>
</kw>
<msg timestamp="20250227 16:34:39.939" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:39.472" endtime="20250227 16:34:39.939"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.471" endtime="20250227 16:34:39.939"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.470" endtime="20250227 16:34:39.939"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:39.939" level="INFO">${key} = ozone-test-7231122653/listtest/key-3</msg>
<status status="PASS" starttime="20250227 16:34:39.939" endtime="20250227 16:34:39.939"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:39.940" level="INFO">${uploadID} = 01954842-676d-7242-bcb7-77eccd564213-114076815608053832</msg>
<status status="PASS" starttime="20250227 16:34:39.939" endtime="20250227 16:34:39.940"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:39.943" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-3 --upload-id 01954842-676d-7242-bcb7-77eccd564213-114076815608053832 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:40.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:40.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.941" endtime="20250227 16:34:40.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:40.401" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:40.401" endtime="20250227 16:34:40.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:40.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:40.402" endtime="20250227 16:34:40.402"/>
</kw>
<msg timestamp="20250227 16:34:40.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:39.940" endtime="20250227 16:34:40.402"/>
</kw>
<msg timestamp="20250227 16:34:40.402" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:39.940" endtime="20250227 16:34:40.402"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.940" endtime="20250227 16:34:40.402"/>
</kw>
<status status="PASS" starttime="20250227 16:34:39.939" endtime="20250227 16:34:40.402"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:40.403" level="INFO">${key} = ozone-test-7231122653/listtest/key-4</msg>
<status status="PASS" starttime="20250227 16:34:40.403" endtime="20250227 16:34:40.403"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:40.403" level="INFO">${uploadID} = 01954842-6948-7490-85d5-c86c07997560-114076815639183433</msg>
<status status="PASS" starttime="20250227 16:34:40.403" endtime="20250227 16:34:40.403"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:40.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-4 --upload-id 01954842-6948-7490-85d5-c86c07997560-114076815639183433 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:40.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:40.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:40.405" endtime="20250227 16:34:40.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:40.872" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:40.872" endtime="20250227 16:34:40.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:40.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:40.872" endtime="20250227 16:34:40.873"/>
</kw>
<msg timestamp="20250227 16:34:40.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:40.404" endtime="20250227 16:34:40.873"/>
</kw>
<msg timestamp="20250227 16:34:40.873" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:40.404" endtime="20250227 16:34:40.873"/>
</kw>
<status status="PASS" starttime="20250227 16:34:40.403" endtime="20250227 16:34:40.873"/>
</kw>
<status status="PASS" starttime="20250227 16:34:40.402" endtime="20250227 16:34:40.873"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:40.874" level="INFO">${key} = ozone-test-7231122653/listtest/key-5</msg>
<status status="PASS" starttime="20250227 16:34:40.873" endtime="20250227 16:34:40.874"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:40.874" level="INFO">${uploadID} = 01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002</msg>
<status status="PASS" starttime="20250227 16:34:40.874" endtime="20250227 16:34:40.874"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:40.878" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-5 --upload-id 01954842-6b30-72a6-b334-ae6c728ca8f0-114076815671165002 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:41.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:41.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:40.875" endtime="20250227 16:34:41.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:41.339" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:41.339" endtime="20250227 16:34:41.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:41.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:41.339" endtime="20250227 16:34:41.340"/>
</kw>
<msg timestamp="20250227 16:34:41.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:40.875" endtime="20250227 16:34:41.340"/>
</kw>
<msg timestamp="20250227 16:34:41.340" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:40.875" endtime="20250227 16:34:41.340"/>
</kw>
<status status="PASS" starttime="20250227 16:34:40.874" endtime="20250227 16:34:41.340"/>
</kw>
<status status="PASS" starttime="20250227 16:34:40.873" endtime="20250227 16:34:41.340"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:41.341" level="INFO">${key} = ozone-test-7231122653/listtest/key-6</msg>
<status status="PASS" starttime="20250227 16:34:41.340" endtime="20250227 16:34:41.341"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:41.341" level="INFO">${uploadID} = 01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859</msg>
<status status="PASS" starttime="20250227 16:34:41.341" endtime="20250227 16:34:41.341"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:41.344" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-6 --upload-id 01954842-6d20-7997-9c8d-8c6d5fbe5313-114076815703670859 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:41.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:41.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:41.342" endtime="20250227 16:34:41.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:41.808" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:41.807" endtime="20250227 16:34:41.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:41.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:41.808" endtime="20250227 16:34:41.808"/>
</kw>
<msg timestamp="20250227 16:34:41.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:41.342" endtime="20250227 16:34:41.809"/>
</kw>
<msg timestamp="20250227 16:34:41.809" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:41.341" endtime="20250227 16:34:41.809"/>
</kw>
<status status="PASS" starttime="20250227 16:34:41.341" endtime="20250227 16:34:41.809"/>
</kw>
<status status="PASS" starttime="20250227 16:34:41.340" endtime="20250227 16:34:41.809"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:41.810" level="INFO">${key} = ozone-test-7231122653/listtest/key-7</msg>
<status status="PASS" starttime="20250227 16:34:41.809" endtime="20250227 16:34:41.810"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:41.810" level="INFO">${uploadID} = 01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180</msg>
<status status="PASS" starttime="20250227 16:34:41.810" endtime="20250227 16:34:41.810"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:41.814" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-7 --upload-id 01954842-6f0f-7c40-bcb7-6a64cbfb30bc-114076815736111180 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:42.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:42.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:41.812" endtime="20250227 16:34:42.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:42.280" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:42.280" endtime="20250227 16:34:42.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:42.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:42.280" endtime="20250227 16:34:42.281"/>
</kw>
<msg timestamp="20250227 16:34:42.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:41.811" endtime="20250227 16:34:42.281"/>
</kw>
<msg timestamp="20250227 16:34:42.281" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:41.811" endtime="20250227 16:34:42.281"/>
</kw>
<status status="PASS" starttime="20250227 16:34:41.810" endtime="20250227 16:34:42.281"/>
</kw>
<status status="PASS" starttime="20250227 16:34:41.809" endtime="20250227 16:34:42.281"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:42.282" level="INFO">${key} = ozone-test-7231122653/listtest/key-8</msg>
<status status="PASS" starttime="20250227 16:34:42.281" endtime="20250227 16:34:42.282"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:42.282" level="INFO">${uploadID} = 01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461</msg>
<status status="PASS" starttime="20250227 16:34:42.282" endtime="20250227 16:34:42.282"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:42.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-8 --upload-id 01954842-70ef-7cd8-a8f1-5074030ebe38-114076815767568461 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:42.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:42.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:42.283" endtime="20250227 16:34:42.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:42.739" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:42.739" endtime="20250227 16:34:42.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:42.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:42.739" endtime="20250227 16:34:42.740"/>
</kw>
<msg timestamp="20250227 16:34:42.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:42.283" endtime="20250227 16:34:42.740"/>
</kw>
<msg timestamp="20250227 16:34:42.740" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:42.283" endtime="20250227 16:34:42.740"/>
</kw>
<status status="PASS" starttime="20250227 16:34:42.282" endtime="20250227 16:34:42.740"/>
</kw>
<status status="PASS" starttime="20250227 16:34:42.281" endtime="20250227 16:34:42.740"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:42.741" level="INFO">${key} = ozone-test-7231122653/listtest/key-9</msg>
<status status="PASS" starttime="20250227 16:34:42.740" endtime="20250227 16:34:42.741"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:42.741" level="INFO">${uploadID} = 01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422</msg>
<status status="PASS" starttime="20250227 16:34:42.741" endtime="20250227 16:34:42.741"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:42.745" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-9 --upload-id 01954842-72d4-7559-828f-eeccd5ad7bd2-114076815799353422 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:43.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:43.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:42.742" endtime="20250227 16:34:43.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:43.208" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:43.208" endtime="20250227 16:34:43.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:43.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:43.208" endtime="20250227 16:34:43.209"/>
</kw>
<msg timestamp="20250227 16:34:43.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:42.742" endtime="20250227 16:34:43.209"/>
</kw>
<msg timestamp="20250227 16:34:43.209" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:42.742" endtime="20250227 16:34:43.209"/>
</kw>
<status status="PASS" starttime="20250227 16:34:42.741" endtime="20250227 16:34:43.209"/>
</kw>
<status status="PASS" starttime="20250227 16:34:42.740" endtime="20250227 16:34:43.209"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:43.209" level="INFO">${key} = ozone-test-7231122653/listtest/key-10</msg>
<status status="PASS" starttime="20250227 16:34:43.209" endtime="20250227 16:34:43.209"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:43.210" level="INFO">${uploadID} = 01954842-74de-7946-8e43-b9092eac2e56-114076815833563215</msg>
<status status="PASS" starttime="20250227 16:34:43.210" endtime="20250227 16:34:43.210"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:43.213" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-10 --upload-id 01954842-74de-7946-8e43-b9092eac2e56-114076815833563215 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:43.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:43.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:43.211" endtime="20250227 16:34:43.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:43.679" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:43.678" endtime="20250227 16:34:43.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:43.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:43.679" endtime="20250227 16:34:43.679"/>
</kw>
<msg timestamp="20250227 16:34:43.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:43.211" endtime="20250227 16:34:43.679"/>
</kw>
<msg timestamp="20250227 16:34:43.680" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:43.210" endtime="20250227 16:34:43.680"/>
</kw>
<status status="PASS" starttime="20250227 16:34:43.210" endtime="20250227 16:34:43.680"/>
</kw>
<status status="PASS" starttime="20250227 16:34:43.209" endtime="20250227 16:34:43.680"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:43.680" level="INFO">${key} = ozone-test-7231122653/listtest/key-11</msg>
<status status="PASS" starttime="20250227 16:34:43.680" endtime="20250227 16:34:43.680"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:43.681" level="INFO">${uploadID} = 01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640</msg>
<status status="PASS" starttime="20250227 16:34:43.680" endtime="20250227 16:34:43.681"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:43.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-11 --upload-id 01954842-76c2-7f75-9afa-7126e19a3bd0-114076815865282640 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:44.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:44.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:43.682" endtime="20250227 16:34:44.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:44.149" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:44.148" endtime="20250227 16:34:44.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:44.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:44.149" endtime="20250227 16:34:44.149"/>
</kw>
<msg timestamp="20250227 16:34:44.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:43.682" endtime="20250227 16:34:44.150"/>
</kw>
<msg timestamp="20250227 16:34:44.150" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:43.681" endtime="20250227 16:34:44.150"/>
</kw>
<status status="PASS" starttime="20250227 16:34:43.681" endtime="20250227 16:34:44.150"/>
</kw>
<status status="PASS" starttime="20250227 16:34:43.680" endtime="20250227 16:34:44.150"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:44.151" level="INFO">${key} = ozone-test-7231122653/listtest/key-12</msg>
<status status="PASS" starttime="20250227 16:34:44.150" endtime="20250227 16:34:44.151"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:44.151" level="INFO">${uploadID} = 01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849</msg>
<status status="PASS" starttime="20250227 16:34:44.151" endtime="20250227 16:34:44.151"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:44.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-12 --upload-id 01954842-78a0-75ef-bc1b-2eccecafb883-114076815896608849 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:44.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:44.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:44.153" endtime="20250227 16:34:44.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:44.619" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:44.618" endtime="20250227 16:34:44.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:44.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:44.619" endtime="20250227 16:34:44.619"/>
</kw>
<msg timestamp="20250227 16:34:44.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:44.152" endtime="20250227 16:34:44.620"/>
</kw>
<msg timestamp="20250227 16:34:44.620" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:44.152" endtime="20250227 16:34:44.620"/>
</kw>
<status status="PASS" starttime="20250227 16:34:44.151" endtime="20250227 16:34:44.620"/>
</kw>
<status status="PASS" starttime="20250227 16:34:44.150" endtime="20250227 16:34:44.620"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:44.621" level="INFO">${key} = ozone-test-7231122653/listtest/key-13</msg>
<status status="PASS" starttime="20250227 16:34:44.620" endtime="20250227 16:34:44.621"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:44.621" level="INFO">${uploadID} = 01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130</msg>
<status status="PASS" starttime="20250227 16:34:44.621" endtime="20250227 16:34:44.621"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:44.624" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-13 --upload-id 01954842-7a80-71a3-827a-98dfa3834b39-114076815928066130 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:45.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:45.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:44.622" endtime="20250227 16:34:45.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:45.102" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:45.101" endtime="20250227 16:34:45.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:45.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:45.102" endtime="20250227 16:34:45.102"/>
</kw>
<msg timestamp="20250227 16:34:45.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:44.622" endtime="20250227 16:34:45.103"/>
</kw>
<msg timestamp="20250227 16:34:45.103" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:44.622" endtime="20250227 16:34:45.103"/>
</kw>
<status status="PASS" starttime="20250227 16:34:44.621" endtime="20250227 16:34:45.103"/>
</kw>
<status status="PASS" starttime="20250227 16:34:44.620" endtime="20250227 16:34:45.103"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:45.103" level="INFO">${key} = ozone-test-7231122653/listtest/key-14</msg>
<status status="PASS" starttime="20250227 16:34:45.103" endtime="20250227 16:34:45.103"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:45.104" level="INFO">${uploadID} = 01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875</msg>
<status status="PASS" starttime="20250227 16:34:45.104" endtime="20250227 16:34:45.104"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:45.107" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-14 --upload-id 01954842-7c5f-71ee-b593-6992a2c34352-114076815959457875 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:45.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:45.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:45.105" endtime="20250227 16:34:45.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:45.573" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:45.572" endtime="20250227 16:34:45.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:45.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:45.573" endtime="20250227 16:34:45.573"/>
</kw>
<msg timestamp="20250227 16:34:45.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:45.105" endtime="20250227 16:34:45.574"/>
</kw>
<msg timestamp="20250227 16:34:45.574" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:45.104" endtime="20250227 16:34:45.574"/>
</kw>
<status status="PASS" starttime="20250227 16:34:45.104" endtime="20250227 16:34:45.574"/>
</kw>
<status status="PASS" starttime="20250227 16:34:45.103" endtime="20250227 16:34:45.574"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:45.574" level="INFO">${key} = ozone-test-7231122653/listtest/key-15</msg>
<status status="PASS" starttime="20250227 16:34:45.574" endtime="20250227 16:34:45.574"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:45.575" level="INFO">${uploadID} = 01954842-7e42-7eb0-9325-709e44304849-114076815991111764</msg>
<status status="PASS" starttime="20250227 16:34:45.574" endtime="20250227 16:34:45.575"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:45.578" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-15 --upload-id 01954842-7e42-7eb0-9325-709e44304849-114076815991111764 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:46.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:46.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:45.576" endtime="20250227 16:34:46.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:46.054" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:46.053" endtime="20250227 16:34:46.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:46.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:46.054" endtime="20250227 16:34:46.054"/>
</kw>
<msg timestamp="20250227 16:34:46.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:45.576" endtime="20250227 16:34:46.054"/>
</kw>
<msg timestamp="20250227 16:34:46.054" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:45.575" endtime="20250227 16:34:46.054"/>
</kw>
<status status="PASS" starttime="20250227 16:34:45.575" endtime="20250227 16:34:46.054"/>
</kw>
<status status="PASS" starttime="20250227 16:34:45.574" endtime="20250227 16:34:46.054"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:46.055" level="INFO">${key} = ozone-test-7231122653/listtest/key-16</msg>
<status status="PASS" starttime="20250227 16:34:46.055" endtime="20250227 16:34:46.055"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:46.055" level="INFO">${uploadID} = 01954842-8029-7210-acb1-9e3669fef597-114076816023027797</msg>
<status status="PASS" starttime="20250227 16:34:46.055" endtime="20250227 16:34:46.055"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:46.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-16 --upload-id 01954842-8029-7210-acb1-9e3669fef597-114076816023027797 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:46.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:46.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.057" endtime="20250227 16:34:46.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:46.512" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:46.511" endtime="20250227 16:34:46.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:46.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:46.512" endtime="20250227 16:34:46.512"/>
</kw>
<msg timestamp="20250227 16:34:46.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.056" endtime="20250227 16:34:46.512"/>
</kw>
<msg timestamp="20250227 16:34:46.512" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:46.056" endtime="20250227 16:34:46.512"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.055" endtime="20250227 16:34:46.513"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.055" endtime="20250227 16:34:46.513"/>
</iter>
<iter>
<var name="${index}">17</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:46.513" level="INFO">${key} = ozone-test-7231122653/listtest/key-17</msg>
<status status="PASS" starttime="20250227 16:34:46.513" endtime="20250227 16:34:46.513"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:46.514" level="INFO">${uploadID} = 01954842-8207-7c57-b090-62fc830d2705-114076816054354006</msg>
<status status="PASS" starttime="20250227 16:34:46.513" endtime="20250227 16:34:46.514"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:46.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-17 --upload-id 01954842-8207-7c57-b090-62fc830d2705-114076816054354006 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:46.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:46.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.515" endtime="20250227 16:34:46.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:46.978" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:46.977" endtime="20250227 16:34:46.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:46.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:46.978" endtime="20250227 16:34:46.978"/>
</kw>
<msg timestamp="20250227 16:34:46.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.514" endtime="20250227 16:34:46.978"/>
</kw>
<msg timestamp="20250227 16:34:46.979" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:46.514" endtime="20250227 16:34:46.979"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.514" endtime="20250227 16:34:46.979"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.513" endtime="20250227 16:34:46.979"/>
</iter>
<iter>
<var name="${index}">18</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:46.979" level="INFO">${key} = ozone-test-7231122653/listtest/key-18</msg>
<status status="PASS" starttime="20250227 16:34:46.979" endtime="20250227 16:34:46.979"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:46.980" level="INFO">${uploadID} = 01954842-83f4-72bb-8770-502b2e82589c-114076816086663255</msg>
<status status="PASS" starttime="20250227 16:34:46.980" endtime="20250227 16:34:46.980"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:46.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-18 --upload-id 01954842-83f4-72bb-8770-502b2e82589c-114076816086663255 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:47.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:47.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.981" endtime="20250227 16:34:47.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:47.443" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:47.443" endtime="20250227 16:34:47.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:47.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:47.443" endtime="20250227 16:34:47.444"/>
</kw>
<msg timestamp="20250227 16:34:47.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:46.981" endtime="20250227 16:34:47.444"/>
</kw>
<msg timestamp="20250227 16:34:47.444" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:46.980" endtime="20250227 16:34:47.444"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.980" endtime="20250227 16:34:47.444"/>
</kw>
<status status="PASS" starttime="20250227 16:34:46.979" endtime="20250227 16:34:47.444"/>
</iter>
<iter>
<var name="${index}">19</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:47.445" level="INFO">${key} = ozone-test-7231122653/listtest/key-19</msg>
<status status="PASS" starttime="20250227 16:34:47.444" endtime="20250227 16:34:47.445"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:47.445" level="INFO">${uploadID} = 01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360</msg>
<status status="PASS" starttime="20250227 16:34:47.445" endtime="20250227 16:34:47.445"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:47.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-19 --upload-id 01954842-85dd-748d-89d8-c0e84cd46ec5-114076816118710360 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:47.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:47.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:47.447" endtime="20250227 16:34:47.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:47.940" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:47.937" endtime="20250227 16:34:47.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:47.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:47.940" endtime="20250227 16:34:47.943"/>
</kw>
<msg timestamp="20250227 16:34:47.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:47.447" endtime="20250227 16:34:47.943"/>
</kw>
<msg timestamp="20250227 16:34:47.944" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:47.446" endtime="20250227 16:34:47.944"/>
</kw>
<status status="PASS" starttime="20250227 16:34:47.446" endtime="20250227 16:34:47.944"/>
</kw>
<status status="PASS" starttime="20250227 16:34:47.444" endtime="20250227 16:34:47.944"/>
</iter>
<iter>
<var name="${index}">20</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:47.944" level="INFO">${key} = ozone-test-7231122653/listtest/key-20</msg>
<status status="PASS" starttime="20250227 16:34:47.944" endtime="20250227 16:34:47.944"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:47.945" level="INFO">${uploadID} = 01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497</msg>
<status status="PASS" starttime="20250227 16:34:47.945" endtime="20250227 16:34:47.945"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:47.953" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-20 --upload-id 01954842-87b9-7c18-97c0-ede433cb2d62-114076816149905497 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:48.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:48.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:47.949" endtime="20250227 16:34:48.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:48.424" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:48.424" endtime="20250227 16:34:48.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:48.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:48.424" endtime="20250227 16:34:48.425"/>
</kw>
<msg timestamp="20250227 16:34:48.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:47.948" endtime="20250227 16:34:48.425"/>
</kw>
<msg timestamp="20250227 16:34:48.425" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:47.947" endtime="20250227 16:34:48.425"/>
</kw>
<status status="PASS" starttime="20250227 16:34:47.945" endtime="20250227 16:34:48.425"/>
</kw>
<status status="PASS" starttime="20250227 16:34:47.944" endtime="20250227 16:34:48.425"/>
</iter>
<iter>
<var name="${index}">21</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:48.426" level="INFO">${key} = ozone-test-7231122653/listtest/key-21</msg>
<status status="PASS" starttime="20250227 16:34:48.425" endtime="20250227 16:34:48.426"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:48.426" level="INFO">${uploadID} = 01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818</msg>
<status status="PASS" starttime="20250227 16:34:48.426" endtime="20250227 16:34:48.426"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:48.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-21 --upload-id 01954842-89a8-7894-8fe8-ef26baac4999-114076816182345818 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:48.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:48.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:48.427" endtime="20250227 16:34:48.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:48.890" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:48.889" endtime="20250227 16:34:48.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:48.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:48.890" endtime="20250227 16:34:48.890"/>
</kw>
<msg timestamp="20250227 16:34:48.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:48.427" endtime="20250227 16:34:48.890"/>
</kw>
<msg timestamp="20250227 16:34:48.891" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:48.427" endtime="20250227 16:34:48.891"/>
</kw>
<status status="PASS" starttime="20250227 16:34:48.426" endtime="20250227 16:34:48.891"/>
</kw>
<status status="PASS" starttime="20250227 16:34:48.425" endtime="20250227 16:34:48.891"/>
</iter>
<iter>
<var name="${index}">22</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:48.891" level="INFO">${key} = ozone-test-7231122653/listtest/key-22</msg>
<status status="PASS" starttime="20250227 16:34:48.891" endtime="20250227 16:34:48.891"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:48.892" level="INFO">${uploadID} = 01954842-8b92-7631-8043-cea8224e569f-114076816214458459</msg>
<status status="PASS" starttime="20250227 16:34:48.891" endtime="20250227 16:34:48.892"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:48.895" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-22 --upload-id 01954842-8b92-7631-8043-cea8224e569f-114076816214458459 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:49.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:49.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:48.893" endtime="20250227 16:34:49.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:49.358" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:49.358" endtime="20250227 16:34:49.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:49.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:49.358" endtime="20250227 16:34:49.359"/>
</kw>
<msg timestamp="20250227 16:34:49.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:48.893" endtime="20250227 16:34:49.359"/>
</kw>
<msg timestamp="20250227 16:34:49.359" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:48.892" endtime="20250227 16:34:49.359"/>
</kw>
<status status="PASS" starttime="20250227 16:34:48.892" endtime="20250227 16:34:49.359"/>
</kw>
<status status="PASS" starttime="20250227 16:34:48.891" endtime="20250227 16:34:49.359"/>
</iter>
<iter>
<var name="${index}">23</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:49.360" level="INFO">${key} = ozone-test-7231122653/listtest/key-23</msg>
<status status="PASS" starttime="20250227 16:34:49.359" endtime="20250227 16:34:49.360"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:49.360" level="INFO">${uploadID} = 01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636</msg>
<status status="PASS" starttime="20250227 16:34:49.360" endtime="20250227 16:34:49.360"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:49.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-23 --upload-id 01954842-8d7d-79ee-a40a-141dbf10c375-114076816246636636 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:49.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:49.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:49.361" endtime="20250227 16:34:49.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:49.868" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:49.867" endtime="20250227 16:34:49.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:49.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:49.868" endtime="20250227 16:34:49.868"/>
</kw>
<msg timestamp="20250227 16:34:49.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:49.361" endtime="20250227 16:34:49.868"/>
</kw>
<msg timestamp="20250227 16:34:49.869" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:49.360" endtime="20250227 16:34:49.869"/>
</kw>
<status status="PASS" starttime="20250227 16:34:49.360" endtime="20250227 16:34:49.869"/>
</kw>
<status status="PASS" starttime="20250227 16:34:49.359" endtime="20250227 16:34:49.869"/>
</iter>
<iter>
<var name="${index}">24</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:34:49.869" level="INFO">${key} = ozone-test-7231122653/listtest/key-24</msg>
<status status="PASS" starttime="20250227 16:34:49.869" endtime="20250227 16:34:49.869"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250227 16:34:49.870" level="INFO">${uploadID} = 01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237</msg>
<status status="PASS" starttime="20250227 16:34:49.870" endtime="20250227 16:34:49.870"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:49.878" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-diiacmavow --key ozone-test-7231122653/listtest/key-24 --upload-id 01954842-8f58-7f72-bf2d-ff963aac3018-114076816277766237 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:50.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:50.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:49.872" endtime="20250227 16:34:50.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:50.378" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:50.378" endtime="20250227 16:34:50.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:50.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:50.378" endtime="20250227 16:34:50.379"/>
</kw>
<msg timestamp="20250227 16:34:50.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:49.872" endtime="20250227 16:34:50.379"/>
</kw>
<msg timestamp="20250227 16:34:50.379" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:34:49.871" endtime="20250227 16:34:50.379"/>
</kw>
<status status="PASS" starttime="20250227 16:34:49.870" endtime="20250227 16:34:50.379"/>
</kw>
<status status="PASS" starttime="20250227 16:34:49.869" endtime="20250227 16:34:50.379"/>
</iter>
<status status="PASS" starttime="20250227 16:34:38.546" endtime="20250227 16:34:50.379"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:24.383" endtime="20250227 16:34:50.379"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20250227 16:34:50.381" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250227 16:34:50.381" endtime="20250227 16:34:50.381"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.381" endtime="20250227 16:34:50.381"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:33:33.329" endtime="20250227 16:34:50.381"/>
</suite>
<suite id="s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:34:50.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:50.392" endtime="20250227 16:34:50.392"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.392" endtime="20250227 16:34:50.392"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.392" endtime="20250227 16:34:50.392"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:34:50.393" endtime="20250227 16:34:50.393"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.392" endtime="20250227 16:34:50.393"/>
</kw>
<test id="s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:50.395" level="INFO">${postfix} = 56595</msg>
<status status="PASS" starttime="20250227 16:34:50.394" endtime="20250227 16:34:50.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:34:50.395" level="INFO">${DESTBUCKET} = destbucket-56595</msg>
<status status="PASS" starttime="20250227 16:34:50.395" endtime="20250227 16:34:50.395"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:50.398" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-56595 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:50.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:50.855" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-56595"
}</msg>
<status status="PASS" starttime="20250227 16:34:50.396" endtime="20250227 16:34:50.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:50.856" level="INFO">{
    "Location": "http://s3g:9878/destbucket-56595"
}</msg>
<status status="PASS" starttime="20250227 16:34:50.856" endtime="20250227 16:34:50.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:50.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:50.856" endtime="20250227 16:34:50.857"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.396" endtime="20250227 16:34:50.857"/>
</kw>
<msg timestamp="20250227 16:34:50.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:50.396" endtime="20250227 16:34:50.857"/>
</kw>
<msg timestamp="20250227 16:34:50.857" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-56595"
}</msg>
<status status="PASS" starttime="20250227 16:34:50.395" endtime="20250227 16:34:50.857"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.395" endtime="20250227 16:34:50.857"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.394" endtime="20250227 16:34:50.857"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.394" endtime="20250227 16:34:50.857"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:50.860" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20250227 16:34:50.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:50.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:50.858" endtime="20250227 16:34:50.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:50.865" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:50.864" endtime="20250227 16:34:50.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:50.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:50.865" endtime="20250227 16:34:50.865"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.858" endtime="20250227 16:34:50.865"/>
</kw>
<msg timestamp="20250227 16:34:50.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:50.858" endtime="20250227 16:34:50.866"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.857" endtime="20250227 16:34:50.866"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:50.869" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:50.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:50.873" level="INFO">${output} = 03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:50.867" endtime="20250227 16:34:50.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:50.873" level="INFO">03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:50.873" endtime="20250227 16:34:50.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:50.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:50.874" endtime="20250227 16:34:50.874"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.866" endtime="20250227 16:34:50.874"/>
</kw>
<msg timestamp="20250227 16:34:50.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:50.866" endtime="20250227 16:34:50.874"/>
</kw>
<msg timestamp="20250227 16:34:50.874" level="INFO">${file_checksum} = 03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:50.866" endtime="20250227 16:34:50.874"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:50.878" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:51.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:51.410" level="INFO">${output} = {
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\""
}</msg>
<status status="PASS" starttime="20250227 16:34:50.876" endtime="20250227 16:34:51.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:51.411" level="INFO">{
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\""
}</msg>
<status status="PASS" starttime="20250227 16:34:51.411" endtime="20250227 16:34:51.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:51.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:51.411" endtime="20250227 16:34:51.412"/>
</kw>
<status status="PASS" starttime="20250227 16:34:50.876" endtime="20250227 16:34:51.412"/>
</kw>
<msg timestamp="20250227 16:34:51.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:50.875" endtime="20250227 16:34:51.412"/>
</kw>
<msg timestamp="20250227 16:34:51.412" level="INFO">${output} = {
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\""
}</msg>
<status status="PASS" starttime="20250227 16:34:50.875" endtime="20250227 16:34:51.412"/>
</kw>
<msg timestamp="20250227 16:34:51.412" level="INFO">${result} = {
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\""
}</msg>
<status status="PASS" starttime="20250227 16:34:50.874" endtime="20250227 16:34:51.412"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:51.415" level="INFO">Running command 'echo '{
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:51.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:51.420" level="INFO">${output} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:51.413" endtime="20250227 16:34:51.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:51.421" level="INFO">"03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:51.421" endtime="20250227 16:34:51.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:51.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:51.421" endtime="20250227 16:34:51.421"/>
</kw>
<msg timestamp="20250227 16:34:51.422" level="INFO">${eTag} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:51.412" endtime="20250227 16:34:51.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:51.422" endtime="20250227 16:34:51.422"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:51.426" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:51.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:51.891" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:51.357Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:51.424" endtime="20250227 16:34:51.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:51.892" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:51.357Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:34:51.891" endtime="20250227 16:34:51.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:51.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:51.892" endtime="20250227 16:34:51.892"/>
</kw>
<status status="PASS" starttime="20250227 16:34:51.424" endtime="20250227 16:34:51.893"/>
</kw>
<msg timestamp="20250227 16:34:51.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:51.423" endtime="20250227 16:34:51.893"/>
</kw>
<msg timestamp="20250227 16:34:51.893" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:51.357Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:51.423" endtime="20250227 16:34:51.893"/>
</kw>
<msg timestamp="20250227 16:34:51.893" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:51.357Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:51.422" endtime="20250227 16:34:51.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:51.893" endtime="20250227 16:34:51.893"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:51.897" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:52.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:52.421" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:52.360Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:51.895" endtime="20250227 16:34:52.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:52.422" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:52.360Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:52.422" endtime="20250227 16:34:52.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:52.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:52.423" endtime="20250227 16:34:52.423"/>
</kw>
<status status="PASS" starttime="20250227 16:34:51.895" endtime="20250227 16:34:52.423"/>
</kw>
<msg timestamp="20250227 16:34:52.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:51.894" endtime="20250227 16:34:52.423"/>
</kw>
<msg timestamp="20250227 16:34:52.423" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:52.360Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:51.894" endtime="20250227 16:34:52.423"/>
</kw>
<msg timestamp="20250227 16:34:52.423" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:52.360Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:51.893" endtime="20250227 16:34:52.423"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:52.426" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:52.360Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:52.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:52.431" level="INFO">${output} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:52.424" endtime="20250227 16:34:52.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:52.432" level="INFO">"03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:52.432" endtime="20250227 16:34:52.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:52.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:52.432" endtime="20250227 16:34:52.433"/>
</kw>
<msg timestamp="20250227 16:34:52.433" level="INFO">${eTag} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:52.424" endtime="20250227 16:34:52.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:52.433" endtime="20250227 16:34:52.433"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:52.437" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-56595 --prefix ozone-test-7231122653/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:52.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:52.896" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:52.360Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:52.435" endtime="20250227 16:34:52.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:52.897" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:52.360Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:34:52.897" endtime="20250227 16:34:52.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:52.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:52.898" endtime="20250227 16:34:52.898"/>
</kw>
<status status="PASS" starttime="20250227 16:34:52.434" endtime="20250227 16:34:52.898"/>
</kw>
<msg timestamp="20250227 16:34:52.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:52.434" endtime="20250227 16:34:52.898"/>
</kw>
<msg timestamp="20250227 16:34:52.898" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:52.360Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:52.434" endtime="20250227 16:34:52.898"/>
</kw>
<msg timestamp="20250227 16:34:52.898" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:52.360Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:52.433" endtime="20250227 16:34:52.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:52.899" endtime="20250227 16:34:52.899"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:52.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:53.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:53.362" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:52.900" endtime="20250227 16:34:53.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:53.363" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:53 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Thu, 27 Feb 2025 16:34:53 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:53.363" endtime="20250227 16:34:53.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:53.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:53.363" endtime="20250227 16:34:53.364"/>
</kw>
<status status="PASS" starttime="20250227 16:34:52.900" endtime="20250227 16:34:53.364"/>
</kw>
<msg timestamp="20250227 16:34:53.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:52.900" endtime="20250227 16:34:53.364"/>
</kw>
<msg timestamp="20250227 16:34:53.364" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:52.899" endtime="20250227 16:34:53.364"/>
</kw>
<msg timestamp="20250227 16:34:53.364" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:52.899" endtime="20250227 16:34:53.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:53.365" endtime="20250227 16:34:53.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:53.365" endtime="20250227 16:34:53.365"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:53.365" endtime="20250227 16:34:53.365"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:53.366" endtime="20250227 16:34:53.366"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:53.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:53.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:53.838" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:53.367" endtime="20250227 16:34:53.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:53.839" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:53 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:53 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:53.838" endtime="20250227 16:34:53.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:53.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:53.839" endtime="20250227 16:34:53.839"/>
</kw>
<status status="PASS" starttime="20250227 16:34:53.367" endtime="20250227 16:34:53.840"/>
</kw>
<msg timestamp="20250227 16:34:53.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:53.367" endtime="20250227 16:34:53.840"/>
</kw>
<msg timestamp="20250227 16:34:53.840" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:53.367" endtime="20250227 16:34:53.840"/>
</kw>
<msg timestamp="20250227 16:34:53.840" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:53.366" endtime="20250227 16:34:53.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:53.840" endtime="20250227 16:34:53.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:53.843" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:52 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:53 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:53 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:53.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:53.848" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:34:53.841" endtime="20250227 16:34:53.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:53.848" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:34:53.848" endtime="20250227 16:34:53.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:53.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:53.849" endtime="20250227 16:34:53.849"/>
</kw>
<msg timestamp="20250227 16:34:53.849" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:34:53.841" endtime="20250227 16:34:53.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:53.849" endtime="20250227 16:34:53.849"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:53.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:54.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:54.358" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:54.306Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:53.851" endtime="20250227 16:34:54.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:54.359" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:54.306Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:54.358" endtime="20250227 16:34:54.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:54.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:54.359" endtime="20250227 16:34:54.360"/>
</kw>
<status status="PASS" starttime="20250227 16:34:53.851" endtime="20250227 16:34:54.360"/>
</kw>
<msg timestamp="20250227 16:34:54.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:53.850" endtime="20250227 16:34:54.360"/>
</kw>
<msg timestamp="20250227 16:34:54.360" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:54.306Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:53.850" endtime="20250227 16:34:54.360"/>
</kw>
<msg timestamp="20250227 16:34:54.360" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:54.306Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:53.850" endtime="20250227 16:34:54.360"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:54.363" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:54.306Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:54.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:54.368" level="INFO">${output} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:54.361" endtime="20250227 16:34:54.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:54.369" level="INFO">"03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:54.368" endtime="20250227 16:34:54.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:54.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:54.369" endtime="20250227 16:34:54.369"/>
</kw>
<msg timestamp="20250227 16:34:54.369" level="INFO">${eTag} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:54.360" endtime="20250227 16:34:54.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:54.370" endtime="20250227 16:34:54.370"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:54.373" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-56595 --prefix ozone-test-7231122653/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:54.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:54.843" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:54.306Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:54.371" endtime="20250227 16:34:54.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:54.844" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:54.306Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:34:54.844" endtime="20250227 16:34:54.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:54.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:54.845" endtime="20250227 16:34:54.845"/>
</kw>
<status status="PASS" starttime="20250227 16:34:54.371" endtime="20250227 16:34:54.845"/>
</kw>
<msg timestamp="20250227 16:34:54.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:54.371" endtime="20250227 16:34:54.845"/>
</kw>
<msg timestamp="20250227 16:34:54.846" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:54.306Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:54.370" endtime="20250227 16:34:54.846"/>
</kw>
<msg timestamp="20250227 16:34:54.846" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/copyobject/key=value/f1",
            "LastModified": "2025-02-27T16:34:54.306Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250227 16:34:54.370" endtime="20250227 16:34:54.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:54.846" endtime="20250227 16:34:54.846"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:54.850" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:55.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:55.342" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:54.848" endtime="20250227 16:34:55.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:55.343" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:55 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    },
    "ExpiresString": "Thu, 27 Feb 2025 16:34:55 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:55.343" endtime="20250227 16:34:55.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:55.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:55.344" endtime="20250227 16:34:55.344"/>
</kw>
<status status="PASS" starttime="20250227 16:34:54.848" endtime="20250227 16:34:55.344"/>
</kw>
<msg timestamp="20250227 16:34:55.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:54.848" endtime="20250227 16:34:55.344"/>
</kw>
<msg timestamp="20250227 16:34:55.344" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:54.847" endtime="20250227 16:34:55.344"/>
</kw>
<msg timestamp="20250227 16:34:55.345" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:34:54.846" endtime="20250227 16:34:55.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:55.345" endtime="20250227 16:34:55.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:55.345" endtime="20250227 16:34:55.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:55.345" endtime="20250227 16:34:55.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:55.346" endtime="20250227 16:34:55.346"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:55.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:55.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:55.836" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:55.348" endtime="20250227 16:34:55.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:55.837" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:55 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:55 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:34:55.837" endtime="20250227 16:34:55.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:55.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:55.837" endtime="20250227 16:34:55.838"/>
</kw>
<status status="PASS" starttime="20250227 16:34:55.347" endtime="20250227 16:34:55.838"/>
</kw>
<msg timestamp="20250227 16:34:55.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:55.347" endtime="20250227 16:34:55.838"/>
</kw>
<msg timestamp="20250227 16:34:55.838" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:55.347" endtime="20250227 16:34:55.838"/>
</kw>
<msg timestamp="20250227 16:34:55.838" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:34:55.346" endtime="20250227 16:34:55.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:55.838" endtime="20250227 16:34:55.839"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:55.841" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:34:54 GMT",
    "ContentLength": 29,
    "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:34:55 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Thu, 27 Feb 2025 16:34:55 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:55.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:55.847" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250227 16:34:55.839" endtime="20250227 16:34:55.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:55.848" level="INFO">1</msg>
<status status="PASS" starttime="20250227 16:34:55.847" endtime="20250227 16:34:55.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:55.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:55.848" endtime="20250227 16:34:55.848"/>
</kw>
<msg timestamp="20250227 16:34:55.848" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250227 16:34:55.839" endtime="20250227 16:34:55.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:55.848" endtime="20250227 16:34:55.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:50.393" endtime="20250227 16:34:55.849"/>
</test>
<test id="s1-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:55.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:56.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:56.316" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:55.851" endtime="20250227 16:34:56.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:56.317" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:56.317" endtime="20250227 16:34:56.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:56.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:56.317" endtime="20250227 16:34:56.318"/>
</kw>
<msg timestamp="20250227 16:34:56.318" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:55.850" endtime="20250227 16:34:56.318"/>
</kw>
<msg timestamp="20250227 16:34:56.318" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:55.850" endtime="20250227 16:34:56.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:56.318" endtime="20250227 16:34:56.318"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:56.321" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-7231122653/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:56.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:56.793" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:56.319" endtime="20250227 16:34:56.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:56.794" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:56.793" endtime="20250227 16:34:56.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:56.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:56.794" endtime="20250227 16:34:56.794"/>
</kw>
<msg timestamp="20250227 16:34:56.795" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:56.319" endtime="20250227 16:34:56.795"/>
</kw>
<msg timestamp="20250227 16:34:56.795" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:34:56.318" endtime="20250227 16:34:56.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:56.795" endtime="20250227 16:34:56.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:55.849" endtime="20250227 16:34:56.795"/>
</test>
<test id="s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:56.800" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:56.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:56.805" level="INFO">${output} = 03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:56.797" endtime="20250227 16:34:56.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:56.806" level="INFO">03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:56.805" endtime="20250227 16:34:56.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:56.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:56.806" endtime="20250227 16:34:56.806"/>
</kw>
<status status="PASS" starttime="20250227 16:34:56.797" endtime="20250227 16:34:56.806"/>
</kw>
<msg timestamp="20250227 16:34:56.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:56.797" endtime="20250227 16:34:56.807"/>
</kw>
<msg timestamp="20250227 16:34:56.807" level="INFO">${file_checksum} = 03731e7cc04502eb5a11f6fd7c0c36af</msg>
<status status="PASS" starttime="20250227 16:34:56.796" endtime="20250227 16:34:56.807"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:56.810" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source destbucket-56595/ozone-test-7231122653/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:57.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:57.273" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:57.227Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:56.808" endtime="20250227 16:34:57.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:57.274" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:57.227Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:57.273" endtime="20250227 16:34:57.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:57.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:57.274" endtime="20250227 16:34:57.274"/>
</kw>
<status status="PASS" starttime="20250227 16:34:56.808" endtime="20250227 16:34:57.275"/>
</kw>
<msg timestamp="20250227 16:34:57.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:56.808" endtime="20250227 16:34:57.275"/>
</kw>
<msg timestamp="20250227 16:34:57.275" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:57.227Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:56.807" endtime="20250227 16:34:57.275"/>
</kw>
<msg timestamp="20250227 16:34:57.275" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:57.227Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:34:56.807" endtime="20250227 16:34:57.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:57.275" endtime="20250227 16:34:57.275"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:57.278" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"03731e7cc04502eb5a11f6fd7c0c36af\"",
        "LastModified": "2025-02-27T16:34:57.227Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:57.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:57.283" level="INFO">${output} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:57.276" endtime="20250227 16:34:57.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:57.283" level="INFO">"03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:57.283" endtime="20250227 16:34:57.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:57.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:57.284" endtime="20250227 16:34:57.284"/>
</kw>
<msg timestamp="20250227 16:34:57.284" level="INFO">${eTag} = "03731e7cc04502eb5a11f6fd7c0c36af"</msg>
<status status="PASS" starttime="20250227 16:34:57.275" endtime="20250227 16:34:57.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:34:57.284" endtime="20250227 16:34:57.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:56.796" endtime="20250227 16:34:57.285"/>
</test>
<test id="s1-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:57.288" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:57.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:57.752" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:34:57.286" endtime="20250227 16:34:57.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:57.753" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:34:57.752" endtime="20250227 16:34:57.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:57.753" endtime="20250227 16:34:57.753"/>
</kw>
<msg timestamp="20250227 16:34:57.753" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:34:57.286" endtime="20250227 16:34:57.753"/>
</kw>
<msg timestamp="20250227 16:34:57.753" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:34:57.286" endtime="20250227 16:34:57.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:57.753" endtime="20250227 16:34:57.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:57.285" endtime="20250227 16:34:57.754"/>
</test>
<test id="s1-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:57.758" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:58.216" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:58.216" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250227 16:34:57.756" endtime="20250227 16:34:58.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:58.217" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250227 16:34:58.216" endtime="20250227 16:34:58.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:58.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:58.217" endtime="20250227 16:34:58.217"/>
</kw>
<msg timestamp="20250227 16:34:58.218" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250227 16:34:57.755" endtime="20250227 16:34:58.218"/>
</kw>
<msg timestamp="20250227 16:34:58.218" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250227 16:34:57.755" endtime="20250227 16:34:58.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:58.218" endtime="20250227 16:34:58.218"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:58.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:58.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:58.686" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250227 16:34:58.219" endtime="20250227 16:34:58.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:58.687" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250227 16:34:58.686" endtime="20250227 16:34:58.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:58.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:58.687" endtime="20250227 16:34:58.687"/>
</kw>
<msg timestamp="20250227 16:34:58.687" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250227 16:34:58.219" endtime="20250227 16:34:58.688"/>
</kw>
<msg timestamp="20250227 16:34:58.688" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250227 16:34:58.218" endtime="20250227 16:34:58.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:58.688" endtime="20250227 16:34:58.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:57.754" endtime="20250227 16:34:58.688"/>
</test>
<test id="s1-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:58.692" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250227 16:34:58.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:58.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:58.690" endtime="20250227 16:34:58.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:58.695" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:58.694" endtime="20250227 16:34:58.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:58.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:58.695" endtime="20250227 16:34:58.695"/>
</kw>
<status status="PASS" starttime="20250227 16:34:58.690" endtime="20250227 16:34:58.695"/>
</kw>
<msg timestamp="20250227 16:34:58.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:58.689" endtime="20250227 16:34:58.695"/>
</kw>
<status status="PASS" starttime="20250227 16:34:58.689" endtime="20250227 16:34:58.696"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:34:58.698" level="INFO">${custom_metadata_value} = SF6mkiRIPmJyQYl3r1NGyoAsNPbWmxXSlLOsSUtNqkzExuLlEDoAuy83JeWtA8eiHMMBkJYu5YldH2YMLsSNcfO8bhlm3pCosIkOvg5FAIRR1LKYC78XuDrxRrQFBXW6SPhmEXxKIZ09bQkXnhcPfkmo48GtpEvrnlzZ2yhISh2VVjGmnEBR81QGiwFOfxgcQ7TVTWwb...</msg>
<status status="PASS" starttime="20250227 16:34:58.696" endtime="20250227 16:34:58.698"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:58.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-56595 --key ozone-test-7231122653/copyobject/key=value/f1 --copy-source bucket-diiacmavow/ozone-test-7231122653/copyobject/key=value/f1 --metadata="custom-key1=SF6mkiRIPmJyQYl3r1NGyoAsNPbWmxXSlLOsSUtNqkzExuLlEDoAuy83JeWtA8eiHMMBkJYu5YldH2YMLsSNcfO8bhlm3pCosIkOvg5FAIRR1LKYC78XuDrxRrQFBXW6SPhmEXxKIZ09bQkXnhcPfkmo48GtpEvrnlzZ2yhISh2VVjGmnEBR81QGiwFOfxgcQ7TVTWwbYPLn3Umz6PPYoPavXBK4XmCiKajf2I02nQP5X4NfktjE4SjskKACY5ydleQv1PcRTfEQsZlbr0IpBsQVyEhSqshneg81OtffH2wF3RDSy8qvG8Io4J52SHsRJcAWUCD5Fha59yDr4LYgtxexTiCoYMGENSJtKLiKsxYty7HVyMNdSADxTvVgI8p9xHO8qRvxaxNb1Uo6hcXPYHFGW71alo637pcOAkdsmKY5fliEJMXORPvbRH1LHSN8sbmSlWdN6mCLCfWaroeuf5wMDFePVXA1Ye0J0JajhS2AtFv8eutD4rZdjqM25duClNAovEW3w8XaTzAtogRXeB4FsN4B0TCG6FSogixBLQHddrZI82Yb0ctiMNGrJMYWEpdUOLzu2xzoYoPmelsafTzd6eX2e6iCdlmiBWgTk7tSmNqeqHGGHaZyf3ByOmLJm8VXbYvq1IwZ2hgPKZseWvFjYF1izI559QfJVQUg9eLzaw2esP0zvIOByzEbg1UytV9BdJBgagRbsdjsXFRgsh93IVsiYg692kcLgs2rNZbqHM9PNR25XhtKEGFJTEwItDMOrR1JZ3wnmQpn1HVobU2gmnFM5vpuHFU47ToS3gJNRbYP5HZ1UZfVOHfcA0lzEAOCm8Xgupj4tguPTIO25LVF55ORApuh5x9Q8MpgoU65sLiWueEHUSnaTG0gQT0pIc4jONSrPpUV9H3Lik7Q2c7EHYoHXxVAGz3UOMJS21kzpJldeiRvOHLcYoIPhKLiQmFkphw3GVvIW7pKWZ7BDIZRKJCS9eza8HUw7FnXohZ9xxQnfwuhgXsVlwfZBnlbMFG3HVm2AB34SxVSP2bZG840VZaR5WDqTKT2CWN5cg1DMUflq0tdZExzv9Ti4V4vc8T6OSJ7qjkRwjOVWYzWxkjyEjCoAdClrJlooPvzJws98cPTDb2sXMJahj5B26Kgrhy8UuuB5RpNF5BDvRs3oD5AzrZvMk02bEjCQRMnqeDoLNDBXC3rqonIG6uTeBEAMKMDoN9BJkKtLl97L70sjxRZ00dFNIQtkjfArG4mtBhPyjyvpXymaFTEGkdjiq3fX2p1GPuAqkE6uaPQSDgrMqbfPyuHp2RoZZOEEQ0B5xHFs6fxCuYPCnRtPaXE7O3WNecSh5pmDtJaqK5EuVXWXHwuv4R0CnvAUAf9ZoLkAtgTxD6z3LMuKtGmDUvq4W1ISQyxnOrDIuumphXhLqk26sGHdWBuqKx2tOQg2qSjqUefpZpSshmuKG3F8RQEiysaVbJvlXDTzyq36ZTzBApd7FbNP6eCiya99JYYnA6z6pOdmmTvSjYviKS5OvSDRpnuKZpsLRKBagelIWDq6c4gBd2ah4SNjbSJ9kSRwXSaTF6ZNoLnkZ6JIQCrhrsGLyZbirqJJHLD6UNJHroW1jHE3JVaOCNyMcgDEXudu5r1pmkj8ymSy74DlgWwMVDOwjAF9lA5P2xKJNoIyLOZuqYbEZdKSg1Irp4TTpSg6i4Tdp0r9k7k6nqzOXVvVJGotGUf0h3zjQCorSEzHyf7MuCqszGO3uA2ClmtM9FSTpIvoYYn1hhup5YrOpDrP9HUwwmqlKIi0xm8kJ1roksPj5kGatdQVL4wpWNdwrOiro7WLNS9E9x2Osbr2dd5qJbDmkS9sjf3HN2c1loaaQbHTEnAhjpz2z6RcGS0EQvfI22D6L8n4wScDAGCpA9iVMTe2HWmFJotR3tIaa2ccW5b0lsaBPVWg2dPa9dEUEsgBM9XoNWveBpD3zZpJJK77fpRDYKIQ8QQzxKTaY8H4PizpOZGprcCdB6UiQwMOLdTtZ1e2iK3SxOO6R0sF0ThucuNiH2hcQUpIuAaAQvRVM9r2hobupxmPlv1heWkUV2w7GR07i2LJRgolLv80ITRLmaxOJz4NYdmHmTeGPEWzBb917oSOBzY3G1RiF4dnAcX7Ck42VOyrbRhQe5cvYxCqRYWUXZREOSqzBJBizpit3xYtGyLmIymbobQyaOEPnjDYQ8LLlYvfFMe3lK7EiPSXrqSVDtPCRATXsBWX21MyDbFTgMExuhFVdKPj5mr6vNsn6Vt3IR7Gkl5pL3wccLBKAcslRtG511rzlXkTPfux8pyt9HHEyPXRlWn3NF1Dj8m3JS5GAFo3lmVwA3JoQi2zwBc6TDsGbrykXqmYbiKzpixGyngYSzDj5lhPMifi567iVXUf14fx0qjO3kI01S8r37TYxwEm7SzyqswB2HJ4ykJwtn9MTtVktR1OQ2uoraORni3g5kG8aPXcaG7mnUDiCofc0VQ9QDW7RRK8SkFzHVdHoaNNKFHvzVbnZmlZ6Vbm2mELxYk5Cqbkp50yrS6L01VzCARubJHlh412jvGbyqaGAM0HQPZyIGZUGB1d4fT2nOY6izuz1sPKQcDMSJWbr4VjZFm4Wn2QKad3Y1LPHQQazJY1Q2M5VWqppKvfV91h5pwvADFmuVLZxS3gIMMO7GyfXaGnZFX1nV9weotF9hhLbiLfQ6YM1xEWinshEqmj1E0EsykTpZdpEiA34sAZx9bbF4wpjrKKW03VpTWvvF86TpxMMm8QJdEOLXXpYYW8CjniiE5laLxoprMtbT85YPEWFeVtibijGU57CU8hHQlhkw3tPWP73nMEGQ1phm78H1Cxhok63yzvM5tcGAzYgsL1qbdj208q7U9HPApGQrJoAN1rArxsZwVtmhwMFQvH0CPdvAfJnsCTWvAW46z4FxNY7a9cFcfDvZZYo8TsRgWZkkReP8fZtgfIYkaupu2fkLfZqoHNqTbFjUpBDR3" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:59.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:59.182" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:34:58.699" endtime="20250227 16:34:59.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:59.183" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:34:59.182" endtime="20250227 16:34:59.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:59.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:59.183" endtime="20250227 16:34:59.183"/>
</kw>
<msg timestamp="20250227 16:34:59.183" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:34:58.698" endtime="20250227 16:34:59.183"/>
</kw>
<msg timestamp="20250227 16:34:59.184" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:34:58.698" endtime="20250227 16:34:59.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:34:59.184" endtime="20250227 16:34:59.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:58.689" endtime="20250227 16:34:59.184"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:34:50.384" endtime="20250227 16:34:59.185"/>
</suite>
<suite id="s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:34:59.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.194"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.194"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.194"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.194"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.194"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.195" endtime="20250227 16:34:59.195"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.195" endtime="20250227 16:34:59.195"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.195" endtime="20250227 16:34:59.195"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:34:59.195" endtime="20250227 16:34:59.195"/>
</kw>
<status status="PASS" starttime="20250227 16:34:59.194" endtime="20250227 16:34:59.195"/>
</kw>
<test id="s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:59.198" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:34:59.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:34:59.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:34:59.196" endtime="20250227 16:34:59.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:59.201" level="INFO"/>
<status status="PASS" starttime="20250227 16:34:59.201" endtime="20250227 16:34:59.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:59.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:59.201" endtime="20250227 16:34:59.202"/>
</kw>
<status status="PASS" starttime="20250227 16:34:59.196" endtime="20250227 16:34:59.202"/>
</kw>
<msg timestamp="20250227 16:34:59.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:59.196" endtime="20250227 16:34:59.202"/>
</kw>
<status status="PASS" starttime="20250227 16:34:59.195" endtime="20250227 16:34:59.202"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:59.205" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:34:59.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:34:59.669" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:34:59.203" endtime="20250227 16:34:59.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:34:59.670" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:34:59.669" endtime="20250227 16:34:59.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:34:59.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:34:59.670" endtime="20250227 16:34:59.670"/>
</kw>
<msg timestamp="20250227 16:34:59.671" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:34:59.202" endtime="20250227 16:34:59.671"/>
</kw>
<msg timestamp="20250227 16:34:59.671" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:34:59.202" endtime="20250227 16:34:59.671"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:34:59.674" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:00.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:00.137" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:34:59.672" endtime="20250227 16:35:00.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:00.138" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:35:00.137" endtime="20250227 16:35:00.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:00.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:00.138" endtime="20250227 16:35:00.138"/>
</kw>
<status status="PASS" starttime="20250227 16:34:59.672" endtime="20250227 16:35:00.139"/>
</kw>
<msg timestamp="20250227 16:35:00.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:34:59.672" endtime="20250227 16:35:00.139"/>
</kw>
<msg timestamp="20250227 16:35:00.139" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:34:59.671" endtime="20250227 16:35:00.139"/>
</kw>
<msg timestamp="20250227 16:35:00.139" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:34:59.671" endtime="20250227 16:35:00.139"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:00.139" endtime="20250227 16:35:00.140"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:00.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:00.603" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:00.603" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:00.140" endtime="20250227 16:35:00.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:00.604" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:00.603" endtime="20250227 16:35:00.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:00.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:00.604" endtime="20250227 16:35:00.604"/>
</kw>
<msg timestamp="20250227 16:35:00.605" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:00.140" endtime="20250227 16:35:00.605"/>
</kw>
<msg timestamp="20250227 16:35:00.605" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:00.140" endtime="20250227 16:35:00.605"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:00.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:01.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:01.066" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250227 16:35:00.606" endtime="20250227 16:35:01.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:01.067" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250227 16:35:01.067" endtime="20250227 16:35:01.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:01.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:01.067" endtime="20250227 16:35:01.068"/>
</kw>
<status status="PASS" starttime="20250227 16:35:00.606" endtime="20250227 16:35:01.068"/>
</kw>
<msg timestamp="20250227 16:35:01.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:00.606" endtime="20250227 16:35:01.068"/>
</kw>
<msg timestamp="20250227 16:35:01.068" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250227 16:35:00.605" endtime="20250227 16:35:01.068"/>
</kw>
<msg timestamp="20250227 16:35:01.068" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250227 16:35:00.605" endtime="20250227 16:35:01.068"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:01.068" endtime="20250227 16:35:01.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:01.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:01.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:01.577" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:01.070" endtime="20250227 16:35:01.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:01.578" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:01.578" endtime="20250227 16:35:01.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:01.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:01.579" endtime="20250227 16:35:01.579"/>
</kw>
<status status="PASS" starttime="20250227 16:35:01.070" endtime="20250227 16:35:01.579"/>
</kw>
<msg timestamp="20250227 16:35:01.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:01.070" endtime="20250227 16:35:01.579"/>
</kw>
<msg timestamp="20250227 16:35:01.579" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:01.069" endtime="20250227 16:35:01.579"/>
</kw>
<msg timestamp="20250227 16:35:01.579" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:01.069" endtime="20250227 16:35:01.580"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:01.583" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:02.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:02.041" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:01 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:01.580" endtime="20250227 16:35:02.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:02.042" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:01 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:01 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:01 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:02.042" endtime="20250227 16:35:02.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:02.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:02.042" endtime="20250227 16:35:02.043"/>
</kw>
<msg timestamp="20250227 16:35:02.043" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:01 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:01.580" endtime="20250227 16:35:02.043"/>
</kw>
<status status="PASS" starttime="20250227 16:35:01.580" endtime="20250227 16:35:02.043"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:02.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:02.501" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:02.501" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:02.044" endtime="20250227 16:35:02.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:02.502" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:02.502" endtime="20250227 16:35:02.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:02.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:02.502" endtime="20250227 16:35:02.503"/>
</kw>
<msg timestamp="20250227 16:35:02.503" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:02.043" endtime="20250227 16:35:02.503"/>
</kw>
<status status="PASS" starttime="20250227 16:35:02.043" endtime="20250227 16:35:02.503"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:02.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:02.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:02.969" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:35:02.504" endtime="20250227 16:35:02.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:02.970" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:35:02.970" endtime="20250227 16:35:02.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:02.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:02.970" endtime="20250227 16:35:02.971"/>
</kw>
<status status="PASS" starttime="20250227 16:35:02.504" endtime="20250227 16:35:02.971"/>
</kw>
<msg timestamp="20250227 16:35:02.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:02.504" endtime="20250227 16:35:02.971"/>
</kw>
<msg timestamp="20250227 16:35:02.971" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:35:02.504" endtime="20250227 16:35:02.971"/>
</kw>
<msg timestamp="20250227 16:35:02.971" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/word.txt/"
}</msg>
<status status="PASS" starttime="20250227 16:35:02.503" endtime="20250227 16:35:02.971"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:02.971" endtime="20250227 16:35:02.972"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:02.975" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt --copy-source bucket-diiacmavow/ozone-test-7231122653/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:03.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:03.495" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-27T16:35:03.442Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:35:02.973" endtime="20250227 16:35:03.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:03.496" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-27T16:35:03.442Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:35:03.495" endtime="20250227 16:35:03.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:03.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:03.496" endtime="20250227 16:35:03.497"/>
</kw>
<status status="PASS" starttime="20250227 16:35:02.973" endtime="20250227 16:35:03.497"/>
</kw>
<msg timestamp="20250227 16:35:03.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:02.972" endtime="20250227 16:35:03.497"/>
</kw>
<msg timestamp="20250227 16:35:03.497" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-27T16:35:03.442Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:35:02.972" endtime="20250227 16:35:03.497"/>
</kw>
<msg timestamp="20250227 16:35:03.497" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-27T16:35:03.442Z"
    }
}</msg>
<status status="PASS" starttime="20250227 16:35:02.972" endtime="20250227 16:35:03.497"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:03.500" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:03.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:03.962" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:03.498" endtime="20250227 16:35:03.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:03.963" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:03 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:03 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:03.962" endtime="20250227 16:35:03.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:03.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:03.963" endtime="20250227 16:35:03.963"/>
</kw>
<msg timestamp="20250227 16:35:03.963" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:03.498" endtime="20250227 16:35:03.963"/>
</kw>
<status status="PASS" starttime="20250227 16:35:03.497" endtime="20250227 16:35:03.964"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:03.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:04.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:04.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:03.965" endtime="20250227 16:35:04.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:04.434" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:04.433" endtime="20250227 16:35:04.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:04.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:04.434" endtime="20250227 16:35:04.434"/>
</kw>
<status status="PASS" starttime="20250227 16:35:03.965" endtime="20250227 16:35:04.434"/>
</kw>
<msg timestamp="20250227 16:35:04.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:03.964" endtime="20250227 16:35:04.434"/>
</kw>
<msg timestamp="20250227 16:35:04.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:03.964" endtime="20250227 16:35:04.435"/>
</kw>
<status status="PASS" starttime="20250227 16:35:03.964" endtime="20250227 16:35:04.435"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:04.438" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:04.922" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:04.923" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:04.436" endtime="20250227 16:35:04.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:04.923" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:04.923" endtime="20250227 16:35:04.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:04.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:04.924" endtime="20250227 16:35:04.924"/>
</kw>
<msg timestamp="20250227 16:35:04.924" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:04.435" endtime="20250227 16:35:04.924"/>
</kw>
<status status="PASS" starttime="20250227 16:35:04.435" endtime="20250227 16:35:04.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:34:59.195" endtime="20250227 16:35:04.925"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:34:59.186" endtime="20250227 16:35:04.925"/>
</suite>
<suite id="s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:04.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:04.934" endtime="20250227 16:35:04.934"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.934" endtime="20250227 16:35:04.934"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.934" endtime="20250227 16:35:04.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:04.935" endtime="20250227 16:35:04.935"/>
</kw>
<status status="PASS" starttime="20250227 16:35:04.934" endtime="20250227 16:35:04.935"/>
</kw>
<test id="s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:04.939" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:04.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:04.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:04.936" endtime="20250227 16:35:04.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:04.943" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:04.943" endtime="20250227 16:35:04.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:04.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:04.943" endtime="20250227 16:35:04.943"/>
</kw>
<status status="PASS" starttime="20250227 16:35:04.936" endtime="20250227 16:35:04.944"/>
</kw>
<msg timestamp="20250227 16:35:04.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:04.936" endtime="20250227 16:35:04.944"/>
</kw>
<status status="PASS" starttime="20250227 16:35:04.936" endtime="20250227 16:35:04.944"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:04.947" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:05.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:05.441" level="INFO">${output} = {
    "ETag": "\"7eb7e1d579f8ac45756f22883502aba9\""
}</msg>
<status status="PASS" starttime="20250227 16:35:04.945" endtime="20250227 16:35:05.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:05.442" level="INFO">{
    "ETag": "\"7eb7e1d579f8ac45756f22883502aba9\""
}</msg>
<status status="PASS" starttime="20250227 16:35:05.442" endtime="20250227 16:35:05.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:05.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:05.442" endtime="20250227 16:35:05.442"/>
</kw>
<status status="PASS" starttime="20250227 16:35:04.945" endtime="20250227 16:35:05.443"/>
</kw>
<msg timestamp="20250227 16:35:05.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:04.945" endtime="20250227 16:35:05.443"/>
</kw>
<msg timestamp="20250227 16:35:05.443" level="INFO">${output} = {
    "ETag": "\"7eb7e1d579f8ac45756f22883502aba9\""
}</msg>
<status status="PASS" starttime="20250227 16:35:04.944" endtime="20250227 16:35:05.443"/>
</kw>
<msg timestamp="20250227 16:35:05.443" level="INFO">${result} = {
    "ETag": "\"7eb7e1d579f8ac45756f22883502aba9\""
}</msg>
<status status="PASS" starttime="20250227 16:35:04.944" endtime="20250227 16:35:05.443"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:05.447" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:05.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:05.923" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/deletetestapi/key=value/f1",
            "LastModified": "2025-02-27T16:35:05.393Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250227 16:35:05.445" endtime="20250227 16:35:05.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:05.924" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/deletetestapi/key=value/f1",
            "LastModified": "2025-02-27T16:35:05.393Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:05.923" endtime="20250227 16:35:05.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:05.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:05.924" endtime="20250227 16:35:05.924"/>
</kw>
<status status="PASS" starttime="20250227 16:35:05.444" endtime="20250227 16:35:05.925"/>
</kw>
<msg timestamp="20250227 16:35:05.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:05.444" endtime="20250227 16:35:05.925"/>
</kw>
<msg timestamp="20250227 16:35:05.925" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/deletetestapi/key=value/f1",
            "LastModified": "2025-02-27T16:35:05.393Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250227 16:35:05.444" endtime="20250227 16:35:05.925"/>
</kw>
<msg timestamp="20250227 16:35:05.925" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/deletetestapi/key=value/f1",
            "LastModified": "2025-02-27T16:35:05.393Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250227 16:35:05.443" endtime="20250227 16:35:05.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:05.925" endtime="20250227 16:35:05.925"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:05.929" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:06.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:06.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:05.927" endtime="20250227 16:35:06.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:06.381" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:06.380" endtime="20250227 16:35:06.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:06.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:06.381" endtime="20250227 16:35:06.381"/>
</kw>
<status status="PASS" starttime="20250227 16:35:05.927" endtime="20250227 16:35:06.381"/>
</kw>
<msg timestamp="20250227 16:35:06.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:05.927" endtime="20250227 16:35:06.381"/>
</kw>
<msg timestamp="20250227 16:35:06.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:05.926" endtime="20250227 16:35:06.382"/>
</kw>
<msg timestamp="20250227 16:35:06.382" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:05.926" endtime="20250227 16:35:06.382"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:06.385" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:06.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:06.840" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:06.383" endtime="20250227 16:35:06.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:06.841" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:06.840" endtime="20250227 16:35:06.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:06.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:06.841" endtime="20250227 16:35:06.841"/>
</kw>
<status status="PASS" starttime="20250227 16:35:06.383" endtime="20250227 16:35:06.841"/>
</kw>
<msg timestamp="20250227 16:35:06.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:06.383" endtime="20250227 16:35:06.841"/>
</kw>
<msg timestamp="20250227 16:35:06.841" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:06.382" endtime="20250227 16:35:06.842"/>
</kw>
<msg timestamp="20250227 16:35:06.842" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:06.382" endtime="20250227 16:35:06.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:06.842" endtime="20250227 16:35:06.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:04.935" endtime="20250227 16:35:06.842"/>
</test>
<test id="s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:06.847" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:07.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:07.337" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:06.844" endtime="20250227 16:35:07.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:07.337" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
                           PRE ozone-test-7231122653/
                           PRE ozone-test-7705814677/
                           PRE ozone-test-9639950216/
                           PRE ozone-test-9870874286/
                           PRE specialchars/
2025-02-27 16:32:53       4068 README1.md
2025-02-27 16:32:52       4068 README10.md
2025-02-27 16:33:39    6291456 empty_file_ozone-test-5833426157
2025-02-27 16:32:53   10485761 multiUpload.1.gz
2025-02-27 16:32:53   10485761 multiUpload.2.gz
2025-02-27 16:32:55   20971522 ougwpkmkob
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:35:07.337" endtime="20250227 16:35:07.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:07.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:07.338" endtime="20250227 16:35:07.338"/>
</kw>
<status status="PASS" starttime="20250227 16:35:06.844" endtime="20250227 16:35:07.338"/>
</kw>
<msg timestamp="20250227 16:35:07.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:06.844" endtime="20250227 16:35:07.338"/>
</kw>
<msg timestamp="20250227 16:35:07.338" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:06.843" endtime="20250227 16:35:07.338"/>
</kw>
<msg timestamp="20250227 16:35:07.339" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:06.843" endtime="20250227 16:35:07.339"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:07.339" endtime="20250227 16:35:07.339"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:07.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:07.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:07.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:07.340" endtime="20250227 16:35:07.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:07.811" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:07.810" endtime="20250227 16:35:07.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:07.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:07.811" endtime="20250227 16:35:07.811"/>
</kw>
<status status="PASS" starttime="20250227 16:35:07.340" endtime="20250227 16:35:07.811"/>
</kw>
<msg timestamp="20250227 16:35:07.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:07.340" endtime="20250227 16:35:07.812"/>
</kw>
<msg timestamp="20250227 16:35:07.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:07.339" endtime="20250227 16:35:07.812"/>
</kw>
<msg timestamp="20250227 16:35:07.812" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:07.339" endtime="20250227 16:35:07.812"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:07.815" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:08.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:08.270" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:07.813" endtime="20250227 16:35:08.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:08.271" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
                           PRE ozone-test-7231122653/
                           PRE ozone-test-7705814677/
                           PRE ozone-test-9639950216/
                           PRE ozone-test-9870874286/
                           PRE specialchars/
2025-02-27 16:32:53       4068 README1.md
2025-02-27 16:32:52       4068 README10.md
2025-02-27 16:33:39    6291456 empty_file_ozone-test-5833426157
2025-02-27 16:32:53   10485761 multiUpload.1.gz
2025-02-27 16:32:53   10485761 multiUpload.2.gz
2025-02-27 16:32:55   20971522 ougwpkmkob
2025-02-27 16:32:48         29 testfile</msg>
<status status="PASS" starttime="20250227 16:35:08.271" endtime="20250227 16:35:08.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:08.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:08.272" endtime="20250227 16:35:08.272"/>
</kw>
<status status="PASS" starttime="20250227 16:35:07.813" endtime="20250227 16:35:08.272"/>
</kw>
<msg timestamp="20250227 16:35:08.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:07.813" endtime="20250227 16:35:08.272"/>
</kw>
<msg timestamp="20250227 16:35:08.272" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:07.812" endtime="20250227 16:35:08.272"/>
</kw>
<msg timestamp="20250227 16:35:08.273" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1493229377/
                           PRE ozone-test-5098979036/
             ...</msg>
<status status="PASS" starttime="20250227 16:35:07.812" endtime="20250227 16:35:08.273"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:08.273" endtime="20250227 16:35:08.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:06.843" endtime="20250227 16:35:08.273"/>
</test>
<test id="s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:08.277" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:08.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:08.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:08.275" endtime="20250227 16:35:08.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:08.281" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:08.281" endtime="20250227 16:35:08.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:08.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:08.281" endtime="20250227 16:35:08.282"/>
</kw>
<status status="PASS" starttime="20250227 16:35:08.274" endtime="20250227 16:35:08.282"/>
</kw>
<msg timestamp="20250227 16:35:08.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:08.274" endtime="20250227 16:35:08.282"/>
</kw>
<status status="PASS" starttime="20250227 16:35:08.274" endtime="20250227 16:35:08.282"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:08.285" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:08.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:08.761" level="INFO">${output} = Completed 29 Bytes/29 Bytes (645 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250227 16:35:08.283" endtime="20250227 16:35:08.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:08.762" level="INFO">Completed 29 Bytes/29 Bytes (645 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250227 16:35:08.762" endtime="20250227 16:35:08.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:08.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:08.762" endtime="20250227 16:35:08.763"/>
</kw>
<status status="PASS" starttime="20250227 16:35:08.283" endtime="20250227 16:35:08.763"/>
</kw>
<msg timestamp="20250227 16:35:08.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:08.283" endtime="20250227 16:35:08.763"/>
</kw>
<msg timestamp="20250227 16:35:08.763" level="INFO">${output} = Completed 29 Bytes/29 Bytes (645 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250227 16:35:08.283" endtime="20250227 16:35:08.763"/>
</kw>
<msg timestamp="20250227 16:35:08.763" level="INFO">${result} = Completed 29 Bytes/29 Bytes (645 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250227 16:35:08.282" endtime="20250227 16:35:08.763"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:08.767" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:09.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:09.226" level="INFO">${output} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:08.765" endtime="20250227 16:35:09.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:09.227" level="INFO">2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:09.227" endtime="20250227 16:35:09.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:09.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:09.228" endtime="20250227 16:35:09.228"/>
</kw>
<status status="PASS" starttime="20250227 16:35:08.765" endtime="20250227 16:35:09.228"/>
</kw>
<msg timestamp="20250227 16:35:09.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:08.764" endtime="20250227 16:35:09.228"/>
</kw>
<msg timestamp="20250227 16:35:09.228" level="INFO">${output} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:08.764" endtime="20250227 16:35:09.228"/>
</kw>
<msg timestamp="20250227 16:35:09.228" level="INFO">${result} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:08.763" endtime="20250227 16:35:09.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:09.228" endtime="20250227 16:35:09.229"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:09.232" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:09.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:09.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:09.230" endtime="20250227 16:35:09.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:09.690" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:09.690" endtime="20250227 16:35:09.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:09.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:09.690" endtime="20250227 16:35:09.691"/>
</kw>
<status status="PASS" starttime="20250227 16:35:09.230" endtime="20250227 16:35:09.691"/>
</kw>
<msg timestamp="20250227 16:35:09.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:09.230" endtime="20250227 16:35:09.691"/>
</kw>
<msg timestamp="20250227 16:35:09.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:09.229" endtime="20250227 16:35:09.691"/>
</kw>
<msg timestamp="20250227 16:35:09.691" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:09.229" endtime="20250227 16:35:09.691"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:09.695" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:10.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:10.137" level="INFO">${output} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:09.693" endtime="20250227 16:35:10.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:10.138" level="INFO">2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:10.137" endtime="20250227 16:35:10.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:10.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:10.138" endtime="20250227 16:35:10.138"/>
</kw>
<status status="PASS" starttime="20250227 16:35:09.692" endtime="20250227 16:35:10.139"/>
</kw>
<msg timestamp="20250227 16:35:10.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:09.692" endtime="20250227 16:35:10.139"/>
</kw>
<msg timestamp="20250227 16:35:10.139" level="INFO">${output} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:09.692" endtime="20250227 16:35:10.139"/>
</kw>
<msg timestamp="20250227 16:35:10.139" level="INFO">${result} = 2025-02-27 16:35:08         29 f1</msg>
<status status="PASS" starttime="20250227 16:35:09.691" endtime="20250227 16:35:10.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:10.139" endtime="20250227 16:35:10.139"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:10.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:10.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:10.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:10.141" endtime="20250227 16:35:10.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:10.601" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:10.601" endtime="20250227 16:35:10.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:10.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:10.602" endtime="20250227 16:35:10.602"/>
</kw>
<status status="PASS" starttime="20250227 16:35:10.140" endtime="20250227 16:35:10.602"/>
</kw>
<msg timestamp="20250227 16:35:10.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:10.140" endtime="20250227 16:35:10.602"/>
</kw>
<msg timestamp="20250227 16:35:10.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:10.140" endtime="20250227 16:35:10.602"/>
</kw>
<msg timestamp="20250227 16:35:10.602" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:10.139" endtime="20250227 16:35:10.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:08.274" endtime="20250227 16:35:10.603"/>
</test>
<test id="s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:10.606" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:10.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:10.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:10.604" endtime="20250227 16:35:10.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:10.611" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:10.611" endtime="20250227 16:35:10.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:10.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:10.611" endtime="20250227 16:35:10.611"/>
</kw>
<status status="PASS" starttime="20250227 16:35:10.604" endtime="20250227 16:35:10.612"/>
</kw>
<msg timestamp="20250227 16:35:10.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:10.604" endtime="20250227 16:35:10.612"/>
</kw>
<status status="PASS" starttime="20250227 16:35:10.604" endtime="20250227 16:35:10.612"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:10.615" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:11.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:11.091" level="INFO">${output} = Completed 29 Bytes/29 Bytes (692 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250227 16:35:10.613" endtime="20250227 16:35:11.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:11.092" level="INFO">Completed 29 Bytes/29 Bytes (692 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250227 16:35:11.091" endtime="20250227 16:35:11.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:11.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:11.092" endtime="20250227 16:35:11.092"/>
</kw>
<status status="PASS" starttime="20250227 16:35:10.613" endtime="20250227 16:35:11.093"/>
</kw>
<msg timestamp="20250227 16:35:11.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:10.613" endtime="20250227 16:35:11.093"/>
</kw>
<msg timestamp="20250227 16:35:11.093" level="INFO">${output} = Completed 29 Bytes/29 Bytes (692 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250227 16:35:10.612" endtime="20250227 16:35:11.093"/>
</kw>
<msg timestamp="20250227 16:35:11.093" level="INFO">${result} = Completed 29 Bytes/29 Bytes (692 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250227 16:35:10.612" endtime="20250227 16:35:11.093"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:11.097" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:11.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:11.545" level="INFO">${output} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:11.095" endtime="20250227 16:35:11.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:11.546" level="INFO">2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:11.545" endtime="20250227 16:35:11.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:11.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:11.546" endtime="20250227 16:35:11.546"/>
</kw>
<status status="PASS" starttime="20250227 16:35:11.094" endtime="20250227 16:35:11.547"/>
</kw>
<msg timestamp="20250227 16:35:11.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:11.094" endtime="20250227 16:35:11.547"/>
</kw>
<msg timestamp="20250227 16:35:11.547" level="INFO">${output} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:11.094" endtime="20250227 16:35:11.547"/>
</kw>
<msg timestamp="20250227 16:35:11.547" level="INFO">${result} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:11.093" endtime="20250227 16:35:11.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:11.547" endtime="20250227 16:35:11.547"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:11.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:12.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:12.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:11.549" endtime="20250227 16:35:12.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:12.023" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:12.022" endtime="20250227 16:35:12.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:12.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:12.023" endtime="20250227 16:35:12.024"/>
</kw>
<status status="PASS" starttime="20250227 16:35:11.549" endtime="20250227 16:35:12.024"/>
</kw>
<msg timestamp="20250227 16:35:12.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:11.548" endtime="20250227 16:35:12.024"/>
</kw>
<msg timestamp="20250227 16:35:12.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:11.548" endtime="20250227 16:35:12.024"/>
</kw>
<msg timestamp="20250227 16:35:12.024" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:11.547" endtime="20250227 16:35:12.024"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:12.028" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-diiacmavow/ozone-test-7231122653/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:12.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:12.480" level="INFO">${output} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:12.026" endtime="20250227 16:35:12.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:12.481" level="INFO">2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:12.481" endtime="20250227 16:35:12.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:12.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:12.481" endtime="20250227 16:35:12.482"/>
</kw>
<status status="PASS" starttime="20250227 16:35:12.025" endtime="20250227 16:35:12.482"/>
</kw>
<msg timestamp="20250227 16:35:12.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:12.025" endtime="20250227 16:35:12.482"/>
</kw>
<msg timestamp="20250227 16:35:12.482" level="INFO">${output} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:12.025" endtime="20250227 16:35:12.482"/>
</kw>
<msg timestamp="20250227 16:35:12.482" level="INFO">${result} = 2025-02-27 16:35:11         29 filefile</msg>
<status status="PASS" starttime="20250227 16:35:12.024" endtime="20250227 16:35:12.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:12.482" endtime="20250227 16:35:12.482"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:12.486" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:12.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:12.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:12.484" endtime="20250227 16:35:12.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:12.949" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:12.948" endtime="20250227 16:35:12.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:12.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:12.949" endtime="20250227 16:35:12.949"/>
</kw>
<status status="PASS" starttime="20250227 16:35:12.484" endtime="20250227 16:35:12.950"/>
</kw>
<msg timestamp="20250227 16:35:12.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:12.483" endtime="20250227 16:35:12.950"/>
</kw>
<msg timestamp="20250227 16:35:12.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:12.483" endtime="20250227 16:35:12.950"/>
</kw>
<msg timestamp="20250227 16:35:12.950" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:12.483" endtime="20250227 16:35:12.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:10.603" endtime="20250227 16:35:12.950"/>
</test>
<test id="s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:12.954" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:13.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:13.411" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:35:12.952" endtime="20250227 16:35:13.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:13.411" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:35:13.411" endtime="20250227 16:35:13.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:13.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:13.412" endtime="20250227 16:35:13.412"/>
</kw>
<msg timestamp="20250227 16:35:13.412" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:35:12.951" endtime="20250227 16:35:13.412"/>
</kw>
<msg timestamp="20250227 16:35:13.412" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250227 16:35:12.951" endtime="20250227 16:35:13.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:13.412" endtime="20250227 16:35:13.413"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:12.951" endtime="20250227 16:35:13.413"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:35:04.926" endtime="20250227 16:35:13.414"/>
</suite>
<suite id="s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:13.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:13.423" endtime="20250227 16:35:13.423"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:13.424" endtime="20250227 16:35:13.424"/>
</kw>
<status status="PASS" starttime="20250227 16:35:13.423" endtime="20250227 16:35:13.424"/>
</kw>
<test id="s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:13.428" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:13.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:13.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:13.426" endtime="20250227 16:35:13.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:13.431" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:13.430" endtime="20250227 16:35:13.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:13.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:13.431" endtime="20250227 16:35:13.431"/>
</kw>
<status status="PASS" starttime="20250227 16:35:13.425" endtime="20250227 16:35:13.431"/>
</kw>
<msg timestamp="20250227 16:35:13.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:13.425" endtime="20250227 16:35:13.431"/>
</kw>
<status status="PASS" starttime="20250227 16:35:13.425" endtime="20250227 16:35:13.432"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:13.434" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:13.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:13.941" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:13.433" endtime="20250227 16:35:13.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:13.942" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:13.941" endtime="20250227 16:35:13.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:13.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:13.942" endtime="20250227 16:35:13.942"/>
</kw>
<msg timestamp="20250227 16:35:13.942" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:13.432" endtime="20250227 16:35:13.942"/>
</kw>
<msg timestamp="20250227 16:35:13.942" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:13.432" endtime="20250227 16:35:13.942"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:13.946" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:14.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:14.401" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:13.943" endtime="20250227 16:35:14.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:14.402" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:14 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:14 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:14.401" endtime="20250227 16:35:14.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:14.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:14.402" endtime="20250227 16:35:14.402"/>
</kw>
<msg timestamp="20250227 16:35:14.403" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:13.943" endtime="20250227 16:35:14.403"/>
</kw>
<msg timestamp="20250227 16:35:14.403" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:13.943" endtime="20250227 16:35:14.403"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:14.406" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-diiacmavow --key ozone-test-7231122653/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:14.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:14.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:14.404" endtime="20250227 16:35:14.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:14.868" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:14.868" endtime="20250227 16:35:14.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:14.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:14.868" endtime="20250227 16:35:14.869"/>
</kw>
<msg timestamp="20250227 16:35:14.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:14.403" endtime="20250227 16:35:14.869"/>
</kw>
<msg timestamp="20250227 16:35:14.869" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:14.403" endtime="20250227 16:35:14.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:13.425" endtime="20250227 16:35:14.869"/>
</test>
<test id="s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:14.873" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow-non-existent --key ozone-test-7231122653/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:15.344" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:15.344" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:14.871" endtime="20250227 16:35:15.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:15.345" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:15.344" endtime="20250227 16:35:15.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:15.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:15.345" endtime="20250227 16:35:15.345"/>
</kw>
<msg timestamp="20250227 16:35:15.345" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:14.871" endtime="20250227 16:35:15.345"/>
</kw>
<msg timestamp="20250227 16:35:15.345" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:14.870" endtime="20250227 16:35:15.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:15.346" endtime="20250227 16:35:15.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:15.346" endtime="20250227 16:35:15.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:14.870" endtime="20250227 16:35:15.346"/>
</test>
<test id="s1-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:35:15.347" endtime="20250227 16:35:15.347"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:15.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:15.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:15.852" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:15.348" endtime="20250227 16:35:15.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:15.853" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:15.853" endtime="20250227 16:35:15.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:15.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:15.853" endtime="20250227 16:35:15.854"/>
</kw>
<msg timestamp="20250227 16:35:15.854" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:15.348" endtime="20250227 16:35:15.854"/>
</kw>
<msg timestamp="20250227 16:35:15.854" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:15.348" endtime="20250227 16:35:15.854"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:15.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:16.322" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:16.323" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:15.855" endtime="20250227 16:35:16.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:16.323" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:16.323" endtime="20250227 16:35:16.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:16.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:16.324" endtime="20250227 16:35:16.324"/>
</kw>
<msg timestamp="20250227 16:35:16.324" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:15.854" endtime="20250227 16:35:16.324"/>
</kw>
<msg timestamp="20250227 16:35:16.324" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:15.854" endtime="20250227 16:35:16.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:16.325" endtime="20250227 16:35:16.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:16.325" endtime="20250227 16:35:16.325"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:15.347" endtime="20250227 16:35:16.325"/>
</test>
<test id="s1-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:35:16.326" endtime="20250227 16:35:16.326"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:16.330" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:16.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:16.819" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:16.327" endtime="20250227 16:35:16.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:16.820" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:16.819" endtime="20250227 16:35:16.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:16.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:16.820" endtime="20250227 16:35:16.820"/>
</kw>
<msg timestamp="20250227 16:35:16.821" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:16.327" endtime="20250227 16:35:16.821"/>
</kw>
<msg timestamp="20250227 16:35:16.821" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:16.326" endtime="20250227 16:35:16.821"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:16.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:17.288" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:17.288" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:16.822" endtime="20250227 16:35:17.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:17.289" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:17.288" endtime="20250227 16:35:17.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:17.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:17.289" endtime="20250227 16:35:17.289"/>
</kw>
<msg timestamp="20250227 16:35:17.289" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:16.821" endtime="20250227 16:35:17.289"/>
</kw>
<msg timestamp="20250227 16:35:17.289" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:16.821" endtime="20250227 16:35:17.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:17.290" endtime="20250227 16:35:17.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:17.290" endtime="20250227 16:35:17.290"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:17.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:17.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:17.749" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:17.291" endtime="20250227 16:35:17.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:17.750" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:17 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:17 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:17.750" endtime="20250227 16:35:17.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:17.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:17.750" endtime="20250227 16:35:17.751"/>
</kw>
<msg timestamp="20250227 16:35:17.751" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:17.291" endtime="20250227 16:35:17.751"/>
</kw>
<msg timestamp="20250227 16:35:17.751" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:17.290" endtime="20250227 16:35:17.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:16.326" endtime="20250227 16:35:17.751"/>
</test>
<test id="s1-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:17.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:18.233" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:18.233" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:17.753" endtime="20250227 16:35:18.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:18.234" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:18.233" endtime="20250227 16:35:18.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:18.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:18.234" endtime="20250227 16:35:18.234"/>
</kw>
<msg timestamp="20250227 16:35:18.234" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:17.753" endtime="20250227 16:35:18.234"/>
</kw>
<msg timestamp="20250227 16:35:18.234" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250227 16:35:17.752" endtime="20250227 16:35:18.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:18.235" endtime="20250227 16:35:18.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:18.235" endtime="20250227 16:35:18.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:17.752" endtime="20250227 16:35:18.235"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:35:13.415" endtime="20250227 16:35:18.236"/>
</suite>
<suite id="s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:18.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.245" endtime="20250227 16:35:18.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.246" endtime="20250227 16:35:18.246"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:18.246" endtime="20250227 16:35:18.246"/>
</kw>
<status status="PASS" starttime="20250227 16:35:18.244" endtime="20250227 16:35:18.246"/>
</kw>
<test id="s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:18.249" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:18.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:18.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:18.247" endtime="20250227 16:35:18.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:18.253" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:18.253" endtime="20250227 16:35:18.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:18.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:18.253" endtime="20250227 16:35:18.254"/>
</kw>
<status status="PASS" starttime="20250227 16:35:18.247" endtime="20250227 16:35:18.254"/>
</kw>
<msg timestamp="20250227 16:35:18.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:18.247" endtime="20250227 16:35:18.254"/>
</kw>
<status status="PASS" starttime="20250227 16:35:18.246" endtime="20250227 16:35:18.254"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:18.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:18.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:18.757" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.256" endtime="20250227 16:35:18.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:18.758" level="INFO">{
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.758" endtime="20250227 16:35:18.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:18.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:18.758" endtime="20250227 16:35:18.759"/>
</kw>
<status status="PASS" starttime="20250227 16:35:18.255" endtime="20250227 16:35:18.759"/>
</kw>
<msg timestamp="20250227 16:35:18.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:18.255" endtime="20250227 16:35:18.759"/>
</kw>
<msg timestamp="20250227 16:35:18.759" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.255" endtime="20250227 16:35:18.759"/>
</kw>
<msg timestamp="20250227 16:35:18.759" level="INFO">${result} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.254" endtime="20250227 16:35:18.759"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:18.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:19.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:19.260" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.761" endtime="20250227 16:35:19.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:19.261" level="INFO">{
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:19.260" endtime="20250227 16:35:19.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:19.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:19.261" endtime="20250227 16:35:19.261"/>
</kw>
<status status="PASS" starttime="20250227 16:35:18.761" endtime="20250227 16:35:19.261"/>
</kw>
<msg timestamp="20250227 16:35:19.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:18.760" endtime="20250227 16:35:19.262"/>
</kw>
<msg timestamp="20250227 16:35:19.262" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.760" endtime="20250227 16:35:19.262"/>
</kw>
<msg timestamp="20250227 16:35:19.262" level="INFO">${result} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:18.760" endtime="20250227 16:35:19.262"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:19.266" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:19.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:19.763" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:19.263" endtime="20250227 16:35:19.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:19.764" level="INFO">{
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:19.763" endtime="20250227 16:35:19.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:19.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:19.764" endtime="20250227 16:35:19.764"/>
</kw>
<status status="PASS" starttime="20250227 16:35:19.263" endtime="20250227 16:35:19.764"/>
</kw>
<msg timestamp="20250227 16:35:19.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:19.263" endtime="20250227 16:35:19.765"/>
</kw>
<msg timestamp="20250227 16:35:19.765" level="INFO">${output} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:19.263" endtime="20250227 16:35:19.765"/>
</kw>
<msg timestamp="20250227 16:35:19.765" level="INFO">${result} = {
    "ETag": "\"77804023cc20da01f4a8007ba88f92ce\""
}</msg>
<status status="PASS" starttime="20250227 16:35:19.262" endtime="20250227 16:35:19.765"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:19.769" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:20.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:20.233" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1",
            "LastModified": "2025-02-27T16:35:18.708Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:19.766" endtime="20250227 16:35:20.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:20.234" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1",
            "LastModified": "2025-02-27T16:35:18.708Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f2",
            "LastModified": "2025-02-27T16:35:19.210Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f3",
            "LastModified": "2025-02-27T16:35:19.711Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:20.233" endtime="20250227 16:35:20.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:20.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:20.234" endtime="20250227 16:35:20.234"/>
</kw>
<status status="PASS" starttime="20250227 16:35:19.766" endtime="20250227 16:35:20.235"/>
</kw>
<msg timestamp="20250227 16:35:20.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:19.766" endtime="20250227 16:35:20.235"/>
</kw>
<msg timestamp="20250227 16:35:20.235" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1",
            "LastModified": "2025-02-27T16:35:18.708Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:19.766" endtime="20250227 16:35:20.235"/>
</kw>
<msg timestamp="20250227 16:35:20.235" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1",
            "LastModified": "2025-02-27T16:35:18.708Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:19.765" endtime="20250227 16:35:20.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.235" endtime="20250227 16:35:20.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.236" endtime="20250227 16:35:20.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.236" endtime="20250227 16:35:20.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.236" endtime="20250227 16:35:20.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.237" endtime="20250227 16:35:20.237"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:20.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-diiacmavow --delete 'Objects=[{Key=ozone-test-7231122653/multidelete/key=value/f1},{Key=ozone-test-7231122653/multidelete/key=value/f2},{Key=ozone-test-7231122653/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:20.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:20.717" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250227 16:35:20.239" endtime="20250227 16:35:20.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:20.718" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20250227 16:35:20.718" endtime="20250227 16:35:20.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:20.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:20.718" endtime="20250227 16:35:20.719"/>
</kw>
<status status="PASS" starttime="20250227 16:35:20.238" endtime="20250227 16:35:20.719"/>
</kw>
<msg timestamp="20250227 16:35:20.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:20.238" endtime="20250227 16:35:20.719"/>
</kw>
<msg timestamp="20250227 16:35:20.719" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250227 16:35:20.238" endtime="20250227 16:35:20.719"/>
</kw>
<msg timestamp="20250227 16:35:20.719" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250227 16:35:20.237" endtime="20250227 16:35:20.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:20.719" endtime="20250227 16:35:20.719"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:20.723" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:21.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:21.194" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f3",
            "LastModified": "2025-02-27T16:35:19.711Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:20.721" endtime="20250227 16:35:21.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:21.195" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f3",
            "LastModified": "2025-02-27T16:35:19.711Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:21.195" endtime="20250227 16:35:21.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:21.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:21.196" endtime="20250227 16:35:21.196"/>
</kw>
<status status="PASS" starttime="20250227 16:35:20.720" endtime="20250227 16:35:21.196"/>
</kw>
<msg timestamp="20250227 16:35:21.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:20.720" endtime="20250227 16:35:21.196"/>
</kw>
<msg timestamp="20250227 16:35:21.196" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f3",
            "LastModified": "2025-02-27T16:35:19.711Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:20.720" endtime="20250227 16:35:21.196"/>
</kw>
<msg timestamp="20250227 16:35:21.197" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/multidelete/key=value/f3",
            "LastModified": "2025-02-27T16:35:19.711Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250227 16:35:20.720" endtime="20250227 16:35:21.197"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:21.197" endtime="20250227 16:35:21.197"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:21.197" endtime="20250227 16:35:21.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:21.197" endtime="20250227 16:35:21.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:21.198" endtime="20250227 16:35:21.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:21.198" endtime="20250227 16:35:21.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:18.246" endtime="20250227 16:35:21.199"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:35:18.238" endtime="20250227 16:35:21.199"/>
</suite>
<suite id="s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:21.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.208"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.208"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.208" endtime="20250227 16:35:21.209"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.209" endtime="20250227 16:35:21.209"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.209" endtime="20250227 16:35:21.209"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:21.209" endtime="20250227 16:35:21.209"/>
</kw>
<status status="PASS" starttime="20250227 16:35:21.207" endtime="20250227 16:35:21.209"/>
</kw>
<test id="s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:21.212" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:21.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:21.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:21.210" endtime="20250227 16:35:21.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:21.215" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:21.214" endtime="20250227 16:35:21.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:21.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:21.215" endtime="20250227 16:35:21.215"/>
</kw>
<status status="PASS" starttime="20250227 16:35:21.210" endtime="20250227 16:35:21.215"/>
</kw>
<msg timestamp="20250227 16:35:21.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:21.210" endtime="20250227 16:35:21.215"/>
</kw>
<status status="PASS" starttime="20250227 16:35:21.209" endtime="20250227 16:35:21.216"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:21.219" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:21.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:21.715" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:21.217" endtime="20250227 16:35:21.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:21.716" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:21.715" endtime="20250227 16:35:21.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:21.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:21.716" endtime="20250227 16:35:21.716"/>
</kw>
<status status="PASS" starttime="20250227 16:35:21.217" endtime="20250227 16:35:21.716"/>
</kw>
<msg timestamp="20250227 16:35:21.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:21.216" endtime="20250227 16:35:21.717"/>
</kw>
<msg timestamp="20250227 16:35:21.717" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:21.216" endtime="20250227 16:35:21.717"/>
</kw>
<msg timestamp="20250227 16:35:21.717" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:21.216" endtime="20250227 16:35:21.717"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:21.721" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:22.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:22.187" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:21.719" endtime="20250227 16:35:22.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:22.188" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:22.187" endtime="20250227 16:35:22.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:22.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:22.188" endtime="20250227 16:35:22.188"/>
</kw>
<status status="PASS" starttime="20250227 16:35:21.718" endtime="20250227 16:35:22.188"/>
</kw>
<msg timestamp="20250227 16:35:22.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:21.718" endtime="20250227 16:35:22.188"/>
</kw>
<msg timestamp="20250227 16:35:22.188" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:21.718" endtime="20250227 16:35:22.188"/>
</kw>
<msg timestamp="20250227 16:35:22.189" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:21.717" endtime="20250227 16:35:22.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:22.189" endtime="20250227 16:35:22.189"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:22.192" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:22.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:22.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:22.190" endtime="20250227 16:35:22.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:22.196" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:22.196" endtime="20250227 16:35:22.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:22.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:22.197" endtime="20250227 16:35:22.197"/>
</kw>
<status status="PASS" starttime="20250227 16:35:22.190" endtime="20250227 16:35:22.197"/>
</kw>
<msg timestamp="20250227 16:35:22.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:22.189" endtime="20250227 16:35:22.197"/>
</kw>
<status status="PASS" starttime="20250227 16:35:22.189" endtime="20250227 16:35:22.197"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:22.200" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:22.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:22.688" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250227 16:35:22.199" endtime="20250227 16:35:22.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:22.689" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250227 16:35:22.689" endtime="20250227 16:35:22.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:22.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:22.690" endtime="20250227 16:35:22.690"/>
</kw>
<status status="PASS" starttime="20250227 16:35:22.198" endtime="20250227 16:35:22.690"/>
</kw>
<msg timestamp="20250227 16:35:22.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:22.198" endtime="20250227 16:35:22.690"/>
</kw>
<msg timestamp="20250227 16:35:22.690" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250227 16:35:22.198" endtime="20250227 16:35:22.690"/>
</kw>
<msg timestamp="20250227 16:35:22.691" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250227 16:35:22.197" endtime="20250227 16:35:22.691"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:22.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:23.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:23.168" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:22.692" endtime="20250227 16:35:23.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:23.169" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-7231122653/putobject/key=value/zerobyte",
            "LastModified": "2025-02-27T16:35:22.630Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:23.168" endtime="20250227 16:35:23.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:23.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:23.169" endtime="20250227 16:35:23.169"/>
</kw>
<status status="PASS" starttime="20250227 16:35:22.692" endtime="20250227 16:35:23.169"/>
</kw>
<msg timestamp="20250227 16:35:23.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:22.691" endtime="20250227 16:35:23.169"/>
</kw>
<msg timestamp="20250227 16:35:23.170" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:22.691" endtime="20250227 16:35:23.170"/>
</kw>
<msg timestamp="20250227 16:35:23.170" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:21.660Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:22.691" endtime="20250227 16:35:23.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:23.170" endtime="20250227 16:35:23.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:21.209" endtime="20250227 16:35:23.170"/>
</test>
<test id="s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:23.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:23.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:23.653" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:23.173" endtime="20250227 16:35:23.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:23.654" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:23 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:23 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:23.654" endtime="20250227 16:35:23.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:23.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:23.654" endtime="20250227 16:35:23.655"/>
</kw>
<status status="PASS" starttime="20250227 16:35:23.172" endtime="20250227 16:35:23.655"/>
</kw>
<msg timestamp="20250227 16:35:23.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:23.172" endtime="20250227 16:35:23.655"/>
</kw>
<msg timestamp="20250227 16:35:23.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:23.172" endtime="20250227 16:35:23.655"/>
</kw>
<msg timestamp="20250227 16:35:23.655" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:23.171" endtime="20250227 16:35:23.655"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:23.659" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:23.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:23.663" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.657" endtime="20250227 16:35:23.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:23.664" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.663" endtime="20250227 16:35:23.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:23.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:23.664" endtime="20250227 16:35:23.664"/>
</kw>
<status status="PASS" starttime="20250227 16:35:23.656" endtime="20250227 16:35:23.665"/>
</kw>
<msg timestamp="20250227 16:35:23.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:23.656" endtime="20250227 16:35:23.665"/>
</kw>
<msg timestamp="20250227 16:35:23.665" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.656" endtime="20250227 16:35:23.665"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:23.668" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:23.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:23.672" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.666" endtime="20250227 16:35:23.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:23.672" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.672" endtime="20250227 16:35:23.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:23.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:23.673" endtime="20250227 16:35:23.673"/>
</kw>
<status status="PASS" starttime="20250227 16:35:23.665" endtime="20250227 16:35:23.673"/>
</kw>
<msg timestamp="20250227 16:35:23.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:23.665" endtime="20250227 16:35:23.673"/>
</kw>
<msg timestamp="20250227 16:35:23.673" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250227 16:35:23.665" endtime="20250227 16:35:23.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:23.673" endtime="20250227 16:35:23.674"/>
</kw>
<status status="PASS" starttime="20250227 16:35:23.655" endtime="20250227 16:35:23.674"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:23.674" endtime="20250227 16:35:23.674"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:23.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.192" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:22 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:23.676" endtime="20250227 16:35:24.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.193" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:22 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:24 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:24 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:24.192" endtime="20250227 16:35:24.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.193" endtime="20250227 16:35:24.193"/>
</kw>
<status status="PASS" starttime="20250227 16:35:23.675" endtime="20250227 16:35:24.193"/>
</kw>
<msg timestamp="20250227 16:35:24.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:23.675" endtime="20250227 16:35:24.193"/>
</kw>
<msg timestamp="20250227 16:35:24.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:22 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:23.675" endtime="20250227 16:35:24.193"/>
</kw>
<msg timestamp="20250227 16:35:24.194" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:22 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:23.674" endtime="20250227 16:35:24.194"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.197" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.201" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.195" endtime="20250227 16:35:24.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.202" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.202" endtime="20250227 16:35:24.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.202" endtime="20250227 16:35:24.203"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.194" endtime="20250227 16:35:24.203"/>
</kw>
<msg timestamp="20250227 16:35:24.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.194" endtime="20250227 16:35:24.203"/>
</kw>
<msg timestamp="20250227 16:35:24.203" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.194" endtime="20250227 16:35:24.203"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.206" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.210" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.204" endtime="20250227 16:35:24.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.211" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.210" endtime="20250227 16:35:24.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.211" endtime="20250227 16:35:24.211"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.204" endtime="20250227 16:35:24.211"/>
</kw>
<msg timestamp="20250227 16:35:24.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.204" endtime="20250227 16:35:24.212"/>
</kw>
<msg timestamp="20250227 16:35:24.212" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250227 16:35:24.203" endtime="20250227 16:35:24.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:24.212" endtime="20250227 16:35:24.212"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.194" endtime="20250227 16:35:24.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:23.171" endtime="20250227 16:35:24.212"/>
</test>
<test id="s1-s14-t3" name="Get object with wrong signature" line="52">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:35:24.213" endtime="20250227 16:35:24.214"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.216" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/bucket-diiacmavow/ozone-test-7231122653/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.229" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250227 16:35:24.214" endtime="20250227 16:35:24.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.230" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  49400      0 --:--:-- --:--:-- --:--:-- 49400
HTTP/1.1 403 Forbidden
Date: Thu, 27 Feb 2025 16:35:24 GMT
Cache-Control: no-cache
Expires: Thu, 27 Feb 2025 16:35:24 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: wa9CrTxqGBF0Af1
x-amz-request-id: fe6e69a3-b9c5-4199-be66-6ca9a6e14a85
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.229" endtime="20250227 16:35:24.230"/>
</kw>
<msg timestamp="20250227 16:35:24.230" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250227 16:35:24.214" endtime="20250227 16:35:24.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:24.230" endtime="20250227 16:35:24.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:24.213" endtime="20250227 16:35:24.231"/>
</test>
<test id="s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="57">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.711" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.233" endtime="20250227 16:35:24.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.711" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:24 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:24 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:24.711" endtime="20250227 16:35:24.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.712" endtime="20250227 16:35:24.712"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.233" endtime="20250227 16:35:24.712"/>
</kw>
<msg timestamp="20250227 16:35:24.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.233" endtime="20250227 16:35:24.712"/>
</kw>
<msg timestamp="20250227 16:35:24.712" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.232" endtime="20250227 16:35:24.712"/>
</kw>
<msg timestamp="20250227 16:35:24.712" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.232" endtime="20250227 16:35:24.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:24.713" endtime="20250227 16:35:24.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:24.713" endtime="20250227 16:35:24.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:24.713" endtime="20250227 16:35:24.713"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.716" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:24.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.720" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.714" endtime="20250227 16:35:24.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.721" level="INFO">Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.720" endtime="20250227 16:35:24.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.721" endtime="20250227 16:35:24.721"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.714" endtime="20250227 16:35:24.721"/>
</kw>
<msg timestamp="20250227 16:35:24.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.714" endtime="20250227 16:35:24.722"/>
</kw>
<msg timestamp="20250227 16:35:24.722" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.713" endtime="20250227 16:35:24.722"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.724" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:24.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:24.728" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.723" endtime="20250227 16:35:24.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:24.729" level="INFO">Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.728" endtime="20250227 16:35:24.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:24.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:24.729" endtime="20250227 16:35:24.729"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.722" endtime="20250227 16:35:24.729"/>
</kw>
<msg timestamp="20250227 16:35:24.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.722" endtime="20250227 16:35:24.730"/>
</kw>
<msg timestamp="20250227 16:35:24.730" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20250227 16:35:24.722" endtime="20250227 16:35:24.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:24.730" endtime="20250227 16:35:24.730"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:24.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:25.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.240" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.731" endtime="20250227 16:35:25.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.241" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:25 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:25 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:25.241" endtime="20250227 16:35:25.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.241" endtime="20250227 16:35:25.242"/>
</kw>
<status status="PASS" starttime="20250227 16:35:24.731" endtime="20250227 16:35:25.242"/>
</kw>
<msg timestamp="20250227 16:35:25.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:24.731" endtime="20250227 16:35:25.242"/>
</kw>
<msg timestamp="20250227 16:35:25.242" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.731" endtime="20250227 16:35:25.242"/>
</kw>
<msg timestamp="20250227 16:35:25.242" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:24.730" endtime="20250227 16:35:25.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.242" endtime="20250227 16:35:25.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.243" endtime="20250227 16:35:25.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.243" endtime="20250227 16:35:25.243"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.247" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:25.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.251" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.245" endtime="20250227 16:35:25.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.252" level="INFO">ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.251" endtime="20250227 16:35:25.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.252" endtime="20250227 16:35:25.252"/>
</kw>
<status status="PASS" starttime="20250227 16:35:25.244" endtime="20250227 16:35:25.252"/>
</kw>
<msg timestamp="20250227 16:35:25.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:25.244" endtime="20250227 16:35:25.252"/>
</kw>
<msg timestamp="20250227 16:35:25.252" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.243" endtime="20250227 16:35:25.253"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.256" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:25.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.259" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.253" endtime="20250227 16:35:25.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.260" level="INFO">ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.259" endtime="20250227 16:35:25.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.260" endtime="20250227 16:35:25.260"/>
</kw>
<status status="PASS" starttime="20250227 16:35:25.253" endtime="20250227 16:35:25.261"/>
</kw>
<msg timestamp="20250227 16:35:25.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:25.253" endtime="20250227 16:35:25.261"/>
</kw>
<msg timestamp="20250227 16:35:25.261" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20250227 16:35:25.253" endtime="20250227 16:35:25.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:25.261" endtime="20250227 16:35:25.261"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:25.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.746" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:25.263" endtime="20250227 16:35:25.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.747" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:25 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:25 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:25.747" endtime="20250227 16:35:25.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.747" endtime="20250227 16:35:25.748"/>
</kw>
<status status="PASS" starttime="20250227 16:35:25.262" endtime="20250227 16:35:25.748"/>
</kw>
<msg timestamp="20250227 16:35:25.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:25.262" endtime="20250227 16:35:25.748"/>
</kw>
<msg timestamp="20250227 16:35:25.748" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:25.262" endtime="20250227 16:35:25.748"/>
</kw>
<msg timestamp="20250227 16:35:25.748" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:25.261" endtime="20250227 16:35:25.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.748" endtime="20250227 16:35:25.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.749" endtime="20250227 16:35:25.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:25.749" endtime="20250227 16:35:25.749"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.752" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:25.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.756" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.750" endtime="20250227 16:35:25.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.757" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.757" endtime="20250227 16:35:25.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.757" endtime="20250227 16:35:25.758"/>
</kw>
<status status="PASS" starttime="20250227 16:35:25.750" endtime="20250227 16:35:25.758"/>
</kw>
<msg timestamp="20250227 16:35:25.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:25.750" endtime="20250227 16:35:25.758"/>
</kw>
<msg timestamp="20250227 16:35:25.758" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.749" endtime="20250227 16:35:25.758"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.761" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:25.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:25.765" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.759" endtime="20250227 16:35:25.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:25.765" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.765" endtime="20250227 16:35:25.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:25.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:25.765" endtime="20250227 16:35:25.766"/>
</kw>
<status status="PASS" starttime="20250227 16:35:25.759" endtime="20250227 16:35:25.766"/>
</kw>
<msg timestamp="20250227 16:35:25.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:25.758" endtime="20250227 16:35:25.766"/>
</kw>
<msg timestamp="20250227 16:35:25.766" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20250227 16:35:25.758" endtime="20250227 16:35:25.766"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:25.766" endtime="20250227 16:35:25.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:24.231" endtime="20250227 16:35:25.767"/>
</test>
<test id="s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="83">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:25.770" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:26.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:26.250" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:25.768" endtime="20250227 16:35:26.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:26.251" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:26.251" endtime="20250227 16:35:26.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:26.251" endtime="20250227 16:35:26.252"/>
</kw>
<msg timestamp="20250227 16:35:26.252" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:25.768" endtime="20250227 16:35:26.252"/>
</kw>
<msg timestamp="20250227 16:35:26.252" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:25.768" endtime="20250227 16:35:26.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:26.252" endtime="20250227 16:35:26.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:25.767" endtime="20250227 16:35:26.253"/>
</test>
<test id="s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="88">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:26.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:26.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:26.728" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.256" endtime="20250227 16:35:26.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:26.729" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:26 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:26 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:26.729" endtime="20250227 16:35:26.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:26.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:26.729" endtime="20250227 16:35:26.730"/>
</kw>
<status status="PASS" starttime="20250227 16:35:26.255" endtime="20250227 16:35:26.730"/>
</kw>
<msg timestamp="20250227 16:35:26.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:26.255" endtime="20250227 16:35:26.730"/>
</kw>
<msg timestamp="20250227 16:35:26.730" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.255" endtime="20250227 16:35:26.730"/>
</kw>
<msg timestamp="20250227 16:35:26.730" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.254" endtime="20250227 16:35:26.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:26.730" endtime="20250227 16:35:26.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:26.731" endtime="20250227 16:35:26.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:26.731" endtime="20250227 16:35:26.731"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:26.734" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:26.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:26.738" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.732" endtime="20250227 16:35:26.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:26.739" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.738" endtime="20250227 16:35:26.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:26.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:26.739" endtime="20250227 16:35:26.740"/>
</kw>
<status status="PASS" starttime="20250227 16:35:26.732" endtime="20250227 16:35:26.740"/>
</kw>
<msg timestamp="20250227 16:35:26.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:26.732" endtime="20250227 16:35:26.740"/>
</kw>
<msg timestamp="20250227 16:35:26.740" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.731" endtime="20250227 16:35:26.740"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:26.743" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:26.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:26.746" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.741" endtime="20250227 16:35:26.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:26.747" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.746" endtime="20250227 16:35:26.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:26.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:26.747" endtime="20250227 16:35:26.747"/>
</kw>
<status status="PASS" starttime="20250227 16:35:26.741" endtime="20250227 16:35:26.747"/>
</kw>
<msg timestamp="20250227 16:35:26.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:26.740" endtime="20250227 16:35:26.748"/>
</kw>
<msg timestamp="20250227 16:35:26.748" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:26.740" endtime="20250227 16:35:26.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:26.748" endtime="20250227 16:35:26.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:26.253" endtime="20250227 16:35:26.748"/>
</test>
<test id="s1-s14-t7" name="Get Partial object from s3 with only start offset" line="97">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:26.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:27.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.222" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.750" endtime="20250227 16:35:27.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.223" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:27 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:27 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:27.222" endtime="20250227 16:35:27.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.223" endtime="20250227 16:35:27.223"/>
</kw>
<status status="PASS" starttime="20250227 16:35:26.750" endtime="20250227 16:35:27.223"/>
</kw>
<msg timestamp="20250227 16:35:27.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:26.750" endtime="20250227 16:35:27.223"/>
</kw>
<msg timestamp="20250227 16:35:27.224" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.750" endtime="20250227 16:35:27.224"/>
</kw>
<msg timestamp="20250227 16:35:27.224" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:26.749" endtime="20250227 16:35:27.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.224" endtime="20250227 16:35:27.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.224" endtime="20250227 16:35:27.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.224" endtime="20250227 16:35:27.225"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.228" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:27.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.231" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.226" endtime="20250227 16:35:27.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.232" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.232" endtime="20250227 16:35:27.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.232" endtime="20250227 16:35:27.232"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.225" endtime="20250227 16:35:27.233"/>
</kw>
<msg timestamp="20250227 16:35:27.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.225" endtime="20250227 16:35:27.233"/>
</kw>
<msg timestamp="20250227 16:35:27.233" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.225" endtime="20250227 16:35:27.233"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.236" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:27.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.239" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.234" endtime="20250227 16:35:27.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.240" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.240" endtime="20250227 16:35:27.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.240" endtime="20250227 16:35:27.240"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.233" endtime="20250227 16:35:27.241"/>
</kw>
<msg timestamp="20250227 16:35:27.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.233" endtime="20250227 16:35:27.241"/>
</kw>
<msg timestamp="20250227 16:35:27.241" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:27.233" endtime="20250227 16:35:27.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:27.241" endtime="20250227 16:35:27.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:26.749" endtime="20250227 16:35:27.241"/>
</test>
<test id="s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="106">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:27.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.710" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.243" endtime="20250227 16:35:27.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.711" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:27 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:27 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:27.710" endtime="20250227 16:35:27.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.711" endtime="20250227 16:35:27.711"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.243" endtime="20250227 16:35:27.711"/>
</kw>
<msg timestamp="20250227 16:35:27.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.243" endtime="20250227 16:35:27.712"/>
</kw>
<msg timestamp="20250227 16:35:27.712" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.243" endtime="20250227 16:35:27.712"/>
</kw>
<msg timestamp="20250227 16:35:27.712" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.242" endtime="20250227 16:35:27.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.712" endtime="20250227 16:35:27.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.712" endtime="20250227 16:35:27.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:27.713" endtime="20250227 16:35:27.713"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.716" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:27.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.720" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250227 16:35:27.714" endtime="20250227 16:35:27.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.720" level="INFO">R</msg>
<status status="PASS" starttime="20250227 16:35:27.720" endtime="20250227 16:35:27.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.721" endtime="20250227 16:35:27.721"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.714" endtime="20250227 16:35:27.721"/>
</kw>
<msg timestamp="20250227 16:35:27.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.713" endtime="20250227 16:35:27.721"/>
</kw>
<msg timestamp="20250227 16:35:27.721" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20250227 16:35:27.713" endtime="20250227 16:35:27.721"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.724" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:27.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:27.727" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250227 16:35:27.722" endtime="20250227 16:35:27.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:27.728" level="INFO">R</msg>
<status status="PASS" starttime="20250227 16:35:27.728" endtime="20250227 16:35:27.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:27.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:27.728" endtime="20250227 16:35:27.729"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.722" endtime="20250227 16:35:27.729"/>
</kw>
<msg timestamp="20250227 16:35:27.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.722" endtime="20250227 16:35:27.729"/>
</kw>
<msg timestamp="20250227 16:35:27.729" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20250227 16:35:27.721" endtime="20250227 16:35:27.729"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:27.729" endtime="20250227 16:35:27.730"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:27.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:28.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.731" endtime="20250227 16:35:28.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.192" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:28 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:28 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:28.192" endtime="20250227 16:35:28.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.193" endtime="20250227 16:35:28.193"/>
</kw>
<status status="PASS" starttime="20250227 16:35:27.731" endtime="20250227 16:35:28.193"/>
</kw>
<msg timestamp="20250227 16:35:28.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:27.731" endtime="20250227 16:35:28.193"/>
</kw>
<msg timestamp="20250227 16:35:28.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.730" endtime="20250227 16:35:28.193"/>
</kw>
<msg timestamp="20250227 16:35:28.193" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:27.730" endtime="20250227 16:35:28.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.194" endtime="20250227 16:35:28.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.194" endtime="20250227 16:35:28.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.194" endtime="20250227 16:35:28.194"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.197" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:28.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.201" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250227 16:35:28.195" endtime="20250227 16:35:28.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.202" level="INFO">o</msg>
<status status="PASS" starttime="20250227 16:35:28.201" endtime="20250227 16:35:28.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.202" endtime="20250227 16:35:28.202"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.195" endtime="20250227 16:35:28.202"/>
</kw>
<msg timestamp="20250227 16:35:28.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.195" endtime="20250227 16:35:28.203"/>
</kw>
<msg timestamp="20250227 16:35:28.203" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20250227 16:35:28.195" endtime="20250227 16:35:28.203"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.205" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:28.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.209" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250227 16:35:28.204" endtime="20250227 16:35:28.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.210" level="INFO">o</msg>
<status status="PASS" starttime="20250227 16:35:28.209" endtime="20250227 16:35:28.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.210" endtime="20250227 16:35:28.210"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.203" endtime="20250227 16:35:28.210"/>
</kw>
<msg timestamp="20250227 16:35:28.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.203" endtime="20250227 16:35:28.210"/>
</kw>
<msg timestamp="20250227 16:35:28.210" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20250227 16:35:28.203" endtime="20250227 16:35:28.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:28.211" endtime="20250227 16:35:28.211"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:27.242" endtime="20250227 16:35:28.211"/>
</test>
<test id="s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="123">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:28.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.683" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:28.213" endtime="20250227 16:35:28.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.684" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:28 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:28 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:28.683" endtime="20250227 16:35:28.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.684" endtime="20250227 16:35:28.684"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.213" endtime="20250227 16:35:28.685"/>
</kw>
<msg timestamp="20250227 16:35:28.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.213" endtime="20250227 16:35:28.685"/>
</kw>
<msg timestamp="20250227 16:35:28.685" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:28.212" endtime="20250227 16:35:28.685"/>
</kw>
<msg timestamp="20250227 16:35:28.685" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250227 16:35:28.212" endtime="20250227 16:35:28.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.685" endtime="20250227 16:35:28.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.685" endtime="20250227 16:35:28.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:28.686" endtime="20250227 16:35:28.686"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.689" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20250227 16:35:28.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.692" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250227 16:35:28.687" endtime="20250227 16:35:28.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.693" level="INFO">ext</msg>
<status status="PASS" starttime="20250227 16:35:28.693" endtime="20250227 16:35:28.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.693" endtime="20250227 16:35:28.694"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.687" endtime="20250227 16:35:28.694"/>
</kw>
<msg timestamp="20250227 16:35:28.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.686" endtime="20250227 16:35:28.694"/>
</kw>
<msg timestamp="20250227 16:35:28.694" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20250227 16:35:28.686" endtime="20250227 16:35:28.694"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.697" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:28.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:28.700" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250227 16:35:28.695" endtime="20250227 16:35:28.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:28.701" level="INFO">ext</msg>
<status status="PASS" starttime="20250227 16:35:28.700" endtime="20250227 16:35:28.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:28.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:28.701" endtime="20250227 16:35:28.701"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.695" endtime="20250227 16:35:28.701"/>
</kw>
<msg timestamp="20250227 16:35:28.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.695" endtime="20250227 16:35:28.701"/>
</kw>
<msg timestamp="20250227 16:35:28.701" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20250227 16:35:28.694" endtime="20250227 16:35:28.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:28.702" endtime="20250227 16:35:28.702"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:28.705" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.166" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:28.703" endtime="20250227 16:35:29.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.166" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:29 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:29 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:29.166" endtime="20250227 16:35:29.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.167" endtime="20250227 16:35:29.167"/>
</kw>
<status status="PASS" starttime="20250227 16:35:28.703" endtime="20250227 16:35:29.167"/>
</kw>
<msg timestamp="20250227 16:35:29.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:28.703" endtime="20250227 16:35:29.167"/>
</kw>
<msg timestamp="20250227 16:35:29.167" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:28.702" endtime="20250227 16:35:29.167"/>
</kw>
<msg timestamp="20250227 16:35:29.168" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:28.702" endtime="20250227 16:35:29.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:29.168" endtime="20250227 16:35:29.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:29.168" endtime="20250227 16:35:29.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:29.168" endtime="20250227 16:35:29.169"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.172" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.176" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.170" endtime="20250227 16:35:29.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.177" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.177" endtime="20250227 16:35:29.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.177" endtime="20250227 16:35:29.178"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.169" endtime="20250227 16:35:29.178"/>
</kw>
<msg timestamp="20250227 16:35:29.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.169" endtime="20250227 16:35:29.178"/>
</kw>
<msg timestamp="20250227 16:35:29.178" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.169" endtime="20250227 16:35:29.178"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.182" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.186" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.180" endtime="20250227 16:35:29.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.186" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.186" endtime="20250227 16:35:29.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.187" endtime="20250227 16:35:29.187"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.179" endtime="20250227 16:35:29.187"/>
</kw>
<msg timestamp="20250227 16:35:29.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.179" endtime="20250227 16:35:29.187"/>
</kw>
<msg timestamp="20250227 16:35:29.187" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.178" endtime="20250227 16:35:29.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:29.188" endtime="20250227 16:35:29.188"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:28.211" endtime="20250227 16:35:29.188"/>
</test>
<test id="s1-s14-t10" name="Incorrect values for end and start offset" line="141">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.193" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.664" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.191" endtime="20250227 16:35:29.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.665" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:29 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:29 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:29.665" endtime="20250227 16:35:29.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.665" endtime="20250227 16:35:29.666"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.190" endtime="20250227 16:35:29.666"/>
</kw>
<msg timestamp="20250227 16:35:29.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.190" endtime="20250227 16:35:29.666"/>
</kw>
<msg timestamp="20250227 16:35:29.666" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.190" endtime="20250227 16:35:29.666"/>
</kw>
<msg timestamp="20250227 16:35:29.666" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.189" endtime="20250227 16:35:29.666"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:29.666" endtime="20250227 16:35:29.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:29.667" endtime="20250227 16:35:29.667"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.670" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.674" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.668" endtime="20250227 16:35:29.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.675" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.674" endtime="20250227 16:35:29.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.675" endtime="20250227 16:35:29.675"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.668" endtime="20250227 16:35:29.675"/>
</kw>
<msg timestamp="20250227 16:35:29.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.667" endtime="20250227 16:35:29.675"/>
</kw>
<msg timestamp="20250227 16:35:29.675" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.667" endtime="20250227 16:35:29.675"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.678" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:29.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:29.682" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.676" endtime="20250227 16:35:29.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:29.682" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.682" endtime="20250227 16:35:29.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:29.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:29.683" endtime="20250227 16:35:29.683"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.676" endtime="20250227 16:35:29.683"/>
</kw>
<msg timestamp="20250227 16:35:29.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.676" endtime="20250227 16:35:29.683"/>
</kw>
<msg timestamp="20250227 16:35:29.683" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:29.676" endtime="20250227 16:35:29.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:29.683" endtime="20250227 16:35:29.684"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:29.687" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:30.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:30.156" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.685" endtime="20250227 16:35:30.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:30.157" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:30 GMT",
    "Metadata": {},
    "ExpiresString": "Thu, 27 Feb 2025 16:35:30 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:30.156" endtime="20250227 16:35:30.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:30.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:30.157" endtime="20250227 16:35:30.157"/>
</kw>
<status status="PASS" starttime="20250227 16:35:29.685" endtime="20250227 16:35:30.157"/>
</kw>
<msg timestamp="20250227 16:35:30.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:29.685" endtime="20250227 16:35:30.157"/>
</kw>
<msg timestamp="20250227 16:35:30.158" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.684" endtime="20250227 16:35:30.158"/>
</kw>
<msg timestamp="20250227 16:35:30.158" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:29.684" endtime="20250227 16:35:30.158"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:30.158" endtime="20250227 16:35:30.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:30.158" endtime="20250227 16:35:30.158"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:30.161" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:30.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:30.165" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.159" endtime="20250227 16:35:30.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:30.166" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.165" endtime="20250227 16:35:30.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:30.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:30.166" endtime="20250227 16:35:30.166"/>
</kw>
<status status="PASS" starttime="20250227 16:35:30.159" endtime="20250227 16:35:30.167"/>
</kw>
<msg timestamp="20250227 16:35:30.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:30.159" endtime="20250227 16:35:30.167"/>
</kw>
<msg timestamp="20250227 16:35:30.167" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.158" endtime="20250227 16:35:30.167"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:30.170" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:30.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:30.173" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.168" endtime="20250227 16:35:30.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:30.174" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.173" endtime="20250227 16:35:30.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:30.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:30.174" endtime="20250227 16:35:30.174"/>
</kw>
<status status="PASS" starttime="20250227 16:35:30.168" endtime="20250227 16:35:30.174"/>
</kw>
<msg timestamp="20250227 16:35:30.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:30.167" endtime="20250227 16:35:30.175"/>
</kw>
<msg timestamp="20250227 16:35:30.175" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250227 16:35:30.167" endtime="20250227 16:35:30.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:30.175" endtime="20250227 16:35:30.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:29.189" endtime="20250227 16:35:30.175"/>
</test>
<test id="s1-s14-t11" name="Zero byte file" line="156">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:30.179" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:30.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:30.636" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.177" endtime="20250227 16:35:30.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:30.636" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.636" endtime="20250227 16:35:30.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:30.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:30.637" endtime="20250227 16:35:30.637"/>
</kw>
<msg timestamp="20250227 16:35:30.637" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.176" endtime="20250227 16:35:30.637"/>
</kw>
<msg timestamp="20250227 16:35:30.637" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.176" endtime="20250227 16:35:30.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:30.637" endtime="20250227 16:35:30.638"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:30.641" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:31.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:31.089" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.639" endtime="20250227 16:35:31.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:31.090" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:31.089" endtime="20250227 16:35:31.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:31.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:31.090" endtime="20250227 16:35:31.090"/>
</kw>
<msg timestamp="20250227 16:35:31.091" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.638" endtime="20250227 16:35:31.091"/>
</kw>
<msg timestamp="20250227 16:35:31.091" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:30.638" endtime="20250227 16:35:31.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:31.091" endtime="20250227 16:35:31.091"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:31.094" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:31.549" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:31.549" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:31.092" endtime="20250227 16:35:31.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:31.550" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:31.550" endtime="20250227 16:35:31.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:31.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:31.550" endtime="20250227 16:35:31.551"/>
</kw>
<msg timestamp="20250227 16:35:31.551" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:31.092" endtime="20250227 16:35:31.551"/>
</kw>
<msg timestamp="20250227 16:35:31.551" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250227 16:35:31.091" endtime="20250227 16:35:31.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:31.551" endtime="20250227 16:35:31.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:30.176" endtime="20250227 16:35:31.552"/>
</test>
<test id="s1-s14-t12" name="Create file with user defined metadata and tags" line="166">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:31.556" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250227 16:35:31.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:31.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:31.553" endtime="20250227 16:35:31.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:31.558" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:31.558" endtime="20250227 16:35:31.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:31.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:31.558" endtime="20250227 16:35:31.559"/>
</kw>
<status status="PASS" starttime="20250227 16:35:31.553" endtime="20250227 16:35:31.559"/>
</kw>
<msg timestamp="20250227 16:35:31.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:31.553" endtime="20250227 16:35:31.559"/>
</kw>
<status status="PASS" starttime="20250227 16:35:31.553" endtime="20250227 16:35:31.559"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:31.563" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:32.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:32.067" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:31.561" endtime="20250227 16:35:32.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:32.068" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:32.067" endtime="20250227 16:35:32.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:32.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:32.068" endtime="20250227 16:35:32.068"/>
</kw>
<status status="PASS" starttime="20250227 16:35:31.561" endtime="20250227 16:35:32.068"/>
</kw>
<msg timestamp="20250227 16:35:32.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:31.560" endtime="20250227 16:35:32.068"/>
</kw>
<msg timestamp="20250227 16:35:32.069" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:31.560" endtime="20250227 16:35:32.069"/>
</kw>
<status status="PASS" starttime="20250227 16:35:31.560" endtime="20250227 16:35:32.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:32.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:32.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:32.531" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:32.070" endtime="20250227 16:35:32.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:32.532" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:32 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Thu, 27 Feb 2025 16:35:32 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:32.531" endtime="20250227 16:35:32.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:32.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:32.532" endtime="20250227 16:35:32.532"/>
</kw>
<status status="PASS" starttime="20250227 16:35:32.070" endtime="20250227 16:35:32.532"/>
</kw>
<msg timestamp="20250227 16:35:32.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:32.070" endtime="20250227 16:35:32.532"/>
</kw>
<msg timestamp="20250227 16:35:32.533" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:32.069" endtime="20250227 16:35:32.533"/>
</kw>
<msg timestamp="20250227 16:35:32.533" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:32.069" endtime="20250227 16:35:32.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:32.533" endtime="20250227 16:35:32.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:32.533" endtime="20250227 16:35:32.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:32.537" level="INFO">Running command 'ozone sh key info /s3v/bucket-diiacmavow/ozone-test-7231122653/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:35.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:35.790" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-7231122653/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-0...</msg>
<status status="PASS" starttime="20250227 16:35:32.535" endtime="20250227 16:35:35.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:35.791" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-7231122653/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-02-27T16:35:31.984Z",
  "modificationTime" : "2025-02-27T16:35:32.018Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600067,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 761,
  "file" : true
}</msg>
<status status="PASS" starttime="20250227 16:35:35.790" endtime="20250227 16:35:35.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:35.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:35.791" endtime="20250227 16:35:35.791"/>
</kw>
<status status="PASS" starttime="20250227 16:35:32.534" endtime="20250227 16:35:35.791"/>
</kw>
<msg timestamp="20250227 16:35:35.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:32.534" endtime="20250227 16:35:35.791"/>
</kw>
<msg timestamp="20250227 16:35:35.792" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "bucket-diiacmavow",
  "name" : "ozone-test-7231122653/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-0...</msg>
<status status="PASS" starttime="20250227 16:35:32.534" endtime="20250227 16:35:35.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:35.792" endtime="20250227 16:35:35.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:35.792" endtime="20250227 16:35:35.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:35.792" endtime="20250227 16:35:35.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:35.793" endtime="20250227 16:35:35.793"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:35.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:36.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:36.267" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:35.795" endtime="20250227 16:35:36.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:36.268" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:36 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:36 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:36.267" endtime="20250227 16:35:36.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:36.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:36.268" endtime="20250227 16:35:36.268"/>
</kw>
<status status="PASS" starttime="20250227 16:35:35.794" endtime="20250227 16:35:36.268"/>
</kw>
<msg timestamp="20250227 16:35:36.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:35.794" endtime="20250227 16:35:36.269"/>
</kw>
<msg timestamp="20250227 16:35:36.269" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:35.793" endtime="20250227 16:35:36.269"/>
</kw>
<msg timestamp="20250227 16:35:36.269" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:35.793" endtime="20250227 16:35:36.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:36.269" endtime="20250227 16:35:36.269"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:36.272" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:36 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:36 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:36.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:36.277" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:35:36.270" endtime="20250227 16:35:36.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:36.278" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:35:36.277" endtime="20250227 16:35:36.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:36.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:36.278" endtime="20250227 16:35:36.278"/>
</kw>
<msg timestamp="20250227 16:35:36.278" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:35:36.269" endtime="20250227 16:35:36.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:36.278" endtime="20250227 16:35:36.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:31.552" endtime="20250227 16:35:36.279"/>
</test>
<test id="s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="185">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:36.282" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250227 16:35:36.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:36.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:36.280" endtime="20250227 16:35:36.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:36.285" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:36.284" endtime="20250227 16:35:36.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:36.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:36.285" endtime="20250227 16:35:36.285"/>
</kw>
<status status="PASS" starttime="20250227 16:35:36.280" endtime="20250227 16:35:36.285"/>
</kw>
<msg timestamp="20250227 16:35:36.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:36.280" endtime="20250227 16:35:36.285"/>
</kw>
<status status="PASS" starttime="20250227 16:35:36.280" endtime="20250227 16:35:36.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:36.288" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:36.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:36.782" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:36.287" endtime="20250227 16:35:36.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:36.783" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:36.782" endtime="20250227 16:35:36.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:36.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:36.783" endtime="20250227 16:35:36.783"/>
</kw>
<status status="PASS" starttime="20250227 16:35:36.286" endtime="20250227 16:35:36.783"/>
</kw>
<msg timestamp="20250227 16:35:36.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:36.286" endtime="20250227 16:35:36.784"/>
</kw>
<msg timestamp="20250227 16:35:36.784" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:36.286" endtime="20250227 16:35:36.784"/>
</kw>
<status status="PASS" starttime="20250227 16:35:36.285" endtime="20250227 16:35:36.784"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:36.788" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:37.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:37.244" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:36.786" endtime="20250227 16:35:37.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:37.244" level="INFO">{
    "LastModified": "Thu, 27 Feb 2025 16:35:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:37 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Thu, 27 Feb 2025 16:35:37 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:37.244" endtime="20250227 16:35:37.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:37.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:37.245" endtime="20250227 16:35:37.245"/>
</kw>
<status status="PASS" starttime="20250227 16:35:36.785" endtime="20250227 16:35:37.245"/>
</kw>
<msg timestamp="20250227 16:35:37.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:36.785" endtime="20250227 16:35:37.245"/>
</kw>
<msg timestamp="20250227 16:35:37.245" level="INFO">${output} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:36.784" endtime="20250227 16:35:37.245"/>
</kw>
<msg timestamp="20250227 16:35:37.246" level="INFO">${result} = {
    "LastModified": "Thu, 27 Feb 2025 16:35:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250227 16:35:36.784" endtime="20250227 16:35:37.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:37.246" endtime="20250227 16:35:37.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:37.246" endtime="20250227 16:35:37.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:36.279" endtime="20250227 16:35:37.246"/>
</test>
<test id="s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="193">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:37.250" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250227 16:35:37.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:37.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:37.248" endtime="20250227 16:35:37.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:37.253" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:37.252" endtime="20250227 16:35:37.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:37.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:37.253" endtime="20250227 16:35:37.253"/>
</kw>
<status status="PASS" starttime="20250227 16:35:37.248" endtime="20250227 16:35:37.253"/>
</kw>
<msg timestamp="20250227 16:35:37.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:37.247" endtime="20250227 16:35:37.254"/>
</kw>
<status status="PASS" starttime="20250227 16:35:37.247" endtime="20250227 16:35:37.254"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:35:37.256" level="INFO">${custom_metadata_value} = zPBoRwYFJoSMwG842hvH7ORs0tI4Ae5Vj1bruyJZKFCBt6yOsXIwE5YTsqgq75ppFJkrMbMnb1aRb1TXHszQauyF76UvoPgkoCOia2gRXDKVDmbJHf61uJsqyodDg15GCa8fbvoAAHV25qECxOAcJ78Iea7SNTLf1s2y59dAhy06bDqAQ0WCC00aMSpR5MR68BAv7Vmj...</msg>
<status status="PASS" starttime="20250227 16:35:37.254" endtime="20250227 16:35:37.256"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:37.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=zPBoRwYFJoSMwG842hvH7ORs0tI4Ae5Vj1bruyJZKFCBt6yOsXIwE5YTsqgq75ppFJkrMbMnb1aRb1TXHszQauyF76UvoPgkoCOia2gRXDKVDmbJHf61uJsqyodDg15GCa8fbvoAAHV25qECxOAcJ78Iea7SNTLf1s2y59dAhy06bDqAQ0WCC00aMSpR5MR68BAv7VmjctS5SJxZyt1Bm9FYQmqWWEMTjENbBxRefG52M7ljG9nYbQE7o0G7MqB2PhmezFUVwHQTnE7EddSLiTJEMMtNnTLBNCre7pjC1z2hY4zptkf6iShT24PavsOIbBqKzzys3opWwU4uj206ofDX2GFFbEIi10yEp5aMi5f7s3Ciq2kmd3BSN6GKftFKSBOsyjGDbAhi7snCLNhvOk96VYcfRwH5TVXHi4eqGHtE5Q8UmxgauGz71VyK7XqtCqgJpS9y9SVickMKYLcOr450mzTXdyfDWLeNZTAZPby2nSEtqJCCwywSLTcqxuGC17QJN7gQYbcCQbHGNrUQKy1CtuxYUgK4JXcz3mvll9kmcSIWhS8XuVeP02HRSyxdRaq069wSvosmMCEtm5tjOUQDVfo3fGL34E55lTxInNeF0MV55nm7IycbhQapasgABXVMkh5IL5aY4chHbpFzGovi0ieUJ3yB59bFZS1TtJFStVEQLMXn7unIB7W3ZKqo9E6q3A1gs7tgr4wOCZZDHZ2PeRS0mAPQ4SsyBAQ7SDcXF3yulQqsyftJjWyUhnNVyQNnyd2mwbBlPewrWCnrZDd95OQrJmQ3v4EVr4hFzweTs9RcQkkO3hMIKR2jlOx7OsnQrrTLNxuLfaw2ZBFcg2Hki78GBtshqm2AKb8kQqcTZWXYQzPT10CHR8YynJXyUTtvMJGaABrrFIn0nyXgHAUPJAoHYR1vE4XVEGR7difxWkkeqUqN7dmj8nKsSXWDV4ZV0R1CYwaydcHf7LaIguycr3zJAG3Wxlq3YZ2j941ALvdl6KR5n2Dw5S51x4k4AzzmUC5uWJyLWnVfTeeXimvQKrCEeav9lS71HYzQOSKS9zsk01vimYW8C5p3neb0ZhshVzbPXFIYLlPWhpUnJqTv7vcOBRoPRiTZiwOPZyRloqDyZB0W0l6bPV6x9Z1DUlUpDmrWgHfv3QiqWpIfqKnR0Se8Feykki9tDF0C0PHaWZ3ZwNNEbsezyMM0UtatD9ueW4JOO2isxDCgb1oYrC8QXqRr2lWPxtEorDFgLi39fpQ5ZtAaaWDcSj1v9BQryUEm9FDpyXPY8PD3wV8gfjHO6ryixdIfauari817mu4U2fnjuiEKeOz6n3fCZvR5ECmz3q1GHf1QyZXwW96N2Eg8oQCEyilYCpMWtmO0H91GIofcmgmuGP5wdVGLsqq6igO8CyhGdrEZHYGtQGyG1i1urGoSV9G8ZphOrtT8BsXBSuqNPkmZwsdaTebJDVgBIiaAfb4UTdvFI1DaoWrQ8WcJyqdr3fFNhNZNWHreT79fCcYvAYg7a6nWA8pEmGmlLCW1NSp2qMcZ6a9EFWTqSx0gkudLGNFDQNmiBYEsZeZYf3lEqk4z1C3UVdcAHketPaOxzHzPwZJX0OXSTTeKF27rzvpXZjQBU6t2rVwkFhk18LjG7rpvJLEBgAvYlVNqUi29giN1hf0sgUXjRoU4YZQvhpb0fLaORNTZYpDFpHhZXsVYkOuVt1ha0ZTmHqBtYRFr5SbIW9qPUvthtUHaJL9Q9RnRjK5T9wte6hSkb3LsDhsRLadoVbw2jOZl9PhcKEXUepOnW4s4CqJYohi4uqsr0BJPASX8PMtyWZkcSgpd3r0Jjgoqom9YIRMph3mb7twnSS4K1oThBxWuKI7ethMHZrFFqS33UgkOYvk6LYRRwo1pn1vXdwnajpzFu8QJivNOiWXpGviSIx7um263H4f3M2ju4rtrP9FpkXdtMYTX8pae73RUini2JDO6IMkSvmuFIqBPCOKvqveTVIhL23b8E8VFRegtU2Pmg6V7DJrHvIy6Z4stqScvjRKluhXqpj8wPVSg21M9bCqD9j0THghsRC8YtfONeteFoReHZv8j9bN9IQCdrn3uM0yWhwb0UNTqhLlQA6xVBF9zWwvqriG5Ymqlvlqma93gSq9pSImV6NPXrOZ9HZ4NdydGqQWiuKftVkrHjBumrKg6wC4neJsvHmDZJmFYhfd02Uh98t5PPFWxEaYrRwOw4Za1QJ1ihB2q3NuaNUm68UfUXpVDbgInxyKuwoQA1BnUAmoF59LK7M5wgL008mgtd0l9RciIs5YqbFAky76JQMd7vS2ac68fZbNRUpByzHCEpmw4VjE1AhgaU6gUAeARzySgpmoVmvmqH47ZBpsmYaCZRcsL7TmxtRNoX7EF8d7ZvXJLrYw2d9SlC2PvgVbbMOtJtbxR5TN8bqOUKbdF2OrKmPbUkW9tfqUVhv4nxJxzB5dWCzeAMwwj2JLVBRTTL3O6K6LN99OtrqSaJqq1qsIGKOcK4yanhG3iWqkdPcTAouo1bzcuBP9kKlnu2mObVq7fCIE2KLKbp1lCjy4LaHUQzm7ph7qGcdGERHclPsHq6oIpc653XVzRbRosw0ZGf91ujTZ3iQop81FWjmKV2O3a3MSvP0BGCgxFOWRb0GOQfXzZ33cTpKkouobMlWdXDSCxMatpw3ZzaEXk3VXUpnPiumwsnJnUgIHcgjusu8511BwN11ZLOaTs0iX1IcBqQryUoNhS2LJcCCNjoZmfoSZTesPQMOVcxCoowmJGqd24d4QeS4y2VwUSfnFfB0VOvKATeuaWeVOYEP87tXgDb2NC8ZV33zxVkaZ7MgHnoUSJreN6B75v4QRmegQT9a7SqNlHlQn0SUASg7aqM2UN2AAFExIXTJbFfhJdmjD9SCquUAFYnyXT3oiTXTxpJCqCIhCnYrelznVkw1pET82sjRrBidaS5c3jIoGLeXyBgZBxFl1q8ebL6X4dzQxfNoEt" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:37.727" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:37.727" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:35:37.257" endtime="20250227 16:35:37.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:37.728" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:35:37.728" endtime="20250227 16:35:37.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:37.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:37.728" endtime="20250227 16:35:37.729"/>
</kw>
<msg timestamp="20250227 16:35:37.729" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:35:37.256" endtime="20250227 16:35:37.729"/>
</kw>
<msg timestamp="20250227 16:35:37.729" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250227 16:35:37.256" endtime="20250227 16:35:37.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:37.729" endtime="20250227 16:35:37.730"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:37.730" endtime="20250227 16:35:37.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:37.247" endtime="20250227 16:35:37.730"/>
</test>
<test id="s1-s14-t15" name="Create files invalid tags" line="200">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:37.734" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:38.194" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:38.194" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250227 16:35:37.732" endtime="20250227 16:35:38.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:38.195" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250227 16:35:38.194" endtime="20250227 16:35:38.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:38.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:38.195" endtime="20250227 16:35:38.195"/>
</kw>
<msg timestamp="20250227 16:35:38.195" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250227 16:35:37.732" endtime="20250227 16:35:38.195"/>
</kw>
<msg timestamp="20250227 16:35:38.196" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250227 16:35:37.731" endtime="20250227 16:35:38.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:38.196" endtime="20250227 16:35:38.196"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:35:38.196" level="INFO">${long_tag_key} = SXkLkWmJPsBlqZ4bkp5Gzzy3TirZZjCaIukJQQJ8g7jeNAi8fp4vHRv1uGzER3j41yQ3wp7Tw5cvhvPSV3etsEWiIsySEQ8eHqJ7DU15J2GA28v69dxj5hyggqIbGMJsf</msg>
<status status="PASS" starttime="20250227 16:35:38.196" endtime="20250227 16:35:38.197"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:38.200" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="SXkLkWmJPsBlqZ4bkp5Gzzy3TirZZjCaIukJQQJ8g7jeNAi8fp4vHRv1uGzER3j41yQ3wp7Tw5cvhvPSV3etsEWiIsySEQ8eHqJ7DU15J2GA28v69dxj5hyggqIbGMJsf=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:38.657" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:38.657" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250227 16:35:38.198" endtime="20250227 16:35:38.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:38.658" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250227 16:35:38.657" endtime="20250227 16:35:38.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:38.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:38.658" endtime="20250227 16:35:38.658"/>
</kw>
<msg timestamp="20250227 16:35:38.658" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250227 16:35:38.197" endtime="20250227 16:35:38.659"/>
</kw>
<msg timestamp="20250227 16:35:38.659" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250227 16:35:38.197" endtime="20250227 16:35:38.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:38.659" endtime="20250227 16:35:38.659"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:35:38.659" level="INFO">${long_tag_value} = bLABCvdEqLonSsWl0qKLlsojmd2a6twmIbR7EHsnfnVV499M8gh25KVfeK67PRod8bOupWdmKJ1aUZ5s6nryQwXMZ91rZJS6i9jDl95EU5R4l4jErkwP11W49C94itus2EDTvAgT07eracpssr4TUt71pSmjo7T2oCyvsgikB4GVdG4DRKPGey8WXINLTosWHwKqnd0C...</msg>
<status status="PASS" starttime="20250227 16:35:38.659" endtime="20250227 16:35:38.660"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:38.663" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=bLABCvdEqLonSsWl0qKLlsojmd2a6twmIbR7EHsnfnVV499M8gh25KVfeK67PRod8bOupWdmKJ1aUZ5s6nryQwXMZ91rZJS6i9jDl95EU5R4l4jErkwP11W49C94itus2EDTvAgT07eracpssr4TUt71pSmjo7T2oCyvsgikB4GVdG4DRKPGey8WXINLTosWHwKqnd0COpVMMeSQigXO83g7QS0QJN0ZXoQGTD3QnpiGXmgoO9OZEZTA4WnTqJOUX" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:39.127" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:39.127" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250227 16:35:38.660" endtime="20250227 16:35:39.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:39.128" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250227 16:35:39.127" endtime="20250227 16:35:39.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:39.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:39.128" endtime="20250227 16:35:39.128"/>
</kw>
<msg timestamp="20250227 16:35:39.128" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250227 16:35:38.660" endtime="20250227 16:35:39.128"/>
</kw>
<msg timestamp="20250227 16:35:39.128" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250227 16:35:38.660" endtime="20250227 16:35:39.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:39.129" endtime="20250227 16:35:39.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:37.731" endtime="20250227 16:35:39.129"/>
</test>
<test id="s1-s14-t16" name="Create files with too many tags" line="210">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:39.133" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250227 16:35:39.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:39.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:39.131" endtime="20250227 16:35:39.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:39.135" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:39.135" endtime="20250227 16:35:39.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:39.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:39.136" endtime="20250227 16:35:39.136"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.130" endtime="20250227 16:35:39.136"/>
</kw>
<msg timestamp="20250227 16:35:39.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:39.130" endtime="20250227 16:35:39.136"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.130" endtime="20250227 16:35:39.136"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250227 16:35:39.137" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20250227 16:35:39.136" endtime="20250227 16:35:39.137"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.137" endtime="20250227 16:35:39.137"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.137" endtime="20250227 16:35:39.137"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.137" endtime="20250227 16:35:39.138"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.137" endtime="20250227 16:35:39.138"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.138" endtime="20250227 16:35:39.138"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.138" endtime="20250227 16:35:39.138"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.138" endtime="20250227 16:35:39.139"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.138" endtime="20250227 16:35:39.139"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.139" endtime="20250227 16:35:39.139"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.139" endtime="20250227 16:35:39.139"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.139" endtime="20250227 16:35:39.140"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.139" endtime="20250227 16:35:39.140"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.140" endtime="20250227 16:35:39.140"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.140" endtime="20250227 16:35:39.140"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.140" endtime="20250227 16:35:39.140"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.140" endtime="20250227 16:35:39.141"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.141" endtime="20250227 16:35:39.141"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.141" endtime="20250227 16:35:39.141"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.141" endtime="20250227 16:35:39.141"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.141" endtime="20250227 16:35:39.142"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250227 16:35:39.142" endtime="20250227 16:35:39.142"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.142" endtime="20250227 16:35:39.142"/>
</iter>
<status status="PASS" starttime="20250227 16:35:39.137" endtime="20250227 16:35:39.142"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250227 16:35:39.142" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20250227 16:35:39.142" endtime="20250227 16:35:39.142"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:39.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:39.608" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:39.608" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250227 16:35:39.143" endtime="20250227 16:35:39.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:39.609" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250227 16:35:39.609" endtime="20250227 16:35:39.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:39.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:39.609" endtime="20250227 16:35:39.610"/>
</kw>
<msg timestamp="20250227 16:35:39.610" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250227 16:35:39.143" endtime="20250227 16:35:39.610"/>
</kw>
<msg timestamp="20250227 16:35:39.610" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250227 16:35:39.142" endtime="20250227 16:35:39.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:39.610" endtime="20250227 16:35:39.610"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:39.129" endtime="20250227 16:35:39.610"/>
</test>
<test id="s1-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="221">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:39.614" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20250227 16:35:39.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:39.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:39.612" endtime="20250227 16:35:39.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:39.622" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:39.621" endtime="20250227 16:35:39.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:39.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:39.622" endtime="20250227 16:35:39.622"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.612" endtime="20250227 16:35:39.622"/>
</kw>
<msg timestamp="20250227 16:35:39.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:39.611" endtime="20250227 16:35:39.622"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.611" endtime="20250227 16:35:39.623"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:39.625" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:39.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:39.630" level="INFO">${output} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:39.623" endtime="20250227 16:35:39.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:39.631" level="INFO">22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:39.631" endtime="20250227 16:35:39.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:39.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:39.631" endtime="20250227 16:35:39.631"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.623" endtime="20250227 16:35:39.631"/>
</kw>
<msg timestamp="20250227 16:35:39.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:39.623" endtime="20250227 16:35:39.632"/>
</kw>
<msg timestamp="20250227 16:35:39.632" level="INFO">${file_md5_checksum} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:39.623" endtime="20250227 16:35:39.632"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:39.635" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:40.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:40.126" level="INFO">${output} = 2025-02-27 16:35:39,927 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:39,927 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:39.633" endtime="20250227 16:35:40.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:40.127" level="INFO">2025-02-27 16:35:39,927 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:39,927 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://bucket-diiacmavow']
2025-02-27 16:35:39,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f158f434820&gt;
2025-02-27 16:35:39,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f158fd1fc10&gt;
2025-02-27 16:35:39,927 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f158fa10e50&gt;
2025-02-27 16:35:39,929 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:39,931 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f158f4a14c0&gt;
2025-02-27 16:35:39,931 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f158f3e6820&gt;
2025-02-27 16:35:39,931 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f158f4b8310&gt;
2025-02-27 16:35:39,931 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,932 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f158f3e6820&gt;
2025-02-27 16:35:39,932 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f158f4b8310&gt;
2025-02-27 16:35:39,933 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,933 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,933 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,934 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,935 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f158f9dec70&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,936 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f158f33f4c0&gt;
2025-02-27 16:35:39,937 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:39,937 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:39,938 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:39,960 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:39,960 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1590f569d0&gt;
2025-02-27 16:35:39,966 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:39,975 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:39,994 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:39,997 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:39,999 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1590058a60&gt;
2025-02-27 16:35:39,999 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1590058820&gt;
2025-02-27 16:35:39,999 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,002 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,004 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:40,004 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,004 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,005 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,005 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,005 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1590f569d0&gt;
2025-02-27 16:35:40,006 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1590058a60&gt;
2025-02-27 16:35:40,006 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1590058820&gt;
2025-02-27 16:35:40,006 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,008 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,009 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,009 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,010 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,010 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,010 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1590f569d0&gt;
2025-02-27 16:35:40,011 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1590058a60&gt;
2025-02-27 16:35:40,011 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1590058820&gt;
2025-02-27 16:35:40,011 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,013 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,014 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,015 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,015 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,015 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,015 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:40,016 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:40,016 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f158e76f820&gt;}) about to wait for the following futures []
2025-02-27 16:35:40,017 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f158e76f820&gt;}) done waiting for dependent futures
2025-02-27 16:35:40,017 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f158e76f820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f158e8c28e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f158e767dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f158e767e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f158e76c0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f158e76f820&gt;}
2025-02-27 16:35:40,017 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f158e76c0d0&gt; for transfer request: 0.
2025-02-27 16:35:40,017 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f158e8c28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f158e7080d0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f158ffa34c0&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f158ff9f8b0&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f158ffa3dc0&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f158ff9f820&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f158ffa6700&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f158e89d820&gt;&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f158e9226d0&gt;&gt;
2025-02-27 16:35:40,018 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f158ff9f670&gt;
2025-02-27 16:35:40,019 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f158ffa68b0&gt;
2025-02-27 16:35:40,019 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f158e89d820&gt;&gt;
2025-02-27 16:35:40,019 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:40,020 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:40,020 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:40,020 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:40,020 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f1590114790&gt;
2025-02-27 16:35:40,020 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f158ff9fb80&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f158e89d7f0&gt;&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f158ff9f280&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f158ffa6d30&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f158ffa3ee0&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'Iss0zLd2bAZicNgyi6EdNw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f158e7080d0&gt;, 'auth_path': '/bucket-diiacmavow/small_file', 'url': 'http://s3g:9878/bucket-diiacmavow/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f158e8c2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f158e7080d0&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f158f6db790&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f158e8c29d0&gt;&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f158ff9f4c0&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f158ffa6820&gt;
2025-02-27 16:35:40,023 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f158e89d7f0&gt;&gt;
2025-02-27 16:35:40,024 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:40,024 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/small_file

content-md5:Iss0zLd2bAZicNgyi6EdNw==
host:s3g:9878
x-amz-content-sha256:351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571
x-amz-date:20250227T163540Z

content-md5;host;x-amz-content-sha256;x-amz-date
351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571
2025-02-27 16:35:40,024 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163540Z
20250227/us-west-1/s3/aws4_request
93bd7e035f877a1a52900629c050463a90c44060d925e5bd368b36bfc467d3f2
2025-02-27 16:35:40,025 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
600162318ca05fd6d13b89bd9baa0aff0cfc314a39b6d2724815c67725fb1ad0
2025-02-27 16:35:40,025 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f158f6db820&gt;
2025-02-27 16:35:40,025 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f158ffa6670&gt;
2025-02-27 16:35:40,025 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'Iss0zLd2bAZicNgyi6EdNw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163540Z', 'X-Amz-Content-SHA256': b'351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=600162318ca05fd6d13b89bd9baa0aff0cfc314a39b6d2724815c67725fb1ad0', 'amz-sdk-invocation-id': b'ec34f80d-7650-441f-918d-629380d047d1', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-27 16:35:40,025 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:40,026 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:40,040 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (10.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (19.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (27.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,079 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/small_file HTTP/1.1" 200 0
2025-02-27 16:35:40,080 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f158ffa6b80&gt;
2025-02-27 16:35:40,080 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f158ffa69d0&gt;
2025-02-27 16:35:40,080 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Server': 'Ozone', 'x-amz-id-2': 'ziy68TqWxDvx', 'x-amz-request-id': '24327564-2326-482f-b4c0-dbe8c1e31d1e', 'Content-Length': '0'}
2025-02-27 16:35:40,080 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f158ffa6ca0&gt;
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f158e89d760&gt;
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f158e89d820&gt;&gt;
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f158f430d30&gt;
Completed 976.6 KiB/976.6 KiB (15.0 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,081 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://bucket-diiacmavow/small_file  
2025-02-27 16:35:40,082 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:40.126" endtime="20250227 16:35:40.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:40.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:40.127" endtime="20250227 16:35:40.127"/>
</kw>
<status status="PASS" starttime="20250227 16:35:39.633" endtime="20250227 16:35:40.127"/>
</kw>
<msg timestamp="20250227 16:35:40.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:39.632" endtime="20250227 16:35:40.128"/>
</kw>
<msg timestamp="20250227 16:35:40.128" level="INFO">${output} = 2025-02-27 16:35:39,927 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:39,927 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:39.632" endtime="20250227 16:35:40.128"/>
</kw>
<msg timestamp="20250227 16:35:40.129" level="INFO">${result} = 2025-02-27 16:35:39,927 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:39,927 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:39.632" endtime="20250227 16:35:40.129"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:40.129" endtime="20250227 16:35:40.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:39.611" endtime="20250227 16:35:40.130"/>
</test>
<test id="s1-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="228">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:40.134" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:40.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:40.139" level="INFO">${output} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:40.132" endtime="20250227 16:35:40.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:40.140" level="INFO">22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:40.139" endtime="20250227 16:35:40.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:40.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:40.140" endtime="20250227 16:35:40.140"/>
</kw>
<status status="PASS" starttime="20250227 16:35:40.131" endtime="20250227 16:35:40.140"/>
</kw>
<msg timestamp="20250227 16:35:40.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:40.131" endtime="20250227 16:35:40.140"/>
</kw>
<msg timestamp="20250227 16:35:40.141" level="INFO">${file_md5_checksum} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:40.131" endtime="20250227 16:35:40.141"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:40.144" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://bucket-diiacmavow/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:40.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:40.624" level="INFO">${output} = 2025-02-27 16:35:40,443 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:40,443 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:40.142" endtime="20250227 16:35:40.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:40.625" level="INFO">2025-02-27 16:35:40,443 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:40,443 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://bucket-diiacmavow/small_file', '/tmp/small_file_downloaded']
2025-02-27 16:35:40,443 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa41f881820&gt;
2025-02-27 16:35:40,443 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa42016cc10&gt;
2025-02-27 16:35:40,443 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa41fe5ee50&gt;
2025-02-27 16:35:40,445 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:40,447 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa41f8ef4c0&gt;
2025-02-27 16:35:40,447 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa41f833820&gt;
2025-02-27 16:35:40,447 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fa41f906310&gt;
2025-02-27 16:35:40,447 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,447 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa41f833820&gt;
2025-02-27 16:35:40,448 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fa41f906310&gt;
2025-02-27 16:35:40,449 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,449 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,449 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,449 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,450 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,451 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa41fe2dc70&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,452 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa41f78c4c0&gt;
2025-02-27 16:35:40,453 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:40,453 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:40,455 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:40,476 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:40,477 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4213a29d0&gt;
2025-02-27 16:35:40,483 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:40,491 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:40,511 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:40,514 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:40,516 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4204a5a60&gt;
2025-02-27 16:35:40,516 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4204a5820&gt;
2025-02-27 16:35:40,516 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,519 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,521 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:40,521 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,521 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,522 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,522 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,522 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4213a29d0&gt;
2025-02-27 16:35:40,523 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4204a5a60&gt;
2025-02-27 16:35:40,523 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4204a5820&gt;
2025-02-27 16:35:40,523 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,525 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,526 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,527 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,527 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,527 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,527 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4213a29d0&gt;
2025-02-27 16:35:40,528 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4204a5a60&gt;
2025-02-27 16:35:40,528 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4204a5820&gt;
2025-02-27 16:35:40,528 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,530 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:40,532 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:40,532 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:40,532 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:40,532 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:40,533 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fa4203ec8b0&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fa4203ec820&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4203f3700&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ebdaa30&gt;&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa41ec6a940&gt;&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa4203ec670&gt;
2025-02-27 16:35:40,533 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4203f38b0&gt;
2025-02-27 16:35:40,534 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ebdaa30&gt;&gt;
2025-02-27 16:35:40,534 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:40,535 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:40,535 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:40,535 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:40,535 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fa4203ecb80&gt;
2025-02-27 16:35:40,535 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa41ebdaa00&gt;&gt;
2025-02-27 16:35:40,535 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fa4203ec280&gt;
2025-02-27 16:35:40,535 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7fa4203f3d30&gt;
2025-02-27 16:35:40,535 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4203f0ee0&gt;
2025-02-27 16:35:40,535 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/small_file', 'url': 'http://s3g:9878/bucket-diiacmavow/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa41ec07ca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:40,536 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa41ec07c10&gt;&gt;
2025-02-27 16:35:40,536 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fa4203ec4c0&gt;
2025-02-27 16:35:40,536 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4203f3820&gt;
2025-02-27 16:35:40,536 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa41ebdaa00&gt;&gt;
2025-02-27 16:35:40,536 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:40,536 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/bucket-diiacmavow/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163540Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:40,536 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163540Z
20250227/us-west-1/s3/aws4_request
4b2bcb49f495bea761e62f78af336cbd6741a3064f1730f29992bf4be2ab727f
2025-02-27 16:35:40,536 - MainThread - botocore.auth - DEBUG - Signature:
f10407d784c655bf3d345813d5602dc0734a90bacda7e12be08bcdf58ecb2ec4
2025-02-27 16:35:40,536 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fa4203f3670&gt;
2025-02-27 16:35:40,536 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/bucket-diiacmavow/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163540Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f10407d784c655bf3d345813d5602dc0734a90bacda7e12be08bcdf58ecb2ec4', 'amz-sdk-invocation-id': b'54134e6b-bd4c-49cd-92ab-d1c2ab6bce32', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:40,537 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:40,544 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /bucket-diiacmavow/small_file HTTP/1.1" 200 0
2025-02-27 16:35:40,545 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fa4203f3b80&gt;
2025-02-27 16:35:40,545 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7fa4203f39d0&gt;
2025-02-27 16:35:40,545 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'Ma6SCj9pfo01MH', 'x-amz-request-id': 'e67a6dfb-1e5a-40e9-b2b0-9322c1d4881f', 'Content-Length': '1000000'}
2025-02-27 16:35:40,545 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:40,546 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7fa4203f3ca0&gt;
2025-02-27 16:35:40,546 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa41ebda970&gt;
2025-02-27 16:35:40,546 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:40,546 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ebdaa30&gt;&gt;
2025-02-27 16:35:40,546 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fa41f87ed30&gt;
2025-02-27 16:35:40,547 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:40,548 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;}) about to wait for the following futures []
2025-02-27 16:35:40,548 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;}) done waiting for dependent futures
2025-02-27 16:35:40,548 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa41ec908e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa41ebdadc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa41ebdae50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa41ebde0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa41ebde190&gt;}
2025-02-27 16:35:40,548 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa41ebde0d0&gt; for transfer request: 0.
2025-02-27 16:35:40,548 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:40,549 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa41ec908e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa41ebe2e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa41ebe2eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa41eb8d190&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa41eb8d310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa41eb8d8b0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa41eb8dd30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa4203ec8b0&gt;
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa4203ec820&gt;
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4203f3700&gt;
2025-02-27 16:35:40,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ec6a820&gt;&gt;
2025-02-27 16:35:40,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa41ecef730&gt;&gt;
2025-02-27 16:35:40,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa4203ec670&gt;
2025-02-27 16:35:40,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4203f38b0&gt;
2025-02-27 16:35:40,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ec6a820&gt;&gt;
2025-02-27 16:35:40,550 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa4203ecb80&gt;
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa41ec6a7f0&gt;&gt;
2025-02-27 16:35:40,551 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa4203ec280&gt;
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7fa4203f3d30&gt;
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4203f0ee0&gt;
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/small_file', 'url': 'http://s3g:9878/bucket-diiacmavow/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa41ec90a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa41fb28790&gt;
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa41ec909d0&gt;&gt;
2025-02-27 16:35:40,552 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa4203ec4c0&gt;
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4203f3820&gt;
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa41ec6a7f0&gt;&gt;
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/bucket-diiacmavow/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163540Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163540Z
20250227/us-west-1/s3/aws4_request
9287a41847ac8b61f2e03d5f1d60a9fa88de66498a72440d76df37ea20b29bd8
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
11946a39420587b01e0ff31718b0b5eb80e7b6f2644853ac9691c769293fd31d
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa41fb28820&gt;
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa4203f3670&gt;
2025-02-27 16:35:40,553 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/bucket-diiacmavow/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163540Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=11946a39420587b01e0ff31718b0b5eb80e7b6f2644853ac9691c769293fd31d', 'amz-sdk-invocation-id': b'7a962087-4406-45e7-b1ab-06426806e9ac', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:40,554 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:40,570 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /bucket-diiacmavow/small_file HTTP/1.1" 200 1000000
2025-02-27 16:35:40,571 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7fa4203f3b80&gt;
2025-02-27 16:35:40,571 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7fa4203f39d0&gt;
2025-02-27 16:35:40,571 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:40 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'MKcjiCFuCwdyaYn', 'x-amz-request-id': 'f80a6c21-cd70-4031-a1d5-0dcd0ffba816', 'Content-Length': '1000000'}
2025-02-27 16:35:40,571 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa41eb59c10&gt;
2025-02-27 16:35:40,572 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7fa4203f3ca0&gt;
2025-02-27 16:35:40,572 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa41ec6a760&gt;
2025-02-27 16:35:40,572 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:40,572 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa41ec6a820&gt;&gt;
2025-02-27 16:35:40,572 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa41f87ed30&gt;
2025-02-27 16:35:40,573 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-27 16:35:40,573 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-27 16:35:40,573 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (10.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,574 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-27 16:35:40,574 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
Completed 512.0 KiB/976.6 KiB (19.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,575 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'offset': 262144}
2025-02-27 16:35:40,575 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-27 16:35:40,575 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-27 16:35:40,575 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (28.2 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (35.2 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2025-02-27 16:35:40,576 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa41eb8de50&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa41ebdae50&gt;}
2025-02-27 16:35:40,577 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://bucket-diiacmavow/small_file to ../../tmp/small_file_downloaded
2025-02-27 16:35:40,577 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:40.624" endtime="20250227 16:35:40.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:40.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:40.626" endtime="20250227 16:35:40.626"/>
</kw>
<status status="PASS" starttime="20250227 16:35:40.142" endtime="20250227 16:35:40.626"/>
</kw>
<msg timestamp="20250227 16:35:40.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:40.141" endtime="20250227 16:35:40.626"/>
</kw>
<msg timestamp="20250227 16:35:40.627" level="INFO">${output} = 2025-02-27 16:35:40,443 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:40,443 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:40.141" endtime="20250227 16:35:40.627"/>
</kw>
<msg timestamp="20250227 16:35:40.627" level="INFO">${result} = 2025-02-27 16:35:40,443 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:40,443 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:40.141" endtime="20250227 16:35:40.627"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:40.628" endtime="20250227 16:35:40.628"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:35:40.628" endtime="20250227 16:35:40.629"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:40.632" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:41.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:41.069" level="INFO">${output} = delete: s3://bucket-diiacmavow/small_file</msg>
<status status="PASS" starttime="20250227 16:35:40.630" endtime="20250227 16:35:41.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:41.070" level="INFO">delete: s3://bucket-diiacmavow/small_file</msg>
<status status="PASS" starttime="20250227 16:35:41.070" endtime="20250227 16:35:41.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:41.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:41.070" endtime="20250227 16:35:41.071"/>
</kw>
<status status="PASS" starttime="20250227 16:35:40.630" endtime="20250227 16:35:41.071"/>
</kw>
<msg timestamp="20250227 16:35:41.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:40.630" endtime="20250227 16:35:41.071"/>
</kw>
<msg timestamp="20250227 16:35:41.071" level="INFO">${output} = delete: s3://bucket-diiacmavow/small_file</msg>
<status status="PASS" starttime="20250227 16:35:40.630" endtime="20250227 16:35:41.071"/>
</kw>
<status status="PASS" starttime="20250227 16:35:40.629" endtime="20250227 16:35:41.071"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:41.074" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:41.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:41.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:41.072" endtime="20250227 16:35:41.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:41.079" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:41.078" endtime="20250227 16:35:41.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:41.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:41.079" endtime="20250227 16:35:41.079"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.072" endtime="20250227 16:35:41.079"/>
</kw>
<msg timestamp="20250227 16:35:41.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:41.072" endtime="20250227 16:35:41.080"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.071" endtime="20250227 16:35:41.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:40.130" endtime="20250227 16:35:41.080"/>
</test>
<test id="s1-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="237">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:41.084" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:41.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:41.089" level="INFO">${output} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:41.082" endtime="20250227 16:35:41.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:41.090" level="INFO">22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:41.089" endtime="20250227 16:35:41.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:41.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:41.090" endtime="20250227 16:35:41.090"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.082" endtime="20250227 16:35:41.090"/>
</kw>
<msg timestamp="20250227 16:35:41.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:41.081" endtime="20250227 16:35:41.091"/>
</kw>
<msg timestamp="20250227 16:35:41.091" level="INFO">${file_md5_checksum} = 22cb34ccb7766c066270d8328ba11d37</msg>
<status status="PASS" starttime="20250227 16:35:41.081" endtime="20250227 16:35:41.091"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:41.094" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://bucket-diiacmavow/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:41.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:41.588" level="INFO">${output} = 2025-02-27 16:35:41,392 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,392 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:41.092" endtime="20250227 16:35:41.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:41.589" level="INFO">2025-02-27 16:35:41,392 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,392 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://bucket-diiacmavow/test_file']
2025-02-27 16:35:41,392 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f6a784b5820&gt;
2025-02-27 16:35:41,392 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f6a78da0c10&gt;
2025-02-27 16:35:41,392 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f6a78a92e50&gt;
2025-02-27 16:35:41,394 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:41,396 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f6a785234c0&gt;
2025-02-27 16:35:41,396 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f6a78467820&gt;
2025-02-27 16:35:41,396 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f6a7853a310&gt;
2025-02-27 16:35:41,397 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,397 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f6a78467820&gt;
2025-02-27 16:35:41,397 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f6a7853a310&gt;
2025-02-27 16:35:41,398 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,398 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,398 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,399 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,400 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,401 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,402 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,402 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6a78a61c70&gt;
2025-02-27 16:35:41,402 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2025-02-27 16:35:41,402 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,402 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,402 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6a783c04c0&gt;
2025-02-27 16:35:41,402 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:41,402 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:41,404 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:41,425 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:41,425 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6a79fd69d0&gt;
2025-02-27 16:35:41,432 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:41,440 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:41,459 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:41,462 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:41,464 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6a790d9a60&gt;
2025-02-27 16:35:41,464 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6a790d9820&gt;
2025-02-27 16:35:41,464 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,467 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,469 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:41,469 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,469 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,470 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,470 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,470 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6a79fd69d0&gt;
2025-02-27 16:35:41,471 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6a790d9a60&gt;
2025-02-27 16:35:41,471 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6a790d9820&gt;
2025-02-27 16:35:41,471 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,473 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,474 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,475 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,475 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,475 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,475 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6a79fd69d0&gt;
2025-02-27 16:35:41,476 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6a790d9a60&gt;
2025-02-27 16:35:41,476 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6a790d9820&gt;
2025-02-27 16:35:41,476 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,478 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,480 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,480 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,480 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,480 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,481 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:41,482 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:41,482 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6a7781a880&gt;}) about to wait for the following futures []
2025-02-27 16:35:41,482 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6a7781a880&gt;}) done waiting for dependent futures
2025-02-27 16:35:41,482 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6a7781a880&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6a778c7940&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f6a77811e20&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6a77811eb0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6a77817130&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6a7781a880&gt;}
2025-02-27 16:35:41,483 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6a77817130&gt; for transfer request: 0.
2025-02-27 16:35:41,483 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:41,483 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2025-02-27 16:35:41,483 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2025-02-27 16:35:41,483 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6a778c7940&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6a777b0130&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2025-02-27 16:35:41,483 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f6a790244c0&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f6a790208b0&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f6a79024dc0&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f6a79020820&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6a79027700&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6a778a0880&gt;&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f6a778a7730&gt;&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f6a79020670&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f6a790278b0&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6a778a0880&gt;&gt;
2025-02-27 16:35:41,484 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:41,485 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:41,485 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:41,485 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:41,486 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f6a79195790&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f6a79020b80&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6a778a0850&gt;&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f6a79020280&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f6a79027d30&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6a79024ee0&gt;
2025-02-27 16:35:41,488 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'Iss0zLd2bAZicNgyi6EdNw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6a777b0130&gt;, 'auth_path': '/bucket-diiacmavow/test_file', 'url': 'http://s3g:9878/bucket-diiacmavow/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6a778c7ac0&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6a777b0130&gt;, 'Metadata': {'ETag': 'custom-etag-value'}}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:41,489 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f6a7875b790&gt;
2025-02-27 16:35:41,489 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6a778c7a30&gt;&gt;
2025-02-27 16:35:41,489 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f6a790204c0&gt;
2025-02-27 16:35:41,489 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f6a79027820&gt;
2025-02-27 16:35:41,489 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6a778a0850&gt;&gt;
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/test_file

content-md5:Iss0zLd2bAZicNgyi6EdNw==
host:s3g:9878
x-amz-content-sha256:351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571
x-amz-date:20250227T163541Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163541Z
20250227/us-west-1/s3/aws4_request
91fdbf3d359b3ffe0691018b0915b8a3b885450334f24fa3d3205e713a45c79a
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
88056d1cd3043b29b025957497e290f9ebeb55835cd616337e282f6494d5cc33
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f6a7875b820&gt;
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f6a79027670&gt;
2025-02-27 16:35:41,490 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'Iss0zLd2bAZicNgyi6EdNw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163541Z', 'X-Amz-Content-SHA256': b'351ff1bb9002fa27e150abfa29aafbffd220eb74d6759cb2238f97ba0a670571', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=88056d1cd3043b29b025957497e290f9ebeb55835cd616337e282f6494d5cc33', 'amz-sdk-invocation-id': b'cb7e146c-eddb-4aaf-82c7-a1647c474d57', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-27 16:35:41,491 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:41,492 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:41,505 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (10.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (20.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (29.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:41,539 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/test_file HTTP/1.1" 200 0
2025-02-27 16:35:41,540 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f6a79027b80&gt;
2025-02-27 16:35:41,540 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f6a790279d0&gt;
2025-02-27 16:35:41,540 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Server': 'Ozone', 'x-amz-id-2': 'iEIhfnKcuMOY', 'x-amz-request-id': 'd2319f17-90a8-49c9-9a1e-8a01009670a2', 'Content-Length': '0'}
2025-02-27 16:35:41,540 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f6a79027ca0&gt;
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6a778a07c0&gt;
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6a778a0880&gt;&gt;
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f6a784b2d30&gt;
Completed 976.6 KiB/976.6 KiB (16.4 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:41,541 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://bucket-diiacmavow/test_file   
2025-02-27 16:35:41,541 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:41.588" endtime="20250227 16:35:41.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:41.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:41.589" endtime="20250227 16:35:41.590"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.092" endtime="20250227 16:35:41.590"/>
</kw>
<msg timestamp="20250227 16:35:41.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:41.091" endtime="20250227 16:35:41.590"/>
</kw>
<msg timestamp="20250227 16:35:41.591" level="INFO">${output} = 2025-02-27 16:35:41,392 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,392 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:41.091" endtime="20250227 16:35:41.591"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.091" endtime="20250227 16:35:41.591"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:41.594" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://bucket-diiacmavow/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:42.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:42.084" level="INFO">${output} = 2025-02-27 16:35:41,893 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,893 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:41.592" endtime="20250227 16:35:42.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:42.085" level="INFO">2025-02-27 16:35:41,893 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,893 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://bucket-diiacmavow/test_file', '/tmp/test_file_downloaded']
2025-02-27 16:35:41,893 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fcc057a9820&gt;
2025-02-27 16:35:41,893 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fcc06094c10&gt;
2025-02-27 16:35:41,894 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fcc05d86e50&gt;
2025-02-27 16:35:41,895 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:41,897 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fcc058174c0&gt;
2025-02-27 16:35:41,897 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fcc0575b820&gt;
2025-02-27 16:35:41,897 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fcc0582e310&gt;
2025-02-27 16:35:41,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,898 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fcc0575b820&gt;
2025-02-27 16:35:41,898 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fcc0582e310&gt;
2025-02-27 16:35:41,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,901 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcc05d55c70&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,902 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcc056b44c0&gt;
2025-02-27 16:35:41,903 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:41,903 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:41,905 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:41,929 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:41,929 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcc072ca9d0&gt;
2025-02-27 16:35:41,935 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:41,943 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:41,963 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:41,965 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:41,967 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcc063cda60&gt;
2025-02-27 16:35:41,967 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcc063cd820&gt;
2025-02-27 16:35:41,968 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,971 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,972 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:41,973 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,973 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,973 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,973 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,974 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcc072ca9d0&gt;
2025-02-27 16:35:41,975 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcc063cda60&gt;
2025-02-27 16:35:41,975 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcc063cd820&gt;
2025-02-27 16:35:41,975 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,977 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,978 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,978 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,979 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,979 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,979 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcc072ca9d0&gt;
2025-02-27 16:35:41,980 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcc063cda60&gt;
2025-02-27 16:35:41,980 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcc063cd820&gt;
2025-02-27 16:35:41,980 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,982 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:41,983 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:41,983 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:41,984 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:41,984 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:41,984 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fcc063148b0&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fcc06314820&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fcc0631b700&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04ae8a30&gt;&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fcc04c92940&gt;&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fcc06314670&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fcc0631b8b0&gt;
2025-02-27 16:35:41,985 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04ae8a30&gt;&gt;
2025-02-27 16:35:41,986 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:41,986 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:41,986 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:41,986 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fcc06314b80&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcc04ae8a00&gt;&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fcc06314280&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7fcc0631bd30&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fcc06318ee0&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/test_file', 'url': 'http://s3g:9878/bucket-diiacmavow/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fcc04c2fca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fcc04c2fc10&gt;&gt;
2025-02-27 16:35:41,987 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fcc063144c0&gt;
2025-02-27 16:35:41,988 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fcc0631b820&gt;
2025-02-27 16:35:41,988 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcc04ae8a00&gt;&gt;
2025-02-27 16:35:41,988 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:41,988 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/bucket-diiacmavow/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163541Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:41,988 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163541Z
20250227/us-west-1/s3/aws4_request
83518789a845bfe95247629aaf0e7e861a1e5a70445e7753772739a8efca97ec
2025-02-27 16:35:41,988 - MainThread - botocore.auth - DEBUG - Signature:
2ba4e9a2a10900a88bb479ca3fe85a22eea22f74165809016956611cc8c87d20
2025-02-27 16:35:41,988 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fcc0631b670&gt;
2025-02-27 16:35:41,988 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/bucket-diiacmavow/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163541Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=2ba4e9a2a10900a88bb479ca3fe85a22eea22f74165809016956611cc8c87d20', 'amz-sdk-invocation-id': b'5e67b7ec-36ea-478e-aab5-e5f3faee262e', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:41,989 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:41,996 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /bucket-diiacmavow/test_file HTTP/1.1" 200 0
2025-02-27 16:35:41,996 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fcc0631bb80&gt;
2025-02-27 16:35:41,997 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7fcc0631b9d0&gt;
2025-02-27 16:35:41,997 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:41 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'sJ5WCaxei4Ah2', 'x-amz-request-id': 'e65d759e-606e-4cd3-b8be-00ce014d27e5', 'Content-Length': '1000000'}
2025-02-27 16:35:41,997 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:41,998 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7fcc0631bca0&gt;
2025-02-27 16:35:41,998 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fcc04ae8970&gt;
2025-02-27 16:35:41,998 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:41,998 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04ae8a30&gt;&gt;
2025-02-27 16:35:41,998 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fcc057a6d30&gt;
2025-02-27 16:35:41,999 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,000 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;}) about to wait for the following futures []
2025-02-27 16:35:42,000 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;}) done waiting for dependent futures
2025-02-27 16:35:42,000 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fcc04cb88e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fcc04ae8dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fcc04ae8e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fcc04aec0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fcc04aec190&gt;}
2025-02-27 16:35:42,000 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fcc04aec0d0&gt; for transfer request: 0.
2025-02-27 16:35:42,000 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fcc04cb88e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fcc04af0e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fcc04af0eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fcc04a9b190&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fcc04a9b310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fcc04a9b850&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fcc04a9bd30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fcc063148b0&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fcc06314820&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fcc0631b700&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04c92820&gt;&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fcc04d17730&gt;&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fcc06314670&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fcc0631b8b0&gt;
2025-02-27 16:35:42,001 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04c92820&gt;&gt;
2025-02-27 16:35:42,002 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:42,002 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:42,002 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:42,002 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fcc06314b80&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcc04c927f0&gt;&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fcc06314280&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7fcc0631bd30&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fcc06318ee0&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/test_file', 'url': 'http://s3g:9878/bucket-diiacmavow/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fcc04cb8a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fcc05a4f790&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fcc04cb89d0&gt;&gt;
2025-02-27 16:35:42,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fcc063144c0&gt;
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fcc0631b820&gt;
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcc04c927f0&gt;&gt;
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/bucket-diiacmavow/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163542Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163542Z
20250227/us-west-1/s3/aws4_request
746e7f1525b835f85a16cee1634a1a12838e31de67d3f578291ee3c8c2dc23ea
2025-02-27 16:35:42,004 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e8d6ae3fd739c657bdb92c885b8a272885261c29ff4db923fe88d8e2d5b35688
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fcc05a4f820&gt;
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fcc0631b670&gt;
2025-02-27 16:35:42,004 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/bucket-diiacmavow/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163542Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e8d6ae3fd739c657bdb92c885b8a272885261c29ff4db923fe88d8e2d5b35688', 'amz-sdk-invocation-id': b'2c5d2aba-b3e6-4a7c-b261-4a8d3694c2c4', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:42,005 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:42,025 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /bucket-diiacmavow/test_file HTTP/1.1" 200 1000000
2025-02-27 16:35:42,025 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7fcc0631bb80&gt;
2025-02-27 16:35:42,025 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7fcc0631b9d0&gt;
2025-02-27 16:35:42,026 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"22cb34ccb7766c066270d8328ba11d37"', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'VbqYM5y74N0', 'x-amz-request-id': '3de8fe7c-dc01-4945-ad4e-da9a84fe67e5', 'Content-Length': '1000000'}
2025-02-27 16:35:42,026 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fcc04a66c10&gt;
2025-02-27 16:35:42,026 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7fcc0631bca0&gt;
2025-02-27 16:35:42,026 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fcc04c92760&gt;
2025-02-27 16:35:42,027 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:42,027 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcc04c92820&gt;&gt;
2025-02-27 16:35:42,027 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fcc057a6d30&gt;
2025-02-27 16:35:42,028 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (9.2 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:42,028 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-27 16:35:42,028 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'offset': 0}
2025-02-27 16:35:42,029 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (17.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:42,030 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-27 16:35:42,030 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'offset': 262144}
2025-02-27 16:35:42,030 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-27 16:35:42,030 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-27 16:35:42,030 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (25.2 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (31.4 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2025-02-27 16:35:42,031 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fcc04a9be50&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fcc04ae8e50&gt;}
2025-02-27 16:35:42,032 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://bucket-diiacmavow/test_file to ../../tmp/test_file_downloaded
2025-02-27 16:35:42,032 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:42.085" endtime="20250227 16:35:42.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:42.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:42.086" endtime="20250227 16:35:42.086"/>
</kw>
<status status="PASS" starttime="20250227 16:35:41.592" endtime="20250227 16:35:42.086"/>
</kw>
<msg timestamp="20250227 16:35:42.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:41.592" endtime="20250227 16:35:42.087"/>
</kw>
<msg timestamp="20250227 16:35:42.087" level="INFO">${output} = 2025-02-27 16:35:41,893 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,893 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:41.591" endtime="20250227 16:35:42.088"/>
</kw>
<msg timestamp="20250227 16:35:42.088" level="INFO">${result} = 2025-02-27 16:35:41,893 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:41,893 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:41.591" endtime="20250227 16:35:42.088"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250227 16:35:42.089" level="INFO">${match} = HEAD /bucket-diiacmavow/test_file HTTP/1.1" 200 0
2025-02-27 16:35:41,996 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fc...</msg>
<msg timestamp="20250227 16:35:42.089" level="INFO">${ETag} = 22cb34ccb7766c066270d8328ba11d37</msg>
<msg timestamp="20250227 16:35:42.089" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20250227 16:35:42.088" endtime="20250227 16:35:42.089"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:35:42.089" endtime="20250227 16:35:42.089"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:35:42.090" endtime="20250227 16:35:42.090"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:35:42.090" endtime="20250227 16:35:42.090"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:42.094" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:42.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:42.534" level="INFO">${output} = delete: s3://bucket-diiacmavow/test_file</msg>
<status status="PASS" starttime="20250227 16:35:42.092" endtime="20250227 16:35:42.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:42.535" level="INFO">delete: s3://bucket-diiacmavow/test_file</msg>
<status status="PASS" starttime="20250227 16:35:42.535" endtime="20250227 16:35:42.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:42.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:42.535" endtime="20250227 16:35:42.536"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.091" endtime="20250227 16:35:42.536"/>
</kw>
<msg timestamp="20250227 16:35:42.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:42.091" endtime="20250227 16:35:42.536"/>
</kw>
<msg timestamp="20250227 16:35:42.536" level="INFO">${output} = delete: s3://bucket-diiacmavow/test_file</msg>
<status status="PASS" starttime="20250227 16:35:42.091" endtime="20250227 16:35:42.536"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.090" endtime="20250227 16:35:42.536"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:42.539" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:42.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:42.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:42.537" endtime="20250227 16:35:42.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:42.544" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:42.544" endtime="20250227 16:35:42.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:42.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:42.544" endtime="20250227 16:35:42.545"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.537" endtime="20250227 16:35:42.545"/>
</kw>
<msg timestamp="20250227 16:35:42.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:42.537" endtime="20250227 16:35:42.545"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.536" endtime="20250227 16:35:42.545"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:42.548" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:42.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:42.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:42.546" endtime="20250227 16:35:42.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:42.552" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:42.552" endtime="20250227 16:35:42.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:42.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:42.552" endtime="20250227 16:35:42.553"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.545" endtime="20250227 16:35:42.553"/>
</kw>
<msg timestamp="20250227 16:35:42.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:42.545" endtime="20250227 16:35:42.553"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.545" endtime="20250227 16:35:42.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:41.080" endtime="20250227 16:35:42.553"/>
</test>
<test id="s1-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="250">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:42.557" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250227 16:35:42.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:42.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:42.555" endtime="20250227 16:35:42.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:42.601" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:42.600" endtime="20250227 16:35:42.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:42.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:42.601" endtime="20250227 16:35:42.601"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.555" endtime="20250227 16:35:42.601"/>
</kw>
<msg timestamp="20250227 16:35:42.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:42.554" endtime="20250227 16:35:42.602"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.554" endtime="20250227 16:35:42.602"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:42.605" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://bucket-diiacmavow/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:43.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:43.358" level="INFO">${output} = 2025-02-27 16:35:42,903 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:42,903 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:42.603" endtime="20250227 16:35:43.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:43.359" level="INFO">2025-02-27 16:35:42,903 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:42,903 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://bucket-diiacmavow/']
2025-02-27 16:35:42,903 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f8b3de74820&gt;
2025-02-27 16:35:42,903 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f8b3e75fc10&gt;
2025-02-27 16:35:42,903 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f8b3e451e50&gt;
2025-02-27 16:35:42,904 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:42,906 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f8b3dee24c0&gt;
2025-02-27 16:35:42,906 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f8b3de26820&gt;
2025-02-27 16:35:42,907 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f8b3def9310&gt;
2025-02-27 16:35:42,907 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,907 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f8b3de26820&gt;
2025-02-27 16:35:42,907 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f8b3def9310&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,909 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,910 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f8b3e420c70&gt;
2025-02-27 16:35:42,911 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f8b3dd7f4c0&gt;
2025-02-27 16:35:42,912 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:42,912 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:42,914 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:42,936 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:42,936 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f8b3f9959d0&gt;
2025-02-27 16:35:42,943 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:42,951 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:42,970 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:42,973 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:42,974 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f8b3ea98a60&gt;
2025-02-27 16:35:42,974 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f8b3ea98820&gt;
2025-02-27 16:35:42,975 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,978 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:42,979 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:42,980 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:42,980 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:42,980 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,980 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:42,981 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f8b3f9959d0&gt;
2025-02-27 16:35:42,981 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f8b3ea98a60&gt;
2025-02-27 16:35:42,981 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f8b3ea98820&gt;
2025-02-27 16:35:42,982 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,983 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:42,985 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:42,985 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:42,985 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,985 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:42,985 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f8b3f9959d0&gt;
2025-02-27 16:35:42,986 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f8b3ea98a60&gt;
2025-02-27 16:35:42,986 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f8b3ea98820&gt;
2025-02-27 16:35:42,986 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,988 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:42,990 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:42,990 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:42,990 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:42,990 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:42,991 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:42,992 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,992 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f8b3d1af820&gt;}) about to wait for the following futures []
2025-02-27 16:35:42,992 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f8b3d1af820&gt;}) done waiting for dependent futures
2025-02-27 16:35:42,992 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f8b3d1af820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8b3d2c28e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f8b3d1a7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f8b3d1a7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f8b3d1ac0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f8b3d1af820&gt;}
2025-02-27 16:35:42,993 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f8b3d1ac0d0&gt; for transfer request: 0.
2025-02-27 16:35:42,993 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8b3d2c28e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f8b3e9e34c0&gt;
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f8b3e9df8b0&gt;
2025-02-27 16:35:42,993 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f8b3e9df820&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f8b3e9e6700&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f8b3d3226d0&gt;&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f8b3e9df670&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f8b3e9e68b0&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:42,994 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:42,995 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:42,995 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f8b3d1ac0d0&gt; for transfer request: 0.
2025-02-27 16:35:42,995 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:42,995 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,995 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:42,995 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;]
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f8b3e9dfb80&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f8b3d1ac0d0&gt; for transfer request: 0.
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f8b3e9df280&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f8b3e9e6d30&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f8b3e9e3ee0&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8b3d2c2a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f8b3e11a790&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8b3d2c29d0&gt;&gt;
2025-02-27 16:35:42,996 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f8b3e9df4c0&gt;
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f8b3e9e6820&gt;
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:42,997 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;]
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163542Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163542Z
20250227/us-west-1/s3/aws4_request
ada52f273fc2801f9efaf3dd99b39925ac234b91377bd53fe2bf0f5ee96468ba
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
3c2aee8ac1f1dd374c67efe307920a7a9eeba68e48f460ee316b44e2651e17ff
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f8b3e11a820&gt;
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f8b3e9e6670&gt;
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163542Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=3c2aee8ac1f1dd374c67efe307920a7a9eeba68e48f460ee316b44e2651e17ff', 'amz-sdk-invocation-id': b'ce361aa8-e630-4c5f-b5d7-620e63ec5227', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-27 16:35:42,999 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:42,998 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f8b3d1ac0d0&gt; for transfer request: 0.
2025-02-27 16:35:42,998 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;
2025-02-27 16:35:42,999 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:42,999 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d169220&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d169d30&gt;]
2025-02-27 16:35:42,999 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d147370&gt;
2025-02-27 16:35:43,000 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,013 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploads HTTP/1.1" 200 295
2025-02-27 16:35:43,013 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f8b3e9e6b80&gt;
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f8b3e9e69d0&gt;
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'oksHLIB0vK06Ll', 'x-amz-request-id': 'f873bbb2-5cfa-42d5-87e7-c475805f6e74', 'Content-Length': '295'}
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f8b3e9e6ca0&gt;
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8b3d29d760&gt;
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,014 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f8b3de71d30&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8b3d2c28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d169580&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866'}
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f8b3e9df8b0&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f8b3e9e3dc0&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f8b3e9df820&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f8b3e9e6700&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f8b3d3226d0&gt;&gt;
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f8b3e9df670&gt;
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f8b3e9e68b0&gt;
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f8b3eb548b0&gt;
2025-02-27 16:35:43,016 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d169220&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8b3d2c28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d147df0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866'}
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f8b3e9df8b0&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f8b3e9e3dc0&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f8b3e9df820&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f8b3e9e6700&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f8b3d3226d0&gt;&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f8b3e9df670&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f8b3e9e68b0&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,017 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,018 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,018 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f8b3eb548b0&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f8b3e9dfb80&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f8b3e9df280&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f8b3e9e6d30&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f8b3e9e3ee0&gt;
2025-02-27 16:35:43,022 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'dC4NpUJ0IwrOg7T/zeigxg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d169580&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8b3d2c2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d169580&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,023 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f8b3e11a790&gt;
2025-02-27 16:35:43,023 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8b3d2c29d0&gt;&gt;
2025-02-27 16:35:43,023 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f8b3e9df4c0&gt;
2025-02-27 16:35:43,023 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f8b3e9e6820&gt;
2025-02-27 16:35:43,023 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=2&amp;uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866
content-md5:dC4NpUJ0IwrOg7T/zeigxg==
host:s3g:9878
x-amz-content-sha256:15d29656c05219a589746ffd1fe5f4ef7aadb615e2300745663a8206adf40a3a
x-amz-date:20250227T163543Z

content-md5;host;x-amz-content-sha256;x-amz-date
15d29656c05219a589746ffd1fe5f4ef7aadb615e2300745663a8206adf40a3a
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
af6cba36da10e5f5b785daa07fcc5f47635912f7e1a7ea67eb44294d7849102d
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
7b21aac5294844408f760d6c802055e24f08d1278184a053e0986d237d8ad813
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f8b3e11a820&gt;
2025-02-27 16:35:43,025 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f8b3e9e6670&gt;
2025-02-27 16:35:43,026 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'dC4NpUJ0IwrOg7T/zeigxg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'15d29656c05219a589746ffd1fe5f4ef7aadb615e2300745663a8206adf40a3a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=7b21aac5294844408f760d6c802055e24f08d1278184a053e0986d237d8ad813', 'amz-sdk-invocation-id': b'e714b43f-8bed-45e8-a917-cc33a42a8586', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-27 16:35:43,026 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f8b3e9dfb80&gt;
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f8b3e9df280&gt;
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f8b3e9e6d30&gt;
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f8b3e9e3ee0&gt;
2025-02-27 16:35:43,036 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'CgjV0oAOQKgs0nODO0xH5Q==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d147df0&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8b3d2c2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f8b3d147df0&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,037 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f8b3e11a790&gt;
2025-02-27 16:35:43,037 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8b3d2c29d0&gt;&gt;
2025-02-27 16:35:43,037 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f8b3e9df4c0&gt;
2025-02-27 16:35:43,037 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f8b3e9e6820&gt;
2025-02-27 16:35:43,037 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=1&amp;uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866
content-md5:CgjV0oAOQKgs0nODO0xH5Q==
host:s3g:9878
x-amz-content-sha256:41fcd5f682da85af1c0ab0330b2d8a03201d701f46d0119dbcb5f8056cb4f84f
x-amz-date:20250227T163543Z

content-md5;host;x-amz-content-sha256;x-amz-date
41fcd5f682da85af1c0ab0330b2d8a03201d701f46d0119dbcb5f8056cb4f84f
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
36f0a0beac3bf0255a4c35b141272cd80941d4decc8a9cf28e8d8ecdcdf46144
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
5802a34614556804f1174205008973911832eba4cc3fe63106d88f6873fb94b6
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f8b3e11a820&gt;
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f8b3e9e6670&gt;
2025-02-27 16:35:43,045 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'CgjV0oAOQKgs0nODO0xH5Q==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'41fcd5f682da85af1c0ab0330b2d8a03201d701f46d0119dbcb5f8056cb4f84f', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=5802a34614556804f1174205008973911832eba4cc3fe63106d88f6873fb94b6', 'amz-sdk-invocation-id': b'68b0cad5-70db-4d64-bf29-21e13fd29eb6', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-27 16:35:43,046 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-27 16:35:43,046 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-27 16:35:43,047 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (7.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (9.9 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:43,071 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.0 MiB/9.5 MiB (12.6 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/9.5 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/9.5 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/9.5 MiB (21.0 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/9.5 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/9.5 MiB (25.4 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/9.5 MiB (27.4 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/9.5 MiB (29.0 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/9.5 MiB (30.9 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/9.5 MiB (32.6 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/9.5 MiB (34.5 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/9.5 MiB (38.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (40.0 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (36.2 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (37.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/9.5 MiB (39.2 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (40.7 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/9.5 MiB (42.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/9.5 MiB (43.6 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/9.5 MiB (45.0 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/9.5 MiB (46.3 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/9.5 MiB (47.7 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/9.5 MiB (49.1 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/9.5 MiB (50.3 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (51.4 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (52.6 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/9.5 MiB (53.8 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/9.5 MiB (55.0 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/9.5 MiB (56.3 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/9.5 MiB (57.5 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/9.5 MiB (58.7 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/9.5 MiB (59.7 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/9.5 MiB (60.8 MiB/s) with 1 file(s) remaining 
2025-02-27 16:35:43,160 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-27 16:35:43,161 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f8b3e9e6b80&gt;
2025-02-27 16:35:43,161 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f8b3e9e69d0&gt;
2025-02-27 16:35:43,161 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '742e0da54274230ace83b4ffcde8a0c6', 'Server': 'Ozone', 'x-amz-id-2': 'M5fGHtL9fPhV', 'x-amz-request-id': '224e5e46-cd13-4887-a957-0d3bd34cc6aa', 'Content-Length': '0'}
2025-02-27 16:35:43,161 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f8b3e9e6ca0&gt;
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8b3d29d760&gt;
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f8b3de71d30&gt;
Completed 9.5 MiB/9.5 MiB (56.4 MiB/s) with 1 file(s) remaining 
2025-02-27 16:35:43,162 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,271 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f8b3e9e6b80&gt;
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f8b3e9e69d0&gt;
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '0a08d5d2800e40a82cd273833b4c47e5', 'Server': 'Ozone', 'x-amz-id-2': 'VqIkhANZ3', 'x-amz-request-id': '0600fbcb-ab1e-41ff-a582-1fd56a9d5044', 'Content-Length': '0'}
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f8b3e9e6ca0&gt;
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8b3d29d760&gt;
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,272 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f8b3de71d30&gt;
2025-02-27 16:35:43,273 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,273 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f8b3d169d30&gt;
2025-02-27 16:35:43,273 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:43,273 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f8b3d2c28e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}, 'upload_id': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'parts': [{'ETag': '0a08d5d2800e40a82cd273833b4c47e5', 'PartNumber': 1}, {'ETag': '742e0da54274230ace83b4ffcde8a0c6', 'PartNumber': 2}]}
2025-02-27 16:35:43,273 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f8b3e9df8b0&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f8b3e9df820&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f8b3e9e6700&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f8b3d3226d0&gt;&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f8b3e9df670&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f8b3e9e68b0&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,274 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f8b3e9dfb80&gt;
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f8b3e9df280&gt;
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f8b3e9e6d30&gt;
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f8b3e9e3ee0&gt;
2025-02-27 16:35:43,275 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;0a08d5d2800e40a82cd273833b4c47e5&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;742e0da54274230ace83b4ffcde8a0c6&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f8b3d2c2a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-931f-7cdc-9e7b-15514483e676-114076820636106866', 'MultipartUpload': {'Parts': [{'ETag': '0a08d5d2800e40a82cd273833b4c47e5', 'PartNumber': 1}, {'ETag': '742e0da54274230ace83b4ffcde8a0c6', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f8b3e11a790&gt;
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f8b3d2c29d0&gt;&gt;
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f8b3e9df4c0&gt;
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f8b3e9e6820&gt;
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f8b3d29d7f0&gt;&gt;
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,276 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866
host:s3g:9878
x-amz-content-sha256:7296b9e36fd8659cc70c47f19954cdb32dea21ba5e6aad0790cb3081f9ce923a
x-amz-date:20250227T163543Z

host;x-amz-content-sha256;x-amz-date
7296b9e36fd8659cc70c47f19954cdb32dea21ba5e6aad0790cb3081f9ce923a
2025-02-27 16:35:43,277 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
856db777bbfd14fd0435fb32433c84de20bd6362a24fb1d91b0bb97dfddfb4ad
2025-02-27 16:35:43,277 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
6e23f0dee2a8efed0a73635b64a75344b93b6e097c9ebc7b2803f0d47aa23ea4
2025-02-27 16:35:43,277 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f8b3e11a820&gt;
2025-02-27 16:35:43,277 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f8b3e9e6670&gt;
2025-02-27 16:35:43,277 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'7296b9e36fd8659cc70c47f19954cdb32dea21ba5e6aad0790cb3081f9ce923a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=6e23f0dee2a8efed0a73635b64a75344b93b6e097c9ebc7b2803f0d47aa23ea4', 'amz-sdk-invocation-id': b'2ff8666b-552f-404c-96f5-a4df4ced5d30', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866 HTTP/1.1" 200 306
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f8b3e9e6b80&gt;
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f8b3e9e69d0&gt;
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'o6PPwwYQfdbZf', 'x-amz-request-id': '663f6353-a508-49c1-bb04-de2a3910ca15', 'Content-Length': '306'}
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;bucket-diiacmavow&lt;/Location&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"383ba7875f665c35004654447eead163-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f8b3e9e6ca0&gt;
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f8b3d29d760&gt;
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f8b3d29d820&gt;&gt;
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f8b3de71d30&gt;
2025-02-27 16:35:43,302 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://bucket-diiacmavow/big_file   
2025-02-27 16:35:43,303 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:43.358" endtime="20250227 16:35:43.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:43.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:43.360" endtime="20250227 16:35:43.361"/>
</kw>
<status status="PASS" starttime="20250227 16:35:42.603" endtime="20250227 16:35:43.361"/>
</kw>
<msg timestamp="20250227 16:35:43.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:42.602" endtime="20250227 16:35:43.362"/>
</kw>
<msg timestamp="20250227 16:35:43.364" level="INFO">${output} = 2025-02-27 16:35:42,903 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:42,903 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:42.602" endtime="20250227 16:35:43.364"/>
</kw>
<msg timestamp="20250227 16:35:43.364" level="INFO">${result} = 2025-02-27 16:35:42,903 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:42,903 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:42.602" endtime="20250227 16:35:43.364"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250227 16:35:43.367" level="INFO">${match} = POST /bucket-diiacmavow/big_file?uploadId=01954843-931f-7cdc-9e7b-15514483e676-114076820636106866 HTTP/1.1" 200 306
2025-02-27 16:35:43,301 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event be...</msg>
<msg timestamp="20250227 16:35:43.367" level="INFO">${etag1} = 383ba7875f665c35004654447eead163-2</msg>
<status status="PASS" starttime="20250227 16:35:43.364" endtime="20250227 16:35:43.367"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:43.371" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://bucket-diiacmavow/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:43.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:43.985" level="INFO">${output} = 2025-02-27 16:35:43,693 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:43,693 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:43.368" endtime="20250227 16:35:43.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:43.986" level="INFO">2025-02-27 16:35:43,693 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:43,693 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://bucket-diiacmavow/big_file', '/tmp/big_file_downloaded']
2025-02-27 16:35:43,693 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f6655c51820&gt;
2025-02-27 16:35:43,694 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f665653cc10&gt;
2025-02-27 16:35:43,694 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f665622ee50&gt;
2025-02-27 16:35:43,695 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:43,697 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f6655cbf4c0&gt;
2025-02-27 16:35:43,697 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f6655c03820&gt;
2025-02-27 16:35:43,698 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f6655cd6310&gt;
2025-02-27 16:35:43,698 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,698 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f6655c03820&gt;
2025-02-27 16:35:43,698 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f6655cd6310&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,700 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,701 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f66561fbc70&gt;
2025-02-27 16:35:43,702 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6655b5c4c0&gt;
2025-02-27 16:35:43,703 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:43,703 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:43,705 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:43,728 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:43,728 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f66577729d0&gt;
2025-02-27 16:35:43,735 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:43,743 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:43,763 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:43,765 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:43,767 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6656875a60&gt;
2025-02-27 16:35:43,767 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6656875820&gt;
2025-02-27 16:35:43,768 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,770 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:43,772 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:43,772 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:43,773 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:43,773 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,773 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:43,773 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f66577729d0&gt;
2025-02-27 16:35:43,774 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6656875a60&gt;
2025-02-27 16:35:43,774 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6656875820&gt;
2025-02-27 16:35:43,774 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,776 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:43,777 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:43,777 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:43,778 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,778 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:43,778 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f66577729d0&gt;
2025-02-27 16:35:43,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6656875a60&gt;
2025-02-27 16:35:43,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6656875820&gt;
2025-02-27 16:35:43,779 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,781 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:43,782 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:43,782 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:43,783 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:43,783 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:43,783 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f66567bc8b0&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f66567bc820&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f66567c3700&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6654fa7a30&gt;&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f665507a940&gt;&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f66567bc670&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f66567c38b0&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6654fa7a30&gt;&gt;
2025-02-27 16:35:43,784 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,785 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,785 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,785 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f66567bcb80&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6654fa7a00&gt;&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f66567bc280&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f66567c3d30&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f66567c0ee0&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6655017ca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6655017c10&gt;&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f66567bc4c0&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f66567c3820&gt;
2025-02-27 16:35:43,786 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6654fa7a00&gt;&gt;
2025-02-27 16:35:43,787 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,787 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/bucket-diiacmavow/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163543Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:43,787 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
dddd3aa8b6b15367782c724e1a19973fc8f567d9f7af06ef9187f992765925fe
2025-02-27 16:35:43,787 - MainThread - botocore.auth - DEBUG - Signature:
879415124d114c8ef34a5c66e28067e564fe818feb66efdfe6750892da3324f4
2025-02-27 16:35:43,787 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f66567c3670&gt;
2025-02-27 16:35:43,787 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/bucket-diiacmavow/big_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=879415124d114c8ef34a5c66e28067e564fe818feb66efdfe6750892da3324f4', 'amz-sdk-invocation-id': b'9dab46a0-b5f9-40f0-a30c-2acee9171f4b', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:43,787 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:43,794 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /bucket-diiacmavow/big_file HTTP/1.1" 200 0
2025-02-27 16:35:43,795 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f66567c3b80&gt;
2025-02-27 16:35:43,795 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f66567c39d0&gt;
2025-02-27 16:35:43,795 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"383ba7875f665c35004654447eead163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'J18tTD5wcnls7vy', 'x-amz-request-id': '86c28f39-2046-4676-98b5-cb96ef8352bb', 'Content-Length': '10000000'}
2025-02-27 16:35:43,795 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:43,795 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f66567c3ca0&gt;
2025-02-27 16:35:43,795 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6654fa7970&gt;
2025-02-27 16:35:43,795 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,795 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6654fa7a30&gt;&gt;
2025-02-27 16:35:43,796 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f6655c4ed30&gt;
2025-02-27 16:35:43,796 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,797 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;}) about to wait for the following futures []
2025-02-27 16:35:43,797 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;}) done waiting for dependent futures
2025-02-27 16:35:43,797 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f66550a08e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f6654fa7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6654fa7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt;}
2025-02-27 16:35:43,797 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac0d0&gt; for transfer request: 0.
2025-02-27 16:35:43,797 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,797 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2025-02-27 16:35:43,798 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac0d0&gt; for transfer request: 0.
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f66550a08e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f6654fafe80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f6654fafeb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f6654f5b1c0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f6654f5b340&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f6654f5bd60&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f66567bc8b0&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f66567bc820&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f66567c3700&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f66550ff730&gt;&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f66567bc670&gt;
2025-02-27 16:35:43,798 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f66567c38b0&gt;
2025-02-27 16:35:43,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,799 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,798 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,799 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f66567bcb80&gt;
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f665507a7f0&gt;&gt;
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f66567bc280&gt;
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f66567c3d30&gt;
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f66567c0ee0&gt;
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f66550a0a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'Range': 'bytes=0-8388607'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,800 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f6655ef8790&gt;
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f66550a09d0&gt;&gt;
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f66567bc4c0&gt;
2025-02-27 16:35:43,801 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f66567c3820&gt;
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f665507a7f0&gt;&gt;
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/bucket-diiacmavow/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163543Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
033a69fb3fc1b9efd59e110eeadfc56d529d2bc6cb9d02db37492ad89e839d7b
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f44aba812d8217fe5e3d7ab1e1ad3d47b5c12dccdcf97832a85b92441395a546
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f6655ef8820&gt;
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f66567c3670&gt;
2025-02-27 16:35:43,802 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/bucket-diiacmavow/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f44aba812d8217fe5e3d7ab1e1ad3d47b5c12dccdcf97832a85b92441395a546', 'amz-sdk-invocation-id': b'3a2f9ad4-cf05-4ab6-917f-0356f2b2e590', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:43,801 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f66550a08e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f6654fafe80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f6654fafeb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f6654f5b1c0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f6654f5b340&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6654f5b880&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f6654f5bd60&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f66567bc8b0&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f66567bc820&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f66567c3700&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f66550ff730&gt;&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f66567bc670&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f66567c38b0&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,803 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f66567bcb80&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f665507a7f0&gt;&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f66567bc280&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f66567c3d30&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f66567c0ee0&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f66550a0a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'Range': 'bytes=8388608-'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f6655ef8790&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f66550a09d0&gt;&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f66567bc4c0&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f66567c3820&gt;
2025-02-27 16:35:43,804 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f665507a7f0&gt;&gt;
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/bucket-diiacmavow/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163543Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163543Z
20250227/us-west-1/s3/aws4_request
62a4b063eda1837772280c3acb888abf0f6676232bc8ea951fdf417698f1581a
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
b4bc715b6c2307c3321afab4ae6e6909740c93932f8633054370bf05a7a84aae
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f6655ef8820&gt;
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f66567c3670&gt;
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/bucket-diiacmavow/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163543Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=b4bc715b6c2307c3321afab4ae6e6909740c93932f8633054370bf05a7a84aae', 'amz-sdk-invocation-id': b'b2b63476-fd52-4295-89bb-bb45d66a3c17', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-27 16:35:43,805 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-27 16:35:43,849 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /bucket-diiacmavow/big_file HTTP/1.1" 206 1611392
2025-02-27 16:35:43,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f66567c3b80&gt;
2025-02-27 16:35:43,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f66567c39d0&gt;
2025-02-27 16:35:43,850 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"383ba7875f665c35004654447eead163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Server': 'Ozone', 'x-amz-id-2': '3DO19MqjhUO', 'x-amz-request-id': '93999dd3-f135-4dc9-be71-7594fc4a2a58', 'Content-Length': '1611392'}
2025-02-27 16:35:43,850 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f6654f332b0&gt;
2025-02-27 16:35:43,853 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f66567c3ca0&gt;
2025-02-27 16:35:43,853 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f665507a760&gt;
2025-02-27 16:35:43,853 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,854 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,854 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f6655c4ed30&gt;
2025-02-27 16:35:43,856 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,856 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,856 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
Completed 256.0 KiB/9.5 MiB (4.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:43,857 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2025-02-27 16:35:43,857 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 8388608}
2025-02-27 16:35:43,858 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 512.0 KiB/9.5 MiB (8.3 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:43,858 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,858 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2025-02-27 16:35:43,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2025-02-27 16:35:43,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 8650752}
Completed 768.0 KiB/9.5 MiB (12.1 MiB/s) with 1 file(s) remaining
2025-02-27 16:35:43,859 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,860 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,860 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,860 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2025-02-27 16:35:43,860 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2025-02-27 16:35:43,860 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 8912896}
2025-02-27 16:35:43,861 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,862 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,862 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (15.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,862 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 1.2 MiB/9.5 MiB (19.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,862 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2025-02-27 16:35:43,863 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2025-02-27 16:35:43,863 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,863 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 9175040}
2025-02-27 16:35:43,864 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,864 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,864 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,864 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (22.7 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (23.1 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,864 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 9437184}
2025-02-27 16:35:43,864 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2025-02-27 16:35:43,865 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 9699328}
2025-02-27 16:35:43,866 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,866 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2025-02-27 16:35:43,866 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2025-02-27 16:35:43,866 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 9961472}
2025-02-27 16:35:43,866 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,871 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /bucket-diiacmavow/big_file HTTP/1.1" 206 8388608
2025-02-27 16:35:43,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f66567c3b80&gt;
2025-02-27 16:35:43,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f66567c39d0&gt;
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"383ba7875f665c35004654447eead163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Thu, 27 Feb 2025 16:35:43 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'FzzYfztmbak2hvd', 'x-amz-request-id': 'bd0b8e67-3ad1-4285-86f8-57b3ab836f58', 'Content-Length': '8388608'}
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f6654f3e7c0&gt;
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f66567c3ca0&gt;
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f665507a760&gt;
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f665507a820&gt;&gt;
2025-02-27 16:35:43,872 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f6655c4ed30&gt;
2025-02-27 16:35:43,881 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 1.8 MiB/9.5 MiB (21.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,882 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,882 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,882 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (24.1 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 0}
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-27 16:35:43,883 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-27 16:35:43,884 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 262144}
2025-02-27 16:35:43,884 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,884 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,884 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 2.3 MiB/9.5 MiB (26.5 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (29.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,884 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.8 MiB/9.5 MiB (31.1 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,885 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,887 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-27 16:35:43,887 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-27 16:35:43,887 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 524288}
2025-02-27 16:35:43,888 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,888 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-27 16:35:43,888 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-27 16:35:43,888 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 786432}
2025-02-27 16:35:43,887 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,888 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,888 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,889 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,889 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,889 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (33.4 MiB/s) with 1 file(s) remaining  
Completed 3.3 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,890 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,890 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2025-02-27 16:35:43,891 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2025-02-27 16:35:43,891 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 1048576}
2025-02-27 16:35:43,891 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,891 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2025-02-27 16:35:43,891 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 1310720}
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 1572864}
2025-02-27 16:35:43,892 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 3.5 MiB/9.5 MiB (37.0 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,893 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,893 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,894 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2025-02-27 16:35:43,894 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2025-02-27 16:35:43,894 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 1835008}
Completed 3.8 MiB/9.5 MiB (39.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,894 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,894 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,894 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,895 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,895 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2025-02-27 16:35:43,896 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2025-02-27 16:35:43,895 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,896 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 4.3 MiB/9.5 MiB (43.4 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,896 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 2097152}
2025-02-27 16:35:43,897 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,896 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (45.5 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,897 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2025-02-27 16:35:43,897 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2025-02-27 16:35:43,897 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 2359296}
2025-02-27 16:35:43,898 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,897 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,898 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,898 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2025-02-27 16:35:43,899 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
Completed 4.8 MiB/9.5 MiB (47.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,899 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,900 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,900 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,900 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (49.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,899 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 2621440}
2025-02-27 16:35:43,901 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,901 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,901 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 5.3 MiB/9.5 MiB (51.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,901 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2025-02-27 16:35:43,901 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2025-02-27 16:35:43,902 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 2883584}
2025-02-27 16:35:43,902 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,902 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (52.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,903 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,903 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2025-02-27 16:35:43,903 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2025-02-27 16:35:43,903 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 3145728}
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 3407872}
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,904 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 3670016}
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2025-02-27 16:35:43,905 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 3932160}
2025-02-27 16:35:43,906 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,919 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,920 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (47.6 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,920 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2025-02-27 16:35:43,921 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2025-02-27 16:35:43,921 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 4194304}
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,922 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (48.6 MiB/s) with 1 file(s) remaining  
Completed 6.3 MiB/9.5 MiB (50.5 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (52.4 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,923 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,923 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2025-02-27 16:35:43,923 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2025-02-27 16:35:43,923 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 4456448}
2025-02-27 16:35:43,924 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,924 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,924 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,924 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2025-02-27 16:35:43,924 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2025-02-27 16:35:43,924 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 4718592}
Completed 6.8 MiB/9.5 MiB (53.7 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (55.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,925 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,925 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (57.1 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,925 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,925 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,925 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,925 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
Completed 7.5 MiB/9.5 MiB (58.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,926 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,926 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2025-02-27 16:35:43,926 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,926 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 4980736}
2025-02-27 16:35:43,927 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,927 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.8 MiB/9.5 MiB (60.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (62.0 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,927 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,927 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,927 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,927 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
Completed 8.3 MiB/9.5 MiB (63.6 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,928 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,928 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2025-02-27 16:35:43,928 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,928 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 5242880}
2025-02-27 16:35:43,929 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,929 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (65.0 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,929 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2025-02-27 16:35:43,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2025-02-27 16:35:43,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 5505024}
2025-02-27 16:35:43,930 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,930 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2025-02-27 16:35:43,930 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2025-02-27 16:35:43,930 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 5767168}
2025-02-27 16:35:43,930 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
Completed 8.8 MiB/9.5 MiB (66.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,930 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,931 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,931 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (67.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,930 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2025-02-27 16:35:43,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2025-02-27 16:35:43,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 6029312}
2025-02-27 16:35:43,931 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6654fac190&gt; for transfer request: 0.
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:43,932 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.3 MiB/9.5 MiB (69.3 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (70.9 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 6291456}
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2025-02-27 16:35:43,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 6553600}
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 6815744}
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2025-02-27 16:35:43,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 7077888}
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 7340032}
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2025-02-27 16:35:43,935 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 7602176}
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 7864320}
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2025-02-27 16:35:43,936 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'offset': 8126464}
2025-02-27 16:35:43,937 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:43,937 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2025-02-27 16:35:43,937 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2025-02-27 16:35:43,937 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6654f5be80&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6654fa7e50&gt;}
2025-02-27 16:35:43,937 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://bucket-diiacmavow/big_file to ../../tmp/big_file_downloaded
2025-02-27 16:35:43,938 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:43.985" endtime="20250227 16:35:43.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:43.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:43.987" endtime="20250227 16:35:43.987"/>
</kw>
<status status="PASS" starttime="20250227 16:35:43.368" endtime="20250227 16:35:43.987"/>
</kw>
<msg timestamp="20250227 16:35:43.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:43.368" endtime="20250227 16:35:43.988"/>
</kw>
<msg timestamp="20250227 16:35:43.989" level="INFO">${output} = 2025-02-27 16:35:43,693 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:43,693 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:43.367" endtime="20250227 16:35:43.990"/>
</kw>
<msg timestamp="20250227 16:35:43.990" level="INFO">${file_download_result} = 2025-02-27 16:35:43,693 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:43,693 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:43.367" endtime="20250227 16:35:43.990"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250227 16:35:43.991" level="INFO">${match} = GET /bucket-diiacmavow/big_file HTTP/1.1" 206 1611392
2025-02-27 16:35:43,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200...</msg>
<msg timestamp="20250227 16:35:43.991" level="INFO">${etag2} = 383ba7875f665c35004654447eead163-2</msg>
<status status="PASS" starttime="20250227 16:35:43.990" endtime="20250227 16:35:43.991"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:35:43.991" endtime="20250227 16:35:43.992"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:43.995" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:44.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:44.427" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:43.993" endtime="20250227 16:35:44.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:44.428" level="INFO">delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:44.427" endtime="20250227 16:35:44.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:44.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:44.428" endtime="20250227 16:35:44.428"/>
</kw>
<status status="PASS" starttime="20250227 16:35:43.993" endtime="20250227 16:35:44.428"/>
</kw>
<msg timestamp="20250227 16:35:44.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:43.992" endtime="20250227 16:35:44.429"/>
</kw>
<msg timestamp="20250227 16:35:44.429" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:43.992" endtime="20250227 16:35:44.429"/>
</kw>
<status status="PASS" starttime="20250227 16:35:43.992" endtime="20250227 16:35:44.429"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:44.432" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:44.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:44.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:44.430" endtime="20250227 16:35:44.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:44.438" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:44.438" endtime="20250227 16:35:44.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:44.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:44.439" endtime="20250227 16:35:44.439"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.429" endtime="20250227 16:35:44.439"/>
</kw>
<msg timestamp="20250227 16:35:44.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:44.429" endtime="20250227 16:35:44.439"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.429" endtime="20250227 16:35:44.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:42.554" endtime="20250227 16:35:44.439"/>
</test>
<test id="s1-s14-t21" name="Create key twice with different content and expect different ETags" line="261">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:44.443" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20250227 16:35:44.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:44.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:44.441" endtime="20250227 16:35:44.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:44.452" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:44.451" endtime="20250227 16:35:44.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:44.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:44.452" endtime="20250227 16:35:44.452"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.441" endtime="20250227 16:35:44.452"/>
</kw>
<msg timestamp="20250227 16:35:44.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:44.441" endtime="20250227 16:35:44.452"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.440" endtime="20250227 16:35:44.452"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:44.455" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20250227 16:35:44.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:44.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:44.453" endtime="20250227 16:35:44.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:44.463" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:44.463" endtime="20250227 16:35:44.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:44.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:44.463" endtime="20250227 16:35:44.464"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.453" endtime="20250227 16:35:44.464"/>
</kw>
<msg timestamp="20250227 16:35:44.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:44.453" endtime="20250227 16:35:44.464"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.452" endtime="20250227 16:35:44.464"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:44.467" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://bucket-diiacmavow/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:45.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:45.010" level="INFO">${output} = 2025-02-27 16:35:44,771 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:44,771 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:44.465" endtime="20250227 16:35:45.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:45.011" level="INFO">2025-02-27 16:35:44,771 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:44,771 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://bucket-diiacmavow/test_key_to_check_etag_differences']
2025-02-27 16:35:44,771 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f82a5b8d820&gt;
2025-02-27 16:35:44,771 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f82a6477c10&gt;
2025-02-27 16:35:44,771 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f82a6169e50&gt;
2025-02-27 16:35:44,773 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:44,775 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f82a5bfa4c0&gt;
2025-02-27 16:35:44,775 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f82a5b3e820&gt;
2025-02-27 16:35:44,775 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f82a5c11310&gt;
2025-02-27 16:35:44,775 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,775 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f82a5b3e820&gt;
2025-02-27 16:35:44,776 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f82a5c11310&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,777 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,778 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,779 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f82a6138c70&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f82a5a974c0&gt;
2025-02-27 16:35:44,780 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:44,780 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:44,782 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:44,803 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:44,803 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f82a76ad9d0&gt;
2025-02-27 16:35:44,809 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:44,817 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:44,838 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:44,843 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:44,845 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f82a67b0a60&gt;
2025-02-27 16:35:44,845 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f82a67b0820&gt;
2025-02-27 16:35:44,846 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,850 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:44,852 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:44,852 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:44,852 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:44,852 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,853 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:44,853 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f82a76ad9d0&gt;
2025-02-27 16:35:44,854 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f82a67b0a60&gt;
2025-02-27 16:35:44,854 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f82a67b0820&gt;
2025-02-27 16:35:44,854 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,856 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:44,857 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:44,857 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:44,857 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,857 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:44,858 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f82a76ad9d0&gt;
2025-02-27 16:35:44,858 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f82a67b0a60&gt;
2025-02-27 16:35:44,858 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f82a67b0820&gt;
2025-02-27 16:35:44,859 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,861 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:44,862 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:44,862 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:44,862 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:44,863 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:44,863 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:44,864 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:44,864 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f82a4eb0820&gt;}) about to wait for the following futures []
2025-02-27 16:35:44,864 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f82a4eb0820&gt;}) done waiting for dependent futures
2025-02-27 16:35:44,864 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f82a4eb0820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f82a509b8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f82a4ea7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f82a4ea7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f82a4ead0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f82a4eb0820&gt;}
2025-02-27 16:35:44,865 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f82a4ead0d0&gt; for transfer request: 0.
2025-02-27 16:35:44,865 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:44,865 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:44,865 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f82a509b8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f82a4e480d0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f82a66fb4c0&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f82a66f88b0&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f82a66fbdc0&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f82a66f8820&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f82a66fe700&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f82a5075820&gt;&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f82a50fa6d0&gt;&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f82a66f8670&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f82a66fe8b0&gt;
2025-02-27 16:35:44,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f82a5075820&gt;&gt;
2025-02-27 16:35:44,867 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:44,867 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:44,867 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:44,868 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:44,868 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:44,868 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f82a686c790&gt;
2025-02-27 16:35:44,870 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f82a66f8b80&gt;
2025-02-27 16:35:44,870 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:44,870 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f82a50757f0&gt;&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f82a66f8280&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f82a66fed30&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f82a66fbee0&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'TSkYV2PbhMM6mHRlikwvUA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f82a4e480d0&gt;, 'auth_path': '/bucket-diiacmavow/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/bucket-diiacmavow/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f82a509ba60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f82a4e480d0&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f82a5e33790&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f82a509b9d0&gt;&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f82a66f84c0&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f82a66fe820&gt;
2025-02-27 16:35:44,871 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f82a50757f0&gt;&gt;
2025-02-27 16:35:44,872 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:44,872 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/test_key_to_check_etag_differences

content-md5:TSkYV2PbhMM6mHRlikwvUA==
host:s3g:9878
x-amz-content-sha256:207d959fe1bab8d3ec7d6bcc82a72912c3135522d0bbf2a4868e8a4ce525d271
x-amz-date:20250227T163544Z

content-md5;host;x-amz-content-sha256;x-amz-date
207d959fe1bab8d3ec7d6bcc82a72912c3135522d0bbf2a4868e8a4ce525d271
2025-02-27 16:35:44,872 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163544Z
20250227/us-west-1/s3/aws4_request
b10ce38d538b54b827eb9dc7e9f6c495707143841823b0b18d346c9247105f82
2025-02-27 16:35:44,872 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
601e68200602e436842157d2c6fb449c8791f5dd8dd6c0f588c4b61bd809fefe
2025-02-27 16:35:44,873 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f82a5e33820&gt;
2025-02-27 16:35:44,873 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f82a66fe670&gt;
2025-02-27 16:35:44,873 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'TSkYV2PbhMM6mHRlikwvUA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163544Z', 'X-Amz-Content-SHA256': b'207d959fe1bab8d3ec7d6bcc82a72912c3135522d0bbf2a4868e8a4ce525d271', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=601e68200602e436842157d2c6fb449c8791f5dd8dd6c0f588c4b61bd809fefe', 'amz-sdk-invocation-id': b'9bc8fbca-3252-423c-877b-f8be7dac4074', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-27 16:35:44,873 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:44,874 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:44,891 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (9.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (17.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (24.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (30.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:44,960 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f82a66feb80&gt;
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f82a66fe9d0&gt;
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"4d29185763db84c33a9874658a4c2f50"', 'Server': 'Ozone', 'x-amz-id-2': 'YQWI0lzK', 'x-amz-request-id': '3c869f73-a777-4200-88cb-d60c49dcfdbd', 'Content-Length': '0'}
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f82a66feca0&gt;
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f82a5075760&gt;
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f82a5075820&gt;&gt;
2025-02-27 16:35:44,962 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f82a5b89d30&gt;
2025-02-27 16:35:44,962 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://bucket-diiacmavow/test_key_to_check_etag_differences
2025-02-27 16:35:44,962 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:45.011" endtime="20250227 16:35:45.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:45.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:45.012" endtime="20250227 16:35:45.012"/>
</kw>
<status status="PASS" starttime="20250227 16:35:44.465" endtime="20250227 16:35:45.012"/>
</kw>
<msg timestamp="20250227 16:35:45.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:44.465" endtime="20250227 16:35:45.012"/>
</kw>
<msg timestamp="20250227 16:35:45.013" level="INFO">${output} = 2025-02-27 16:35:44,771 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:44,771 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:44.464" endtime="20250227 16:35:45.013"/>
</kw>
<msg timestamp="20250227 16:35:45.013" level="INFO">${file1UploadResult} = 2025-02-27 16:35:44,771 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:44,771 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:44.464" endtime="20250227 16:35:45.013"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250227 16:35:45.014" level="INFO">${match} = PUT /bucket-diiacmavow/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-27 16:35:44,961 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;...</msg>
<msg timestamp="20250227 16:35:45.015" level="INFO">${etag1} = 4d29185763db84c33a9874658a4c2f50</msg>
<status status="PASS" starttime="20250227 16:35:45.013" endtime="20250227 16:35:45.015"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:45.018" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://bucket-diiacmavow/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:45.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:45.546" level="INFO">${output} = 2025-02-27 16:35:45,320 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:45,320 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:45.016" endtime="20250227 16:35:45.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:45.547" level="INFO">2025-02-27 16:35:45,320 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:45,320 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://bucket-diiacmavow/test_key_to_check_etag_differences']
2025-02-27 16:35:45,320 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f9585965820&gt;
2025-02-27 16:35:45,321 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f958624fc10&gt;
2025-02-27 16:35:45,321 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f9585f41e50&gt;
2025-02-27 16:35:45,322 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:45,324 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f95859d24c0&gt;
2025-02-27 16:35:45,324 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f9585916820&gt;
2025-02-27 16:35:45,324 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f95859e9310&gt;
2025-02-27 16:35:45,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,325 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f9585916820&gt;
2025-02-27 16:35:45,325 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f95859e9310&gt;
2025-02-27 16:35:45,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9585f10c70&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f958586f4c0&gt;
2025-02-27 16:35:45,330 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:45,330 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:45,331 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:45,353 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:45,353 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f95874869d0&gt;
2025-02-27 16:35:45,359 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:45,367 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:45,386 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:45,389 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:45,390 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9586588a60&gt;
2025-02-27 16:35:45,390 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9586588820&gt;
2025-02-27 16:35:45,391 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,394 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:45,395 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:45,396 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:45,396 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:45,396 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,396 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:45,396 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f95874869d0&gt;
2025-02-27 16:35:45,397 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9586588a60&gt;
2025-02-27 16:35:45,397 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9586588820&gt;
2025-02-27 16:35:45,397 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,399 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:45,401 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:45,401 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:45,401 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,401 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:45,401 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f95874869d0&gt;
2025-02-27 16:35:45,402 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9586588a60&gt;
2025-02-27 16:35:45,402 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9586588820&gt;
2025-02-27 16:35:45,402 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,404 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:45,406 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:45,406 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:45,406 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:45,406 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:45,407 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:45,407 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:45,408 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9584caf820&gt;}) about to wait for the following futures []
2025-02-27 16:35:45,408 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9584caf820&gt;}) done waiting for dependent futures
2025-02-27 16:35:45,408 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9584caf820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9584eb28e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f9584ca7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f9584ca7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f9584cac0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f9584caf820&gt;}
2025-02-27 16:35:45,408 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f9584cac0d0&gt; for transfer request: 0.
2025-02-27 16:35:45,408 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f9584eb28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9584c480d0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f95864d64c0&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f95864d08b0&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f95864d6dc0&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f95864d0820&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f95864d7700&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f9584e8d820&gt;&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f9584f126d0&gt;&gt;
2025-02-27 16:35:45,409 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f95864d0670&gt;
2025-02-27 16:35:45,410 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f95864d78b0&gt;
2025-02-27 16:35:45,410 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f9584e8d820&gt;&gt;
2025-02-27 16:35:45,410 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:45,411 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:45,411 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:45,411 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:45,411 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f9586644790&gt;
2025-02-27 16:35:45,411 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:45,413 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f95864d0b80&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f9584e8d7f0&gt;&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f95864d0280&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f95864d7d30&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f95864d6ee0&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'N2TI2Cmm7VSdgMvFDOxl2g==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9584c480d0&gt;, 'auth_path': '/bucket-diiacmavow/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/bucket-diiacmavow/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f9584eb2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f9584c480d0&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f9585c0b790&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f9584eb29d0&gt;&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f95864d04c0&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f95864d7820&gt;
2025-02-27 16:35:45,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f9584e8d7f0&gt;&gt;
2025-02-27 16:35:45,415 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:45,415 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/test_key_to_check_etag_differences

content-md5:N2TI2Cmm7VSdgMvFDOxl2g==
host:s3g:9878
x-amz-content-sha256:9c0aafec3a1874fd115e1e305cb9d827ad3126a468fffef4e34e24462cb798c5
x-amz-date:20250227T163545Z

content-md5;host;x-amz-content-sha256;x-amz-date
9c0aafec3a1874fd115e1e305cb9d827ad3126a468fffef4e34e24462cb798c5
2025-02-27 16:35:45,415 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163545Z
20250227/us-west-1/s3/aws4_request
64e855bdca378f7d1776195231e02161930c729f0180ef3e14576209a89cb3cd
2025-02-27 16:35:45,415 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
9ea7907b8b92523983736dea01aee5c954b6109499635fb384f4acca4f5c2a5a
2025-02-27 16:35:45,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f9585c0b820&gt;
2025-02-27 16:35:45,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f95864d7670&gt;
2025-02-27 16:35:45,416 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'N2TI2Cmm7VSdgMvFDOxl2g==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163545Z', 'X-Amz-Content-SHA256': b'9c0aafec3a1874fd115e1e305cb9d827ad3126a468fffef4e34e24462cb798c5', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=9ea7907b8b92523983736dea01aee5c954b6109499635fb384f4acca4f5c2a5a', 'amz-sdk-invocation-id': b'1c87fe2b-7d89-4132-a810-cf3ac8599807', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-27 16:35:45,416 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:45,417 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:45,439 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (7.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (14.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (20.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (26.9 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:45,498 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-27 16:35:45,498 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f95864d7b80&gt;
2025-02-27 16:35:45,498 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f95864d79d0&gt;
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:45 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:45 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3764c8d829a6ed549d80cbc50cec65da"', 'Server': 'Ozone', 'x-amz-id-2': 'sUHTq98ZzemaBD', 'x-amz-request-id': 'c7547b58-ab45-4ce5-b45f-e0af687f6e9b', 'Content-Length': '0'}
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f95864d7ca0&gt;
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f9584e8d760&gt;
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f9584e8d820&gt;&gt;
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f9585961d30&gt;
2025-02-27 16:35:45,499 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://bucket-diiacmavow/test_key_to_check_etag_differences
2025-02-27 16:35:45,500 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:45.547" endtime="20250227 16:35:45.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:45.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:45.548" endtime="20250227 16:35:45.548"/>
</kw>
<status status="PASS" starttime="20250227 16:35:45.016" endtime="20250227 16:35:45.548"/>
</kw>
<msg timestamp="20250227 16:35:45.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:45.015" endtime="20250227 16:35:45.548"/>
</kw>
<msg timestamp="20250227 16:35:45.549" level="INFO">${output} = 2025-02-27 16:35:45,320 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:45,320 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:45.015" endtime="20250227 16:35:45.549"/>
</kw>
<msg timestamp="20250227 16:35:45.549" level="INFO">${file2UploadResult} = 2025-02-27 16:35:45,320 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:45,320 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:45.015" endtime="20250227 16:35:45.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250227 16:35:45.550" level="INFO">${match} = PUT /bucket-diiacmavow/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-27 16:35:45,498 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;...</msg>
<msg timestamp="20250227 16:35:45.550" level="INFO">${etag2} = 3764c8d829a6ed549d80cbc50cec65da</msg>
<status status="PASS" starttime="20250227 16:35:45.549" endtime="20250227 16:35:45.550"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250227 16:35:45.550" endtime="20250227 16:35:45.550"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:45.554" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:46.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:46.006" level="INFO">${output} = delete: s3://bucket-diiacmavow/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250227 16:35:45.552" endtime="20250227 16:35:46.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:46.007" level="INFO">delete: s3://bucket-diiacmavow/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250227 16:35:46.006" endtime="20250227 16:35:46.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:46.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:46.007" endtime="20250227 16:35:46.007"/>
</kw>
<status status="PASS" starttime="20250227 16:35:45.552" endtime="20250227 16:35:46.008"/>
</kw>
<msg timestamp="20250227 16:35:46.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:45.552" endtime="20250227 16:35:46.008"/>
</kw>
<msg timestamp="20250227 16:35:46.008" level="INFO">${output} = delete: s3://bucket-diiacmavow/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250227 16:35:45.551" endtime="20250227 16:35:46.008"/>
</kw>
<status status="PASS" starttime="20250227 16:35:45.551" endtime="20250227 16:35:46.008"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:46.011" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:46.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:46.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:46.009" endtime="20250227 16:35:46.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:46.015" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:46.015" endtime="20250227 16:35:46.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:46.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:46.016" endtime="20250227 16:35:46.016"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.009" endtime="20250227 16:35:46.016"/>
</kw>
<msg timestamp="20250227 16:35:46.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:46.008" endtime="20250227 16:35:46.016"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.008" endtime="20250227 16:35:46.016"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:46.019" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:46.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:46.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:46.017" endtime="20250227 16:35:46.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:46.023" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:46.023" endtime="20250227 16:35:46.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:46.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:46.023" endtime="20250227 16:35:46.024"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.017" endtime="20250227 16:35:46.024"/>
</kw>
<msg timestamp="20250227 16:35:46.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:46.017" endtime="20250227 16:35:46.024"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.016" endtime="20250227 16:35:46.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:44.440" endtime="20250227 16:35:46.024"/>
</test>
<test id="s1-s14-t22" name="Create&amp;Download big file by multipart upload and get file via part numbers" line="274">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:46.028" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250227 16:35:46.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:46.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:46.026" endtime="20250227 16:35:46.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:46.070" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:46.070" endtime="20250227 16:35:46.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:46.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:46.070" endtime="20250227 16:35:46.071"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.026" endtime="20250227 16:35:46.071"/>
</kw>
<msg timestamp="20250227 16:35:46.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:46.025" endtime="20250227 16:35:46.071"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.025" endtime="20250227 16:35:46.071"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:46.074" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://bucket-diiacmavow/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:46.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:46.796" level="INFO">${output} = 2025-02-27 16:35:46,366 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:46,366 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:46.072" endtime="20250227 16:35:46.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:46.797" level="INFO">2025-02-27 16:35:46,366 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:46,366 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://bucket-diiacmavow/']
2025-02-27 16:35:46,366 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f6337dc5820&gt;
2025-02-27 16:35:46,367 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f63386b0c10&gt;
2025-02-27 16:35:46,367 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f63383a1e50&gt;
2025-02-27 16:35:46,368 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:46,370 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f6337e324c0&gt;
2025-02-27 16:35:46,370 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f6337d77820&gt;
2025-02-27 16:35:46,370 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f6337e49310&gt;
2025-02-27 16:35:46,371 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,371 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f6337d77820&gt;
2025-02-27 16:35:46,371 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f6337e49310&gt;
2025-02-27 16:35:46,372 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,372 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6338371c70&gt;
2025-02-27 16:35:46,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6337cd04c0&gt;
2025-02-27 16:35:46,376 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:46,376 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:46,377 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:46,399 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:46,399 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f63398e69d0&gt;
2025-02-27 16:35:46,405 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:46,413 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:46,432 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:46,435 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:46,436 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f63389e9a60&gt;
2025-02-27 16:35:46,436 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f63389e9820&gt;
2025-02-27 16:35:46,437 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,439 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:46,441 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:46,441 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:46,441 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:46,442 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,442 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:46,442 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f63398e69d0&gt;
2025-02-27 16:35:46,443 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f63389e9a60&gt;
2025-02-27 16:35:46,443 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f63389e9820&gt;
2025-02-27 16:35:46,443 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,445 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:46,446 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:46,446 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:46,446 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,446 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:46,447 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f63398e69d0&gt;
2025-02-27 16:35:46,447 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f63389e9a60&gt;
2025-02-27 16:35:46,447 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f63389e9820&gt;
2025-02-27 16:35:46,448 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,450 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:46,451 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:46,451 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:46,451 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:46,451 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:46,452 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:46,452 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:46,453 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f63370ef820&gt;}) about to wait for the following futures []
2025-02-27 16:35:46,453 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f63370ef820&gt;}) done waiting for dependent futures
2025-02-27 16:35:46,453 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f63370ef820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f63372938e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f63370e7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f63370e7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f63370ec0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f63370ef820&gt;}
2025-02-27 16:35:46,453 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f63370ec0d0&gt; for transfer request: 0.
2025-02-27 16:35:46,453 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f63372938e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f63389344c0&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f63389318b0&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f6338931820&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6338937700&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f63372f36d0&gt;&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f6338931670&gt;
2025-02-27 16:35:46,454 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f63389378b0&gt;
2025-02-27 16:35:46,455 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,455 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:46,455 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:46,455 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:46,455 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f6338931b80&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f6338931280&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f6338937d30&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6338934ee0&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6337293a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f633806c790&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f63372939d0&gt;&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f63389314c0&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f6338937820&gt;
2025-02-27 16:35:46,456 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163546Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163546Z
20250227/us-west-1/s3/aws4_request
11c7caa6852455f3f3e98a057778a1a4b9c421e6afbcdf0155d31bf456fdd6fd
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
439ac9b6a8de267992b8873000afdfe2bdc11cb35940b5922856f66737cb618b
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f633806c820&gt;
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f6338937670&gt;
2025-02-27 16:35:46,457 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f63370ec0d0&gt; for transfer request: 0.
2025-02-27 16:35:46,457 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163546Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=439ac9b6a8de267992b8873000afdfe2bdc11cb35940b5922856f66737cb618b', 'amz-sdk-invocation-id': b'14de9aa5-4694-497e-ab37-b9d4faa57d43', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-27 16:35:46,457 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:46,458 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:46,458 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;]
2025-02-27 16:35:46,459 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f63370ec0d0&gt; for transfer request: 0.
2025-02-27 16:35:46,459 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;
2025-02-27 16:35:46,459 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:46,459 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;]
2025-02-27 16:35:46,459 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;
2025-02-27 16:35:46,459 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f63370ec0d0&gt; for transfer request: 0.
2025-02-27 16:35:46,459 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:46,460 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f63370b7df0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f6337048970&gt;]
2025-02-27 16:35:46,460 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f6337087370&gt;
2025-02-27 16:35:46,460 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:46,471 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploads HTTP/1.1" 200 295
2025-02-27 16:35:46,472 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f6338937b80&gt;
2025-02-27 16:35:46,472 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f63389379d0&gt;
2025-02-27 16:35:46,472 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'vrv5EAO09wEydFo', 'x-amz-request-id': '8f1f9cef-2dbd-4d97-8a99-a405cb033e89', 'Content-Length': '295'}
2025-02-27 16:35:46,472 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;01954843-a0a2-729f-8856-bca598f02900-114076820862795895&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f6338937ca0&gt;
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f633726d760&gt;
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f6337dc1d30&gt;
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f63370b7df0&gt;
2025-02-27 16:35:46,473 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f63372938e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f63370b7100&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895'}
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f63389318b0&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f6338934dc0&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f6338931820&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6338937700&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f63372938e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6337048520&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895'}
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f63372f36d0&gt;&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f6338931670&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f63389318b0&gt;
2025-02-27 16:35:46,474 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f63389378b0&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f6338934dc0&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f6338931820&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6338937700&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f63372f36d0&gt;&gt;
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:46,475 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f6338931670&gt;
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f6338aa58b0&gt;
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f63389378b0&gt;
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:46,476 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f6338aa58b0&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f6338931b80&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f6338931280&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f6338937d30&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6338934ee0&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'RTG5Ynl4HDpoVfgnYYZWOg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6337048520&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6337293a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6337048520&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f633806c790&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f63372939d0&gt;&gt;
2025-02-27 16:35:46,480 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f63389314c0&gt;
2025-02-27 16:35:46,481 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f6338937820&gt;
2025-02-27 16:35:46,481 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,482 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:46,482 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=2&amp;uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895
content-md5:RTG5Ynl4HDpoVfgnYYZWOg==
host:s3g:9878
x-amz-content-sha256:21c79bcba5813a364a4ba6a0f78fdc7d4103cc1c3d25ec45228865237d6b2c86
x-amz-date:20250227T163546Z

content-md5;host;x-amz-content-sha256;x-amz-date
21c79bcba5813a364a4ba6a0f78fdc7d4103cc1c3d25ec45228865237d6b2c86
2025-02-27 16:35:46,482 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163546Z
20250227/us-west-1/s3/aws4_request
69e4c5ba5a7d513435a43dafdd958a99367047ae8287bf31917310ecbf659ee8
2025-02-27 16:35:46,482 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
8ae30801bd20d1218d0b4a0c30bceebd92c9ddc236250353cc3038d68362479b
2025-02-27 16:35:46,482 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f633806c820&gt;
2025-02-27 16:35:46,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f6338937670&gt;
2025-02-27 16:35:46,483 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'RTG5Ynl4HDpoVfgnYYZWOg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163546Z', 'X-Amz-Content-SHA256': b'21c79bcba5813a364a4ba6a0f78fdc7d4103cc1c3d25ec45228865237d6b2c86', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=8ae30801bd20d1218d0b4a0c30bceebd92c9ddc236250353cc3038d68362479b', 'amz-sdk-invocation-id': b'cd54057e-beee-4ff0-9ebf-f84cbca0a7e3', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-27 16:35:46,483 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f6338931b80&gt;
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f6338931280&gt;
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f6338937d30&gt;
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6338934ee0&gt;
2025-02-27 16:35:46,492 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'kgf6T3ttROywizDSwFX3GQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f63370b7100&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6337293a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f63370b7100&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:46,493 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f633806c790&gt;
2025-02-27 16:35:46,493 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f63372939d0&gt;&gt;
2025-02-27 16:35:46,493 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f63389314c0&gt;
2025-02-27 16:35:46,493 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f6338937820&gt;
2025-02-27 16:35:46,493 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,500 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:46,500 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=1&amp;uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895
content-md5:kgf6T3ttROywizDSwFX3GQ==
host:s3g:9878
x-amz-content-sha256:41623cd2a7de401eb76791db2a0c296b2bea3cba91e3f399d331468553f9dcd1
x-amz-date:20250227T163546Z

content-md5;host;x-amz-content-sha256;x-amz-date
41623cd2a7de401eb76791db2a0c296b2bea3cba91e3f399d331468553f9dcd1
2025-02-27 16:35:46,500 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163546Z
20250227/us-west-1/s3/aws4_request
6f867242e31b32d83997ac71b93ec11029391370554428197cccc89feddebd1f
2025-02-27 16:35:46,500 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
3845ca0a539d770b9d5bd896df5828cd48a084820db441c5481bcf71be0094e9
2025-02-27 16:35:46,501 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f633806c820&gt;
2025-02-27 16:35:46,501 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f6338937670&gt;
2025-02-27 16:35:46,501 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'kgf6T3ttROywizDSwFX3GQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163546Z', 'X-Amz-Content-SHA256': b'41623cd2a7de401eb76791db2a0c296b2bea3cba91e3f399d331468553f9dcd1', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=3845ca0a539d770b9d5bd896df5828cd48a084820db441c5481bcf71be0094e9', 'amz-sdk-invocation-id': b'742071ad-9c40-4fc0-a704-b56ce35e1ce1', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-27 16:35:46,501 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-27 16:35:46,502 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-27 16:35:46,503 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (7.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (13.4 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:46,530 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.2 MiB/9.5 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (19.0 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/9.5 MiB (19.0 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (21.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (23.6 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (25.6 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (27.6 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (31.1 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (32.3 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (33.1 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (34.9 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (36.7 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (38.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (37.0 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (38.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (39.7 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (42.4 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (43.8 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (45.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (46.3 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (47.3 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (48.6 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (49.9 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (51.0 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (52.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (53.6 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (54.8 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (56.1 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (57.3 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (58.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (59.2 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (60.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:46,616 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-27 16:35:46,616 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f6338937b80&gt;
2025-02-27 16:35:46,616 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f63389379d0&gt;
2025-02-27 16:35:46,616 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '4531b96279781c3a6855f8276186563a', 'Server': 'Ozone', 'x-amz-id-2': '3u89Rnxr2LVn', 'x-amz-request-id': 'addd785f-2ede-4100-a2dd-97f1898ebaef', 'Content-Length': '0'}
2025-02-27 16:35:46,616 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:46,617 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f6338937ca0&gt;
2025-02-27 16:35:46,617 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f633726d760&gt;
2025-02-27 16:35:46,617 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:46,617 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,617 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f6337dc1d30&gt;
Completed 9.5 MiB/9.5 MiB (58.3 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:46,618 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:46,712 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f6338937b80&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f63389379d0&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '9207fa4f7b6d44ecb08b30d2c055f719', 'Server': 'Ozone', 'x-amz-id-2': '8hwNCUFGfp', 'x-amz-request-id': 'f61884e0-07d4-4331-b7e2-264f69c20115', 'Content-Length': '0'}
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f6338937ca0&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f633726d760&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f6337dc1d30&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f6337048970&gt;
2025-02-27 16:35:46,713 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f63372938e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}, 'upload_id': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'parts': [{'ETag': '9207fa4f7b6d44ecb08b30d2c055f719', 'PartNumber': 1}, {'ETag': '4531b96279781c3a6855f8276186563a', 'PartNumber': 2}]}
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f63389318b0&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f6338931820&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6338937700&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f63372f36d0&gt;&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f6338931670&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f63389378b0&gt;
2025-02-27 16:35:46,714 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f6338931b80&gt;
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,715 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f6338931280&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f6338937d30&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6338934ee0&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;9207fa4f7b6d44ecb08b30d2c055f719&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;4531b96279781c3a6855f8276186563a&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6337293a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-a0a2-729f-8856-bca598f02900-114076820862795895', 'MultipartUpload': {'Parts': [{'ETag': '9207fa4f7b6d44ecb08b30d2c055f719', 'PartNumber': 1}, {'ETag': '4531b96279781c3a6855f8276186563a', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f633806c790&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f63372939d0&gt;&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f63389314c0&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f6338937820&gt;
2025-02-27 16:35:46,716 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f633726d7f0&gt;&gt;
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895
host:s3g:9878
x-amz-content-sha256:5cd8a133f02fe009d97f783fc6777bdb628f6c68033466931d63d5be473f354a
x-amz-date:20250227T163546Z

host;x-amz-content-sha256;x-amz-date
5cd8a133f02fe009d97f783fc6777bdb628f6c68033466931d63d5be473f354a
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163546Z
20250227/us-west-1/s3/aws4_request
14b977eac1c5d3691500cc936fae26b0427bd65fe06ae7ff2bbcf489e13dc69d
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
fee3632a3f234eb05a904441ae18f91f1c8ddf4bf230c4ad302bd2891a2aa692
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f633806c820&gt;
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f6338937670&gt;
2025-02-27 16:35:46,717 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163546Z', 'X-Amz-Content-SHA256': b'5cd8a133f02fe009d97f783fc6777bdb628f6c68033466931d63d5be473f354a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=fee3632a3f234eb05a904441ae18f91f1c8ddf4bf230c4ad302bd2891a2aa692', 'amz-sdk-invocation-id': b'3f6b91c2-b360-4e70-b595-d4dc1b55b8aa', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-27 16:35:46,734 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploadId=01954843-a0a2-729f-8856-bca598f02900-114076820862795895 HTTP/1.1" 200 306
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f6338937b80&gt;
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f63389379d0&gt;
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:46 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'T9RttmwLiVU45f3', 'x-amz-request-id': '1d356c67-f2ac-4496-ab6a-157dc1c2aab9', 'Content-Length': '306'}
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;bucket-diiacmavow&lt;/Location&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"775706f2e7bfe9bb82904f6340445f1e-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f6338937ca0&gt;
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f633726d760&gt;
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f633726d820&gt;&gt;
2025-02-27 16:35:46,735 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f6337dc1d30&gt;
2025-02-27 16:35:46,736 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://bucket-diiacmavow/big_file    
2025-02-27 16:35:46,736 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:46.796" endtime="20250227 16:35:46.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:46.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:46.798" endtime="20250227 16:35:46.798"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.072" endtime="20250227 16:35:46.798"/>
</kw>
<msg timestamp="20250227 16:35:46.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:46.072" endtime="20250227 16:35:46.799"/>
</kw>
<msg timestamp="20250227 16:35:46.800" level="INFO">${output} = 2025-02-27 16:35:46,366 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:46,366 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:46.071" endtime="20250227 16:35:46.800"/>
</kw>
<msg timestamp="20250227 16:35:46.800" level="INFO">${result} = 2025-02-27 16:35:46,366 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:46,366 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:46.071" endtime="20250227 16:35:46.801"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_1_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:46.804" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key big_file /tmp/big_file_1 --part-number 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:47.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:47.334" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 8388608,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:46.802" endtime="20250227 16:35:47.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:47.335" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 8388608,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:47 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:47 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:47.334" endtime="20250227 16:35:47.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:47.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:47.335" endtime="20250227 16:35:47.335"/>
</kw>
<status status="PASS" starttime="20250227 16:35:46.802" endtime="20250227 16:35:47.336"/>
</kw>
<msg timestamp="20250227 16:35:47.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:46.801" endtime="20250227 16:35:47.336"/>
</kw>
<msg timestamp="20250227 16:35:47.336" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 8388608,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:46.801" endtime="20250227 16:35:47.336"/>
</kw>
<msg timestamp="20250227 16:35:47.336" level="INFO">${get_part_1_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 8388608,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:46.801" endtime="20250227 16:35:47.336"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_1_size}</var>
<arg>echo '${get_part_1_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:47.339" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 8388608,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:47 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:47 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:47.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:47.344" level="INFO">${output} = 8388608</msg>
<status status="PASS" starttime="20250227 16:35:47.337" endtime="20250227 16:35:47.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:47.344" level="INFO">8388608</msg>
<status status="PASS" starttime="20250227 16:35:47.344" endtime="20250227 16:35:47.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:47.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:47.344" endtime="20250227 16:35:47.345"/>
</kw>
<msg timestamp="20250227 16:35:47.345" level="INFO">${part_1_size} = 8388608</msg>
<status status="PASS" starttime="20250227 16:35:47.336" endtime="20250227 16:35:47.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_1_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:47.345" endtime="20250227 16:35:47.345"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_2_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_2 --part-number 2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:47.348" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key big_file /tmp/big_file_2 --part-number 2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:47.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:47.872" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 1611392,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:47.346" endtime="20250227 16:35:47.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:47.874" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 1611392,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:47 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:47 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:47.873" endtime="20250227 16:35:47.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:47.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:47.874" endtime="20250227 16:35:47.874"/>
</kw>
<status status="PASS" starttime="20250227 16:35:47.346" endtime="20250227 16:35:47.874"/>
</kw>
<msg timestamp="20250227 16:35:47.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:47.346" endtime="20250227 16:35:47.875"/>
</kw>
<msg timestamp="20250227 16:35:47.875" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 1611392,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:47.346" endtime="20250227 16:35:47.875"/>
</kw>
<msg timestamp="20250227 16:35:47.875" level="INFO">${get_part_2_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 1611392,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250227 16:35:47.345" endtime="20250227 16:35:47.875"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_2_size}</var>
<arg>echo '${get_part_2_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:47.878" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 1611392,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:47 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:47 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:47.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:47.883" level="INFO">${output} = 1611392</msg>
<status status="PASS" starttime="20250227 16:35:47.876" endtime="20250227 16:35:47.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:47.884" level="INFO">1611392</msg>
<status status="PASS" starttime="20250227 16:35:47.884" endtime="20250227 16:35:47.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:47.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:47.884" endtime="20250227 16:35:47.885"/>
</kw>
<msg timestamp="20250227 16:35:47.885" level="INFO">${part_2_size} = 1611392</msg>
<status status="PASS" starttime="20250227 16:35:47.875" endtime="20250227 16:35:47.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_2_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:47.885" endtime="20250227 16:35:47.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>10000000</arg>
<arg>${${part_1_size} + ${part_2_size}}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:47.886" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:47.885" endtime="20250227 16:35:47.886"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_3_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_3 --part-number 3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:47.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key big_file /tmp/big_file_3 --part-number 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.398" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 0,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:47.888" endtime="20250227 16:35:48.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.399" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 0,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:48 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:48.398" endtime="20250227 16:35:48.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.399" endtime="20250227 16:35:48.399"/>
</kw>
<status status="PASS" starttime="20250227 16:35:47.888" endtime="20250227 16:35:48.400"/>
</kw>
<msg timestamp="20250227 16:35:48.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:47.887" endtime="20250227 16:35:48.400"/>
</kw>
<msg timestamp="20250227 16:35:48.400" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 0,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:47.887" endtime="20250227 16:35:48.400"/>
</kw>
<msg timestamp="20250227 16:35:48.400" level="INFO">${get_part_3_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:46 GMT",
    "ContentLength": 0,
    "ETag": "\"775706f2e7bfe9bb82904f6340445f1e-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:47.886" endtime="20250227 16:35:48.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:48.400" endtime="20250227 16:35:48.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:48.401" endtime="20250227 16:35:48.401"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.404" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.849" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:48.402" endtime="20250227 16:35:48.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.850" level="INFO">delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:48.849" endtime="20250227 16:35:48.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.850" endtime="20250227 16:35:48.850"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.402" endtime="20250227 16:35:48.850"/>
</kw>
<msg timestamp="20250227 16:35:48.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.402" endtime="20250227 16:35:48.851"/>
</kw>
<msg timestamp="20250227 16:35:48.851" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:48.401" endtime="20250227 16:35:48.851"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.401" endtime="20250227 16:35:48.851"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.854" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:48.852" endtime="20250227 16:35:48.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.860" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:48.860" endtime="20250227 16:35:48.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.861" endtime="20250227 16:35:48.861"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.851" endtime="20250227 16:35:48.861"/>
</kw>
<msg timestamp="20250227 16:35:48.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.851" endtime="20250227 16:35:48.861"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.851" endtime="20250227 16:35:48.861"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.864" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:48.862" endtime="20250227 16:35:48.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.870" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:48.870" endtime="20250227 16:35:48.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.870" endtime="20250227 16:35:48.871"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.862" endtime="20250227 16:35:48.871"/>
</kw>
<msg timestamp="20250227 16:35:48.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.862" endtime="20250227 16:35:48.871"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.861" endtime="20250227 16:35:48.871"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.874" level="INFO">Running command 'rm -rf /tmp/big_file_2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:48.872" endtime="20250227 16:35:48.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.878" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:48.878" endtime="20250227 16:35:48.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.878" endtime="20250227 16:35:48.879"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.871" endtime="20250227 16:35:48.879"/>
</kw>
<msg timestamp="20250227 16:35:48.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.871" endtime="20250227 16:35:48.879"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.871" endtime="20250227 16:35:48.879"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.882" level="INFO">Running command 'rm -rf /tmp/big_file_3 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:48.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:48.880" endtime="20250227 16:35:48.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.886" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:48.885" endtime="20250227 16:35:48.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.886" endtime="20250227 16:35:48.886"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.879" endtime="20250227 16:35:48.886"/>
</kw>
<msg timestamp="20250227 16:35:48.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.879" endtime="20250227 16:35:48.886"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.879" endtime="20250227 16:35:48.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:46.025" endtime="20250227 16:35:48.887"/>
</test>
<test id="s1-s14-t23" name="Create&amp;Download big file by multipart upload and get file not existed part number" line="296">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.890" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250227 16:35:48.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:48.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:48.888" endtime="20250227 16:35:48.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:48.931" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:48.931" endtime="20250227 16:35:48.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:48.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:48.931" endtime="20250227 16:35:48.932"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.888" endtime="20250227 16:35:48.932"/>
</kw>
<msg timestamp="20250227 16:35:48.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.888" endtime="20250227 16:35:48.932"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.887" endtime="20250227 16:35:48.932"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:48.935" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://bucket-diiacmavow/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:49.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:49.677" level="INFO">${output} = 2025-02-27 16:35:49,231 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:49,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:48.933" endtime="20250227 16:35:49.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:49.678" level="INFO">2025-02-27 16:35:49,231 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:49,231 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://bucket-diiacmavow/']
2025-02-27 16:35:49,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f10f0542820&gt;
2025-02-27 16:35:49,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f10f0e2dc10&gt;
2025-02-27 16:35:49,232 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f10f0b1ee50&gt;
2025-02-27 16:35:49,233 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-27 16:35:49,235 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f10f05af4c0&gt;
2025-02-27 16:35:49,235 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f10f04f4820&gt;
2025-02-27 16:35:49,235 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f10f05c9310&gt;
2025-02-27 16:35:49,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,236 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f10f04f4820&gt;
2025-02-27 16:35:49,236 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f10f05c9310&gt;
2025-02-27 16:35:49,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10f0aeec70&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10f044d4c0&gt;
2025-02-27 16:35:49,241 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-27 16:35:49,241 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-27 16:35:49,242 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-27 16:35:49,264 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-27 16:35:49,264 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f10f20639d0&gt;
2025-02-27 16:35:49,270 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-27 16:35:49,278 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-27 16:35:49,297 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-27 16:35:49,300 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-27 16:35:49,302 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10f1166a60&gt;
2025-02-27 16:35:49,302 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10f1166820&gt;
2025-02-27 16:35:49,302 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,305 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:49,307 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-27 16:35:49,307 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:49,307 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:49,307 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,307 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:49,308 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f10f20639d0&gt;
2025-02-27 16:35:49,308 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10f1166a60&gt;
2025-02-27 16:35:49,309 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10f1166820&gt;
2025-02-27 16:35:49,309 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,310 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:49,312 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:49,312 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:49,312 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,312 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:49,313 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f10f20639d0&gt;
2025-02-27 16:35:49,313 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10f1166a60&gt;
2025-02-27 16:35:49,313 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10f1166820&gt;
2025-02-27 16:35:49,313 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,316 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-27 16:35:49,317 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-27 16:35:49,317 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-27 16:35:49,317 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-27 16:35:49,317 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-27 16:35:49,318 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-27 16:35:49,319 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:49,319 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f10ef86f820&gt;}) about to wait for the following futures []
2025-02-27 16:35:49,319 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f10ef86f820&gt;}) done waiting for dependent futures
2025-02-27 16:35:49,319 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f10ef86f820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10efa908e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f10ef867dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f10ef867e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f10ef86c0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f10ef86f820&gt;}
2025-02-27 16:35:49,320 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f10ef86c0d0&gt; for transfer request: 0.
2025-02-27 16:35:49,320 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:49,320 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-27 16:35:49,320 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:49,320 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10efa908e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}
2025-02-27 16:35:49,320 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f10f10b14c0&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f10f10ad8b0&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f10f10ad820&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f10f10b4700&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10efaf06d0&gt;&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f10f10ad670&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10f10b48b0&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,321 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:49,320 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f10ef86c0d0&gt; for transfer request: 0.
2025-02-27 16:35:49,322 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:49,322 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:49,322 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f10f10adb80&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f10f10ad280&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f10f10b4d30&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f10f10b1ee0&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f10efa90a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f10f07e9790&gt;
2025-02-27 16:35:49,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10efa909d0&gt;&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f10f10ad4c0&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f10f10b4820&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250227T163549Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163549Z
20250227/us-west-1/s3/aws4_request
72646c3c62e092ce0cdd097cecafdc1331d7e62d303f27a8f8d1a9ee6b24ea2c
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
98daa555d3e759f5a28f82d529089c117bcf8d8a348d593dfb4b5599558b8a4f
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f10f07e9820&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f10f10b4670&gt;
2025-02-27 16:35:49,324 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163549Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=98daa555d3e759f5a28f82d529089c117bcf8d8a348d593dfb4b5599558b8a4f', 'amz-sdk-invocation-id': b'2e2cdc25-c709-4d08-b853-bb0476d5168a', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-27 16:35:49,325 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;]
2025-02-27 16:35:49,325 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-27 16:35:49,325 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f10ef86c0d0&gt; for transfer request: 0.
2025-02-27 16:35:49,325 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;
2025-02-27 16:35:49,326 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:49,326 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;]
2025-02-27 16:35:49,326 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;
2025-02-27 16:35:49,326 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f10ef86c0d0&gt; for transfer request: 0.
2025-02-27 16:35:49,326 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-27 16:35:49,326 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7e8280&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee78b970&gt;]
2025-02-27 16:35:49,326 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7c7370&gt;
2025-02-27 16:35:49,327 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:49,343 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploads HTTP/1.1" 200 295
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f10f10b4b80&gt;
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f10f10b49d0&gt;
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'AiSRtX1elztC', 'x-amz-request-id': 'af2c6a6c-1b35-4266-89b5-e4d1147a4376', 'Content-Length': '295'}
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f10f10b4ca0&gt;
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f10efa6b760&gt;
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:49,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f10f053fd30&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee7e8280&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10efa908e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee7c7700&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754'}
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f10f10ad8b0&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f10f10b1dc0&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f10f10ad820&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f10f10b4700&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,345 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10efaf06d0&gt;&gt;
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f10f10ad670&gt;
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10f10b48b0&gt;
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10f12228b0&gt;
2025-02-27 16:35:49,346 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10efa908e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee78b130&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754'}
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f10f10ad8b0&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f10f10b1dc0&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f10f10ad820&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f10f10b4700&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10efaf06d0&gt;&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f10f10ad670&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10f10b48b0&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:49,347 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:49,348 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10f12228b0&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f10f10adb80&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f10f10ad280&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f10f10b4d30&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f10f10b1ee0&gt;
2025-02-27 16:35:49,351 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'V/JAX2BWXoFHH6bFBooLWA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee78b130&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f10efa90a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee78b130&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:49,352 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f10f07e9790&gt;
2025-02-27 16:35:49,352 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10efa909d0&gt;&gt;
2025-02-27 16:35:49,352 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f10f10ad4c0&gt;
2025-02-27 16:35:49,352 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f10f10b4820&gt;
2025-02-27 16:35:49,352 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=2&amp;uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754
content-md5:V/JAX2BWXoFHH6bFBooLWA==
host:s3g:9878
x-amz-content-sha256:c6aa221902acbd5f7a5bc5a52b71caea4c328e55011f64b310f6382080f75860
x-amz-date:20250227T163549Z

content-md5;host;x-amz-content-sha256;x-amz-date
c6aa221902acbd5f7a5bc5a52b71caea4c328e55011f64b310f6382080f75860
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163549Z
20250227/us-west-1/s3/aws4_request
640266892b4aab5543cf099d818b397a7f65799f157b158a8da8b64ca1a57421
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
69b41c948ee814888efbeee7b35ef4278607a761c5e5cda5b7befe0d2ea8872e
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f10f07e9820&gt;
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f10f10b4670&gt;
2025-02-27 16:35:49,354 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'V/JAX2BWXoFHH6bFBooLWA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163549Z', 'X-Amz-Content-SHA256': b'c6aa221902acbd5f7a5bc5a52b71caea4c328e55011f64b310f6382080f75860', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=69b41c948ee814888efbeee7b35ef4278607a761c5e5cda5b7befe0d2ea8872e', 'amz-sdk-invocation-id': b'ebd5f430-25fd-456c-8114-272e4f504080', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-27 16:35:49,355 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-27 16:35:49,363 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f10f10adb80&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f10f10ad280&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f10f10b4d30&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f10f10b1ee0&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '9/P9X30DHR/jEhPn4t4U7Q==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee7c7700&gt;, 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f10efa90a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10ee7c7700&gt;}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f10f07e9790&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10efa909d0&gt;&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f10f10ad4c0&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f10f10b4820&gt;
2025-02-27 16:35:49,364 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,371 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-27 16:35:49,372 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:49,372 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/bucket-diiacmavow/big_file
partNumber=1&amp;uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754
content-md5:9/P9X30DHR/jEhPn4t4U7Q==
host:s3g:9878
x-amz-content-sha256:4ed2234bf6f0db537cf83265c41c5266b0c09467bffd91fd371c4dcb42ac51c3
x-amz-date:20250227T163549Z

content-md5;host;x-amz-content-sha256;x-amz-date
4ed2234bf6f0db537cf83265c41c5266b0c09467bffd91fd371c4dcb42ac51c3
2025-02-27 16:35:49,372 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163549Z
20250227/us-west-1/s3/aws4_request
f1c8df230c0054d6f44aea842e081cdba89155eadf4d0fd127b4c5e15de7f4f8
2025-02-27 16:35:49,373 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
7f7b868403d4c182ae4565c10e4031054dccf8c824d36252e02a8d16f101a5ea
2025-02-27 16:35:49,373 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f10f07e9820&gt;
2025-02-27 16:35:49,373 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f10f10b4670&gt;
2025-02-27 16:35:49,373 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'9/P9X30DHR/jEhPn4t4U7Q==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250227T163549Z', 'X-Amz-Content-SHA256': b'4ed2234bf6f0db537cf83265c41c5266b0c09467bffd91fd371c4dcb42ac51c3', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=7f7b868403d4c182ae4565c10e4031054dccf8c824d36252e02a8d16f101a5ea', 'amz-sdk-invocation-id': b'cdd19291-5b26-4acd-869c-2db513fa3a61', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-27 16:35:49,373 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-27 16:35:49,374 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (7.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (13.4 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (16.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (19.2 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:49,408 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (13.1 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (13.9 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (15.5 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (17.2 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (18.7 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (20.2 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (21.5 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (22.9 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (24.4 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (25.7 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (27.1 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (28.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (29.6 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (30.7 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (31.9 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (33.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (35.5 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:49,489 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f10f10b4b80&gt;
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f10f10b49d0&gt;
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '57f2405f60565e81471fa6c5068a0b58', 'Server': 'Ozone', 'x-amz-id-2': 'Kw3Q0L0IoiTT', 'x-amz-request-id': '0fc19c4b-8dd2-43e2-8cc7-61ecd0cfb5bd', 'Content-Length': '0'}
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f10f10b4ca0&gt;
2025-02-27 16:35:49,490 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f10efa6b760&gt;
2025-02-27 16:35:49,491 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:49,491 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,491 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f10f053fd30&gt;
2025-02-27 16:35:49,491 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.0 MiB/9.5 MiB (35.3 MiB/s) with 1 file(s) remaining  
Completed 6.3 MiB/9.5 MiB (36.6 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (37.8 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (39.1 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (40.3 MiB/s) with 1 file(s) remaining  
Completed 7.3 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (42.7 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (43.8 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (44.8 MiB/s) with 1 file(s) remaining  
Completed 8.3 MiB/9.5 MiB (45.8 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (46.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (47.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (48.9 MiB/s) with 1 file(s) remaining  
Completed 9.3 MiB/9.5 MiB (49.8 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (50.8 MiB/s) with 1 file(s) remaining  
2025-02-27 16:35:49,594 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-27 16:35:49,594 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f10f10b4b80&gt;
2025-02-27 16:35:49,594 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f10f10b49d0&gt;
2025-02-27 16:35:49,594 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'f7f3fd5f7d031d1fe31213e7e2de14ed', 'Server': 'Ozone', 'x-amz-id-2': 'vPjMrb2BYyO', 'x-amz-request-id': '76f82b8a-3a61-462b-9a16-02f3178bc236', 'Content-Length': '0'}
2025-02-27 16:35:49,594 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f10f10b4ca0&gt;
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f10efa6b760&gt;
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f10f053fd30&gt;
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10ee78b970&gt;
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-27 16:35:49,595 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10efa908e0&gt;, 'bucket': 'bucket-diiacmavow', 'key': 'big_file', 'extra_args': {}, 'upload_id': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'parts': [{'ETag': 'f7f3fd5f7d031d1fe31213e7e2de14ed', 'PartNumber': 1}, {'ETag': '57f2405f60565e81471fa6c5068a0b58', 'PartNumber': 2}]}
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f10f10ad8b0&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f10f10ad820&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f10f10b4700&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10efaf06d0&gt;&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f10f10ad670&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10f10b48b0&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'bucket-diiacmavow', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/bucket-diiacmavow
2025-02-27 16:35:49,596 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f10f10adb80&gt;
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f10f10ad280&gt;
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f10f10b4d30&gt;
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f10f10b1ee0&gt;
2025-02-27 16:35:49,597 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;f7f3fd5f7d031d1fe31213e7e2de14ed&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;57f2405f60565e81471fa6c5068a0b58&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/bucket-diiacmavow/big_file', 'url': 'http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f10efa90a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'bucket-diiacmavow', 'params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file', 'UploadId': '01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754', 'MultipartUpload': {'Parts': [{'ETag': 'f7f3fd5f7d031d1fe31213e7e2de14ed', 'PartNumber': 1}, {'ETag': '57f2405f60565e81471fa6c5068a0b58', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'bucket-diiacmavow', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-27 16:35:49,598 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f10f07e9790&gt;
2025-02-27 16:35:49,598 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10efa909d0&gt;&gt;
2025-02-27 16:35:49,598 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f10f10ad4c0&gt;
2025-02-27 16:35:49,598 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f10f10b4820&gt;
2025-02-27 16:35:49,598 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f10efa6b7f0&gt;&gt;
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/bucket-diiacmavow/big_file
uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754
host:s3g:9878
x-amz-content-sha256:9f5850d861f12777b7ebf52c4581ae00fe579442b4472f3474eefbd6bf85417e
x-amz-date:20250227T163549Z

host;x-amz-content-sha256;x-amz-date
9f5850d861f12777b7ebf52c4581ae00fe579442b4472f3474eefbd6bf85417e
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250227T163549Z
20250227/us-west-1/s3/aws4_request
298e858e8aeb94c7074cea6ca049525a7583b18670f7c6a8a6ee80a951776746
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
a5db683d1e66f8122efd2d16e1fe3cfa517b448d79f39d0cecbda7205cb44331
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f10f07e9820&gt;
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f10f10b4670&gt;
2025-02-27 16:35:49,599 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250227T163549Z', 'X-Amz-Content-SHA256': b'9f5850d861f12777b7ebf52c4581ae00fe579442b4472f3474eefbd6bf85417e', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250227/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=a5db683d1e66f8122efd2d16e1fe3cfa517b448d79f39d0cecbda7205cb44331', 'amz-sdk-invocation-id': b'faee29fd-482c-4c94-9464-1cf225b22e91', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-27 16:35:49,619 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /bucket-diiacmavow/big_file?uploadId=01954843-abd9-76ae-8d9b-868fdca82570-114076821050949754 HTTP/1.1" 200 306
2025-02-27 16:35:49,620 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f10f10b4b80&gt;
2025-02-27 16:35:49,620 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f10f10b49d0&gt;
2025-02-27 16:35:49,620 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Thu, 27 Feb 2025 16:35:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'vADWOrjzu', 'x-amz-request-id': 'a90554d0-a703-4046-9123-d30a7ccacaaf', 'Content-Length': '306'}
2025-02-27 16:35:49,620 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;bucket-diiacmavow&lt;/Location&gt;&lt;Bucket&gt;bucket-diiacmavow&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"1c0632ee11af3bc784d8b1f8d23c74cd-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f10f10b4ca0&gt;
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f10efa6b760&gt;
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f10efa6b820&gt;&gt;
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f10f053fd30&gt;
2025-02-27 16:35:49,621 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://bucket-diiacmavow/big_file    
2025-02-27 16:35:49,622 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250227 16:35:49.677" endtime="20250227 16:35:49.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:49.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:49.679" endtime="20250227 16:35:49.679"/>
</kw>
<status status="PASS" starttime="20250227 16:35:48.933" endtime="20250227 16:35:49.679"/>
</kw>
<msg timestamp="20250227 16:35:49.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:48.933" endtime="20250227 16:35:49.680"/>
</kw>
<msg timestamp="20250227 16:35:49.681" level="INFO">${output} = 2025-02-27 16:35:49,231 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:49,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:48.933" endtime="20250227 16:35:49.681"/>
</kw>
<msg timestamp="20250227 16:35:49.681" level="INFO">${result} = 2025-02-27 16:35:49,231 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-27 16:35:49,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250227 16:35:48.932" endtime="20250227 16:35:49.681"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_99_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 99</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:49.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key big_file /tmp/big_file_1 --part-number 99 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:50.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:50.223" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:49 GMT",
    "ContentLength": 0,
    "ETag": "\"1c0632ee11af3bc784d8b1f8d23c74cd-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:49.683" endtime="20250227 16:35:50.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:50.224" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:49 GMT",
    "ContentLength": 0,
    "ETag": "\"1c0632ee11af3bc784d8b1f8d23c74cd-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:50 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:50 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:50.224" endtime="20250227 16:35:50.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:50.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:50.225" endtime="20250227 16:35:50.225"/>
</kw>
<status status="PASS" starttime="20250227 16:35:49.682" endtime="20250227 16:35:50.225"/>
</kw>
<msg timestamp="20250227 16:35:50.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:49.682" endtime="20250227 16:35:50.225"/>
</kw>
<msg timestamp="20250227 16:35:50.225" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:49 GMT",
    "ContentLength": 0,
    "ETag": "\"1c0632ee11af3bc784d8b1f8d23c74cd-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:49.682" endtime="20250227 16:35:50.225"/>
</kw>
<msg timestamp="20250227 16:35:50.226" level="INFO">${get_part_99_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:49 GMT",
    "ContentLength": 0,
    "ETag": "\"1c0632ee11af3bc784d8b1f8d23c74cd-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250227 16:35:49.681" endtime="20250227 16:35:50.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:50.226" endtime="20250227 16:35:50.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:50.226" endtime="20250227 16:35:50.226"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:50.230" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-diiacmavow/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:50.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:50.674" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:50.227" endtime="20250227 16:35:50.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:50.675" level="INFO">delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:50.675" endtime="20250227 16:35:50.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:50.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:50.675" endtime="20250227 16:35:50.676"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.227" endtime="20250227 16:35:50.676"/>
</kw>
<msg timestamp="20250227 16:35:50.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.227" endtime="20250227 16:35:50.676"/>
</kw>
<msg timestamp="20250227 16:35:50.676" level="INFO">${output} = delete: s3://bucket-diiacmavow/big_file</msg>
<status status="PASS" starttime="20250227 16:35:50.227" endtime="20250227 16:35:50.676"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.226" endtime="20250227 16:35:50.676"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:50.680" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:50.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:50.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:50.677" endtime="20250227 16:35:50.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:50.686" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:50.686" endtime="20250227 16:35:50.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:50.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:50.686" endtime="20250227 16:35:50.686"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.677" endtime="20250227 16:35:50.687"/>
</kw>
<msg timestamp="20250227 16:35:50.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.677" endtime="20250227 16:35:50.687"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.676" endtime="20250227 16:35:50.687"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:50.690" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:50.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:50.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:50.688" endtime="20250227 16:35:50.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:50.694" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:50.694" endtime="20250227 16:35:50.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:50.694" endtime="20250227 16:35:50.695"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.687" endtime="20250227 16:35:50.695"/>
</kw>
<msg timestamp="20250227 16:35:50.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.687" endtime="20250227 16:35:50.695"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.687" endtime="20250227 16:35:50.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:48.887" endtime="20250227 16:35:50.695"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:35:21.200" endtime="20250227 16:35:50.696"/>
</suite>
<suite id="s1-s15" name="Objecttagging" source="/opt/hadoop/smoketest/s3/objecttagging.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:50.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.707"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.707"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.708" endtime="20250227 16:35:50.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.708" endtime="20250227 16:35:50.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.708" endtime="20250227 16:35:50.708"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:50.708" endtime="20250227 16:35:50.708"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.707" endtime="20250227 16:35:50.708"/>
</kw>
<test id="s1-s15-t1" name="Put object tagging" line="33">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:50.711" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250227 16:35:50.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:50.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:50.709" endtime="20250227 16:35:50.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:50.713" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:50.713" endtime="20250227 16:35:50.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:50.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:50.714" endtime="20250227 16:35:50.714"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.709" endtime="20250227 16:35:50.714"/>
</kw>
<msg timestamp="20250227 16:35:50.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.709" endtime="20250227 16:35:50.714"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.708" endtime="20250227 16:35:50.714"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:50.718" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:51.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:51.209" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:50.716" endtime="20250227 16:35:51.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:51.210" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:51.210" endtime="20250227 16:35:51.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:51.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:51.210" endtime="20250227 16:35:51.211"/>
</kw>
<status status="PASS" starttime="20250227 16:35:50.715" endtime="20250227 16:35:51.211"/>
</kw>
<msg timestamp="20250227 16:35:51.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:50.715" endtime="20250227 16:35:51.211"/>
</kw>
<msg timestamp="20250227 16:35:51.211" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:50.715" endtime="20250227 16:35:51.211"/>
</kw>
<msg timestamp="20250227 16:35:51.211" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250227 16:35:50.714" endtime="20250227 16:35:51.211"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:51.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-diiacmavow --prefix ozone-test-7231122653/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:51.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:51.680" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:51.161Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:51.213" endtime="20250227 16:35:51.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:51.681" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:51.161Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-7231122653/putobject/key=value/zerobyte",
            "LastModified": "2025-02-27T16:35:22.630Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7231122653/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250227 16:35:51.681" endtime="20250227 16:35:51.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:51.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:51.681" endtime="20250227 16:35:51.682"/>
</kw>
<status status="PASS" starttime="20250227 16:35:51.212" endtime="20250227 16:35:51.682"/>
</kw>
<msg timestamp="20250227 16:35:51.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:51.212" endtime="20250227 16:35:51.682"/>
</kw>
<msg timestamp="20250227 16:35:51.682" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:51.161Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:51.212" endtime="20250227 16:35:51.682"/>
</kw>
<msg timestamp="20250227 16:35:51.682" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7231122653/putobject/key=value/f1",
            "LastModified": "2025-02-27T16:35:51.161Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250227 16:35:51.212" endtime="20250227 16:35:51.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:51.682" endtime="20250227 16:35:51.683"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:51.686" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:52.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:52.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:51.684" endtime="20250227 16:35:52.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:52.156" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:52.155" endtime="20250227 16:35:52.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:52.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:52.156" endtime="20250227 16:35:52.156"/>
</kw>
<status status="PASS" starttime="20250227 16:35:51.684" endtime="20250227 16:35:52.157"/>
</kw>
<msg timestamp="20250227 16:35:52.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:51.684" endtime="20250227 16:35:52.157"/>
</kw>
<msg timestamp="20250227 16:35:52.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:51.683" endtime="20250227 16:35:52.157"/>
</kw>
<msg timestamp="20250227 16:35:52.157" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:51.683" endtime="20250227 16:35:52.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:52.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:52.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:52.619" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:52.158" endtime="20250227 16:35:52.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:52.620" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:52 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:52 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:52.619" endtime="20250227 16:35:52.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:52.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:52.620" endtime="20250227 16:35:52.620"/>
</kw>
<status status="PASS" starttime="20250227 16:35:52.158" endtime="20250227 16:35:52.621"/>
</kw>
<msg timestamp="20250227 16:35:52.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:52.158" endtime="20250227 16:35:52.621"/>
</kw>
<msg timestamp="20250227 16:35:52.621" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:52.158" endtime="20250227 16:35:52.621"/>
</kw>
<msg timestamp="20250227 16:35:52.621" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:52.157" endtime="20250227 16:35:52.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:52.621" endtime="20250227 16:35:52.621"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:52.624" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:52 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:52 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:52.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:52.629" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250227 16:35:52.622" endtime="20250227 16:35:52.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:52.630" level="INFO">1</msg>
<status status="PASS" starttime="20250227 16:35:52.630" endtime="20250227 16:35:52.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:52.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:52.630" endtime="20250227 16:35:52.631"/>
</kw>
<msg timestamp="20250227 16:35:52.631" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250227 16:35:52.622" endtime="20250227 16:35:52.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:52.631" endtime="20250227 16:35:52.631"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:52.634" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:53.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:53.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:52.633" endtime="20250227 16:35:53.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:53.095" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:53.095" endtime="20250227 16:35:53.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:53.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:53.096" endtime="20250227 16:35:53.096"/>
</kw>
<status status="PASS" starttime="20250227 16:35:52.632" endtime="20250227 16:35:53.096"/>
</kw>
<msg timestamp="20250227 16:35:53.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:52.632" endtime="20250227 16:35:53.096"/>
</kw>
<msg timestamp="20250227 16:35:53.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:52.632" endtime="20250227 16:35:53.096"/>
</kw>
<msg timestamp="20250227 16:35:53.097" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:52.631" endtime="20250227 16:35:53.097"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:53.100" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:53.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:53.557" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:53.098" endtime="20250227 16:35:53.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:53.558" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:53 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:53 GMT"
}</msg>
<status status="PASS" starttime="20250227 16:35:53.558" endtime="20250227 16:35:53.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:53.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:53.558" endtime="20250227 16:35:53.559"/>
</kw>
<status status="PASS" starttime="20250227 16:35:53.098" endtime="20250227 16:35:53.559"/>
</kw>
<msg timestamp="20250227 16:35:53.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:53.098" endtime="20250227 16:35:53.559"/>
</kw>
<msg timestamp="20250227 16:35:53.559" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:53.097" endtime="20250227 16:35:53.559"/>
</kw>
<msg timestamp="20250227 16:35:53.559" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250227 16:35:53.097" endtime="20250227 16:35:53.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:53.559" endtime="20250227 16:35:53.560"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:53.562" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 27 Feb 2025 16:35:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 27 Feb 2025 16:35:53 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Thu, 27 Feb 2025 16:35:53 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:53.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:53.567" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:35:53.560" endtime="20250227 16:35:53.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:53.568" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:35:53.568" endtime="20250227 16:35:53.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:53.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:53.568" endtime="20250227 16:35:53.569"/>
</kw>
<msg timestamp="20250227 16:35:53.569" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:35:53.560" endtime="20250227 16:35:53.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:53.569" endtime="20250227 16:35:53.569"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:53.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:54.030" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:35:54.030" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:35:53.570" endtime="20250227 16:35:54.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:54.031" level="INFO">
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:35:54.031" endtime="20250227 16:35:54.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:54.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:54.032" endtime="20250227 16:35:54.032"/>
</kw>
<msg timestamp="20250227 16:35:54.032" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:35:53.570" endtime="20250227 16:35:54.032"/>
</kw>
<msg timestamp="20250227 16:35:54.032" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250227 16:35:53.569" endtime="20250227 16:35:54.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:54.032" endtime="20250227 16:35:54.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:50.708" endtime="20250227 16:35:54.033"/>
</test>
<test id="s1-s15-t2" name="Get object tagging" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:54.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:54.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:54.491" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250227 16:35:54.035" endtime="20250227 16:35:54.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:54.492" level="INFO">{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250227 16:35:54.491" endtime="20250227 16:35:54.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:54.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:54.492" endtime="20250227 16:35:54.492"/>
</kw>
<status status="PASS" starttime="20250227 16:35:54.035" endtime="20250227 16:35:54.492"/>
</kw>
<msg timestamp="20250227 16:35:54.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:54.035" endtime="20250227 16:35:54.492"/>
</kw>
<msg timestamp="20250227 16:35:54.492" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250227 16:35:54.034" endtime="20250227 16:35:54.493"/>
</kw>
<msg timestamp="20250227 16:35:54.493" level="INFO">${result} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250227 16:35:54.034" endtime="20250227 16:35:54.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:54.493" endtime="20250227 16:35:54.493"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:54.496" level="INFO">Running command 'echo '{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:54.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:54.501" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250227 16:35:54.494" endtime="20250227 16:35:54.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:54.501" level="INFO">2</msg>
<status status="PASS" starttime="20250227 16:35:54.501" endtime="20250227 16:35:54.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:54.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:54.502" endtime="20250227 16:35:54.502"/>
</kw>
<msg timestamp="20250227 16:35:54.502" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250227 16:35:54.493" endtime="20250227 16:35:54.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:54.502" endtime="20250227 16:35:54.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:54.033" endtime="20250227 16:35:54.503"/>
</test>
<test id="s1-s15-t3" name="Delete object tagging" line="67">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:54.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:54.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:54.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:54.505" endtime="20250227 16:35:54.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:54.959" level="INFO"/>
<status status="PASS" starttime="20250227 16:35:54.958" endtime="20250227 16:35:54.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:54.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:54.959" endtime="20250227 16:35:54.959"/>
</kw>
<status status="PASS" starttime="20250227 16:35:54.505" endtime="20250227 16:35:54.959"/>
</kw>
<msg timestamp="20250227 16:35:54.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:54.504" endtime="20250227 16:35:54.959"/>
</kw>
<msg timestamp="20250227 16:35:54.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:35:54.504" endtime="20250227 16:35:54.960"/>
</kw>
<msg timestamp="20250227 16:35:54.960" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:35:54.504" endtime="20250227 16:35:54.960"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:54.964" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket bucket-diiacmavow --key ozone-test-7231122653/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:55.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:55.412" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250227 16:35:54.961" endtime="20250227 16:35:55.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:55.412" level="INFO">{
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250227 16:35:55.412" endtime="20250227 16:35:55.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:55.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:55.413" endtime="20250227 16:35:55.413"/>
</kw>
<status status="PASS" starttime="20250227 16:35:54.961" endtime="20250227 16:35:55.413"/>
</kw>
<msg timestamp="20250227 16:35:55.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:54.961" endtime="20250227 16:35:55.413"/>
</kw>
<msg timestamp="20250227 16:35:55.413" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250227 16:35:54.960" endtime="20250227 16:35:55.413"/>
</kw>
<msg timestamp="20250227 16:35:55.414" level="INFO">${result} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250227 16:35:54.960" endtime="20250227 16:35:55.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:35:55.414" endtime="20250227 16:35:55.414"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:55.417" level="INFO">Running command 'echo '{
    "TagSet": []
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:55.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:55.422" level="INFO">${output} = 0</msg>
<status status="PASS" starttime="20250227 16:35:55.414" endtime="20250227 16:35:55.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:55.422" level="INFO">0</msg>
<status status="PASS" starttime="20250227 16:35:55.422" endtime="20250227 16:35:55.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:55.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:55.422" endtime="20250227 16:35:55.423"/>
</kw>
<msg timestamp="20250227 16:35:55.423" level="INFO">${tagCount} = 0</msg>
<status status="PASS" starttime="20250227 16:35:55.414" endtime="20250227 16:35:55.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>0</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250227 16:35:55.423" endtime="20250227 16:35:55.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:35:54.503" endtime="20250227 16:35:55.424"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250227 16:35:50.700" endtime="20250227 16:35:55.424"/>
</suite>
<suite id="s1-s16" name="Rclone" source="/opt/hadoop/smoketest/s3/rclone.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:35:55.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:55.432" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.433" endtime="20250227 16:35:55.434"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:35:55.434" endtime="20250227 16:35:55.434"/>
</kw>
<status status="PASS" starttime="20250227 16:35:55.432" endtime="20250227 16:35:55.434"/>
</kw>
<test id="s1-s16-t1" name="Rclone Client Test" line="41">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:55.437" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:55.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:55.770" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:35:55.435" endtime="20250227 16:35:55.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:55.771" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:35:55.771" endtime="20250227 16:35:55.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:55.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:55.771" endtime="20250227 16:35:55.772"/>
</kw>
<status status="PASS" starttime="20250227 16:35:55.435" endtime="20250227 16:35:55.772"/>
</kw>
<msg timestamp="20250227 16:35:55.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:55.435" endtime="20250227 16:35:55.772"/>
</kw>
<msg timestamp="20250227 16:35:55.772" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:35:55.434" endtime="20250227 16:35:55.772"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:55.775" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:56.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:56.109" level="INFO">${output} = b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:35:55.773" endtime="20250227 16:35:56.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:56.110" level="INFO">b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:35:56.109" endtime="20250227 16:35:56.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:56.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:56.110" endtime="20250227 16:35:56.110"/>
</kw>
<status status="PASS" starttime="20250227 16:35:55.773" endtime="20250227 16:35:56.111"/>
</kw>
<msg timestamp="20250227 16:35:56.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:55.773" endtime="20250227 16:35:56.111"/>
</kw>
<msg timestamp="20250227 16:35:56.111" level="INFO">${secret} = b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17</msg>
<status status="PASS" starttime="20250227 16:35:55.772" endtime="20250227 16:35:56.111"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:35:56.111" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'b2d0878c68510bc097ecb6a916609efbed931f6f4b18d5ec7961baad465d1a17'.</msg>
<status status="PASS" starttime="20250227 16:35:56.111" endtime="20250227 16:35:56.112"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:35:56.112" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250227 16:35:56.112" endtime="20250227 16:35:56.112"/>
</kw>
<status status="PASS" starttime="20250227 16:35:55.434" endtime="20250227 16:35:56.112"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_CONFIG</arg>
<arg>${RCLONE_CONFIG_PATH}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:35:56.113" level="INFO">Environment variable 'RCLONE_CONFIG' set to value '/tmp/rclone.conf'.</msg>
<status status="PASS" starttime="20250227 16:35:56.112" endtime="20250227 16:35:56.113"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_VERBOSE</arg>
<arg>${RCLONE_VERBOSE_LEVEL}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250227 16:35:56.113" level="INFO">Environment variable 'RCLONE_VERBOSE' set to value '2'.</msg>
<status status="PASS" starttime="20250227 16:35:56.113" endtime="20250227 16:35:56.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone config create ${RCLONE_CONFIG_NAME} s3 env_auth=true provider=Other endpoint=${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:56.117" level="INFO">Running command 'rclone config create ozone s3 env_auth=true provider=Other endpoint=http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:35:56.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:35:56.336" level="INFO">${output} = 2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/27 16:35:56...</msg>
<status status="PASS" starttime="20250227 16:35:56.114" endtime="20250227 16:35:56.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:35:56.337" level="INFO">2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/27 16:35:56 NOTICE: Config file "/tmp/rclone.conf" not found - using defaults
2025/02/27 16:35:56 DEBUG : Saving config "env_auth" in section "ozone" of the config file
2025/02/27 16:35:56 DEBUG : Using default permissions for config file: -rw-------
2025/02/27 16:35:56 DEBUG : Saving config "provider" in section "ozone" of the config file
2025/02/27 16:35:56 DEBUG : Saving config "endpoint" in section "ozone" of the config file
2025/02/27 16:35:56 DEBUG : ozone: config in: state="", result=""
2025/02/27 16:35:56 DEBUG : ozone: config out: out=&lt;nil&gt;, err=&lt;nil&gt;
[ozone]
type = s3
env_auth = true
provider = Other
endpoint = http://s3g:9878
2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" finishing with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]</msg>
<status status="PASS" starttime="20250227 16:35:56.336" endtime="20250227 16:35:56.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:35:56.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:35:56.337" endtime="20250227 16:35:56.337"/>
</kw>
<status status="PASS" starttime="20250227 16:35:56.114" endtime="20250227 16:35:56.337"/>
</kw>
<msg timestamp="20250227 16:35:56.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:56.114" endtime="20250227 16:35:56.337"/>
</kw>
<msg timestamp="20250227 16:35:56.337" level="INFO">${result} = 2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/27 16:35:56...</msg>
<status status="PASS" starttime="20250227 16:35:56.113" endtime="20250227 16:35:56.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone copy /opt/hadoop/smoketest ${RCLONE_CONFIG_NAME}:/${S3_VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:35:56.341" level="INFO">Running command 'rclone copy /opt/hadoop/smoketest ozone:/s3v/bucket-diiacmavow 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:00.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:00.896" level="INFO">${output} = 2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/bucket-diiacmavow"]
2025/02/27 16:35:56 DEBUG : Creating backend wit...</msg>
<status status="PASS" starttime="20250227 16:35:56.339" endtime="20250227 16:36:00.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:00.898" level="INFO">2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/bucket-diiacmavow"]
2025/02/27 16:35:56 DEBUG : Creating backend with remote "/opt/hadoop/smoketest"
2025/02/27 16:35:56 DEBUG : Using config file from "/tmp/rclone.conf"
2025/02/27 16:35:56 DEBUG : Creating backend with remote "ozone:/s3v/bucket-diiacmavow"
2025/02/27 16:35:56 DEBUG : fs cache: renaming cache item "ozone:/s3v/bucket-diiacmavow" to be canonical "ozone:s3v/bucket-diiacmavow"
2025/02/27 16:35:56 DEBUG : .env: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : README.md: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : __init__.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : commonlib.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : createbucketenv.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : createmrenv.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : csi.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : kinit-hadoop.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : kinit.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : mapreduce.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : test.sh: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : testlib.sh: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-corrupt-block.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-dead-datanode.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-ldb.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-stale-datanode.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-tests-ec3-2.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-tests-ec6-3.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : debug/ozone-debug.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ec/basic.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ec/lib.resource: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ec/read.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ec/rewrite.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ec/upgrade-ec-check.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/basic.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/getconf.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/links.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/ozone-shell-lib.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/ozone-shell-single.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/ozone-shell.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : basic/single_node.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/admin.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/cert.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/container.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/datanode.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/lease-recovery.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/pipeline.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/printTopology.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : cli/classpath.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : cli/envvars.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : fcq/s3_om_fcq.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : gdpr/gdpr.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : balancer/testBalancer.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/echoRPCLoad.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/generate-chunk.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/generate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : hsync/upgrade-hsync-check.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/hsync.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/metadata-generate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : grpc/grpc-om-s3-metrics.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : httpfs/operations.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : httpfs/operations_tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : auditparser/auditparser.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/dn-one-rocksdb.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/dn.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/om.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/read.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/recon.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/scm.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/setup.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : compatibility/write.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/fs.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/fs_tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/os.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/os_tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/string.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : lib/string_tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozone-lib/freon.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozone-lib/shell.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozone-lib/shell_tests.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozonefs/hadoopo3fs.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/data-creation-before-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/data-validation-after-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-cancel-prepare.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozonefs/ozonefs.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : ozonefs/setup.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : recon/recon-api.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : recon/recon-nssummary.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : recon/recon-taskstatus.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : repair/bucket-encryption.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : replication/wait.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : scmha/primordial-scm.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : scmha/root-ca-rotation.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : scmha/scm-decommission.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : scmha/scm-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : om-ratis/testOMAdminCmd.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : snapshot/snapshot-acls.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : snapshot/snapshot-fs.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : snapshot/snapshot-setup.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : snapshot/snapshot-sh.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : snapshot/upgrade-snapshot-check.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : spnego/web.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/reconfigure.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/replicationmanager.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/safemode.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : admincli/scmrole.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/read-write-key.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/remove.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/validate-chunk.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : freon/validate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/MultipartUpload.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/README.md: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/__init__.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/awss3.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/awss3virtualhost.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : topology/cli.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/boto3.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/boto_client.py: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/bucketcreate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/bucketdelete.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/buckethead.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/bucketlist.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/commonawslib.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/freon.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/mpu_lib.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objectcopy.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objectcopys3a.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objectdelete.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objecthead.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objectmultidelete.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objectputget.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/objecttagging.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/rclone.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/s3_compatbility_check.sh: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/s3_getsecret.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/secretgenerate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/secretrevoke.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : s3/webui.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : upgrade/check-finalization.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-fetch-key.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : upgrade/finalize.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : upgrade/generate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-prepare.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : upgrade/prepare.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-prepared.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : upgrade/validate.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/om-roles.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/S3-secret.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : omha/testOMHA.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/admin-cert.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/ozone-secure-fs.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/ozone-secure-owner-s3.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/ozone-secure-s3.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/ozone-secure-tenant.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : security/ozone-secure-token.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : topology/loaddata.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : topology/readdata.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : failing/test1.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : failing/test2.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : certrotation/cert-rotation.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : certrotation/root-ca-rotation-client-checks.robot: Need to transfer - File not found at Destination
2025/02/27 16:35:56 DEBUG : S3 bucket s3v path bucket-diiacmavow: Waiting for checks to finish
2025/02/27 16:35:56 DEBUG : S3 bucket s3v path bucket-diiacmavow: Waiting for transfers to finish
2025/02/27 16:35:56 INFO  : S3 bucket s3v path bucket-diiacmavow: Bucket "s3v" created with ACL ""
2025/02/27 16:35:56 DEBUG : commonlib.robot: md5 = f35ee74dcb4b089c1dd2a06c8d59a7cb OK
2025/02/27 16:35:56 INFO  : commonlib.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : README.md: md5 = 17df896fbc01fff5fb5b9db87fd9e014 OK
2025/02/27 16:35:56 INFO  : README.md: Copied (new)
2025/02/27 16:35:56 DEBUG : .env: md5 = 856bb7fb5c872feedbd56751ab2de082 OK
2025/02/27 16:35:56 INFO  : .env: Copied (new)
2025/02/27 16:35:56 DEBUG : __init__.robot: md5 = 3e4f357bbd75e1f408f5730125e3d69f OK
2025/02/27 16:35:56 INFO  : __init__.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : kinit-hadoop.robot: md5 = 8401390e0e40e74a4185c2b7f4187b01 OK
2025/02/27 16:35:56 INFO  : kinit-hadoop.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : createbucketenv.robot: md5 = c879380e6beff95ce11e3a64a51f113e OK
2025/02/27 16:35:56 INFO  : createbucketenv.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : csi.robot: md5 = b626d511d7707277a894085bf5374e83 OK
2025/02/27 16:35:56 INFO  : csi.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : createmrenv.robot: md5 = 76f31b9aa05ce60f5b2960a224ba8cfd OK
2025/02/27 16:35:56 INFO  : createmrenv.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : mapreduce.robot: md5 = 0f9c6faf7612a3a08a73382cc5cc3285 OK
2025/02/27 16:35:56 INFO  : mapreduce.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : kinit.robot: md5 = ff777fbe3aa12927c1de1e4a3d0126bf OK
2025/02/27 16:35:56 INFO  : kinit.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : test.sh: md5 = ed5682637036980f884a70c9d898cffd OK
2025/02/27 16:35:56 INFO  : test.sh: Copied (new)
2025/02/27 16:35:56 DEBUG : testlib.sh: md5 = 854af5a9711319c1c1d472e1919f5980 OK
2025/02/27 16:35:56 INFO  : testlib.sh: Copied (new)
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-dead-datanode.robot: md5 = 4aef4e89c8971dfb52dfc5cbaa3478e2 OK
2025/02/27 16:35:56 INFO  : debug/ozone-debug-dead-datanode.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-corrupt-block.robot: md5 = f556fab8e3925a4fea40eb972f71bc27 OK
2025/02/27 16:35:56 INFO  : debug/ozone-debug-corrupt-block.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-stale-datanode.robot: md5 = 9997cee365bb0695b2d9d37c2752b77c OK
2025/02/27 16:35:56 INFO  : debug/ozone-debug-stale-datanode.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-ldb.robot: md5 = b8ccca17d5a70220be57068aaabdf361 OK
2025/02/27 16:35:56 INFO  : debug/ozone-debug-ldb.robot: Copied (new)
2025/02/27 16:35:56 DEBUG : debug/ozone-debug-tests-ec3-2.robot: md5 = 0b4321adf32a1d975fde7defdd1b0688 OK
2025/02/27 16:35:56 INFO  : debug/ozone-debug-tests-ec3-2.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : debug/ozone-debug-tests.robot: md5 = a81feeb100f6d06d2844a10a0c3cfa0e OK
2025/02/27 16:35:57 INFO  : debug/ozone-debug-tests.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : debug/ozone-debug-tests-ec6-3.robot: md5 = 3261caa6be3a690633cc90c05d6e57c2 OK
2025/02/27 16:35:57 INFO  : debug/ozone-debug-tests-ec6-3.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : debug/ozone-debug.robot: md5 = 04d77beb89b0bf6d7c25ff2a81b8abe7 OK
2025/02/27 16:35:57 INFO  : debug/ozone-debug.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : ec/basic.robot: md5 = 5c31a5db433ed08496f786ee27531a8e OK
2025/02/27 16:35:57 INFO  : ec/basic.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : ec/lib.resource: md5 = 9db19e6c4eec84a56e1527a0e5c0eedb OK
2025/02/27 16:35:57 INFO  : ec/lib.resource: Copied (new)
2025/02/27 16:35:57 DEBUG : ec/rewrite.robot: md5 = 58ee9e6157cf8e88593d686d55eebea5 OK
2025/02/27 16:35:57 INFO  : ec/rewrite.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : ec/read.robot: md5 = 6a1409d13888ee6c452afae4e1fa5440 OK
2025/02/27 16:35:57 INFO  : ec/read.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : ec/upgrade-ec-check.robot: md5 = 98acf9175a001fb901e6fc90808a6c5b OK
2025/02/27 16:35:57 INFO  : ec/upgrade-ec-check.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/basic.robot: md5 = 82a250b46e17af336904e2a40ae44f7c OK
2025/02/27 16:35:57 INFO  : basic/basic.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/links.robot: md5 = e12a2214f323103b90e5dc88e00d771a OK
2025/02/27 16:35:57 INFO  : basic/links.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/getconf.robot: md5 = e4b3cc6aba745ad47ae7096b96b696d7 OK
2025/02/27 16:35:57 INFO  : basic/getconf.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/ozone-shell-lib.robot: md5 = 61d5fbea8cc2fe5b99d9b929ace79b7b OK
2025/02/27 16:35:57 INFO  : basic/ozone-shell-lib.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/ozone-shell-single.robot: md5 = 91830dc70ef59cdfc3776547feecf417 OK
2025/02/27 16:35:57 INFO  : basic/ozone-shell-single.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/ozone-shell.robot: md5 = 3afa3f07707cfbf3931b321af6db8332 OK
2025/02/27 16:35:57 INFO  : basic/ozone-shell.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : basic/single_node.robot: md5 = 83014215421eac19113e5d9e73d3b5d8 OK
2025/02/27 16:35:57 INFO  : basic/single_node.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/admin.robot: md5 = d39b70dc555c6c987f6cc5bed2811b3d OK
2025/02/27 16:35:57 INFO  : admincli/admin.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/cert.robot: md5 = 77dfdeefa42fc03d3ad817a2764b9278 OK
2025/02/27 16:35:57 INFO  : admincli/cert.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/container.robot: md5 = a7eb0d23c26a124b37bf2286589a01d2 OK
2025/02/27 16:35:57 INFO  : admincli/container.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/datanode.robot: md5 = b80f648efc34bae344513a2bbf822420 OK
2025/02/27 16:35:57 INFO  : admincli/datanode.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/lease-recovery.robot: md5 = dedf24150a762af48094f7ac0fb0cf46 OK
2025/02/27 16:35:57 INFO  : admincli/lease-recovery.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/pipeline.robot: md5 = f21de9178c946f815dca4591c48b6dce OK
2025/02/27 16:35:57 INFO  : admincli/pipeline.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : cli/classpath.robot: md5 = 56071fa2cdcf819011667d597f0de700 OK
2025/02/27 16:35:57 INFO  : cli/classpath.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : admincli/printTopology.robot: md5 = b13fb6db17d23a519907f231ccf56059 OK
2025/02/27 16:35:57 INFO  : admincli/printTopology.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : cli/envvars.robot: md5 = 97be7992b4b7681defe5391bbe55c75d OK
2025/02/27 16:35:57 INFO  : cli/envvars.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : fcq/s3_om_fcq.robot: md5 = 09872d18952b1ed19476e9be82197d97 OK
2025/02/27 16:35:57 INFO  : fcq/s3_om_fcq.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : gdpr/gdpr.robot: md5 = 55db38304c3687e1ced9f24c5351acc3 OK
2025/02/27 16:35:57 INFO  : gdpr/gdpr.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : balancer/testBalancer.robot: md5 = b100fea9912fc01d1e27cc1b77c83b31 OK
2025/02/27 16:35:57 INFO  : balancer/testBalancer.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : freon/echoRPCLoad.robot: md5 = 2fc53080896aa6c46c9065a2f95f8a06 OK
2025/02/27 16:35:57 INFO  : freon/echoRPCLoad.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : freon/generate-chunk.robot: md5 = b2ea5843932f9dd4aace06b987a5a95b OK
2025/02/27 16:35:57 INFO  : freon/generate-chunk.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : hsync/upgrade-hsync-check.robot: md5 = 29b422caf7a6104c83d4dd7403c43bb3 OK
2025/02/27 16:35:57 INFO  : hsync/upgrade-hsync-check.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : freon/generate.robot: md5 = 794114406a50ce0efa2eb018c63e3569 OK
2025/02/27 16:35:57 INFO  : freon/generate.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : freon/hsync.robot: md5 = 67303a57b73bf512cd3c115506691ab4 OK
2025/02/27 16:35:57 INFO  : freon/hsync.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : httpfs/operations.robot: md5 = 3abce0ef1c2d9e19c348e2eb093a0123 OK
2025/02/27 16:35:57 INFO  : httpfs/operations.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : freon/metadata-generate.robot: md5 = 9212bb41f3c6725b4cfbf27563256dc1 OK
2025/02/27 16:35:57 INFO  : freon/metadata-generate.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : grpc/grpc-om-s3-metrics.robot: md5 = 46e600db0f1a54a11f51e680ea737807 OK
2025/02/27 16:35:57 INFO  : grpc/grpc-om-s3-metrics.robot: Copied (new)
2025/02/27 16:35:57 DEBUG : httpfs/operations_tests.robot: md5 = b5037537a59479fa397f521858151de7 OK
2025/02/27 16:35:57 INFO  : httpfs/operations_tests.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : auditparser/auditparser.robot: md5 = 8ff2197aa518510361cdc3ce585b6ce2 OK
2025/02/27 16:35:58 INFO  : auditparser/auditparser.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/dn.robot: md5 = 1562fd650324206ae5229fcaf4d978c3 OK
2025/02/27 16:35:58 INFO  : compatibility/dn.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/dn-one-rocksdb.robot: md5 = 88430ae0b01aad442da17efb6dceeff5 OK
2025/02/27 16:35:58 INFO  : compatibility/dn-one-rocksdb.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/om.robot: md5 = 214be7d865c25b6c8808ddae5aceea2b OK
2025/02/27 16:35:58 INFO  : compatibility/om.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/read.robot: md5 = 9efb635ef918f329d6c8e47aca554f3d OK
2025/02/27 16:35:58 INFO  : compatibility/read.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/recon.robot: md5 = 17fc42834a46180c6a0d09722792d51a OK
2025/02/27 16:35:58 INFO  : compatibility/recon.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/scm.robot: md5 = b52956a2ccb6ca2ead8138b966a3cf69 OK
2025/02/27 16:35:58 INFO  : compatibility/scm.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/setup.robot: md5 = abee4cf943dea0d9eb9404a65c62259c OK
2025/02/27 16:35:58 INFO  : compatibility/setup.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : compatibility/write.robot: md5 = 27c4325259d4b71fd120a49c8a5b6246 OK
2025/02/27 16:35:58 INFO  : compatibility/write.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/fs.robot: md5 = 37f5052dda89a5965f9b25e32a19400f OK
2025/02/27 16:35:58 INFO  : lib/fs.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/os.robot: md5 = 0d5c26d90f992ec5e493fbd261b802a0 OK
2025/02/27 16:35:58 INFO  : lib/os.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/fs_tests.robot: md5 = 659a8762cd74723d9f1aa58553c56bd3 OK
2025/02/27 16:35:58 INFO  : lib/fs_tests.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/os_tests.robot: md5 = 2fff5aeac04f4cd0b44ad37027aee143 OK
2025/02/27 16:35:58 INFO  : lib/os_tests.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozone-lib/freon.robot: md5 = 92b3859196c46cf840c46923815692a5 OK
2025/02/27 16:35:58 INFO  : ozone-lib/freon.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/string.robot: md5 = 3f328b056d05b4c0b1de0155300722b3 OK
2025/02/27 16:35:58 INFO  : lib/string.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : lib/string_tests.robot: md5 = 6cb4abeaa32800093caab1e3ef3a6dc8 OK
2025/02/27 16:35:58 INFO  : lib/string_tests.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozone-lib/shell.robot: md5 = 31382dc80887332e0c4cd46ce5d11d18 OK
2025/02/27 16:35:58 INFO  : ozone-lib/shell.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozonefs/hadoopo3fs.robot: md5 = af6c7cdaa17e6814065c51678a719de8 OK
2025/02/27 16:35:58 INFO  : ozonefs/hadoopo3fs.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : omha/data-creation-before-om-bootstrap.robot: md5 = 7ce911a55a7fb5edd84c77e3942ae57b OK
2025/02/27 16:35:58 INFO  : omha/data-creation-before-om-bootstrap.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozone-lib/shell_tests.robot: md5 = 0731e1512a9ef08685cd5f1a671a0374 OK
2025/02/27 16:35:58 INFO  : ozone-lib/shell_tests.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : omha/data-validation-after-om-bootstrap.robot: md5 = ebef0dcb8b6ade5f72ea7805764edd61 OK
2025/02/27 16:35:58 INFO  : omha/data-validation-after-om-bootstrap.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : omha/om-cancel-prepare.robot: md5 = 9d970a2b8e82faa67bfb3f2559f3b2d5 OK
2025/02/27 16:35:58 INFO  : omha/om-cancel-prepare.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozonefs/ozonefs.robot: md5 = c065378df949a1edbd8438dc17438755 OK
2025/02/27 16:35:58 INFO  : ozonefs/ozonefs.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : ozonefs/setup.robot: md5 = 654df9c1aba73bbe70615bd138bbe9ea OK
2025/02/27 16:35:58 INFO  : ozonefs/setup.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : recon/recon-api.robot: md5 = f5af7d2e74c23d011027ac387f521a4b OK
2025/02/27 16:35:58 INFO  : recon/recon-api.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : recon/recon-nssummary.robot: md5 = 6913f9075574a8ea22e660e42bda74fe OK
2025/02/27 16:35:58 INFO  : recon/recon-nssummary.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : repair/bucket-encryption.robot: md5 = 85fb3e7e6bc38056a137d3b55df020da OK
2025/02/27 16:35:58 DEBUG : recon/recon-taskstatus.robot: md5 = 103ee5fcec5f0332cb9efd35f877aabd OK
2025/02/27 16:35:58 INFO  : recon/recon-taskstatus.robot: Copied (new)
2025/02/27 16:35:58 INFO  : repair/bucket-encryption.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : replication/wait.robot: md5 = 6c2234cd0a195a66958f1b95e06ca22f OK
2025/02/27 16:35:58 INFO  : replication/wait.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : scmha/scm-decommission.robot: md5 = 4f92e183f637f288f1c09cc28e5c35f8 OK
2025/02/27 16:35:58 INFO  : scmha/scm-decommission.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : scmha/primordial-scm.robot: md5 = c6be6e3c99778e59a6941565ea904f37 OK
2025/02/27 16:35:58 INFO  : scmha/primordial-scm.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : scmha/root-ca-rotation.robot: md5 = bcffcde9f44f71177636bd67d64cde0c OK
2025/02/27 16:35:58 INFO  : scmha/root-ca-rotation.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : scmha/scm-leader-transfer.robot: md5 = 51aaf7c7dd2e3a9ef6ce31b50e617425 OK
2025/02/27 16:35:58 INFO  : scmha/scm-leader-transfer.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : snapshot/snapshot-fs.robot: md5 = 8303ebaf2fc12efc0eedf897a3b8388b OK
2025/02/27 16:35:58 INFO  : snapshot/snapshot-fs.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : om-ratis/testOMAdminCmd.robot: md5 = b3e566d742593fdcbd4b25c49c1df9b9 OK
2025/02/27 16:35:58 INFO  : om-ratis/testOMAdminCmd.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : snapshot/snapshot-acls.robot: md5 = 5165ce0e5d63ddba8123fccdbc7fe74e OK
2025/02/27 16:35:58 INFO  : snapshot/snapshot-acls.robot: Copied (new)
2025/02/27 16:35:58 DEBUG : snapshot/snapshot-setup.robot: md5 = deee56580a640f4f2a24c27e2875deef OK
2025/02/27 16:35:58 INFO  : snapshot/snapshot-setup.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : snapshot/snapshot-sh.robot: md5 = b7089719e57e909dc80406968156276e OK
2025/02/27 16:35:59 INFO  : snapshot/snapshot-sh.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : snapshot/upgrade-snapshot-check.robot: md5 = 94052acf25531c5779f6e67fe1a5e5d8 OK
2025/02/27 16:35:59 INFO  : snapshot/upgrade-snapshot-check.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : spnego/web.robot: md5 = 6891b9a6a120773f347563f2b334730e OK
2025/02/27 16:35:59 INFO  : spnego/web.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : admincli/reconfigure.robot: md5 = 1a9e5cf67cb3472c99ca26262e522fcf OK
2025/02/27 16:35:59 INFO  : admincli/reconfigure.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : admincli/replicationmanager.robot: md5 = 93b30cc65865d2d684e987c4b94610e4 OK
2025/02/27 16:35:59 INFO  : admincli/replicationmanager.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : admincli/safemode.robot: md5 = d547033e4e042a61474a44e175954b86 OK
2025/02/27 16:35:59 INFO  : admincli/safemode.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : admincli/scmrole.robot: md5 = c7a5aa9ad1e2277764da1517ff91e386 OK
2025/02/27 16:35:59 INFO  : admincli/scmrole.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : freon/read-write-key.robot: md5 = 97b5b3757ce62078e01acb30bf857bc9 OK
2025/02/27 16:35:59 INFO  : freon/read-write-key.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : freon/remove.robot: md5 = 069bd821affc2700b55e95e923debb40 OK
2025/02/27 16:35:59 INFO  : freon/remove.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : freon/validate.robot: md5 = de7167e08a627d9edba48f6493b3b21d OK
2025/02/27 16:35:59 INFO  : freon/validate.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : freon/validate-chunk.robot: md5 = 59e91563fa0a2fb6c3c84ca4e85fa12a OK
2025/02/27 16:35:59 INFO  : freon/validate-chunk.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/MultipartUpload.robot: md5 = e6673c38f9e2f03353cc475166e3564f OK
2025/02/27 16:35:59 INFO  : s3/MultipartUpload.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/README.md: md5 = 4967f548b5fbc96c22e590f6352de20c OK
2025/02/27 16:35:59 INFO  : s3/README.md: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/__init__.robot: md5 = 23063b5cc483e26c9391946748d0e9c0 OK
2025/02/27 16:35:59 INFO  : s3/__init__.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/awss3virtualhost.robot: md5 = 96d3468b5d85ac399b3955acfb0f5dfb OK
2025/02/27 16:35:59 INFO  : s3/awss3virtualhost.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/awss3.robot: md5 = 613af88fef39a5eb7fd1ad90f655accf OK
2025/02/27 16:35:59 INFO  : s3/awss3.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : topology/cli.robot: md5 = 1312a3e8e54ae621f71b8c579610389c OK
2025/02/27 16:35:59 INFO  : topology/cli.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/boto3.robot: md5 = 57deba6f5134410aa7132bcbba35bf02 OK
2025/02/27 16:35:59 INFO  : s3/boto3.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/bucketcreate.robot: md5 = 62dba6ffa76fe172082a845dca604d6e OK
2025/02/27 16:35:59 INFO  : s3/bucketcreate.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/boto_client.py: md5 = 67191f51cc17259b5b31d0083dd1c8af OK
2025/02/27 16:35:59 INFO  : s3/boto_client.py: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/bucketdelete.robot: md5 = c1d00766ad49e0c124d009c6007d5c91 OK
2025/02/27 16:35:59 INFO  : s3/bucketdelete.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/bucketlist.robot: md5 = fbb9afb6fa4f7f2ac2eea383f8bf319e OK
2025/02/27 16:35:59 INFO  : s3/bucketlist.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/buckethead.robot: md5 = 2bb1986d15d3ae567300b5e313e894bb OK
2025/02/27 16:35:59 INFO  : s3/buckethead.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/commonawslib.robot: md5 = 24fad4f84a921ea9819269ea5c1c1104 OK
2025/02/27 16:35:59 INFO  : s3/commonawslib.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/freon.robot: md5 = a0a59d691e3baf7be0aea34198319f79 OK
2025/02/27 16:35:59 INFO  : s3/freon.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/mpu_lib.robot: md5 = 64b8fcd0c76085408602f5224a615a5d OK
2025/02/27 16:35:59 INFO  : s3/mpu_lib.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objectcopy.robot: md5 = 30e2c16d6411104c566d3d278fe9158c OK
2025/02/27 16:35:59 INFO  : s3/objectcopy.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objectcopys3a.robot: md5 = bef140aaa9c1c502fabaf129f9ac516c OK
2025/02/27 16:35:59 INFO  : s3/objectcopys3a.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objectdelete.robot: md5 = e088e8a4177b2a88978d9d7b0e0eca7c OK
2025/02/27 16:35:59 INFO  : s3/objectdelete.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objecthead.robot: md5 = 013c35538293ecef75dec800ad2052e2 OK
2025/02/27 16:35:59 INFO  : s3/objecthead.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objectmultidelete.robot: md5 = df1f9f0b36f9093d141d3eee4ea1a941 OK
2025/02/27 16:35:59 INFO  : s3/objectmultidelete.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objecttagging.robot: md5 = 91be9cf21ad20dcdec46bd5b4ee2df90 OK
2025/02/27 16:35:59 INFO  : s3/objecttagging.robot: Copied (new)
2025/02/27 16:35:59 DEBUG : s3/objectputget.robot: md5 = 7219881d97216436b5c6a392a958128c OK
2025/02/27 16:35:59 INFO  : s3/objectputget.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/rclone.robot: md5 = d21ab56698189510215111a278dad68e OK
2025/02/27 16:36:00 INFO  : s3/rclone.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/s3_compatbility_check.sh: md5 = 034162b7078c6076ebb59eaa4b5473cc OK
2025/02/27 16:36:00 INFO  : s3/s3_compatbility_check.sh: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/s3_getsecret.robot: md5 = 13e88d6b5040c3bfd441335745f803bc OK
2025/02/27 16:36:00 INFO  : s3/s3_getsecret.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/secretgenerate.robot: md5 = 6488717e37a1b9dfdcb45948caf4eaf2 OK
2025/02/27 16:36:00 INFO  : s3/secretgenerate.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/secretrevoke.robot: md5 = fad00ae3b97b2b3e21180a73f59f44c8 OK
2025/02/27 16:36:00 INFO  : s3/secretrevoke.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : s3/webui.robot: md5 = 9bb0ab60ddd8632befc79c71790aeaa0 OK
2025/02/27 16:36:00 INFO  : s3/webui.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : upgrade/check-finalization.robot: md5 = 2ec44c3cfb922f39cc948eee24d3ee44 OK
2025/02/27 16:36:00 INFO  : upgrade/check-finalization.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/om-fetch-key.robot: md5 = 107bc35bac744c63479a62c484173dcd OK
2025/02/27 16:36:00 INFO  : omha/om-fetch-key.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/om-leader-transfer.robot: md5 = 2300435cfdb5fd36295701e65c730217 OK
2025/02/27 16:36:00 INFO  : omha/om-leader-transfer.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : upgrade/finalize.robot: md5 = 2a8a50ebe55fd6527750e3f997a3caed OK
2025/02/27 16:36:00 INFO  : upgrade/finalize.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/om-prepare.robot: md5 = d555d6a6176d694c0e68139157d7178f OK
2025/02/27 16:36:00 INFO  : omha/om-prepare.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : upgrade/generate.robot: md5 = 87c3babbadb7231a37035b0fb45c012d OK
2025/02/27 16:36:00 INFO  : upgrade/generate.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : upgrade/prepare.robot: md5 = 6b07fdc028074a0ea045f14392770610 OK
2025/02/27 16:36:00 INFO  : upgrade/prepare.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/om-prepared.robot: md5 = cef530c89296bc0f60aa3abc750c67ae OK
2025/02/27 16:36:00 INFO  : omha/om-prepared.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/om-roles.robot: md5 = 72254e4c5dcce7eb25e939dd388c184e OK
2025/02/27 16:36:00 INFO  : omha/om-roles.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : upgrade/validate.robot: md5 = 4997452324a0fd6c01066d94d2938704 OK
2025/02/27 16:36:00 INFO  : upgrade/validate.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/S3-secret.robot: md5 = d7dcdb93c4d1410f43c692576b9a021e OK
2025/02/27 16:36:00 INFO  : security/S3-secret.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : omha/testOMHA.robot: md5 = 76420a98f0abcd940eb808e88dca8ddb OK
2025/02/27 16:36:00 INFO  : omha/testOMHA.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/ozone-secure-fs.robot: md5 = feac34a4a3e86b047206038a9018f31a OK
2025/02/27 16:36:00 INFO  : security/ozone-secure-fs.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/admin-cert.robot: md5 = 77c7d7f0aa43c7b81b26021bd3da0531 OK
2025/02/27 16:36:00 INFO  : security/admin-cert.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/ozone-secure-owner-s3.robot: md5 = 3e7cfb86bcac237e0fbb8d56f0f744b0 OK
2025/02/27 16:36:00 INFO  : security/ozone-secure-owner-s3.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/ozone-secure-s3.robot: md5 = f2ee95c122db6a64890f21818ff5d0f5 OK
2025/02/27 16:36:00 INFO  : security/ozone-secure-s3.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/ozone-secure-token.robot: md5 = f0bc9c409bf869d559d0386a5d3bd826 OK
2025/02/27 16:36:00 INFO  : security/ozone-secure-token.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : security/ozone-secure-tenant.robot: md5 = 638546f4ca6201cfc7bba27b87a2495c OK
2025/02/27 16:36:00 INFO  : security/ozone-secure-tenant.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : topology/loaddata.robot: md5 = 6f2723e7d07650f411a67a272b33de40 OK
2025/02/27 16:36:00 INFO  : topology/loaddata.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : topology/readdata.robot: md5 = 924403a1188642f6cb1f939631d9b8fd OK
2025/02/27 16:36:00 INFO  : topology/readdata.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : failing/test2.robot: md5 = 48a8a3810b50776e3c666ad8329874c4 OK
2025/02/27 16:36:00 INFO  : failing/test2.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : failing/test1.robot: md5 = 096d2965be1aba0411e6f60d8b90db60 OK
2025/02/27 16:36:00 INFO  : failing/test1.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : certrotation/cert-rotation.robot: md5 = c5c790317ea695e9a10056e4d3345633 OK
2025/02/27 16:36:00 INFO  : certrotation/cert-rotation.robot: Copied (new)
2025/02/27 16:36:00 DEBUG : certrotation/root-ca-rotation-client-checks.robot: md5 = 753e60393a600d76facb7a02c9377546 OK
2025/02/27 16:36:00 INFO  : certrotation/root-ca-rotation-client-checks.robot: Copied (new)
2025/02/27 16:36:00 INFO  : 
Transferred:   	  556.577 KiB / 556.577 KiB, 100%, 127.305 KiB/s, ETA 0s
Transferred:          153 / 153, 100%
Elapsed time:         4.4s

2025/02/27 16:36:00 DEBUG : 15 go routines active</msg>
<status status="PASS" starttime="20250227 16:36:00.897" endtime="20250227 16:36:00.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:00.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:00.899" endtime="20250227 16:36:00.899"/>
</kw>
<status status="PASS" starttime="20250227 16:35:56.338" endtime="20250227 16:36:00.899"/>
</kw>
<msg timestamp="20250227 16:36:00.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:35:56.338" endtime="20250227 16:36:00.900"/>
</kw>
<msg timestamp="20250227 16:36:00.901" level="INFO">${result} = 2025/02/27 16:35:56 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/bucket-diiacmavow"]
2025/02/27 16:35:56 DEBUG : Creating backend wit...</msg>
<status status="PASS" starttime="20250227 16:35:56.338" endtime="20250227 16:36:00.901"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250227 16:35:55.434" endtime="20250227 16:36:00.902"/>
</test>
<doc>S3 gateway test with rclone client</doc>
<status status="PASS" starttime="20250227 16:35:55.425" endtime="20250227 16:36:00.902"/>
</suite>
<suite id="s1-s17" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:00.910" endtime="20250227 16:36:00.910"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:00.914" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:00.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:00.918" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:36:00.911" endtime="20250227 16:36:00.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:00.919" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:36:00.919" endtime="20250227 16:36:00.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:00.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:00.919" endtime="20250227 16:36:00.920"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.911" endtime="20250227 16:36:00.920"/>
</kw>
<msg timestamp="20250227 16:36:00.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:00.910" endtime="20250227 16:36:00.920"/>
</kw>
<msg timestamp="20250227 16:36:00.920" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:36:00.910" endtime="20250227 16:36:00.920"/>
</kw>
<msg timestamp="20250227 16:36:00.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:00.910" endtime="20250227 16:36:00.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:36:00.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:00.921" endtime="20250227 16:36:00.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:00.926" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:00.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:00.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:36:00.923" endtime="20250227 16:36:00.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:00.959" level="INFO"/>
<status status="PASS" starttime="20250227 16:36:00.958" endtime="20250227 16:36:00.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:00.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:00.959" endtime="20250227 16:36:00.959"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.923" endtime="20250227 16:36:00.959"/>
</kw>
<msg timestamp="20250227 16:36:00.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:00.922" endtime="20250227 16:36:00.960"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.922" endtime="20250227 16:36:00.960"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.921" endtime="20250227 16:36:00.960"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.909" endtime="20250227 16:36:00.960"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.909" endtime="20250227 16:36:00.960"/>
</kw>
<test id="s1-s17-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:00.960" endtime="20250227 16:36:00.961"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:00.964" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:03.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:03.527" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:00.961" endtime="20250227 16:36:03.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:03.528" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:03.528" endtime="20250227 16:36:03.528"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.961" endtime="20250227 16:36:03.528"/>
</kw>
<status status="PASS" starttime="20250227 16:36:00.961" endtime="20250227 16:36:03.528"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:03.532" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:06.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:06.072" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=c70b4a52b23375a1c8f29b378cd3bdf12aa793aa1eb7b86ea77a895b9b5ebeaf</msg>
<status status="PASS" starttime="20250227 16:36:03.529" endtime="20250227 16:36:06.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:06.073" level="INFO">awsAccessKey=testuser2
awsSecret=c70b4a52b23375a1c8f29b378cd3bdf12aa793aa1eb7b86ea77a895b9b5ebeaf</msg>
<status status="PASS" starttime="20250227 16:36:06.073" endtime="20250227 16:36:06.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:06.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:06.073" endtime="20250227 16:36:06.074"/>
</kw>
<status status="PASS" starttime="20250227 16:36:03.529" endtime="20250227 16:36:06.074"/>
</kw>
<msg timestamp="20250227 16:36:06.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:03.529" endtime="20250227 16:36:06.074"/>
</kw>
<msg timestamp="20250227 16:36:06.074" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=c70b4a52b23375a1c8f29b378cd3bdf12aa793aa1eb7b86ea77a895b9b5ebeaf</msg>
<status status="PASS" starttime="20250227 16:36:03.528" endtime="20250227 16:36:06.074"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:36:06.075" endtime="20250227 16:36:06.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:36:06.075" endtime="20250227 16:36:06.075"/>
</kw>
<status status="PASS" starttime="20250227 16:36:06.074" endtime="20250227 16:36:06.075"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:06.078" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:08.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:08.567" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:06.076" endtime="20250227 16:36:08.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:08.568" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:08.567" endtime="20250227 16:36:08.568"/>
</kw>
<status status="PASS" starttime="20250227 16:36:06.075" endtime="20250227 16:36:08.568"/>
</kw>
<status status="PASS" starttime="20250227 16:36:06.075" endtime="20250227 16:36:08.568"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250227 16:36:00.960" endtime="20250227 16:36:08.568"/>
</test>
<test id="s1-s17-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250227 16:36:08.570" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20250227 16:36:08.569" endtime="20250227 16:36:08.570"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20250227 16:36:08.570" endtime="20250227 16:36:08.570"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250227 16:36:08.570" endtime="20250227 16:36:08.570"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250227 16:36:08.570" endtime="20250227 16:36:08.570"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250227 16:36:08.570" endtime="20250227 16:36:08.570"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250227 16:36:08.570" endtime="20250227 16:36:08.570"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250227 16:36:08.568" endtime="20250227 16:36:08.570">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20250227 16:36:00.903" endtime="20250227 16:36:08.571"/>
</suite>
<suite id="s1-s18" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s18-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:08.580" endtime="20250227 16:36:08.580"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:08.583" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:08.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:08.587" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:36:08.581" endtime="20250227 16:36:08.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:08.587" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:36:08.587" endtime="20250227 16:36:08.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:08.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:08.588" endtime="20250227 16:36:08.588"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.581" endtime="20250227 16:36:08.588"/>
</kw>
<msg timestamp="20250227 16:36:08.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:08.581" endtime="20250227 16:36:08.588"/>
</kw>
<msg timestamp="20250227 16:36:08.588" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:36:08.580" endtime="20250227 16:36:08.588"/>
</kw>
<msg timestamp="20250227 16:36:08.588" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:08.580" endtime="20250227 16:36:08.589"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:36:08.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:08.589" endtime="20250227 16:36:08.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:08.592" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:08.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:08.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:36:08.590" endtime="20250227 16:36:08.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:08.626" level="INFO"/>
<status status="PASS" starttime="20250227 16:36:08.626" endtime="20250227 16:36:08.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:08.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:08.626" endtime="20250227 16:36:08.627"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.590" endtime="20250227 16:36:08.627"/>
</kw>
<msg timestamp="20250227 16:36:08.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:08.590" endtime="20250227 16:36:08.627"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.589" endtime="20250227 16:36:08.627"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.589" endtime="20250227 16:36:08.627"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.580" endtime="20250227 16:36:08.627"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:08.630" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:11.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:11.086" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:08.628" endtime="20250227 16:36:11.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:11.087" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:11.086" endtime="20250227 16:36:11.087"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.627" endtime="20250227 16:36:11.087"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:11.090" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:13.632" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:13.632" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:11.088" endtime="20250227 16:36:13.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:13.633" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:13.632" endtime="20250227 16:36:13.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:11.087" endtime="20250227 16:36:13.633"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:13.636" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:16.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:16.148" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:13.634" endtime="20250227 16:36:16.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:16.149" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:16.149" endtime="20250227 16:36:16.149"/>
</kw>
<status status="PASS" starttime="20250227 16:36:13.633" endtime="20250227 16:36:16.149"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.627" endtime="20250227 16:36:16.149"/>
</kw>
<status status="PASS" starttime="20250227 16:36:08.579" endtime="20250227 16:36:16.149"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:16.150" endtime="20250227 16:36:16.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:16.153" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:16.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:16.229" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:16.151" endtime="20250227 16:36:16.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:16.230" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGTRXJkicpnPMXmECDyMhZ/jkrtOKmd8TWYu2kBEbaqf9mYmfhQoG4uMbn1XcyMptkfdeiMWgnqQPRX8ufWTPd6+aFmCBl5c5AlTyghW0b0Xv0ZYvWCLtDl16Qh8zefd5GqXGw3UmXmLYGI9v+Emx0I8O6DqJv7qacZVUkdrko9Sc4rlSojaiQUZSf0P7+xeA/dEfMuL39TMuel5dOBjG2ruvBVkcUI+pK2TvKaFmaNZ7RvOzT7LvW5ikHEcSF8NKpm+1OuZX/ly/QF16Hhfs2XY46bmGEr/YYXEOvmjm+MIfBUgwrQcBstjrF9mDWjQRj7TlWinME7q7/wMyPJLsk76n2Y4+7NJiQ6FXXtJUHjfLWPYIIzrWrAd6pIHWMIHToAMCARKigcsEgchARJYpAkwGAiHDUfxB37qXVJwopgsZUOHYLjUiRzw932gQ8/c5nAQIopKFPCeYDXDGpjBKKCAgI7kKpd8DOxQ0K1VRsSsMF2to2vf4i+prtiMXnIRoK5auGjVSTIuNkYqP3fO+2zTDWJAsTPFPBhQqObMIxdgegcYAoongInijdAH/ze9asERYMrpBNFkdXXoNZkhyHYTz1r3qHQGCd2v8o7tNUaPYnfL1VPFqUJGO67tCl9Q5YUv2sbxO6F1Z5sitifzf33qSGQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:36:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:36:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQri5O/J8ZHgHDYDqmXRWRw1lBn9liEFvgafI22P02Qa0xmV5w32BJI00dvWof8pN5quKuofWvP9fsI6TehROec7K1w==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710176201&amp;s=e7TnM285DFBgYH6tstZ/sAOhfctlH1lIyXdDo1gC/Q8="; HttpOnly
&lt; Content-Length: 216
&lt; 
{ [216 bytes data]

100   216  100   216    0     0   3176      0 --:--:-- --:--:-- --:--:--  3130
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser/scm@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;cb2a6611617e70c070776a3e1ad68cb24d441cea33c8b85c5526eff5fb622d62&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250227 16:36:16.229" endtime="20250227 16:36:16.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:16.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:16.230" endtime="20250227 16:36:16.230"/>
</kw>
<status status="PASS" starttime="20250227 16:36:16.151" endtime="20250227 16:36:16.230"/>
</kw>
<msg timestamp="20250227 16:36:16.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:16.150" endtime="20250227 16:36:16.230"/>
</kw>
<msg timestamp="20250227 16:36:16.231" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:16.150" endtime="20250227 16:36:16.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:36:16.231" endtime="20250227 16:36:16.231"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:36:16.231" endtime="20250227 16:36:16.232"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:16.235" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:18.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:18.767" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:16.233" endtime="20250227 16:36:18.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:18.768" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:18.768" endtime="20250227 16:36:18.768"/>
</kw>
<status status="PASS" starttime="20250227 16:36:16.232" endtime="20250227 16:36:18.768"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:18.771" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:21.213" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:21.213" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:18.769" endtime="20250227 16:36:21.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:21.214" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:21.213" endtime="20250227 16:36:21.214"/>
</kw>
<status status="PASS" starttime="20250227 16:36:18.769" endtime="20250227 16:36:21.214"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:21.216" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:23.740" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:23.740" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:21.214" endtime="20250227 16:36:23.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:23.741" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:23.740" endtime="20250227 16:36:23.741"/>
</kw>
<status status="PASS" starttime="20250227 16:36:21.214" endtime="20250227 16:36:23.741"/>
</kw>
<status status="PASS" starttime="20250227 16:36:16.232" endtime="20250227 16:36:23.741"/>
</kw>
<status status="PASS" starttime="20250227 16:36:16.232" endtime="20250227 16:36:23.741"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:36:08.579" endtime="20250227 16:36:23.741"/>
</test>
<test id="s1-s18-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:23.743" endtime="20250227 16:36:23.743"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:23.747" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:23.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:23.751" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:36:23.745" endtime="20250227 16:36:23.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:23.751" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:36:23.751" endtime="20250227 16:36:23.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:23.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:23.751" endtime="20250227 16:36:23.752"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.744" endtime="20250227 16:36:23.752"/>
</kw>
<msg timestamp="20250227 16:36:23.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:23.744" endtime="20250227 16:36:23.752"/>
</kw>
<msg timestamp="20250227 16:36:23.752" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:36:23.744" endtime="20250227 16:36:23.752"/>
</kw>
<msg timestamp="20250227 16:36:23.752" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:23.743" endtime="20250227 16:36:23.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:36:23.753" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:23.752" endtime="20250227 16:36:23.753"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:23.756" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:23.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:23.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:36:23.754" endtime="20250227 16:36:23.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:23.789" level="INFO"/>
<status status="PASS" starttime="20250227 16:36:23.789" endtime="20250227 16:36:23.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:23.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:23.789" endtime="20250227 16:36:23.790"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.754" endtime="20250227 16:36:23.790"/>
</kw>
<msg timestamp="20250227 16:36:23.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:23.753" endtime="20250227 16:36:23.790"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.753" endtime="20250227 16:36:23.790"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.753" endtime="20250227 16:36:23.790"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.743" endtime="20250227 16:36:23.790"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:23.793" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:26.112" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:26.112" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:23.791" endtime="20250227 16:36:26.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:26.113" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:26.112" endtime="20250227 16:36:26.113"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.790" endtime="20250227 16:36:26.113"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:26.116" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:28.520" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:28.520" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:26.114" endtime="20250227 16:36:28.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:28.521" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:28.520" endtime="20250227 16:36:28.521"/>
</kw>
<status status="PASS" starttime="20250227 16:36:26.113" endtime="20250227 16:36:28.521"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:28.524" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:31.211" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:31.211" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:28.521" endtime="20250227 16:36:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:31.212" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:31.212" endtime="20250227 16:36:31.212"/>
</kw>
<status status="PASS" starttime="20250227 16:36:28.521" endtime="20250227 16:36:31.212"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.790" endtime="20250227 16:36:31.212"/>
</kw>
<status status="PASS" starttime="20250227 16:36:23.742" endtime="20250227 16:36:31.212"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:31.213" endtime="20250227 16:36:31.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:31.216" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:33.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:33.988" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be92521e358d955997b1b37c493f2c79c065952f8ba11a03d09ea8056e1afd3e</msg>
<status status="PASS" starttime="20250227 16:36:31.214" endtime="20250227 16:36:33.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:33.989" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be92521e358d955997b1b37c493f2c79c065952f8ba11a03d09ea8056e1afd3e</msg>
<status status="PASS" starttime="20250227 16:36:33.989" endtime="20250227 16:36:33.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:33.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:33.989" endtime="20250227 16:36:33.990"/>
</kw>
<status status="PASS" starttime="20250227 16:36:31.213" endtime="20250227 16:36:33.990"/>
</kw>
<msg timestamp="20250227 16:36:33.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:31.213" endtime="20250227 16:36:33.990"/>
</kw>
<status status="PASS" starttime="20250227 16:36:31.213" endtime="20250227 16:36:33.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:33.994" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:34.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:34.047" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:33.992" endtime="20250227 16:36:34.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:34.048" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClgYGKwYBBQUCoIICijCCAoagDTALBgkqhkiG9xIBAgKiggJzBIICb2CCAmsGCSqGSIb3EgECAgEAboICWjCCAlagAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGZvJVNCJ0nuVyY9sMEBAvQ3/lNniLZti2HJSlqUV5Q7gyvL2bhrs2iiXtOLyd7hz/FY6CP73kbTqUarYisvfPnCikOqR5ocDwHr4uzAixWwZAtA5EkeUoBB/WsnutAr55o+uPdcO2SXV9D518b1vAE885srzlN0RcbEvNBDSK+rGWyoEyGac8ACRClw6403gQ/Zs33G0Nzbc8VPF7KA98d20L7pE1cxuTkBU1hWxFiFSnH9UVPGYVq9Jpy5eSkUeoyG/RKUvYLB5jircdH8aIGzWWVpZI08vyfkwnGav7ZL5afEhFUcbihnRWTPXrMJXFfoM1MQZNSHPoPJ/UYkDcd2Eyd1h0WfHcsRIQ0/zDRoTt8yjLV7XiM/spIHVMIHSoAMCARKigcoEgccp2joHQhsSRGkhbRSu5SGuWfBhCAAAZ6hyZbIo/qfu6+TJ7gzyb9uOVCS23YyMOOchOx8S6LVDTglYUDAr16ONxX5OdGE8YOV2r2T28oogklQ8atDKyjgLFJxZPJPbnga+asyUgoKzxrZ6FR4VPXjSsVSebItnAekoRv7iAhSlPbWKzg1NxcIn0LpS3qE/n9mSV/YSxVhEeO8WdXRAJfdKUH0TqzIXXp+JOKub9S9lI0LzJzi2knjslz9KCuD8yhHZxd5FxOo9
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQdgHYjXaFiewF6kRr+gmghhSTB+XsojtC1bk4/PydSsdGghAfcHsZ5TYYA2Vt9yF1XyuVLOnoHKR8zibco/4p/e3
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710194034&amp;s=tL3Bui/v4qcuxS/GqDW5n1msahKxLUQ02I3+AX3ZCw8="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:36:34.048" endtime="20250227 16:36:34.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:34.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:34.049" endtime="20250227 16:36:34.049"/>
</kw>
<status status="PASS" starttime="20250227 16:36:33.991" endtime="20250227 16:36:34.049"/>
</kw>
<msg timestamp="20250227 16:36:34.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:33.991" endtime="20250227 16:36:34.050"/>
</kw>
<msg timestamp="20250227 16:36:34.050" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:33.990" endtime="20250227 16:36:34.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:36:34.050" endtime="20250227 16:36:34.050"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:34.054" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:36.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:36.486" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:34.052" endtime="20250227 16:36:36.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:36.487" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:36.487" endtime="20250227 16:36:36.487"/>
</kw>
<status status="PASS" starttime="20250227 16:36:34.051" endtime="20250227 16:36:36.487"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:36.490" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:39.062" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:39.062" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:36.488" endtime="20250227 16:36:39.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:39.063" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:39.062" endtime="20250227 16:36:39.063"/>
</kw>
<status status="PASS" starttime="20250227 16:36:36.487" endtime="20250227 16:36:39.063"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:39.066" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:41.589" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:41.589" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:39.064" endtime="20250227 16:36:41.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:41.590" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:41.589" endtime="20250227 16:36:41.590"/>
</kw>
<status status="PASS" starttime="20250227 16:36:39.063" endtime="20250227 16:36:41.590"/>
</kw>
<status status="PASS" starttime="20250227 16:36:34.051" endtime="20250227 16:36:41.590"/>
</kw>
<status status="PASS" starttime="20250227 16:36:34.051" endtime="20250227 16:36:41.590"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:36:23.742" endtime="20250227 16:36:41.590"/>
</test>
<test id="s1-s18-t3" name="S3 Gateway Generate Secret By Username" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:41.592" endtime="20250227 16:36:41.592"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:41.596" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:41.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:41.599" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:36:41.593" endtime="20250227 16:36:41.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:41.600" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:36:41.600" endtime="20250227 16:36:41.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:41.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:41.600" endtime="20250227 16:36:41.600"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.593" endtime="20250227 16:36:41.601"/>
</kw>
<msg timestamp="20250227 16:36:41.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:41.593" endtime="20250227 16:36:41.601"/>
</kw>
<msg timestamp="20250227 16:36:41.601" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:36:41.593" endtime="20250227 16:36:41.601"/>
</kw>
<msg timestamp="20250227 16:36:41.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:41.592" endtime="20250227 16:36:41.601"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:36:41.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:41.601" endtime="20250227 16:36:41.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:41.605" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:41.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:41.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:36:41.603" endtime="20250227 16:36:41.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:41.633" level="INFO"/>
<status status="PASS" starttime="20250227 16:36:41.632" endtime="20250227 16:36:41.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:41.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:41.633" endtime="20250227 16:36:41.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.602" endtime="20250227 16:36:41.633"/>
</kw>
<msg timestamp="20250227 16:36:41.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:41.602" endtime="20250227 16:36:41.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.602" endtime="20250227 16:36:41.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.602" endtime="20250227 16:36:41.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.591" endtime="20250227 16:36:41.633"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:41.636" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:44.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:44.283" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:41.634" endtime="20250227 16:36:44.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:44.284" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:44.284" endtime="20250227 16:36:44.284"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.634" endtime="20250227 16:36:44.284"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:44.287" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:46.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:46.957" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:44.285" endtime="20250227 16:36:46.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:46.958" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:46.957" endtime="20250227 16:36:46.958"/>
</kw>
<status status="PASS" starttime="20250227 16:36:44.284" endtime="20250227 16:36:46.958"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:46.960" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:49.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:49.580" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:46.958" endtime="20250227 16:36:49.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:49.581" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:49.581" endtime="20250227 16:36:49.581"/>
</kw>
<status status="PASS" starttime="20250227 16:36:46.958" endtime="20250227 16:36:49.582"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.634" endtime="20250227 16:36:49.582"/>
</kw>
<status status="PASS" starttime="20250227 16:36:41.591" endtime="20250227 16:36:49.582"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:49.582" endtime="20250227 16:36:49.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:49.585" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:49.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:49.631" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:49.583" endtime="20250227 16:36:49.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:49.632" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGdI3FkBH25gnLNj9nisrbEUhUheR94H8XJwVCePgRZD+/wfEmoEzjkFIn311b8gWoCNfN8Id63tsQEa+5kNP4IMa8xJoa+pfN47g6nCCXx3brpqjU1q2mkZuAx+yXZ1xCXLiW6OeBsBa6fn3hPL4FNQUkKy5c1JImGWR5cLV0dZvW2TCoJSpzqx6Bt4PoT5xd5ngkCRWzVCLJ7MJHgE1deCj1/zbrwvPTLL/j3c2YAHmIt3ZqAs6p8eD8kjHk8QzRrkAvHTMJzCWMFYrhgw7KWV/fuR7Ob1igSkSwpEO2H0foqhdd2HiZjYyxF7LBsL0ZqDKhFlxmGz8uqlfBsrJ/seVpVB3gZfKdOKSgWO36GB4V0Y27ee5HGFmpIHWMIHToAMCARKigcsEgcgprKJeP/wXsxzb2HLQxzf07LBi/GV7AZbY2zKQYgfCWbHnKY+0JDWDLxYEped4dxCg8yKlwi7T/qSWzjF/ljabDslotuUidnkUbhPVITZVXaK+8icG3qGZiElwewpiSe1qMqA9rYcicgn075oL2poQ4tIZx3HD/eRymNR51HV/vny4YLssGNLqq7edYEdK7dacrhJmDeqZ6KK0Cwj+9PXx/I9pZQH81xyfJduDoeLsTVGtNz05fGj2Z9lgz2/QwHM/ATPy4E66/A==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:36:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:36:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQtM76mfLptDG+cwdWP118JCaucOf3XEb0uQ9qBumVyjsE2iEfnzWcD/yEuQQUPsXiG1cDoLc+LkHrzBBCBq4e3DM2A==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710209621&amp;s=9AXlf76Y11U9YSCrbD6b2RrfYNoDtIVP6KRjNmC0Bjk="; HttpOnly
&lt; Content-Length: 200
&lt; 
{ [200 bytes data]

100   200  100   200    0     0   5263      0 --:--:-- --:--:-- --:--:--  5263
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser&lt;/awsAccessKey&gt;&lt;awsSecret&gt;7debe6936a24878ed4bc0b5a34d595a8ec0fea1daeb05c74a03f0ec3fc903116&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250227 16:36:49.632" endtime="20250227 16:36:49.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:49.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:49.633" endtime="20250227 16:36:49.633"/>
</kw>
<status status="PASS" starttime="20250227 16:36:49.583" endtime="20250227 16:36:49.633"/>
</kw>
<msg timestamp="20250227 16:36:49.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:49.583" endtime="20250227 16:36:49.633"/>
</kw>
<msg timestamp="20250227 16:36:49.634" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:36:49.582" endtime="20250227 16:36:49.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:36:49.634" endtime="20250227 16:36:49.634"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:36:49.634" endtime="20250227 16:36:49.634"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:49.637" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:52.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:52.414" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:49.635" endtime="20250227 16:36:52.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:52.415" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:52.415" endtime="20250227 16:36:52.415"/>
</kw>
<status status="PASS" starttime="20250227 16:36:49.635" endtime="20250227 16:36:52.415"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:52.418" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:55.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:55.116" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:52.416" endtime="20250227 16:36:55.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:55.116" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:36:55.116" endtime="20250227 16:36:55.117"/>
</kw>
<status status="PASS" starttime="20250227 16:36:52.416" endtime="20250227 16:36:55.117"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:55.120" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:57.508" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:57.508" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:55.117" endtime="20250227 16:36:57.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:57.509" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:57.509" endtime="20250227 16:36:57.509"/>
</kw>
<status status="PASS" starttime="20250227 16:36:55.117" endtime="20250227 16:36:57.509"/>
</kw>
<status status="PASS" starttime="20250227 16:36:49.635" endtime="20250227 16:36:57.509"/>
</kw>
<status status="PASS" starttime="20250227 16:36:49.635" endtime="20250227 16:36:57.509"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:36:41.591" endtime="20250227 16:36:57.509"/>
</test>
<test id="s1-s18-t4" name="S3 Gateway Generate Secret By Username For Other User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:36:57.511" endtime="20250227 16:36:57.511"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:57.514" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:57.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:57.518" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:36:57.512" endtime="20250227 16:36:57.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:57.519" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:36:57.518" endtime="20250227 16:36:57.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:57.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:57.519" endtime="20250227 16:36:57.519"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.512" endtime="20250227 16:36:57.519"/>
</kw>
<msg timestamp="20250227 16:36:57.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:57.512" endtime="20250227 16:36:57.519"/>
</kw>
<msg timestamp="20250227 16:36:57.520" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:36:57.512" endtime="20250227 16:36:57.520"/>
</kw>
<msg timestamp="20250227 16:36:57.520" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:57.511" endtime="20250227 16:36:57.520"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:36:57.520" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:36:57.520" endtime="20250227 16:36:57.520"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:57.523" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:57.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:36:57.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:36:57.521" endtime="20250227 16:36:57.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:57.538" level="INFO"/>
<status status="PASS" starttime="20250227 16:36:57.538" endtime="20250227 16:36:57.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:36:57.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:36:57.539" endtime="20250227 16:36:57.539"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.521" endtime="20250227 16:36:57.539"/>
</kw>
<msg timestamp="20250227 16:36:57.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:36:57.521" endtime="20250227 16:36:57.539"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.520" endtime="20250227 16:36:57.539"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.520" endtime="20250227 16:36:57.539"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.511" endtime="20250227 16:36:57.539"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:57.542" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:36:59.947" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:36:59.947" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:57.540" endtime="20250227 16:36:59.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:36:59.948" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:59.948" endtime="20250227 16:36:59.949"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.540" endtime="20250227 16:36:59.949"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:36:59.952" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:02.476" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:02.476" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:36:59.949" endtime="20250227 16:37:02.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:02.477" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:02.476" endtime="20250227 16:37:02.477"/>
</kw>
<status status="PASS" starttime="20250227 16:36:59.949" endtime="20250227 16:37:02.477"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:02.479" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:05.097" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:05.097" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:02.477" endtime="20250227 16:37:05.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:05.098" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:05.098" endtime="20250227 16:37:05.098"/>
</kw>
<status status="PASS" starttime="20250227 16:37:02.477" endtime="20250227 16:37:05.098"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.539" endtime="20250227 16:37:05.099"/>
</kw>
<status status="PASS" starttime="20250227 16:36:57.511" endtime="20250227 16:37:05.099"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:05.099" endtime="20250227 16:37:05.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:05.102" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:05.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:05.141" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:05.100" endtime="20250227 16:37:05.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:05.142" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGZ4HytjloFCPNHTW+IzFrorrvxCjmi2elmOVVu4z4YgSaKM72F8HJSvPT7Y7xwvzz9OS1uU4JfYlBHVsSWQRVa00/fGFusaKOhVXmSCyeGxWPFZYj7MgvrDYVnTH0kbK6aY5Pp5+AOTGtZ0b5HkiUg3h6pR3RMJkZSlwPEUn+tHHVf/h73CEihSmyCgfO2yhYj+doNYeaKLh44j7Z4XAWoAQP0uW5KysOxSbYVjxxtGqVcUAXJpJT6ZpMcgYGMJgj0F4rP7rAEWQTV57Uy1hFMPi4k952QEfy998CQp6Ns4adAhaqIQZOKVfjpHTG9qv0VihNWQ13IOahHWwq5us/ZyRqxO9a3CXmlYV+2ziRHBoV5VhWgzzY+xPpIHWMIHToAMCARKigcsEgciIEXI6SgstN7MSOCI8NlS6d+XLLtFu9F44dwHbh/b4pmZ4RFYjIuTsebaALi+OiQ93KPeg9FbIZU23W/AlFqkYq6/oYby52TqVkr5a3Z9MaW7BF/8amLxgko5x0cxFSUCiYpU5Jeq4kiWotxPU08THBn1mIWMtGRWRo5lfgv2/A2z9oB6BzrLHEES5HTEBQG2wskkg7fryCswXA7nN38Jigzia8yTKf7sSC9oal4cNAVzZ+HO61XjrtH20OAmLCX//dVYiFsFSRg==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:37:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:37:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQpATZeh/ZDTvirT0VH8ethcSmxN3Xx5GDp7LHCR1QaMefhpod0KQzOUkzjmU/8oy8w6Cs5WaKZjDL6hT1BGgF3g16Q==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710225131&amp;s=zvQbFLSv3AFZ0gEH4IzaYy8SP1SeNXdAa584irRxq4c="; HttpOnly
&lt; Content-Length: 201
&lt; 
{ [201 bytes data]

100   201  100   201    0     0   6483      0 --:--:-- --:--:-- --:--:--  6483
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser2&lt;/awsAccessKey&gt;&lt;awsSecret&gt;9f92b0985ff204b31b76b6f18283dcafeab6d26f87fa3936ca9fbbbeaad2fb02&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250227 16:37:05.141" endtime="20250227 16:37:05.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:05.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:05.142" endtime="20250227 16:37:05.142"/>
</kw>
<status status="PASS" starttime="20250227 16:37:05.100" endtime="20250227 16:37:05.142"/>
</kw>
<msg timestamp="20250227 16:37:05.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:05.100" endtime="20250227 16:37:05.143"/>
</kw>
<msg timestamp="20250227 16:37:05.143" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:05.099" endtime="20250227 16:37:05.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:37:05.143" endtime="20250227 16:37:05.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250227 16:37:05.143" endtime="20250227 16:37:05.143"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:05.147" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:07.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:07.832" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:05.144" endtime="20250227 16:37:07.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:07.833" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:07.832" endtime="20250227 16:37:07.833"/>
</kw>
<status status="PASS" starttime="20250227 16:37:05.144" endtime="20250227 16:37:07.833"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:07.836" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:10.423" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:10.424" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:07.834" endtime="20250227 16:37:10.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:10.424" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:10.424" endtime="20250227 16:37:10.424"/>
</kw>
<status status="PASS" starttime="20250227 16:37:07.833" endtime="20250227 16:37:10.425"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:10.427" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:13.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:13.058" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:37:10.425" endtime="20250227 16:37:13.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:13.059" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250227 16:37:13.058" endtime="20250227 16:37:13.059"/>
</kw>
<status status="PASS" starttime="20250227 16:37:10.425" endtime="20250227 16:37:13.059"/>
</kw>
<status status="PASS" starttime="20250227 16:37:05.144" endtime="20250227 16:37:13.059"/>
</kw>
<status status="PASS" starttime="20250227 16:37:05.144" endtime="20250227 16:37:13.059"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:36:57.510" endtime="20250227 16:37:13.059"/>
</test>
<test id="s1-s18-t5" name="S3 Gateway Reject Secret Generation By Non-admin User" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:13.061" endtime="20250227 16:37:13.061"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:13.064" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:13.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:13.068" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:37:13.062" endtime="20250227 16:37:13.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:13.069" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:37:13.069" endtime="20250227 16:37:13.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:13.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:13.069" endtime="20250227 16:37:13.069"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.062" endtime="20250227 16:37:13.070"/>
</kw>
<msg timestamp="20250227 16:37:13.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:13.061" endtime="20250227 16:37:13.070"/>
</kw>
<msg timestamp="20250227 16:37:13.070" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:37:13.061" endtime="20250227 16:37:13.070"/>
</kw>
<msg timestamp="20250227 16:37:13.070" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:13.061" endtime="20250227 16:37:13.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:37:13.070" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:13.070" endtime="20250227 16:37:13.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:13.074" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:13.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:13.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:37:13.072" endtime="20250227 16:37:13.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:13.103" level="INFO"/>
<status status="PASS" starttime="20250227 16:37:13.103" endtime="20250227 16:37:13.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:13.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:13.103" endtime="20250227 16:37:13.104"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.071" endtime="20250227 16:37:13.104"/>
</kw>
<msg timestamp="20250227 16:37:13.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:13.071" endtime="20250227 16:37:13.104"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.071" endtime="20250227 16:37:13.104"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.071" endtime="20250227 16:37:13.104"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.060" endtime="20250227 16:37:13.104"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:13.107" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:15.721" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:15.721" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:13.105" endtime="20250227 16:37:15.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:15.722" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:15.721" endtime="20250227 16:37:15.722"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.104" endtime="20250227 16:37:15.722"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:15.725" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:18.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:18.364" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:15.723" endtime="20250227 16:37:18.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:18.365" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:18.365" endtime="20250227 16:37:18.365"/>
</kw>
<status status="PASS" starttime="20250227 16:37:15.722" endtime="20250227 16:37:18.366"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:18.368" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:21.056" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:21.056" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:18.366" endtime="20250227 16:37:21.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:21.057" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:21.056" endtime="20250227 16:37:21.057"/>
</kw>
<status status="PASS" starttime="20250227 16:37:18.366" endtime="20250227 16:37:21.057"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.104" endtime="20250227 16:37:21.057"/>
</kw>
<status status="PASS" starttime="20250227 16:37:13.060" endtime="20250227 16:37:21.057"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:21.057" endtime="20250227 16:37:21.058"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:21.058" endtime="20250227 16:37:21.058"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:21.062" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:21.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:21.066" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:37:21.060" endtime="20250227 16:37:21.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:21.067" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:37:21.066" endtime="20250227 16:37:21.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:21.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:21.067" endtime="20250227 16:37:21.067"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.059" endtime="20250227 16:37:21.067"/>
</kw>
<msg timestamp="20250227 16:37:21.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:21.059" endtime="20250227 16:37:21.067"/>
</kw>
<msg timestamp="20250227 16:37:21.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:37:21.059" endtime="20250227 16:37:21.067"/>
</kw>
<msg timestamp="20250227 16:37:21.068" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:21.059" endtime="20250227 16:37:21.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:37:21.068" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:21.068" endtime="20250227 16:37:21.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:21.071" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:21.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:21.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:37:21.069" endtime="20250227 16:37:21.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:21.107" level="INFO"/>
<status status="PASS" starttime="20250227 16:37:21.107" endtime="20250227 16:37:21.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:21.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:21.107" endtime="20250227 16:37:21.107"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.069" endtime="20250227 16:37:21.108"/>
</kw>
<msg timestamp="20250227 16:37:21.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:21.069" endtime="20250227 16:37:21.108"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.068" endtime="20250227 16:37:21.108"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.068" endtime="20250227 16:37:21.108"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.058" endtime="20250227 16:37:21.108"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.058" endtime="20250227 16:37:21.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:21.111" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:21.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:21.162" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:21.109" endtime="20250227 16:37:21.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:21.163" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBBybsNjj8BDgiFGrsRcYlmqB7szCw5EQF4+e+cNmRfFZidOQKJRnhvfUEK/MG4v+yIf/xvFD+0ZW8W7NG4aTsdaUTpkLHoVCJg/5D7GQpefCkP8gBoBtN7aADkhFZijNZj5RqUtjXr6a1h1d5TeYccSAarGgD7cvJWj+Flleg6dfgQZ3mvKh9jWtOQVol4XN6ifu3sQvmZNderh6VQlmf5S7Yp8672aBCUTsgc32AbF+eFwCsAzqXt6NQKPqaKnAakDfuCCxNhCp0AshMnRL0LzGj+7SYExQs7EnjbrD1OTuV4VzjxtCxeDAY4vnWteEMHQEzkAkJqVF9XOvYFneX59QAorrzVNlmpIHXMIHUoAMCARKigcwEgckQkSytMg0QWnVh79O2d4Y9o7p35hdKAchtptQEa9wpLz9+jXm/H7WpW2X7rdbB6ptTSDszL7H9J2BMxmO2wPcIls+oUO1TEcWxsWEXhY62gL+itDx74PTlPjW3sFS9GUhrz//7XMc2EWUpB/+Rye1ff+Adp3EofllPoW4Y0W1IfWBOrpNQYJZL+9ynJeQZwsA9reBLZPi3HnmrhVzet80BsEyIdPbA643ac7p3D9YShbaeepPlk4Q4ZqbSXVi/IwA7NLqbb0x7puY=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQq+Bcgl0Qhx0eyHgBlinjEWlXEoTbhbL+BEEp+1XmSDfLgQ9Iy6qYmditP3fPTBI+nTCmpFTvryOVKbnaKhQefT2cA==
&lt; Set-Cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710241140&amp;s=XLx45tE5hVaiAELhGVfqwCaCOKLWNv1aCm0tEsS4dCA="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:37:21.163" endtime="20250227 16:37:21.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:21.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:21.164" endtime="20250227 16:37:21.164"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.109" endtime="20250227 16:37:21.164"/>
</kw>
<msg timestamp="20250227 16:37:21.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:21.108" endtime="20250227 16:37:21.164"/>
</kw>
<msg timestamp="20250227 16:37:21.164" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:21.108" endtime="20250227 16:37:21.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:37:21.165" endtime="20250227 16:37:21.165"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:21.168" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:23.694" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:23.694" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:21.166" endtime="20250227 16:37:23.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:23.695" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:23.694" endtime="20250227 16:37:23.695"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.166" endtime="20250227 16:37:23.695"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:23.697" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:26.370" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:26.371" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250227 16:37:23.695" endtime="20250227 16:37:26.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:26.371" level="INFO">USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250227 16:37:26.371" endtime="20250227 16:37:26.371"/>
</kw>
<status status="PASS" starttime="20250227 16:37:23.695" endtime="20250227 16:37:26.372"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:26.374" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:29.045" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:29.045" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250227 16:37:26.372" endtime="20250227 16:37:29.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:29.046" level="INFO">USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250227 16:37:29.046" endtime="20250227 16:37:29.046"/>
</kw>
<status status="PASS" starttime="20250227 16:37:26.372" endtime="20250227 16:37:29.046"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.165" endtime="20250227 16:37:29.046"/>
</kw>
<status status="PASS" starttime="20250227 16:37:21.165" endtime="20250227 16:37:29.046"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:37:13.059" endtime="20250227 16:37:29.047"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20250227 16:36:08.572" endtime="20250227 16:37:29.047"/>
</suite>
<suite id="s1-s19" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s19-t1" name="S3 Gateway Revoke Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:29.057" endtime="20250227 16:37:29.057"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:29.060" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:29.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:29.064" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:37:29.058" endtime="20250227 16:37:29.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:29.065" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:37:29.064" endtime="20250227 16:37:29.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:29.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:29.065" endtime="20250227 16:37:29.065"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.058" endtime="20250227 16:37:29.065"/>
</kw>
<msg timestamp="20250227 16:37:29.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:29.058" endtime="20250227 16:37:29.066"/>
</kw>
<msg timestamp="20250227 16:37:29.066" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:37:29.057" endtime="20250227 16:37:29.066"/>
</kw>
<msg timestamp="20250227 16:37:29.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:29.057" endtime="20250227 16:37:29.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:37:29.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:29.066" endtime="20250227 16:37:29.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:29.070" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:29.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:29.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:37:29.068" endtime="20250227 16:37:29.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:29.098" level="INFO"/>
<status status="PASS" starttime="20250227 16:37:29.097" endtime="20250227 16:37:29.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:29.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:29.098" endtime="20250227 16:37:29.098"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.067" endtime="20250227 16:37:29.099"/>
</kw>
<msg timestamp="20250227 16:37:29.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:29.067" endtime="20250227 16:37:29.099"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.067" endtime="20250227 16:37:29.099"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.066" endtime="20250227 16:37:29.099"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.057" endtime="20250227 16:37:29.099"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:29.102" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:31.723" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:31.723" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:29.099" endtime="20250227 16:37:31.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:31.724" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:31.724" endtime="20250227 16:37:31.724"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.099" endtime="20250227 16:37:31.725"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:31.727" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:34.511" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:34.511" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:31.725" endtime="20250227 16:37:34.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:34.512" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:34.511" endtime="20250227 16:37:34.512"/>
</kw>
<status status="PASS" starttime="20250227 16:37:31.725" endtime="20250227 16:37:34.512"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:34.515" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:37.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:37.090" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:34.512" endtime="20250227 16:37:37.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:37.091" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:37.090" endtime="20250227 16:37:37.091"/>
</kw>
<status status="PASS" starttime="20250227 16:37:34.512" endtime="20250227 16:37:37.091"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.099" endtime="20250227 16:37:37.091"/>
</kw>
<status status="PASS" starttime="20250227 16:37:29.057" endtime="20250227 16:37:37.091"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:37.091" endtime="20250227 16:37:37.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:37.095" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:39.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:39.796" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c785d9206f63c7473c7e4b3b7f1a65beb07924608257c897e0018b454f13265d</msg>
<status status="PASS" starttime="20250227 16:37:37.092" endtime="20250227 16:37:39.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:39.797" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=c785d9206f63c7473c7e4b3b7f1a65beb07924608257c897e0018b454f13265d</msg>
<status status="PASS" starttime="20250227 16:37:39.797" endtime="20250227 16:37:39.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:39.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:39.797" endtime="20250227 16:37:39.798"/>
</kw>
<status status="PASS" starttime="20250227 16:37:37.092" endtime="20250227 16:37:39.798"/>
</kw>
<msg timestamp="20250227 16:37:39.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:37.092" endtime="20250227 16:37:39.798"/>
</kw>
<status status="PASS" starttime="20250227 16:37:37.092" endtime="20250227 16:37:39.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:39.801" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:39.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:39.855" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:39.799" endtime="20250227 16:37:39.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:39.856" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGTTJ3lpLnB3f4OnY9EJOnCR/oZABJW00r54pQZbn++J41VMf8ftXwYEE9L+BASlDQH0sRI6GQe8wMdj4/wa5TWqx7irfayN9ff7J86nAP/PM2d7SXPTd9XGGJX2lisH4lm5iuSaDod11oiE9b3LMhWXtul+zU5cIlNEKeMxmEL4VbWTdskXVm3/IjZT38Bee2hpy+4RXGvQxm33FmPRETvMFl5QweYkOXlKMwcAVOhBKuLvv9LgB1+V2iVY3qZYDQKHBzTvHejcd9k+WdKmsQ84s8NraC3ZeA4tcYLXNOQ2v3XdhY256NEl3E8iRfa8jCppf4GXSnJj44lqlFyP/WHwBk9kQamYdvBT//FRAx6+ZCf92751ZIJYZpIHWMIHToAMCARKigcsEgchyik8c9VOu7fc/EXhBOQ+rAsL4ZTOvwNjpnIYoARlejUJS/577co1byDESl7PYPVtLEYmrNJZPCssNEGN/7ZLumhwKnbf9ZV7658QRqx5BWjhNjY0yMbZHdUUTsQ8sShGkk9Pf3dIUFikzLKnw2ZEv2lwz0Z2v30YaGCBa+620QSwz7l5ckoCsNT4P3y/bWu2bx5d6BlvAFBklwITOV4koxF3oZ0aNmrKxtVyACkCdjaw2FgBHRmusOGzoynBPW9EF5twM3bxnow==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:37:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:37:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQpVfaVPfMFqsjUYhDBWIcuibhl01wKoem8XkIrRakIdkUq+vDRIi2GV6YZ5+Z5Z9IhJRROtSVSJuxOjKC3oQpZ+unA==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710259845&amp;s=itpm95PKhG+Q1ZjbvYNOMP20ZprZLQISbLgYTYVIuP0="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:37:39.856" endtime="20250227 16:37:39.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:39.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:39.857" endtime="20250227 16:37:39.857"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.799" endtime="20250227 16:37:39.857"/>
</kw>
<msg timestamp="20250227 16:37:39.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:39.798" endtime="20250227 16:37:39.857"/>
</kw>
<msg timestamp="20250227 16:37:39.857" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:39.798" endtime="20250227 16:37:39.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:37:39.858" endtime="20250227 16:37:39.858"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:37:29.056" endtime="20250227 16:37:39.858"/>
</test>
<test id="s1-s19-t2" name="S3 Gateway Revoke Secret By Username" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:39.860" endtime="20250227 16:37:39.860"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:39.864" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:39.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:39.867" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:37:39.861" endtime="20250227 16:37:39.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:39.868" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:37:39.868" endtime="20250227 16:37:39.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:39.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:39.868" endtime="20250227 16:37:39.868"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.861" endtime="20250227 16:37:39.869"/>
</kw>
<msg timestamp="20250227 16:37:39.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:39.860" endtime="20250227 16:37:39.869"/>
</kw>
<msg timestamp="20250227 16:37:39.869" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:37:39.860" endtime="20250227 16:37:39.869"/>
</kw>
<msg timestamp="20250227 16:37:39.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:39.860" endtime="20250227 16:37:39.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:37:39.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:39.869" endtime="20250227 16:37:39.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:39.873" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:39.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:39.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:37:39.871" endtime="20250227 16:37:39.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:39.894" level="INFO"/>
<status status="PASS" starttime="20250227 16:37:39.893" endtime="20250227 16:37:39.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:39.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:39.894" endtime="20250227 16:37:39.894"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.870" endtime="20250227 16:37:39.894"/>
</kw>
<msg timestamp="20250227 16:37:39.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:39.870" endtime="20250227 16:37:39.894"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.870" endtime="20250227 16:37:39.895"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.870" endtime="20250227 16:37:39.895"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.859" endtime="20250227 16:37:39.895"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:39.897" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:42.560" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:42.560" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:39.895" endtime="20250227 16:37:42.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:42.561" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:42.561" endtime="20250227 16:37:42.561"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.895" endtime="20250227 16:37:42.561"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:42.564" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:44.898" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:44.898" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:42.562" endtime="20250227 16:37:44.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:44.899" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:44.898" endtime="20250227 16:37:44.899"/>
</kw>
<status status="PASS" starttime="20250227 16:37:42.561" endtime="20250227 16:37:44.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:44.902" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:47.458" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:47.458" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:44.899" endtime="20250227 16:37:47.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:47.459" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:47.459" endtime="20250227 16:37:47.459"/>
</kw>
<status status="PASS" starttime="20250227 16:37:44.899" endtime="20250227 16:37:47.459"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.895" endtime="20250227 16:37:47.460"/>
</kw>
<status status="PASS" starttime="20250227 16:37:39.859" endtime="20250227 16:37:47.460"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:47.460" endtime="20250227 16:37:47.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:47.463" level="INFO">Running command 'ozone s3 getsecret -u testuser  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:50.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:50.109" level="INFO">${output} = awsAccessKey=testuser
awsSecret=5789329e425bde5f9a67f8253ae1ad07644fe9675e29233ec58309a88eb4fe62</msg>
<status status="PASS" starttime="20250227 16:37:47.461" endtime="20250227 16:37:50.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:50.110" level="INFO">awsAccessKey=testuser
awsSecret=5789329e425bde5f9a67f8253ae1ad07644fe9675e29233ec58309a88eb4fe62</msg>
<status status="PASS" starttime="20250227 16:37:50.109" endtime="20250227 16:37:50.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:50.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:50.110" endtime="20250227 16:37:50.110"/>
</kw>
<status status="PASS" starttime="20250227 16:37:47.461" endtime="20250227 16:37:50.110"/>
</kw>
<msg timestamp="20250227 16:37:50.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:47.461" endtime="20250227 16:37:50.111"/>
</kw>
<status status="PASS" starttime="20250227 16:37:47.460" endtime="20250227 16:37:50.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:50.115" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:50.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:50.152" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:50.112" endtime="20250227 16:37:50.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:50.153" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGRxvxcJYfs8FAEzhJQnKNzumZ5U3Cj4cYcUTc0ES01Rm19IV/4HItlPGf6gqVy1QIvvzKGohdtiPbZHPkz/bD/Y8VyZ0B0OI5g3Rc4Zc6Z6hHMOl2bGipbm45aJu9kExN1PjKytmR2laUUWiTzKn0qMUBBtf2JAIY/XRdtyLjUZLkIFFihWHXN50Hnf6dRdKpOPcGDukqTgyNx2NCCgAyQibduf+BFVEoespHxhFvyj/vIxXBx0fh2sDDNGBOuToCuqaj/i35AbTchLNAEosGCYN3FC7fme5CdimaRk6ng6gugY7fvdgdwCFxiXdAJGxNpax2XUZKkuLnpmVy7fbHfRrEzSoBHLiSCOVXQTt/9AhzmVM1lot4MCrpIHWMIHToAMCARKigcsEgci+wKxHhBn+nk8N5+f4uAaL3dLlTFQQt8xvgIWlZWb15HFdxtWFi7RdO4vi0Wnsw+kaiQUaBbqI9zREGjNOUXvTtXoWCrZ07bFn+bHOmem62JN/dB3XJq+lAuk+9aeZ6uKmqO/0TqUU4f44QLD3WcUgNyi1L9pJvLHEvB/lsWLt2l7+uBBATc7OZVA0lRBT7qbimP6I8G13qLWtn981/fWH6xjFKkZ2S3C+NFoIjuxlNtYLzPjsWq7VPC+tw/lhjNJgFt7D591loQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:37:50 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:37:50 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQn7m9BBqT6S1o/EyS4Vc2Iqga8bUzRvo/n4Zru5zBwB/Qcgb0fO/ExZQZuou159tqBePJFgxoLVXoU6Uljb/2P4bng==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710270144&amp;s=O/0eMtnSPJhMfAeqEAccs7xA8+ZVw1eJl/zpuxOSz2o="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:37:50.153" endtime="20250227 16:37:50.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:50.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:50.153" endtime="20250227 16:37:50.154"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.111" endtime="20250227 16:37:50.154"/>
</kw>
<msg timestamp="20250227 16:37:50.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:50.111" endtime="20250227 16:37:50.154"/>
</kw>
<msg timestamp="20250227 16:37:50.154" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:37:50.111" endtime="20250227 16:37:50.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:37:50.154" endtime="20250227 16:37:50.155"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:37:39.859" endtime="20250227 16:37:50.155"/>
</test>
<test id="s1-s19-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:50.156" endtime="20250227 16:37:50.156"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:50.160" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:50.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:50.163" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:37:50.157" endtime="20250227 16:37:50.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:50.164" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:37:50.164" endtime="20250227 16:37:50.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:50.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:50.164" endtime="20250227 16:37:50.164"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.157" endtime="20250227 16:37:50.165"/>
</kw>
<msg timestamp="20250227 16:37:50.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:50.157" endtime="20250227 16:37:50.165"/>
</kw>
<msg timestamp="20250227 16:37:50.165" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:37:50.157" endtime="20250227 16:37:50.165"/>
</kw>
<msg timestamp="20250227 16:37:50.165" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:50.156" endtime="20250227 16:37:50.165"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:37:50.165" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:37:50.165" endtime="20250227 16:37:50.165"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:50.168" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:50.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:37:50.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:37:50.167" endtime="20250227 16:37:50.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:50.292" level="INFO"/>
<status status="PASS" starttime="20250227 16:37:50.292" endtime="20250227 16:37:50.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:37:50.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:37:50.293" endtime="20250227 16:37:50.293"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.166" endtime="20250227 16:37:50.293"/>
</kw>
<msg timestamp="20250227 16:37:50.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:50.166" endtime="20250227 16:37:50.293"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.166" endtime="20250227 16:37:50.293"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.165" endtime="20250227 16:37:50.293"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.156" endtime="20250227 16:37:50.293"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:50.296" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:53.038" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:53.039" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:50.294" endtime="20250227 16:37:53.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:53.040" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:53.039" endtime="20250227 16:37:53.040"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.294" endtime="20250227 16:37:53.040"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:53.043" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:55.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:55.707" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:53.040" endtime="20250227 16:37:55.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:55.708" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:55.708" endtime="20250227 16:37:55.708"/>
</kw>
<status status="PASS" starttime="20250227 16:37:53.040" endtime="20250227 16:37:55.709"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:55.711" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:37:58.356" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:37:58.356" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:55.709" endtime="20250227 16:37:58.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:37:58.357" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:37:58.356" endtime="20250227 16:37:58.357"/>
</kw>
<status status="PASS" starttime="20250227 16:37:55.709" endtime="20250227 16:37:58.357"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.294" endtime="20250227 16:37:58.357"/>
</kw>
<status status="PASS" starttime="20250227 16:37:50.156" endtime="20250227 16:37:58.357"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:37:58.357" endtime="20250227 16:37:58.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:37:58.361" level="INFO">Running command 'ozone s3 getsecret -u testuser2  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:00.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:00.936" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=b5e2d5eb165044ebeb8f63ccf9de8c89ebdf97351ffa243ec492efa6f6394150</msg>
<status status="PASS" starttime="20250227 16:37:58.358" endtime="20250227 16:38:00.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:00.937" level="INFO">awsAccessKey=testuser2
awsSecret=b5e2d5eb165044ebeb8f63ccf9de8c89ebdf97351ffa243ec492efa6f6394150</msg>
<status status="PASS" starttime="20250227 16:38:00.936" endtime="20250227 16:38:00.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:00.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:00.937" endtime="20250227 16:38:00.937"/>
</kw>
<status status="PASS" starttime="20250227 16:37:58.358" endtime="20250227 16:38:00.938"/>
</kw>
<msg timestamp="20250227 16:38:00.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:37:58.358" endtime="20250227 16:38:00.938"/>
</kw>
<status status="PASS" starttime="20250227 16:37:58.358" endtime="20250227 16:38:00.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:00.941" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:00.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:00.980" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:00.939" endtime="20250227 16:38:00.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:00.981" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGR9KGrNO2RXfA7U51pvMv0TiGYulVwEE/q3mZVu0Wxy6iu+BAD9nPXk40HdHxtWH3RVEOlPhEZoRyHPzBZvRKQT/Qzw7/ZEbAkChpxSQP4wMCJlOdaffy4bbCfQAdsehMdwbbkBFREeQNFZp9z/MYzGFZ8n5wkEy9LIWt/1jmS25ACCLRvcuX6mCLcdhB+hZ5nf1xck1Hjca6O48gljALGiF3EniyFKkFqcZco2bRNouDCNz6OzDfb+VBof+nbHCoq3F0lTG2W11pCeMVpOrVdhL4OZvLkCDnXqCKKPHQCIyNl6UkO6ElbY0MeIrNXRYxoWjCU7IhkT9ql5Hp+HMkD2md5TO0eWCvuxVtQHQxV9QkgADEs2aaGY3pIHWMIHToAMCARKigcsEgcidrTzQVlu0mzBeCJHoB7LGCdCTQjHUFabcfKxzHuY/pIso/EHm5BTYreHc3hCUSCcGKz7oVPwyj5bkxOYmI4xM+uuozg3XnFAp6bea/Yjk5wDHTNgNMESVN7r6DjxnkPQLsFy+3Qbm2jc/ZTs9YYh2ZodexA8rfmgutHtu6NCFn0fhMkT61gGR9hguXF+v2jERVinokxIaIH2jCG3Riis5405W7PD+l8AJhlAG0llS7sKrLufNxOepycK7JiDD4UQVuadnOUVgqA==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:38:00 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:38:00 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQitvJolgfvLZtW3nCRiQZ09NumpBatn4jxUqBxoRElL83YrJZTtGDwV8qNut970wmswq5BlgboGtApwnaI0rHw4zTw==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710280971&amp;s=/h9cb9pZg84iBsyojnVpgGOrPC6IGynlwyfm/rh7UGg="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:38:00.980" endtime="20250227 16:38:00.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:00.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:00.981" endtime="20250227 16:38:00.981"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.938" endtime="20250227 16:38:00.982"/>
</kw>
<msg timestamp="20250227 16:38:00.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:00.938" endtime="20250227 16:38:00.982"/>
</kw>
<msg timestamp="20250227 16:38:00.982" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:00.938" endtime="20250227 16:38:00.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:38:00.982" endtime="20250227 16:38:00.982"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:37:50.155" endtime="20250227 16:38:00.983"/>
</test>
<test id="s1-s19-t4" name="S3 Gateway Reject Secret Revoke By Non-admin User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:38:00.984" endtime="20250227 16:38:00.984"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:00.988" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:00.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:00.992" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:38:00.986" endtime="20250227 16:38:00.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:00.992" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:38:00.992" endtime="20250227 16:38:00.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:00.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:00.992" endtime="20250227 16:38:00.993"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.985" endtime="20250227 16:38:00.993"/>
</kw>
<msg timestamp="20250227 16:38:00.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:00.985" endtime="20250227 16:38:00.993"/>
</kw>
<msg timestamp="20250227 16:38:00.993" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:38:00.985" endtime="20250227 16:38:00.993"/>
</kw>
<msg timestamp="20250227 16:38:00.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:00.984" endtime="20250227 16:38:00.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:38:00.994" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:00.993" endtime="20250227 16:38:00.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:00.997" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:01.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:01.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:00.995" endtime="20250227 16:38:01.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:01.018" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:01.017" endtime="20250227 16:38:01.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:01.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:01.018" endtime="20250227 16:38:01.018"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.994" endtime="20250227 16:38:01.018"/>
</kw>
<msg timestamp="20250227 16:38:01.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:00.994" endtime="20250227 16:38:01.019"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.994" endtime="20250227 16:38:01.019"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.994" endtime="20250227 16:38:01.019"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.984" endtime="20250227 16:38:01.019"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:01.021" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:03.737" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:38:03.737" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:01.019" endtime="20250227 16:38:03.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:03.738" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:03.737" endtime="20250227 16:38:03.738"/>
</kw>
<status status="PASS" starttime="20250227 16:38:01.019" endtime="20250227 16:38:03.738"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:03.741" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:06.413" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:38:06.413" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:03.738" endtime="20250227 16:38:06.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:06.414" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:06.413" endtime="20250227 16:38:06.414"/>
</kw>
<status status="PASS" starttime="20250227 16:38:03.738" endtime="20250227 16:38:06.414"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:06.416" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.034" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:38:09.034" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:06.414" endtime="20250227 16:38:09.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.035" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250227 16:38:09.035" endtime="20250227 16:38:09.035"/>
</kw>
<status status="PASS" starttime="20250227 16:38:06.414" endtime="20250227 16:38:09.036"/>
</kw>
<status status="PASS" starttime="20250227 16:38:01.019" endtime="20250227 16:38:09.036"/>
</kw>
<status status="PASS" starttime="20250227 16:38:00.984" endtime="20250227 16:38:09.036"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:38:09.036" endtime="20250227 16:38:09.036"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:38:09.037" endtime="20250227 16:38:09.037"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.041" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:09.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:38:09.038" endtime="20250227 16:38:09.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.045" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:38:09.045" endtime="20250227 16:38:09.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:09.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:09.045" endtime="20250227 16:38:09.045"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.038" endtime="20250227 16:38:09.046"/>
</kw>
<msg timestamp="20250227 16:38:09.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:09.038" endtime="20250227 16:38:09.046"/>
</kw>
<msg timestamp="20250227 16:38:09.046" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:38:09.037" endtime="20250227 16:38:09.046"/>
</kw>
<msg timestamp="20250227 16:38:09.046" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:09.037" endtime="20250227 16:38:09.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:38:09.046" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:09.046" endtime="20250227 16:38:09.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.050" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:09.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:09.048" endtime="20250227 16:38:09.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.093" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:09.093" endtime="20250227 16:38:09.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:09.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:09.093" endtime="20250227 16:38:09.094"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.047" endtime="20250227 16:38:09.094"/>
</kw>
<msg timestamp="20250227 16:38:09.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:09.047" endtime="20250227 16:38:09.094"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.047" endtime="20250227 16:38:09.094"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.047" endtime="20250227 16:38:09.094"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.036" endtime="20250227 16:38:09.094"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.036" endtime="20250227 16:38:09.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.097" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:09.129" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:09.095" endtime="20250227 16:38:09.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.130" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBBw3TWNPsNITYUjCZYoxgbzH0yJ0K9VpBskHQGQmM4xnQz1yhtZva0lWsodcYZATHeudaBrkoYoMIWycNyt8BHPQKER8Yqj7XtwbwbzAI/aXNFstAGfhgRAGtTAA+A7AemtxIMgfi0NdcVzCa/7V+CZ3wmwDqVvnpEsqCScjMSOjXZZuE5E0ixlmJeCxFMWpP/F8ZG8k6+S+82p6tmptmO4k9cyxkz345T7F7/wwqLXDmQ7EharU1qbOSng5D1p0RdmANJ/OClozX/JHiXEYq6o4a8QZSsScH8rhKW4m/47LtyIyU6DwBD/aLdcB+K0H5y6Cqk6XINh1cia73h5A0lVc8yKZ90kINpIHXMIHUoAMCARKigcwEgcl83AU/EjfV4MWfhE3jgC0X9FiXoVlM4e7uMvTPG4uf+/JDJ7y6eQqLUF5G17UVUCM4aWocCtFg8QVXxXMcO8Q7o3m2S1IlZ6LP7ndEip7uF66ZpUVo4H0P9Lrmm8p4deuF+j19DEcgK6x1+fbWJFvir6xIJbzyYE4nv6fGe2zNlmdHQh5FCe4sMCeI602zHdVPLbH6zarVtbNlGp+pqw093WJay58dXpo4N09ZRHjDw4laKOxN185TwCD/5Uwxre2dW4wOEKu1SJI=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQglfuTnSSy/9ntmbluAHw/G/dIMhgLswxIxByAw0K/bdFixy315hK18F8y3fodfEb7w9/pjJi9lnVEKUC6dDotdJfw==
&lt; Set-Cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710289126&amp;s=71foSJz6blk4q+6g4uI4UHSDLUa8MdXDYTFMu9UKMms="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250227 16:38:09.130" endtime="20250227 16:38:09.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:09.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:09.130" endtime="20250227 16:38:09.131"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.095" endtime="20250227 16:38:09.131"/>
</kw>
<msg timestamp="20250227 16:38:09.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:09.095" endtime="20250227 16:38:09.131"/>
</kw>
<msg timestamp="20250227 16:38:09.131" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:09.094" endtime="20250227 16:38:09.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:38:09.131" endtime="20250227 16:38:09.132"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:38:00.983" endtime="20250227 16:38:09.132"/>
</test>
<kw name="Setup v4 headers" library="commonawslib" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250227 16:38:09.134" endtime="20250227 16:38:09.134"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.137" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:09.141" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250227 16:38:09.135" endtime="20250227 16:38:09.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.141" level="INFO">scm</msg>
<status status="PASS" starttime="20250227 16:38:09.141" endtime="20250227 16:38:09.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:09.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:09.142" endtime="20250227 16:38:09.142"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.135" endtime="20250227 16:38:09.142"/>
</kw>
<msg timestamp="20250227 16:38:09.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:09.134" endtime="20250227 16:38:09.142"/>
</kw>
<msg timestamp="20250227 16:38:09.142" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250227 16:38:09.134" endtime="20250227 16:38:09.142"/>
</kw>
<msg timestamp="20250227 16:38:09.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:09.134" endtime="20250227 16:38:09.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:38:09.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:09.143" endtime="20250227 16:38:09.143"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.146" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:09.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:09.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:09.144" endtime="20250227 16:38:09.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:09.160" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:09.160" endtime="20250227 16:38:09.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:09.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:09.161" endtime="20250227 16:38:09.161"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.144" endtime="20250227 16:38:09.161"/>
</kw>
<msg timestamp="20250227 16:38:09.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:09.144" endtime="20250227 16:38:09.161"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.143" endtime="20250227 16:38:09.161"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.143" endtime="20250227 16:38:09.161"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.133" endtime="20250227 16:38:09.161"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.133" endtime="20250227 16:38:09.161"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:09.164" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:11.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:11.844" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27</msg>
<status status="PASS" starttime="20250227 16:38:09.162" endtime="20250227 16:38:11.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:11.845" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27</msg>
<status status="PASS" starttime="20250227 16:38:11.844" endtime="20250227 16:38:11.845"/>
</kw>
<msg timestamp="20250227 16:38:11.845" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27</msg>
<status status="PASS" starttime="20250227 16:38:09.162" endtime="20250227 16:38:11.845"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250227 16:38:11.846" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250227 16:38:11.845" endtime="20250227 16:38:11.846"/>
</kw>
<msg timestamp="20250227 16:38:11.846" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250227 16:38:11.845" endtime="20250227 16:38:11.846"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250227 16:38:11.846" endtime="20250227 16:38:11.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250227 16:38:11.846" endtime="20250227 16:38:11.846"/>
</kw>
<status status="NOT RUN" starttime="20250227 16:38:11.846" endtime="20250227 16:38:11.846"/>
</branch>
<status status="PASS" starttime="20250227 16:38:11.846" endtime="20250227 16:38:11.846"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250227 16:38:11.847" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250227 16:38:11.847" endtime="20250227 16:38:11.847"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250227 16:38:11.847" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250227 16:38:11.847" endtime="20250227 16:38:11.847"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250227 16:38:11.848" level="INFO">${secret} = ['ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27']</msg>
<status status="PASS" starttime="20250227 16:38:11.847" endtime="20250227 16:38:11.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:38:11.848" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250227 16:38:11.848" endtime="20250227 16:38:11.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250227 16:38:11.849" level="INFO">${secret} = ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27</msg>
<status status="PASS" starttime="20250227 16:38:11.849" endtime="20250227 16:38:11.849"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:11.852" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:12.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:12.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:11.850" endtime="20250227 16:38:12.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:12.191" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:12.191" endtime="20250227 16:38:12.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:12.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:12.191" endtime="20250227 16:38:12.191"/>
</kw>
<status status="PASS" starttime="20250227 16:38:11.850" endtime="20250227 16:38:12.192"/>
</kw>
<msg timestamp="20250227 16:38:12.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:11.850" endtime="20250227 16:38:12.192"/>
</kw>
<status status="PASS" starttime="20250227 16:38:11.849" endtime="20250227 16:38:12.192"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:12.195" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:12.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:12.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:12.193" endtime="20250227 16:38:12.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:12.521" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:12.521" endtime="20250227 16:38:12.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:12.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:12.521" endtime="20250227 16:38:12.522"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.193" endtime="20250227 16:38:12.522"/>
</kw>
<msg timestamp="20250227 16:38:12.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:12.192" endtime="20250227 16:38:12.522"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.192" endtime="20250227 16:38:12.522"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:12.525" level="INFO">Running command 'aws configure set aws_secret_access_key ed668bb9e4bb717af2db42f6240b34b6a695602bea5c40974a87a180d5554c27 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:12.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:12.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:12.523" endtime="20250227 16:38:12.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:12.858" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:12.858" endtime="20250227 16:38:12.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:12.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:12.859" endtime="20250227 16:38:12.859"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.523" endtime="20250227 16:38:12.859"/>
</kw>
<msg timestamp="20250227 16:38:12.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:12.523" endtime="20250227 16:38:12.859"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.522" endtime="20250227 16:38:12.859"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:12.862" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:13.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:13.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:12.860" endtime="20250227 16:38:13.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:13.195" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:13.195" endtime="20250227 16:38:13.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:13.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:13.195" endtime="20250227 16:38:13.196"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.860" endtime="20250227 16:38:13.196"/>
</kw>
<msg timestamp="20250227 16:38:13.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:12.860" endtime="20250227 16:38:13.196"/>
</kw>
<status status="PASS" starttime="20250227 16:38:12.859" endtime="20250227 16:38:13.196"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:13.199" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:13.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:13.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:38:13.197" endtime="20250227 16:38:13.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:13.527" level="INFO"/>
<status status="PASS" starttime="20250227 16:38:13.526" endtime="20250227 16:38:13.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:13.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:13.527" endtime="20250227 16:38:13.527"/>
</kw>
<status status="PASS" starttime="20250227 16:38:13.197" endtime="20250227 16:38:13.527"/>
</kw>
<msg timestamp="20250227 16:38:13.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:13.197" endtime="20250227 16:38:13.528"/>
</kw>
<status status="PASS" starttime="20250227 16:38:13.196" endtime="20250227 16:38:13.528"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.162" endtime="20250227 16:38:13.528"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.161" endtime="20250227 16:38:13.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:38:13.528" endtime="20250227 16:38:13.528"/>
</kw>
<status status="PASS" starttime="20250227 16:38:09.133" endtime="20250227 16:38:13.528"/>
</kw>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20250227 16:37:29.049" endtime="20250227 16:38:13.528"/>
</suite>
<suite id="s1-s20" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250227 16:38:13.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:13.537" endtime="20250227 16:38:13.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.537" endtime="20250227 16:38:13.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.537" endtime="20250227 16:38:13.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.538"/>
</kw>
<status status="PASS" starttime="20250227 16:38:13.537" endtime="20250227 16:38:13.538"/>
</kw>
<test id="s1-s20-t1" name="Check web UI" line="33">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${S3G_WEB_UI}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:13.541" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:19878 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:38:13.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:38:13.587" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:13.539" endtime="20250227 16:38:13.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:38:13.588" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.21.0.4:19878...
* Connected to s3g (172.21.0.4) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGSAAiS7gofK+Z/fBRL/u+KhElRu+R+OXwmzmpSs0mOb35Chxp1OAByzise8Kz6waeP4wXADj6FvSLHkqvoRQfn8O1vADoiMyYek1Fv8CTYvEwFToPv9W5Yah+bjZUjV7nfkbwIoJFgo08LNW1p9Kd658EAEW5tzBX1Gcf9mE+jDIs7DrPnFLLaMwGhk5+K80sUfsPsByFHRTc96mf3C2gt8+nb8zJWf0D3u2rYb7qmnSHSM/TxOyKWTtIk/fICBG10SSNVZ4ptKS9fO+glbPtgFPlmjaSBk/pwoOFaHiuxjHBia6oAQbYqAMFFu+1rHPoNIbgFGrfKUVxKpkeJpLRz9/e8L0Eubs0ywUv0Eoj03ltX/erTuTfzTApIHWMIHToAMCARKigcsEgchjBLlzqi0aJdSki1biTLTpRQT5wldu9KNM7wAKT7e6QGY+seUj0uJU0/gXBcx+m0Z9Uhmw6p6NGPT6SqVTVe7RmTf+i9fELD3FLCLkz6ut/3v0CvHvaVdlTESBH3ehLYkFHvCIMbWqxLVSO9rUyeA+R4fE/KoiqDWVpz/IfhCGkeC+IoIYawSMpT7t2Rj2dpt1cH1Qz4yYS7Vn8hwBGHxowifyESiKNXCQ5LKAcgKWyCahA8LcRc5xEPAk9+HeuN8wWo7claYmRw==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 27 Feb 2025 16:38:13 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 27 Feb 2025 16:38:13 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQlWUkQB81kWDHDSYGjJBUXPq+629BHfuygeJpCwfJxmNlJmyNoOtF7lRAJJZ94wulKCj7uHCh11g0YBJyOzOhdjAsA==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1740710293578&amp;s=0L5V3SVRUO0sEomCgiGCWMSjIzdhL++4pEuVBxcsp8k="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 01 Jan 2023 00:00:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2761
&lt; 
{ [2761 bytes data]

100  2761  100  2761    0     0  72657      0 --:--:-- --:--:-- --:--:-- 72657
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="static/bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="static/hadoop.css" rel="stylesheet"&gt;
    &lt;link href="static/ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="static/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;For more information, please check the &lt;a href="static/docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="static/jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="static/bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20250227 16:38:13.587" endtime="20250227 16:38:13.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:38:13.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:38:13.588" endtime="20250227 16:38:13.588"/>
</kw>
<status status="PASS" starttime="20250227 16:38:13.539" endtime="20250227 16:38:13.588"/>
</kw>
<msg timestamp="20250227 16:38:13.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:13.539" endtime="20250227 16:38:13.589"/>
</kw>
<msg timestamp="20250227 16:38:13.589" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250227 16:38:13.539" endtime="20250227 16:38:13.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:38:13.589" endtime="20250227 16:38:13.589"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:38:13.538" endtime="20250227 16:38:13.589"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20250227 16:38:13.530" endtime="20250227 16:38:13.590"/>
</suite>
<status status="PASS" starttime="20250227 16:32:37.080" endtime="20250227 16:38:13.594"/>
</suite>
<statistics>
<total>
<stat pass="90" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">aws-skip</stat>
<stat pass="19" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="90" fail="0" skip="0" id="s1" name="ozonesecure-vault">ozonesecure-vault</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Awss3">ozonesecure-vault.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Boto3">ozonesecure-vault.Boto3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3" name="Bucketcreate">ozonesecure-vault.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Bucketdelete">ozonesecure-vault.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Buckethead">ozonesecure-vault.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Bucketlist">ozonesecure-vault.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Freon">ozonesecure-vault.Freon</stat>
<stat pass="16" fail="0" skip="0" id="s1-s8" name="MultipartUpload">ozonesecure-vault.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s9" name="Objectcopy">ozonesecure-vault.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Objectcopys3A">ozonesecure-vault.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s11" name="Objectdelete">ozonesecure-vault.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s12" name="Objecthead">ozonesecure-vault.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Objectmultidelete">ozonesecure-vault.Objectmultidelete</stat>
<stat pass="23" fail="0" skip="0" id="s1-s14" name="Objectputget">ozonesecure-vault.Objectputget</stat>
<stat pass="3" fail="0" skip="0" id="s1-s15" name="Objecttagging">ozonesecure-vault.Objecttagging</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Rclone">ozonesecure-vault.Rclone</stat>
<stat pass="2" fail="0" skip="0" id="s1-s17" name="S3 Getsecret">ozonesecure-vault.S3 Getsecret</stat>
<stat pass="5" fail="0" skip="0" id="s1-s18" name="Secretgenerate">ozonesecure-vault.Secretgenerate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s19" name="Secretrevoke">ozonesecure-vault.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Webui">ozonesecure-vault.Webui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
