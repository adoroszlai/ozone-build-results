<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250214 15:15:02.972" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ec">
<suite id="s1-s1" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:01.998" endtime="20250214 14:58:01.998"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:01.999" level="INFO">${randStr} = 6855248637</msg>
<status status="PASS" starttime="20250214 14:58:01.999" endtime="20250214 14:58:01.999"/>
</kw>
<msg timestamp="20250214 14:58:01.999" level="INFO">${random} = ozone-test-6855248637</msg>
<status status="PASS" starttime="20250214 14:58:01.998" endtime="20250214 14:58:01.999"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:58:02.000" level="INFO">${PREFIX} = ozone-test-6855248637</msg>
<status status="PASS" starttime="20250214 14:58:01.999" endtime="20250214 14:58:02.000"/>
</kw>
<status status="PASS" starttime="20250214 14:58:01.998" endtime="20250214 14:58:02.000"/>
</kw>
<status status="PASS" starttime="20250214 14:58:01.998" endtime="20250214 14:58:02.000"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:02.003" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:02.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:02.005" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250214 14:58:02.000" endtime="20250214 14:58:02.005"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:02.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:02.005" endtime="20250214 14:58:02.006"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250214 14:58:02.006" endtime="20250214 14:58:02.006"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:02.006" endtime="20250214 14:58:02.006"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250214 14:58:02.006" endtime="20250214 14:58:02.006"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:02.006" endtime="20250214 14:58:02.006"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.000" endtime="20250214 14:58:02.006"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.000" endtime="20250214 14:58:02.007"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 14:58:02.008" endtime="20250214 14:58:02.008"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:02.010" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:02.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:02.014" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 14:58:02.009" endtime="20250214 14:58:02.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:02.015" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 14:58:02.014" endtime="20250214 14:58:02.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:02.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:02.015" endtime="20250214 14:58:02.015"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.008" endtime="20250214 14:58:02.015"/>
</kw>
<msg timestamp="20250214 14:58:02.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:02.008" endtime="20250214 14:58:02.015"/>
</kw>
<msg timestamp="20250214 14:58:02.015" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 14:58:02.008" endtime="20250214 14:58:02.015"/>
</kw>
<msg timestamp="20250214 14:58:02.015" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:02.008" endtime="20250214 14:58:02.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 14:58:02.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:02.016" endtime="20250214 14:58:02.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:02.019" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:02.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:02.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:02.017" endtime="20250214 14:58:02.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:02.054" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:02.053" endtime="20250214 14:58:02.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:02.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:02.054" endtime="20250214 14:58:02.054"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.017" endtime="20250214 14:58:02.054"/>
</kw>
<msg timestamp="20250214 14:58:02.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:02.017" endtime="20250214 14:58:02.055"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.016" endtime="20250214 14:58:02.055"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.016" endtime="20250214 14:58:02.055"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.007" endtime="20250214 14:58:02.055"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.007" endtime="20250214 14:58:02.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:02.058" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:04.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:04.738" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:58:02.056" endtime="20250214 14:58:04.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:04.739" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:58:04.739" endtime="20250214 14:58:04.739"/>
</kw>
<msg timestamp="20250214 14:58:04.739" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:58:02.055" endtime="20250214 14:58:04.739"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250214 14:58:04.740" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250214 14:58:04.740" endtime="20250214 14:58:04.740"/>
</kw>
<msg timestamp="20250214 14:58:04.740" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250214 14:58:04.739" endtime="20250214 14:58:04.740"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:58:04.741" endtime="20250214 14:58:04.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:58:04.741" endtime="20250214 14:58:04.741"/>
</kw>
<status status="NOT RUN" starttime="20250214 14:58:04.741" endtime="20250214 14:58:04.741"/>
</branch>
<status status="PASS" starttime="20250214 14:58:04.741" endtime="20250214 14:58:04.741"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 14:58:04.742" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 14:58:04.741" endtime="20250214 14:58:04.742"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250214 14:58:04.742" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 14:58:04.742" endtime="20250214 14:58:04.742"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 14:58:04.743" level="INFO">${secret} = ['b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185']</msg>
<status status="PASS" starttime="20250214 14:58:04.743" endtime="20250214 14:58:04.743"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:04.744" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:04.743" endtime="20250214 14:58:04.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:04.745" level="INFO">${secret} = b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:58:04.744" endtime="20250214 14:58:04.745"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:04.749" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:05.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:05.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:04.746" endtime="20250214 14:58:05.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:05.111" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:05.111" endtime="20250214 14:58:05.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:05.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:05.112" endtime="20250214 14:58:05.112"/>
</kw>
<status status="PASS" starttime="20250214 14:58:04.746" endtime="20250214 14:58:05.112"/>
</kw>
<msg timestamp="20250214 14:58:05.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:04.745" endtime="20250214 14:58:05.112"/>
</kw>
<status status="PASS" starttime="20250214 14:58:04.745" endtime="20250214 14:58:05.113"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:05.116" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:05.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:05.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:05.114" endtime="20250214 14:58:05.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:05.459" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:05.459" endtime="20250214 14:58:05.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:05.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:05.459" endtime="20250214 14:58:05.459"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.113" endtime="20250214 14:58:05.460"/>
</kw>
<msg timestamp="20250214 14:58:05.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:05.113" endtime="20250214 14:58:05.460"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.113" endtime="20250214 14:58:05.460"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:05.463" level="INFO">Running command 'aws configure set aws_secret_access_key b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:05.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:05.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:05.461" endtime="20250214 14:58:05.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:05.807" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:05.807" endtime="20250214 14:58:05.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:05.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:05.807" endtime="20250214 14:58:05.808"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.460" endtime="20250214 14:58:05.808"/>
</kw>
<msg timestamp="20250214 14:58:05.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:05.460" endtime="20250214 14:58:05.808"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.460" endtime="20250214 14:58:05.808"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:05.811" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:06.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:06.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:05.809" endtime="20250214 14:58:06.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:06.165" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:06.165" endtime="20250214 14:58:06.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:06.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:06.165" endtime="20250214 14:58:06.166"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.809" endtime="20250214 14:58:06.166"/>
</kw>
<msg timestamp="20250214 14:58:06.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:05.808" endtime="20250214 14:58:06.166"/>
</kw>
<status status="PASS" starttime="20250214 14:58:05.808" endtime="20250214 14:58:06.166"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:06.169" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:06.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:06.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:06.167" endtime="20250214 14:58:06.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:06.522" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:06.521" endtime="20250214 14:58:06.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:06.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:06.522" endtime="20250214 14:58:06.522"/>
</kw>
<status status="PASS" starttime="20250214 14:58:06.167" endtime="20250214 14:58:06.522"/>
</kw>
<msg timestamp="20250214 14:58:06.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:06.166" endtime="20250214 14:58:06.523"/>
</kw>
<status status="PASS" starttime="20250214 14:58:06.166" endtime="20250214 14:58:06.523"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.055" endtime="20250214 14:58:06.523"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.055" endtime="20250214 14:58:06.523"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:06.523" endtime="20250214 14:58:06.523"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.007" endtime="20250214 14:58:06.523"/>
</kw>
<status status="PASS" starttime="20250214 14:58:02.007" endtime="20250214 14:58:06.523"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:06.523" endtime="20250214 14:58:06.523"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:06.524" endtime="20250214 14:58:06.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:06.524" endtime="20250214 14:58:06.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create EC bucket" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:06.527" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:09.398" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:09.398" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20250214 14:58:06.525" endtime="20250214 14:58:09.399"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:09.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:09.399" endtime="20250214 14:58:09.400"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:09.400" endtime="20250214 14:58:09.400"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:09.400" endtime="20250214 14:58:09.400"/>
</kw>
<msg timestamp="20250214 14:58:09.400" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250214 14:58:06.524" endtime="20250214 14:58:09.400"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:58:09.400" endtime="20250214 14:58:09.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:09.404" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC --layout OBJECT_STORE o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:12.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:12.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:09.402" endtime="20250214 14:58:12.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:12.483" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:12.482" endtime="20250214 14:58:12.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:12.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:12.483" endtime="20250214 14:58:12.484"/>
</kw>
<status status="PASS" starttime="20250214 14:58:09.401" endtime="20250214 14:58:12.484"/>
</kw>
<msg timestamp="20250214 14:58:12.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:09.401" endtime="20250214 14:58:12.484"/>
</kw>
<status status="PASS" starttime="20250214 14:58:09.400" endtime="20250214 14:58:12.484"/>
</kw>
<status status="PASS" starttime="20250214 14:58:06.524" endtime="20250214 14:58:12.484"/>
</kw>
<status status="PASS" starttime="20250214 14:58:06.524" endtime="20250214 14:58:12.484"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:58:12.485" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250214 14:58:12.484" endtime="20250214 14:58:12.485"/>
</kw>
<status status="PASS" starttime="20250214 14:58:01.998" endtime="20250214 14:58:12.485"/>
</kw>
<suite id="s1-s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:12.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:12.497" endtime="20250214 14:58:12.497"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.497" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.498" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.498" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.498" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.498" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.498" endtime="20250214 14:58:12.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.499" endtime="20250214 14:58:12.499"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:12.499" endtime="20250214 14:58:12.499"/>
</kw>
<status status="PASS" starttime="20250214 14:58:12.497" endtime="20250214 14:58:12.499"/>
</kw>
<test id="s1-s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:12.505" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:58:12.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:12.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:12.501" endtime="20250214 14:58:12.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:12.510" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:12.509" endtime="20250214 14:58:12.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:12.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:12.510" endtime="20250214 14:58:12.511"/>
</kw>
<status status="PASS" starttime="20250214 14:58:12.500" endtime="20250214 14:58:12.511"/>
</kw>
<msg timestamp="20250214 14:58:12.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:12.500" endtime="20250214 14:58:12.511"/>
</kw>
<status status="PASS" starttime="20250214 14:58:12.500" endtime="20250214 14:58:12.511"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:12.517" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:17.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:17.145" level="INFO">${output} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:58:12.514" endtime="20250214 14:58:17.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:17.146" level="INFO">Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:58:17.146" endtime="20250214 14:58:17.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:17.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:17.147" endtime="20250214 14:58:17.147"/>
</kw>
<status status="PASS" starttime="20250214 14:58:12.513" endtime="20250214 14:58:17.147"/>
</kw>
<msg timestamp="20250214 14:58:17.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:12.513" endtime="20250214 14:58:17.147"/>
</kw>
<msg timestamp="20250214 14:58:17.148" level="INFO">${output} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:58:12.512" endtime="20250214 14:58:17.148"/>
</kw>
<msg timestamp="20250214 14:58:17.148" level="INFO">${result} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:58:12.511" endtime="20250214 14:58:17.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:17.148" endtime="20250214 14:58:17.148"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:17.154" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:17.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:17.883" level="INFO">${output} = Completed 29 Bytes/29 Bytes (111 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:58:17.150" endtime="20250214 14:58:17.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:17.884" level="INFO">Completed 29 Bytes/29 Bytes (111 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:58:17.884" endtime="20250214 14:58:17.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:17.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:17.885" endtime="20250214 14:58:17.885"/>
</kw>
<status status="PASS" starttime="20250214 14:58:17.150" endtime="20250214 14:58:17.885"/>
</kw>
<msg timestamp="20250214 14:58:17.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:17.150" endtime="20250214 14:58:17.885"/>
</kw>
<msg timestamp="20250214 14:58:17.885" level="INFO">${output} = Completed 29 Bytes/29 Bytes (111 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:58:17.149" endtime="20250214 14:58:17.885"/>
</kw>
<msg timestamp="20250214 14:58:17.886" level="INFO">${result} = Completed 29 Bytes/29 Bytes (111 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:58:17.149" endtime="20250214 14:58:17.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:17.886" endtime="20250214 14:58:17.886"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:17.890" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:18.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:18.635" level="INFO">${output} =                            PRE dir1/
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 14:58:17.887" endtime="20250214 14:58:18.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:18.636" level="INFO">                           PRE dir1/
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 14:58:18.636" endtime="20250214 14:58:18.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:18.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:18.636" endtime="20250214 14:58:18.637"/>
</kw>
<status status="PASS" starttime="20250214 14:58:17.887" endtime="20250214 14:58:18.637"/>
</kw>
<msg timestamp="20250214 14:58:18.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:17.887" endtime="20250214 14:58:18.637"/>
</kw>
<msg timestamp="20250214 14:58:18.637" level="INFO">${output} =                            PRE dir1/
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 14:58:17.886" endtime="20250214 14:58:18.637"/>
</kw>
<msg timestamp="20250214 14:58:18.637" level="INFO">${result} =                            PRE dir1/
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 14:58:17.886" endtime="20250214 14:58:18.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:18.637" endtime="20250214 14:58:18.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:18.638" endtime="20250214 14:58:18.638"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:18.638" endtime="20250214 14:58:18.638"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:18.642" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:19.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:19.189" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:58:18.640" endtime="20250214 14:58:19.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:19.190" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:58:19.190" endtime="20250214 14:58:19.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:19.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:19.190" endtime="20250214 14:58:19.191"/>
</kw>
<status status="PASS" starttime="20250214 14:58:18.639" endtime="20250214 14:58:19.191"/>
</kw>
<msg timestamp="20250214 14:58:19.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:18.639" endtime="20250214 14:58:19.191"/>
</kw>
<msg timestamp="20250214 14:58:19.191" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:58:18.639" endtime="20250214 14:58:19.191"/>
</kw>
<msg timestamp="20250214 14:58:19.191" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:58:18.638" endtime="20250214 14:58:19.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.191" endtime="20250214 14:58:19.192"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.192" endtime="20250214 14:58:19.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.192" endtime="20250214 14:58:19.192"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:19.196" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:19.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:19.693" level="INFO">${output} = 2025-02-14 14:58:17         29 file</msg>
<status status="PASS" starttime="20250214 14:58:19.194" endtime="20250214 14:58:19.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:19.694" level="INFO">2025-02-14 14:58:17         29 file</msg>
<status status="PASS" starttime="20250214 14:58:19.693" endtime="20250214 14:58:19.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:19.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:19.694" endtime="20250214 14:58:19.694"/>
</kw>
<status status="PASS" starttime="20250214 14:58:19.193" endtime="20250214 14:58:19.694"/>
</kw>
<msg timestamp="20250214 14:58:19.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:19.193" endtime="20250214 14:58:19.695"/>
</kw>
<msg timestamp="20250214 14:58:19.695" level="INFO">${output} = 2025-02-14 14:58:17         29 file</msg>
<status status="PASS" starttime="20250214 14:58:19.193" endtime="20250214 14:58:19.695"/>
</kw>
<msg timestamp="20250214 14:58:19.695" level="INFO">${result} = 2025-02-14 14:58:17         29 file</msg>
<status status="PASS" starttime="20250214 14:58:19.192" endtime="20250214 14:58:19.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.695" endtime="20250214 14:58:19.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.695" endtime="20250214 14:58:19.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:19.696" endtime="20250214 14:58:19.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:12.499" endtime="20250214 14:58:19.696"/>
</test>
<test id="s1-s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:19.700" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:58:19.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:19.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:19.698" endtime="20250214 14:58:19.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:19.705" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:19.705" endtime="20250214 14:58:19.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:19.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:19.705" endtime="20250214 14:58:19.706"/>
</kw>
<status status="PASS" starttime="20250214 14:58:19.697" endtime="20250214 14:58:19.706"/>
</kw>
<msg timestamp="20250214 14:58:19.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:19.697" endtime="20250214 14:58:19.706"/>
</kw>
<status status="PASS" starttime="20250214 14:58:19.697" endtime="20250214 14:58:19.706"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:19.710" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:20.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:20.354" level="INFO">${output} = Completed 29 Bytes/29 Bytes (143 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:58:19.708" endtime="20250214 14:58:20.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:20.354" level="INFO">Completed 29 Bytes/29 Bytes (143 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:58:20.354" endtime="20250214 14:58:20.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:20.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:20.355" endtime="20250214 14:58:20.355"/>
</kw>
<status status="PASS" starttime="20250214 14:58:19.707" endtime="20250214 14:58:20.355"/>
</kw>
<msg timestamp="20250214 14:58:20.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:19.707" endtime="20250214 14:58:20.355"/>
</kw>
<msg timestamp="20250214 14:58:20.355" level="INFO">${output} = Completed 29 Bytes/29 Bytes (143 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:58:19.706" endtime="20250214 14:58:20.355"/>
</kw>
<msg timestamp="20250214 14:58:20.356" level="INFO">${result} = Completed 29 Bytes/29 Bytes (143 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:58:19.706" endtime="20250214 14:58:20.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:20.356" endtime="20250214 14:58:20.356"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:20.359" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:20.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:20.852" level="INFO">${output} = 2025-02-14 14:58:20         29 a+b</msg>
<status status="PASS" starttime="20250214 14:58:20.357" endtime="20250214 14:58:20.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:20.853" level="INFO">2025-02-14 14:58:20         29 a+b</msg>
<status status="PASS" starttime="20250214 14:58:20.852" endtime="20250214 14:58:20.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:20.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:20.853" endtime="20250214 14:58:20.853"/>
</kw>
<status status="PASS" starttime="20250214 14:58:20.357" endtime="20250214 14:58:20.853"/>
</kw>
<msg timestamp="20250214 14:58:20.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:20.357" endtime="20250214 14:58:20.853"/>
</kw>
<msg timestamp="20250214 14:58:20.854" level="INFO">${output} = 2025-02-14 14:58:20         29 a+b</msg>
<status status="PASS" starttime="20250214 14:58:20.356" endtime="20250214 14:58:20.854"/>
</kw>
<msg timestamp="20250214 14:58:20.854" level="INFO">${result} = 2025-02-14 14:58:20         29 a+b</msg>
<status status="PASS" starttime="20250214 14:58:20.356" endtime="20250214 14:58:20.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:20.854" endtime="20250214 14:58:20.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:20.854" endtime="20250214 14:58:20.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:19.697" endtime="20250214 14:58:20.855"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:58:12.485" endtime="20250214 14:58:20.856"/>
</suite>
<suite id="s1-s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:20.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:20.868" endtime="20250214 14:58:20.868"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.868" endtime="20250214 14:58:20.868"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.868" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:20.869" endtime="20250214 14:58:20.869"/>
</kw>
<status status="PASS" starttime="20250214 14:58:20.868" endtime="20250214 14:58:20.869"/>
</kw>
<test id="s1-s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:20.873" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:25.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:25.405" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250214 14:58:20.871" endtime="20250214 14:58:25.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:25.406" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 4.254s

OK
{'ResponseMetadata': {'RequestId': '94c1c516-d378-437a-927b-c0cd1486e4c5', 'HostId': 'nbfMwRddn', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:21 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:21 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-pxdlslcvah', 'server': 'Ozone', 'x-amz-id-2': 'nbfMwRddn', 'x-amz-request-id': '94c1c516-d378-437a-927b-c0cd1486e4c5', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-pxdlslcvah'}
None
None
None
{'ResponseMetadata': {'RequestId': '6394981d-a659-40e8-8122-9d38e747d022', 'HostId': 'RcG0lt3kLiz90l', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-qqilemsldv', 'server': 'Ozone', 'x-amz-id-2': 'RcG0lt3kLiz90l', 'x-amz-request-id': '6394981d-a659-40e8-8122-9d38e747d022', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-qqilemsldv'}
{'ResponseMetadata': {'RequestId': '70424ef8-0087-4441-8746-eae8d7ec3904', 'HostId': 'WTpCu6I5k4p4S', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'WTpCu6I5k4p4S', 'x-amz-request-id': '70424ef8-0087-4441-8746-eae8d7ec3904', 'content-length': '465'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-qqilemsldv', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 58, 23, 492000, tzinfo=tzlocal())}, {'Name': 'erasure', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 58, 12, 330000, tzinfo=tzlocal())}, {'Name': 'ozone-test-pxdlslcvah', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 58, 21, 322000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'ce195d8a-2297-4bc9-afca-e11d15e5308d', 'HostId': 'ZVEUKamChqTdY', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'application/x-www-form-urlencoded', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'ZVEUKamChqTdY', 'x-amz-request-id': 'ce195d8a-2297-4bc9-afca-e11d15e5308d', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'a4b93af3-bf6f-4cf6-9eed-3050710eb49a', 'HostId': 'zaMc10REOYCcgG', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'zaMc10REOYCcgG', 'x-amz-request-id': 'a4b93af3-bf6f-4cf6-9eed-3050710eb49a'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '6be537b2-1cae-4997-84db-384071213d5c', 'HostId': 'LZneKFvvNejAz', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Fri, 14 Feb 2025 14:58:23 GMT', 'server': 'Ozone', 'x-amz-id-2': 'LZneKFvvNejAz', 'x-amz-request-id': '6be537b2-1cae-4997-84db-384071213d5c', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 14, 14, 58, 23, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 14, 14, 58, 23, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Fri, 14 Feb 2025 14:58:23 GMT'}
{'ResponseMetadata': {'RequestId': '82d7c4f3-ecf2-47f0-b310-f661d28ab275', 'HostId': 'Bva3vdXWBx', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Bva3vdXWBx', 'x-amz-request-id': '82d7c4f3-ecf2-47f0-b310-f661d28ab275', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '271fead9-bff1-4303-87d4-db3f299fadc3', 'HostId': 'KNtpiKGlidD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Fri, 14 Feb 2025 14:58:21 GMT', 'server': 'Ozone', 'x-amz-id-2': 'KNtpiKGlidD', 'x-amz-request-id': '271fead9-bff1-4303-87d4-db3f299fadc3', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 14, 14, 58, 21, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 14, 14, 58, 23, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Fri, 14 Feb 2025 14:58:23 GMT'}
{'ResponseMetadata': {'RequestId': '8e4126b9-f983-4e85-93a5-3549312c6ebc', 'HostId': '2pmFg9ofqH6', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:23 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:23 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '2pmFg9ofqH6', 'x-amz-request-id': '8e4126b9-f983-4e85-93a5-3549312c6ebc', 'content-length': '287'}, 'RetryAttempts': 0}, 'Bucket': 'erasure', 'Key': 'rbufgvtajf', 'UploadId': 'c71560f8-1266-43c2-bfde-e09dd8cdbadc-114002827930501133'}
{'ResponseMetadata': {'RequestId': 'de3765fd-4697-453c-a196-3e57af539ef6', 'HostId': 'cAqDGTfqLCSBw1', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:58:25 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:58:25 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'cAqDGTfqLCSBw1', 'x-amz-request-id': 'de3765fd-4697-453c-a196-3e57af539ef6', 'content-length': '288'}, 'RetryAttempts': 0}, 'Location': 'erasure', 'Bucket': 'erasure', 'Key': 'rbufgvtajf', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20250214 14:58:25.405" endtime="20250214 14:58:25.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:25.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:25.406" endtime="20250214 14:58:25.406"/>
</kw>
<status status="PASS" starttime="20250214 14:58:20.870" endtime="20250214 14:58:25.406"/>
</kw>
<msg timestamp="20250214 14:58:25.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:20.870" endtime="20250214 14:58:25.406"/>
</kw>
<msg timestamp="20250214 14:58:25.407" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250214 14:58:20.870" endtime="20250214 14:58:25.407"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250214 14:58:20.869" endtime="20250214 14:58:25.407"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20250214 14:58:20.857" endtime="20250214 14:58:25.407"/>
</suite>
<suite id="s1-s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:25.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.416"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.416"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.417"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.417"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.417"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.417"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.416" endtime="20250214 14:58:25.417"/>
</kw>
<test id="s1-s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:25.418" level="INFO">${randStr} = 3424069005</msg>
<status status="PASS" starttime="20250214 14:58:25.418" endtime="20250214 14:58:25.418"/>
</kw>
<msg timestamp="20250214 14:58:25.418" level="INFO">${postfix} = ozone-test-3424069005</msg>
<status status="PASS" starttime="20250214 14:58:25.418" endtime="20250214 14:58:25.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:25.419" level="INFO">${bucket} = bucket-ozone-test-3424069005</msg>
<status status="PASS" starttime="20250214 14:58:25.418" endtime="20250214 14:58:25.419"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:25.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3424069005 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:25.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:25.924" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3424069005"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.420" endtime="20250214 14:58:25.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:25.925" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3424069005"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.924" endtime="20250214 14:58:25.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:25.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:25.925" endtime="20250214 14:58:25.926"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.420" endtime="20250214 14:58:25.926"/>
</kw>
<msg timestamp="20250214 14:58:25.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:25.419" endtime="20250214 14:58:25.926"/>
</kw>
<msg timestamp="20250214 14:58:25.926" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3424069005"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.419" endtime="20250214 14:58:25.926"/>
</kw>
<msg timestamp="20250214 14:58:25.926" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3424069005"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.419" endtime="20250214 14:58:25.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:25.926" endtime="20250214 14:58:25.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:25.927" endtime="20250214 14:58:25.927"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.419" endtime="20250214 14:58:25.927"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.927"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:25.417" endtime="20250214 14:58:25.927"/>
</test>
<test id="s1-s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:25.929" level="INFO">${randStr} = 7415133957</msg>
<status status="PASS" starttime="20250214 14:58:25.929" endtime="20250214 14:58:25.929"/>
</kw>
<msg timestamp="20250214 14:58:25.929" level="INFO">${postfix} = ozone-test-7415133957</msg>
<status status="PASS" starttime="20250214 14:58:25.928" endtime="20250214 14:58:25.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:25.929" level="INFO">${bucket} = bucket-ozone-test-7415133957</msg>
<status status="PASS" starttime="20250214 14:58:25.929" endtime="20250214 14:58:25.929"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:25.933" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7415133957 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:26.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:26.418" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7415133957"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.931" endtime="20250214 14:58:26.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:26.419" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7415133957"
}</msg>
<status status="PASS" starttime="20250214 14:58:26.419" endtime="20250214 14:58:26.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:26.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:26.420" endtime="20250214 14:58:26.420"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.931" endtime="20250214 14:58:26.420"/>
</kw>
<msg timestamp="20250214 14:58:26.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:25.930" endtime="20250214 14:58:26.420"/>
</kw>
<msg timestamp="20250214 14:58:26.420" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7415133957"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.930" endtime="20250214 14:58:26.420"/>
</kw>
<msg timestamp="20250214 14:58:26.421" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7415133957"
}</msg>
<status status="PASS" starttime="20250214 14:58:25.930" endtime="20250214 14:58:26.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:26.421" endtime="20250214 14:58:26.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:26.421" endtime="20250214 14:58:26.421"/>
</kw>
<status status="PASS" starttime="20250214 14:58:25.930" endtime="20250214 14:58:26.421"/>
</kw>
<msg timestamp="20250214 14:58:26.421" level="INFO">${bucket} = bucket-ozone-test-7415133957</msg>
<status status="PASS" starttime="20250214 14:58:25.928" endtime="20250214 14:58:26.421"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:26.424" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7415133957 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:27.018" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:27.018" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:58:26.422" endtime="20250214 14:58:27.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:27.019" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:58:27.019" endtime="20250214 14:58:27.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:27.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:27.019" endtime="20250214 14:58:27.020"/>
</kw>
<msg timestamp="20250214 14:58:27.020" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:58:26.422" endtime="20250214 14:58:27.020"/>
</kw>
<msg timestamp="20250214 14:58:27.020" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:58:26.422" endtime="20250214 14:58:27.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:27.020" endtime="20250214 14:58:27.021"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:25.928" endtime="20250214 14:58:27.021"/>
</test>
<test id="s1-s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:27.022" level="INFO">${randStr} = 8637170639</msg>
<status status="PASS" starttime="20250214 14:58:27.022" endtime="20250214 14:58:27.022"/>
</kw>
<msg timestamp="20250214 14:58:27.022" level="INFO">${randStr} = ozone-test-8637170639</msg>
<status status="PASS" starttime="20250214 14:58:27.022" endtime="20250214 14:58:27.023"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:27.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-8637170639 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:27.503" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:27.503" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:58:27.023" endtime="20250214 14:58:27.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:27.504" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:58:27.504" endtime="20250214 14:58:27.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:27.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:27.504" endtime="20250214 14:58:27.505"/>
</kw>
<msg timestamp="20250214 14:58:27.505" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:58:27.023" endtime="20250214 14:58:27.505"/>
</kw>
<msg timestamp="20250214 14:58:27.505" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:58:27.023" endtime="20250214 14:58:27.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:27.505" endtime="20250214 14:58:27.505"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:27.021" endtime="20250214 14:58:27.506"/>
</test>
<test id="s1-s1-s3-t4" name="Create new bucket and check default group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:27.507" level="INFO">${randStr} = 8919850771</msg>
<status status="PASS" starttime="20250214 14:58:27.507" endtime="20250214 14:58:27.507"/>
</kw>
<msg timestamp="20250214 14:58:27.508" level="INFO">${postfix} = ozone-test-8919850771</msg>
<status status="PASS" starttime="20250214 14:58:27.507" endtime="20250214 14:58:27.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:27.508" level="INFO">${bucket} = bucket-ozone-test-8919850771</msg>
<status status="PASS" starttime="20250214 14:58:27.508" endtime="20250214 14:58:27.508"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:27.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8919850771 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:27.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:27.999" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8919850771"
}</msg>
<status status="PASS" starttime="20250214 14:58:27.509" endtime="20250214 14:58:27.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:27.999" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8919850771"
}</msg>
<status status="PASS" starttime="20250214 14:58:27.999" endtime="20250214 14:58:28.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:28.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:28.000" endtime="20250214 14:58:28.000"/>
</kw>
<status status="PASS" starttime="20250214 14:58:27.509" endtime="20250214 14:58:28.000"/>
</kw>
<msg timestamp="20250214 14:58:28.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:27.509" endtime="20250214 14:58:28.000"/>
</kw>
<msg timestamp="20250214 14:58:28.000" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8919850771"
}</msg>
<status status="PASS" starttime="20250214 14:58:27.508" endtime="20250214 14:58:28.000"/>
</kw>
<msg timestamp="20250214 14:58:28.001" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8919850771"
}</msg>
<status status="PASS" starttime="20250214 14:58:27.508" endtime="20250214 14:58:28.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:28.001" endtime="20250214 14:58:28.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:28.001" endtime="20250214 14:58:28.001"/>
</kw>
<status status="PASS" starttime="20250214 14:58:27.508" endtime="20250214 14:58:28.001"/>
</kw>
<msg timestamp="20250214 14:58:28.002" level="INFO">${bucket} = bucket-ozone-test-8919850771</msg>
<status status="PASS" starttime="20250214 14:58:27.507" endtime="20250214 14:58:28.002"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:28.005" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-8919850771 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:31.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:31.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250214 14:58:28.003" endtime="20250214 14:58:31.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:31.091" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250214 14:58:31.090" endtime="20250214 14:58:31.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:31.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:31.091" endtime="20250214 14:58:31.091"/>
</kw>
<status status="PASS" starttime="20250214 14:58:28.002" endtime="20250214 14:58:31.091"/>
</kw>
<msg timestamp="20250214 14:58:31.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:28.002" endtime="20250214 14:58:31.092"/>
</kw>
<msg timestamp="20250214 14:58:31.092" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250214 14:58:28.002" endtime="20250214 14:58:31.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 14:58:31.092" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20250214 14:58:31.092" endtime="20250214 14:58:31.092"/>
</kw>
<if>
<branch type="IF" condition="'${group}' != '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:58:31.093" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['READ', 'LIST']}]</msg>
<status status="PASS" starttime="20250214 14:58:31.093" endtime="20250214 14:58:31.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:31.093" endtime="20250214 14:58:31.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>READ</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:31.093" endtime="20250214 14:58:31.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>LIST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:31.094" endtime="20250214 14:58:31.094"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.092" endtime="20250214 14:58:31.094"/>
</branch>
<status status="PASS" starttime="20250214 14:58:31.092" endtime="20250214 14:58:31.094"/>
</if>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:27.506" endtime="20250214 14:58:31.094"/>
</test>
<test id="s1-s1-s3-t5" name="Test buckets named like web endpoints" line="58">
<kw name="Create Random File KB" library="os">
<var>${path}</var>
<arg>64</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:31.098" level="INFO">${postfix} = velvalophh</msg>
<status status="PASS" starttime="20250214 14:58:31.097" endtime="20250214 14:58:31.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:31.098" level="INFO">${tmpfile} = /tmp/tempfile-velvalophh</msg>
<status status="PASS" starttime="20250214 14:58:31.098" endtime="20250214 14:58:31.098"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250214 14:58:31.098" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-velvalophh"&gt;/tmp/tempfile-velvalophh&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 14:58:31.098" endtime="20250214 14:58:31.098"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.097" endtime="20250214 14:58:31.098"/>
</kw>
<msg timestamp="20250214 14:58:31.099" level="INFO">${path} = /tmp/tempfile-velvalophh</msg>
<status status="PASS" starttime="20250214 14:58:31.096" endtime="20250214 14:58:31.099"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:31.102" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-velvalophh bs=1024 count=64 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:31.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:31.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:31.099" endtime="20250214 14:58:31.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:31.107" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:31.106" endtime="20250214 14:58:31.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:31.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:31.107" endtime="20250214 14:58:31.107"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.099" endtime="20250214 14:58:31.107"/>
</kw>
<msg timestamp="20250214 14:58:31.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:31.099" endtime="20250214 14:58:31.107"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.099" endtime="20250214 14:58:31.108"/>
</kw>
<msg timestamp="20250214 14:58:31.108" level="INFO">${path} = /tmp/tempfile-velvalophh</msg>
<status status="PASS" starttime="20250214 14:58:31.096" endtime="20250214 14:58:31.108"/>
</kw>
<msg timestamp="20250214 14:58:31.108" level="INFO">${path} = /tmp/tempfile-velvalophh</msg>
<status status="PASS" starttime="20250214 14:58:31.095" endtime="20250214 14:58:31.108"/>
</kw>
<for flavor="IN">
<var>${name}</var>
<value>conf</value>
<value>jmx</value>
<value>logs</value>
<value>logstream</value>
<value>prof</value>
<value>prom</value>
<value>secret</value>
<value>stacks</value>
<value>static</value>
<iter>
<var name="${name}">conf</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:31.112" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:31.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:31.585" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:58:31.110" endtime="20250214 14:58:31.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:31.586" level="INFO">{
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:58:31.586" endtime="20250214 14:58:31.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:31.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:31.586" endtime="20250214 14:58:31.587"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.109" endtime="20250214 14:58:31.587"/>
</kw>
<msg timestamp="20250214 14:58:31.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:31.109" endtime="20250214 14:58:31.587"/>
</kw>
<msg timestamp="20250214 14:58:31.587" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:58:31.109" endtime="20250214 14:58:31.587"/>
</kw>
<msg timestamp="20250214 14:58:31.587" level="INFO">${result} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:58:31.109" endtime="20250214 14:58:31.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:31.587" endtime="20250214 14:58:31.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:31.588" endtime="20250214 14:58:31.588"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.108" endtime="20250214 14:58:31.588"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:31.592" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket conf --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:32.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:32.479" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:31.590" endtime="20250214 14:58:32.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:32.480" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:32.479" endtime="20250214 14:58:32.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:32.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:32.480" endtime="20250214 14:58:32.481"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.589" endtime="20250214 14:58:32.481"/>
</kw>
<msg timestamp="20250214 14:58:32.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:31.589" endtime="20250214 14:58:32.481"/>
</kw>
<msg timestamp="20250214 14:58:32.481" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:31.589" endtime="20250214 14:58:32.481"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.589" endtime="20250214 14:58:32.481"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:32.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:33.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:33.031" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:32.413Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:32.482" endtime="20250214 14:58:33.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:33.032" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:32.413Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:33.032" endtime="20250214 14:58:33.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:33.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:33.032" endtime="20250214 14:58:33.033"/>
</kw>
<status status="PASS" starttime="20250214 14:58:32.482" endtime="20250214 14:58:33.033"/>
</kw>
<msg timestamp="20250214 14:58:33.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:32.482" endtime="20250214 14:58:33.033"/>
</kw>
<msg timestamp="20250214 14:58:33.033" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:32.413Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:32.481" endtime="20250214 14:58:33.033"/>
</kw>
<msg timestamp="20250214 14:58:33.033" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:32.413Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:32.481" endtime="20250214 14:58:33.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:33.033" endtime="20250214 14:58:33.034"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:33.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket conf --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:33.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:33.540" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:32 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:33.035" endtime="20250214 14:58:33.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:33.540" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:32 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:33 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:33 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:33.540" endtime="20250214 14:58:33.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:33.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:33.541" endtime="20250214 14:58:33.541"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.035" endtime="20250214 14:58:33.541"/>
</kw>
<msg timestamp="20250214 14:58:33.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:33.034" endtime="20250214 14:58:33.541"/>
</kw>
<msg timestamp="20250214 14:58:33.542" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:32 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:33.034" endtime="20250214 14:58:33.542"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.034" endtime="20250214 14:58:33.542"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:33.545" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:33.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:33.550" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.543" endtime="20250214 14:58:33.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:33.550" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.550" endtime="20250214 14:58:33.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:33.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:33.551" endtime="20250214 14:58:33.551"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.543" endtime="20250214 14:58:33.551"/>
</kw>
<msg timestamp="20250214 14:58:33.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:33.542" endtime="20250214 14:58:33.551"/>
</kw>
<msg timestamp="20250214 14:58:33.551" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.542" endtime="20250214 14:58:33.551"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:33.554" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:33.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:33.558" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.552" endtime="20250214 14:58:33.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:33.559" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.559" endtime="20250214 14:58:33.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:33.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:33.559" endtime="20250214 14:58:33.560"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.552" endtime="20250214 14:58:33.560"/>
</kw>
<msg timestamp="20250214 14:58:33.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:33.552" endtime="20250214 14:58:33.560"/>
</kw>
<msg timestamp="20250214 14:58:33.560" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:33.551" endtime="20250214 14:58:33.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:33.560" endtime="20250214 14:58:33.560"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.542" endtime="20250214 14:58:33.560"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:33.561" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:33.561" endtime="20250214 14:58:33.561"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.588" endtime="20250214 14:58:33.561"/>
</kw>
<status status="PASS" starttime="20250214 14:58:31.108" endtime="20250214 14:58:33.561"/>
</iter>
<iter>
<var name="${name}">jmx</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:33.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:34.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:34.047" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:58:33.563" endtime="20250214 14:58:34.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:34.048" level="INFO">{
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:58:34.047" endtime="20250214 14:58:34.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:34.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:34.048" endtime="20250214 14:58:34.050"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.562" endtime="20250214 14:58:34.050"/>
</kw>
<msg timestamp="20250214 14:58:34.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:33.562" endtime="20250214 14:58:34.050"/>
</kw>
<msg timestamp="20250214 14:58:34.050" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:58:33.562" endtime="20250214 14:58:34.050"/>
</kw>
<msg timestamp="20250214 14:58:34.050" level="INFO">${result} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:58:33.562" endtime="20250214 14:58:34.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:34.051" endtime="20250214 14:58:34.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:34.051" endtime="20250214 14:58:34.051"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.561" endtime="20250214 14:58:34.051"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:34.056" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket jmx --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:34.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:34.638" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:34.054" endtime="20250214 14:58:34.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:34.638" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:34.638" endtime="20250214 14:58:34.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:34.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:34.639" endtime="20250214 14:58:34.639"/>
</kw>
<status status="PASS" starttime="20250214 14:58:34.053" endtime="20250214 14:58:34.639"/>
</kw>
<msg timestamp="20250214 14:58:34.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:34.053" endtime="20250214 14:58:34.639"/>
</kw>
<msg timestamp="20250214 14:58:34.639" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:34.052" endtime="20250214 14:58:34.639"/>
</kw>
<status status="PASS" starttime="20250214 14:58:34.052" endtime="20250214 14:58:34.640"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:34.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:35.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:35.140" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:34.558Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:34.641" endtime="20250214 14:58:35.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:35.141" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:34.558Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:35.140" endtime="20250214 14:58:35.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:35.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:35.141" endtime="20250214 14:58:35.141"/>
</kw>
<status status="PASS" starttime="20250214 14:58:34.641" endtime="20250214 14:58:35.141"/>
</kw>
<msg timestamp="20250214 14:58:35.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:34.640" endtime="20250214 14:58:35.141"/>
</kw>
<msg timestamp="20250214 14:58:35.142" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:34.558Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:34.640" endtime="20250214 14:58:35.142"/>
</kw>
<msg timestamp="20250214 14:58:35.142" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:34.558Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:34.640" endtime="20250214 14:58:35.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:35.142" endtime="20250214 14:58:35.142"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:35.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket jmx --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:35.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:35.649" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:35.143" endtime="20250214 14:58:35.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:35.650" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:35 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:35 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:35.649" endtime="20250214 14:58:35.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:35.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:35.650" endtime="20250214 14:58:35.650"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.143" endtime="20250214 14:58:35.650"/>
</kw>
<msg timestamp="20250214 14:58:35.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:35.143" endtime="20250214 14:58:35.651"/>
</kw>
<msg timestamp="20250214 14:58:35.651" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:35.143" endtime="20250214 14:58:35.651"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.142" endtime="20250214 14:58:35.651"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:35.654" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:35.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:35.659" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.652" endtime="20250214 14:58:35.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:35.660" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.659" endtime="20250214 14:58:35.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:35.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:35.660" endtime="20250214 14:58:35.660"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.652" endtime="20250214 14:58:35.661"/>
</kw>
<msg timestamp="20250214 14:58:35.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:35.652" endtime="20250214 14:58:35.661"/>
</kw>
<msg timestamp="20250214 14:58:35.661" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.651" endtime="20250214 14:58:35.661"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:35.664" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:35.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:35.668" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.662" endtime="20250214 14:58:35.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:35.669" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.669" endtime="20250214 14:58:35.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:35.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:35.669" endtime="20250214 14:58:35.670"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.662" endtime="20250214 14:58:35.670"/>
</kw>
<msg timestamp="20250214 14:58:35.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:35.661" endtime="20250214 14:58:35.670"/>
</kw>
<msg timestamp="20250214 14:58:35.670" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:35.661" endtime="20250214 14:58:35.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:35.670" endtime="20250214 14:58:35.670"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.651" endtime="20250214 14:58:35.670"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:35.671" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:35.671" endtime="20250214 14:58:35.671"/>
</kw>
<status status="PASS" starttime="20250214 14:58:34.051" endtime="20250214 14:58:35.671"/>
</kw>
<status status="PASS" starttime="20250214 14:58:33.561" endtime="20250214 14:58:35.671"/>
</iter>
<iter>
<var name="${name}">logs</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:35.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:36.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:36.186" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:58:35.673" endtime="20250214 14:58:36.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:36.187" level="INFO">{
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:58:36.186" endtime="20250214 14:58:36.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:36.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:36.187" endtime="20250214 14:58:36.187"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.673" endtime="20250214 14:58:36.187"/>
</kw>
<msg timestamp="20250214 14:58:36.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:35.672" endtime="20250214 14:58:36.188"/>
</kw>
<msg timestamp="20250214 14:58:36.188" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:58:35.672" endtime="20250214 14:58:36.188"/>
</kw>
<msg timestamp="20250214 14:58:36.188" level="INFO">${result} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:58:35.672" endtime="20250214 14:58:36.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:36.188" endtime="20250214 14:58:36.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:36.188" endtime="20250214 14:58:36.189"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.671" endtime="20250214 14:58:36.189"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:36.193" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logs --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:36.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:36.731" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:36.190" endtime="20250214 14:58:36.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:36.732" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:36.731" endtime="20250214 14:58:36.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:36.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:36.732" endtime="20250214 14:58:36.732"/>
</kw>
<status status="PASS" starttime="20250214 14:58:36.190" endtime="20250214 14:58:36.733"/>
</kw>
<msg timestamp="20250214 14:58:36.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:36.190" endtime="20250214 14:58:36.733"/>
</kw>
<msg timestamp="20250214 14:58:36.733" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:36.190" endtime="20250214 14:58:36.733"/>
</kw>
<status status="PASS" starttime="20250214 14:58:36.189" endtime="20250214 14:58:36.733"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:36.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:37.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:37.252" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:36.678Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:36.734" endtime="20250214 14:58:37.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:37.253" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:36.678Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:37.252" endtime="20250214 14:58:37.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:37.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:37.253" endtime="20250214 14:58:37.253"/>
</kw>
<status status="PASS" starttime="20250214 14:58:36.734" endtime="20250214 14:58:37.253"/>
</kw>
<msg timestamp="20250214 14:58:37.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:36.734" endtime="20250214 14:58:37.253"/>
</kw>
<msg timestamp="20250214 14:58:37.254" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:36.678Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:36.733" endtime="20250214 14:58:37.254"/>
</kw>
<msg timestamp="20250214 14:58:37.254" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:36.678Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:36.733" endtime="20250214 14:58:37.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:37.254" endtime="20250214 14:58:37.254"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:37.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logs --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:37.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:37.744" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:36 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:37.256" endtime="20250214 14:58:37.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:37.745" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:36 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:37 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:37 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:37.744" endtime="20250214 14:58:37.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:37.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:37.745" endtime="20250214 14:58:37.745"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.255" endtime="20250214 14:58:37.746"/>
</kw>
<msg timestamp="20250214 14:58:37.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:37.255" endtime="20250214 14:58:37.746"/>
</kw>
<msg timestamp="20250214 14:58:37.746" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:36 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:37.255" endtime="20250214 14:58:37.746"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.254" endtime="20250214 14:58:37.746"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:37.749" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:37.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:37.754" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.747" endtime="20250214 14:58:37.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:37.755" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.754" endtime="20250214 14:58:37.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:37.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:37.755" endtime="20250214 14:58:37.755"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.747" endtime="20250214 14:58:37.755"/>
</kw>
<msg timestamp="20250214 14:58:37.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:37.747" endtime="20250214 14:58:37.755"/>
</kw>
<msg timestamp="20250214 14:58:37.755" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.746" endtime="20250214 14:58:37.756"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:37.759" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:37.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:37.763" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.757" endtime="20250214 14:58:37.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:37.764" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.763" endtime="20250214 14:58:37.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:37.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:37.764" endtime="20250214 14:58:37.764"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.756" endtime="20250214 14:58:37.764"/>
</kw>
<msg timestamp="20250214 14:58:37.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:37.756" endtime="20250214 14:58:37.764"/>
</kw>
<msg timestamp="20250214 14:58:37.765" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:37.756" endtime="20250214 14:58:37.765"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:37.765" endtime="20250214 14:58:37.765"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.746" endtime="20250214 14:58:37.765"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:37.766" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:37.765" endtime="20250214 14:58:37.766"/>
</kw>
<status status="PASS" starttime="20250214 14:58:36.189" endtime="20250214 14:58:37.766"/>
</kw>
<status status="PASS" starttime="20250214 14:58:35.671" endtime="20250214 14:58:37.766"/>
</iter>
<iter>
<var name="${name}">logstream</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:37.769" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:38.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:38.243" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:58:37.767" endtime="20250214 14:58:38.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:38.244" level="INFO">{
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:58:38.243" endtime="20250214 14:58:38.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:38.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:38.244" endtime="20250214 14:58:38.245"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.767" endtime="20250214 14:58:38.245"/>
</kw>
<msg timestamp="20250214 14:58:38.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:37.767" endtime="20250214 14:58:38.245"/>
</kw>
<msg timestamp="20250214 14:58:38.245" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:58:37.767" endtime="20250214 14:58:38.245"/>
</kw>
<msg timestamp="20250214 14:58:38.245" level="INFO">${result} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:58:37.766" endtime="20250214 14:58:38.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:38.245" endtime="20250214 14:58:38.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:38.246" endtime="20250214 14:58:38.246"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.766" endtime="20250214 14:58:38.246"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:38.250" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logstream --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:38.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:38.829" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:38.248" endtime="20250214 14:58:38.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:38.830" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:38.829" endtime="20250214 14:58:38.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:38.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:38.830" endtime="20250214 14:58:38.830"/>
</kw>
<status status="PASS" starttime="20250214 14:58:38.247" endtime="20250214 14:58:38.830"/>
</kw>
<msg timestamp="20250214 14:58:38.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:38.247" endtime="20250214 14:58:38.831"/>
</kw>
<msg timestamp="20250214 14:58:38.831" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:38.247" endtime="20250214 14:58:38.831"/>
</kw>
<status status="PASS" starttime="20250214 14:58:38.247" endtime="20250214 14:58:38.831"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:38.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:39.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:39.324" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:38.754Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:38.832" endtime="20250214 14:58:39.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:39.325" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:38.754Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:39.325" endtime="20250214 14:58:39.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:39.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:39.325" endtime="20250214 14:58:39.326"/>
</kw>
<status status="PASS" starttime="20250214 14:58:38.832" endtime="20250214 14:58:39.326"/>
</kw>
<msg timestamp="20250214 14:58:39.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:38.832" endtime="20250214 14:58:39.326"/>
</kw>
<msg timestamp="20250214 14:58:39.326" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:38.754Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:38.831" endtime="20250214 14:58:39.326"/>
</kw>
<msg timestamp="20250214 14:58:39.326" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:38.754Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:38.831" endtime="20250214 14:58:39.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:39.326" endtime="20250214 14:58:39.327"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:39.330" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logstream --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:39.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:39.818" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:38 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:39.328" endtime="20250214 14:58:39.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:39.819" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:38 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:39 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:39 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:39.818" endtime="20250214 14:58:39.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:39.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:39.819" endtime="20250214 14:58:39.819"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.328" endtime="20250214 14:58:39.819"/>
</kw>
<msg timestamp="20250214 14:58:39.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:39.327" endtime="20250214 14:58:39.820"/>
</kw>
<msg timestamp="20250214 14:58:39.820" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:38 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:39.327" endtime="20250214 14:58:39.820"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.327" endtime="20250214 14:58:39.820"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:39.823" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:39.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:39.828" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.821" endtime="20250214 14:58:39.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:39.829" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.828" endtime="20250214 14:58:39.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:39.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:39.829" endtime="20250214 14:58:39.829"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.821" endtime="20250214 14:58:39.829"/>
</kw>
<msg timestamp="20250214 14:58:39.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:39.821" endtime="20250214 14:58:39.829"/>
</kw>
<msg timestamp="20250214 14:58:39.829" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.820" endtime="20250214 14:58:39.829"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:39.832" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:39.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:39.837" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.830" endtime="20250214 14:58:39.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:39.837" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.837" endtime="20250214 14:58:39.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:39.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:39.837" endtime="20250214 14:58:39.838"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.830" endtime="20250214 14:58:39.838"/>
</kw>
<msg timestamp="20250214 14:58:39.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:39.830" endtime="20250214 14:58:39.838"/>
</kw>
<msg timestamp="20250214 14:58:39.838" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:39.830" endtime="20250214 14:58:39.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:39.838" endtime="20250214 14:58:39.839"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.820" endtime="20250214 14:58:39.839"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:39.839" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:39.839" endtime="20250214 14:58:39.839"/>
</kw>
<status status="PASS" starttime="20250214 14:58:38.246" endtime="20250214 14:58:39.839"/>
</kw>
<status status="PASS" starttime="20250214 14:58:37.766" endtime="20250214 14:58:39.839"/>
</iter>
<iter>
<var name="${name}">prof</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:39.843" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:40.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:40.323" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:58:39.841" endtime="20250214 14:58:40.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:40.324" level="INFO">{
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:58:40.323" endtime="20250214 14:58:40.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:40.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:40.324" endtime="20250214 14:58:40.325"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.841" endtime="20250214 14:58:40.325"/>
</kw>
<msg timestamp="20250214 14:58:40.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:39.840" endtime="20250214 14:58:40.325"/>
</kw>
<msg timestamp="20250214 14:58:40.325" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:58:39.840" endtime="20250214 14:58:40.325"/>
</kw>
<msg timestamp="20250214 14:58:40.325" level="INFO">${result} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:58:39.840" endtime="20250214 14:58:40.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:40.325" endtime="20250214 14:58:40.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:40.326" endtime="20250214 14:58:40.326"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.840" endtime="20250214 14:58:40.326"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:40.330" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prof --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:40.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:40.882" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:40.328" endtime="20250214 14:58:40.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:40.883" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:40.882" endtime="20250214 14:58:40.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:40.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:40.883" endtime="20250214 14:58:40.883"/>
</kw>
<status status="PASS" starttime="20250214 14:58:40.327" endtime="20250214 14:58:40.884"/>
</kw>
<msg timestamp="20250214 14:58:40.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:40.327" endtime="20250214 14:58:40.884"/>
</kw>
<msg timestamp="20250214 14:58:40.884" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:40.327" endtime="20250214 14:58:40.884"/>
</kw>
<status status="PASS" starttime="20250214 14:58:40.326" endtime="20250214 14:58:40.884"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:40.887" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:41.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:41.374" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:40.813Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:40.885" endtime="20250214 14:58:41.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:41.375" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:40.813Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:41.374" endtime="20250214 14:58:41.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:41.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:41.375" endtime="20250214 14:58:41.375"/>
</kw>
<status status="PASS" starttime="20250214 14:58:40.885" endtime="20250214 14:58:41.375"/>
</kw>
<msg timestamp="20250214 14:58:41.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:40.885" endtime="20250214 14:58:41.375"/>
</kw>
<msg timestamp="20250214 14:58:41.376" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:40.813Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:40.884" endtime="20250214 14:58:41.376"/>
</kw>
<msg timestamp="20250214 14:58:41.376" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:40.813Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:40.884" endtime="20250214 14:58:41.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:41.376" endtime="20250214 14:58:41.376"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:41.380" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prof --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:41.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:41.871" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:40 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:41.377" endtime="20250214 14:58:41.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:41.872" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:40 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:41 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:41 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:41.872" endtime="20250214 14:58:41.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:41.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:41.872" endtime="20250214 14:58:41.873"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.377" endtime="20250214 14:58:41.873"/>
</kw>
<msg timestamp="20250214 14:58:41.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:41.377" endtime="20250214 14:58:41.873"/>
</kw>
<msg timestamp="20250214 14:58:41.873" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:40 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:41.377" endtime="20250214 14:58:41.873"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.376" endtime="20250214 14:58:41.873"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:41.877" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:41.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:41.882" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.875" endtime="20250214 14:58:41.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:41.883" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.882" endtime="20250214 14:58:41.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:41.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:41.883" endtime="20250214 14:58:41.883"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.874" endtime="20250214 14:58:41.883"/>
</kw>
<msg timestamp="20250214 14:58:41.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:41.874" endtime="20250214 14:58:41.884"/>
</kw>
<msg timestamp="20250214 14:58:41.884" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.874" endtime="20250214 14:58:41.884"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:41.887" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:41.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:41.892" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.885" endtime="20250214 14:58:41.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:41.892" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.892" endtime="20250214 14:58:41.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:41.892" endtime="20250214 14:58:41.893"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.884" endtime="20250214 14:58:41.893"/>
</kw>
<msg timestamp="20250214 14:58:41.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:41.884" endtime="20250214 14:58:41.893"/>
</kw>
<msg timestamp="20250214 14:58:41.893" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:41.884" endtime="20250214 14:58:41.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:41.893" endtime="20250214 14:58:41.894"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.873" endtime="20250214 14:58:41.894"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:41.894" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:41.894" endtime="20250214 14:58:41.894"/>
</kw>
<status status="PASS" starttime="20250214 14:58:40.326" endtime="20250214 14:58:41.894"/>
</kw>
<status status="PASS" starttime="20250214 14:58:39.839" endtime="20250214 14:58:41.894"/>
</iter>
<iter>
<var name="${name}">prom</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:41.898" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:42.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:42.396" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:58:41.896" endtime="20250214 14:58:42.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:42.397" level="INFO">{
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:58:42.396" endtime="20250214 14:58:42.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:42.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:42.397" endtime="20250214 14:58:42.398"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.896" endtime="20250214 14:58:42.398"/>
</kw>
<msg timestamp="20250214 14:58:42.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:41.895" endtime="20250214 14:58:42.398"/>
</kw>
<msg timestamp="20250214 14:58:42.398" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:58:41.895" endtime="20250214 14:58:42.398"/>
</kw>
<msg timestamp="20250214 14:58:42.398" level="INFO">${result} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:58:41.895" endtime="20250214 14:58:42.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:42.398" endtime="20250214 14:58:42.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:42.399" endtime="20250214 14:58:42.399"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.895" endtime="20250214 14:58:42.399"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:42.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prom --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:42.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:42.953" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:42.401" endtime="20250214 14:58:42.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:42.954" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:42.953" endtime="20250214 14:58:42.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:42.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:42.954" endtime="20250214 14:58:42.955"/>
</kw>
<status status="PASS" starttime="20250214 14:58:42.401" endtime="20250214 14:58:42.955"/>
</kw>
<msg timestamp="20250214 14:58:42.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:42.400" endtime="20250214 14:58:42.955"/>
</kw>
<msg timestamp="20250214 14:58:42.955" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:42.400" endtime="20250214 14:58:42.955"/>
</kw>
<status status="PASS" starttime="20250214 14:58:42.400" endtime="20250214 14:58:42.955"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:42.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:43.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:43.452" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:42.896Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:42.957" endtime="20250214 14:58:43.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:43.453" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:42.896Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:43.452" endtime="20250214 14:58:43.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:43.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:43.453" endtime="20250214 14:58:43.453"/>
</kw>
<status status="PASS" starttime="20250214 14:58:42.957" endtime="20250214 14:58:43.453"/>
</kw>
<msg timestamp="20250214 14:58:43.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:42.956" endtime="20250214 14:58:43.453"/>
</kw>
<msg timestamp="20250214 14:58:43.453" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:42.896Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:42.956" endtime="20250214 14:58:43.453"/>
</kw>
<msg timestamp="20250214 14:58:43.454" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:42.896Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:42.956" endtime="20250214 14:58:43.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:43.454" endtime="20250214 14:58:43.454"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:43.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prom --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:43.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:43.951" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:42 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:43.455" endtime="20250214 14:58:43.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:43.952" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:42 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:43 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:43 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:43.952" endtime="20250214 14:58:43.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:43.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:43.952" endtime="20250214 14:58:43.953"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.455" endtime="20250214 14:58:43.953"/>
</kw>
<msg timestamp="20250214 14:58:43.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:43.455" endtime="20250214 14:58:43.953"/>
</kw>
<msg timestamp="20250214 14:58:43.953" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:42 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:43.455" endtime="20250214 14:58:43.953"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.454" endtime="20250214 14:58:43.953"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:43.957" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:43.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:43.963" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.955" endtime="20250214 14:58:43.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:43.963" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.963" endtime="20250214 14:58:43.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:43.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:43.964" endtime="20250214 14:58:43.964"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.954" endtime="20250214 14:58:43.964"/>
</kw>
<msg timestamp="20250214 14:58:43.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:43.954" endtime="20250214 14:58:43.964"/>
</kw>
<msg timestamp="20250214 14:58:43.964" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.954" endtime="20250214 14:58:43.964"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:43.968" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:43.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:43.974" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.966" endtime="20250214 14:58:43.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:43.975" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.974" endtime="20250214 14:58:43.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:43.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:43.975" endtime="20250214 14:58:43.975"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.965" endtime="20250214 14:58:43.975"/>
</kw>
<msg timestamp="20250214 14:58:43.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:43.965" endtime="20250214 14:58:43.976"/>
</kw>
<msg timestamp="20250214 14:58:43.976" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:43.965" endtime="20250214 14:58:43.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:43.976" endtime="20250214 14:58:43.976"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.953" endtime="20250214 14:58:43.976"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:43.977" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:43.976" endtime="20250214 14:58:43.977"/>
</kw>
<status status="PASS" starttime="20250214 14:58:42.399" endtime="20250214 14:58:43.977"/>
</kw>
<status status="PASS" starttime="20250214 14:58:41.894" endtime="20250214 14:58:43.977"/>
</iter>
<iter>
<var name="${name}">secret</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:43.981" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:44.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:44.507" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:58:43.979" endtime="20250214 14:58:44.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:44.508" level="INFO">{
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:58:44.508" endtime="20250214 14:58:44.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:44.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:44.508" endtime="20250214 14:58:44.509"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.978" endtime="20250214 14:58:44.509"/>
</kw>
<msg timestamp="20250214 14:58:44.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:43.978" endtime="20250214 14:58:44.509"/>
</kw>
<msg timestamp="20250214 14:58:44.510" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:58:43.978" endtime="20250214 14:58:44.510"/>
</kw>
<msg timestamp="20250214 14:58:44.510" level="INFO">${result} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:58:43.978" endtime="20250214 14:58:44.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:44.510" endtime="20250214 14:58:44.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:44.510" endtime="20250214 14:58:44.510"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.977" endtime="20250214 14:58:44.510"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:44.514" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket secret --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:45.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:45.066" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:44.512" endtime="20250214 14:58:45.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:45.067" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:45.067" endtime="20250214 14:58:45.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:45.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:45.068" endtime="20250214 14:58:45.068"/>
</kw>
<status status="PASS" starttime="20250214 14:58:44.512" endtime="20250214 14:58:45.068"/>
</kw>
<msg timestamp="20250214 14:58:45.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:44.512" endtime="20250214 14:58:45.068"/>
</kw>
<msg timestamp="20250214 14:58:45.068" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:44.511" endtime="20250214 14:58:45.068"/>
</kw>
<status status="PASS" starttime="20250214 14:58:44.511" endtime="20250214 14:58:45.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:45.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:45.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:45.560" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:44.989Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:45.070" endtime="20250214 14:58:45.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:45.561" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:44.989Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:45.560" endtime="20250214 14:58:45.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:45.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:45.561" endtime="20250214 14:58:45.561"/>
</kw>
<status status="PASS" starttime="20250214 14:58:45.070" endtime="20250214 14:58:45.562"/>
</kw>
<msg timestamp="20250214 14:58:45.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:45.069" endtime="20250214 14:58:45.562"/>
</kw>
<msg timestamp="20250214 14:58:45.562" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:44.989Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:45.069" endtime="20250214 14:58:45.562"/>
</kw>
<msg timestamp="20250214 14:58:45.562" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:44.989Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:45.069" endtime="20250214 14:58:45.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:45.562" endtime="20250214 14:58:45.562"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:45.566" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket secret --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:46.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:46.085" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:44 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:45.564" endtime="20250214 14:58:46.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:46.086" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:44 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:46 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:46 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:46.086" endtime="20250214 14:58:46.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:46.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:46.086" endtime="20250214 14:58:46.087"/>
</kw>
<status status="PASS" starttime="20250214 14:58:45.563" endtime="20250214 14:58:46.087"/>
</kw>
<msg timestamp="20250214 14:58:46.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:45.563" endtime="20250214 14:58:46.087"/>
</kw>
<msg timestamp="20250214 14:58:46.087" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:44 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:45.563" endtime="20250214 14:58:46.087"/>
</kw>
<status status="PASS" starttime="20250214 14:58:45.562" endtime="20250214 14:58:46.087"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:46.091" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:46.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:46.095" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.089" endtime="20250214 14:58:46.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:46.096" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.096" endtime="20250214 14:58:46.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:46.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:46.096" endtime="20250214 14:58:46.097"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.088" endtime="20250214 14:58:46.097"/>
</kw>
<msg timestamp="20250214 14:58:46.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:46.088" endtime="20250214 14:58:46.097"/>
</kw>
<msg timestamp="20250214 14:58:46.097" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.088" endtime="20250214 14:58:46.097"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:46.100" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:46.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:46.104" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.098" endtime="20250214 14:58:46.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:46.105" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.105" endtime="20250214 14:58:46.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:46.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:46.105" endtime="20250214 14:58:46.106"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.098" endtime="20250214 14:58:46.106"/>
</kw>
<msg timestamp="20250214 14:58:46.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:46.097" endtime="20250214 14:58:46.106"/>
</kw>
<msg timestamp="20250214 14:58:46.106" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:46.097" endtime="20250214 14:58:46.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:46.106" endtime="20250214 14:58:46.106"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.087" endtime="20250214 14:58:46.106"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:46.107" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:46.107" endtime="20250214 14:58:46.107"/>
</kw>
<status status="PASS" starttime="20250214 14:58:44.511" endtime="20250214 14:58:46.107"/>
</kw>
<status status="PASS" starttime="20250214 14:58:43.977" endtime="20250214 14:58:46.107"/>
</iter>
<iter>
<var name="${name}">stacks</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:46.111" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:46.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:46.596" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:58:46.109" endtime="20250214 14:58:46.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:46.597" level="INFO">{
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:58:46.597" endtime="20250214 14:58:46.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:46.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:46.597" endtime="20250214 14:58:46.598"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.108" endtime="20250214 14:58:46.598"/>
</kw>
<msg timestamp="20250214 14:58:46.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:46.108" endtime="20250214 14:58:46.598"/>
</kw>
<msg timestamp="20250214 14:58:46.598" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:58:46.108" endtime="20250214 14:58:46.598"/>
</kw>
<msg timestamp="20250214 14:58:46.598" level="INFO">${result} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:58:46.108" endtime="20250214 14:58:46.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:46.599" endtime="20250214 14:58:46.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:46.599" endtime="20250214 14:58:46.599"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.107" endtime="20250214 14:58:46.599"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:46.603" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket stacks --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:47.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:47.151" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:46.601" endtime="20250214 14:58:47.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:47.152" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:47.151" endtime="20250214 14:58:47.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:47.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:47.152" endtime="20250214 14:58:47.152"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.600" endtime="20250214 14:58:47.152"/>
</kw>
<msg timestamp="20250214 14:58:47.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:46.600" endtime="20250214 14:58:47.152"/>
</kw>
<msg timestamp="20250214 14:58:47.153" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:46.600" endtime="20250214 14:58:47.153"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.600" endtime="20250214 14:58:47.153"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:47.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:47.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:47.651" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:47.086Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:47.154" endtime="20250214 14:58:47.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:47.652" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:47.086Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:47.652" endtime="20250214 14:58:47.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:47.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:47.652" endtime="20250214 14:58:47.653"/>
</kw>
<status status="PASS" starttime="20250214 14:58:47.154" endtime="20250214 14:58:47.653"/>
</kw>
<msg timestamp="20250214 14:58:47.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:47.154" endtime="20250214 14:58:47.653"/>
</kw>
<msg timestamp="20250214 14:58:47.653" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:47.086Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:47.153" endtime="20250214 14:58:47.653"/>
</kw>
<msg timestamp="20250214 14:58:47.653" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:47.086Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:47.153" endtime="20250214 14:58:47.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:47.654" endtime="20250214 14:58:47.654"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:47.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket stacks --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:48.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:48.150" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:47.655" endtime="20250214 14:58:48.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:48.151" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:48 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:48 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:48.150" endtime="20250214 14:58:48.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:48.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:48.151" endtime="20250214 14:58:48.151"/>
</kw>
<status status="PASS" starttime="20250214 14:58:47.655" endtime="20250214 14:58:48.152"/>
</kw>
<msg timestamp="20250214 14:58:48.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:47.655" endtime="20250214 14:58:48.152"/>
</kw>
<msg timestamp="20250214 14:58:48.152" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:47.654" endtime="20250214 14:58:48.152"/>
</kw>
<status status="PASS" starttime="20250214 14:58:47.654" endtime="20250214 14:58:48.152"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:48.155" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:48.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:48.160" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.153" endtime="20250214 14:58:48.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:48.161" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.160" endtime="20250214 14:58:48.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:48.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:48.161" endtime="20250214 14:58:48.161"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.153" endtime="20250214 14:58:48.161"/>
</kw>
<msg timestamp="20250214 14:58:48.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:48.153" endtime="20250214 14:58:48.161"/>
</kw>
<msg timestamp="20250214 14:58:48.161" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.152" endtime="20250214 14:58:48.161"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:48.164" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:48.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:48.169" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.162" endtime="20250214 14:58:48.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:48.169" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.169" endtime="20250214 14:58:48.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:48.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:48.169" endtime="20250214 14:58:48.170"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.162" endtime="20250214 14:58:48.170"/>
</kw>
<msg timestamp="20250214 14:58:48.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:48.162" endtime="20250214 14:58:48.170"/>
</kw>
<msg timestamp="20250214 14:58:48.170" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:48.162" endtime="20250214 14:58:48.170"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:48.170" endtime="20250214 14:58:48.171"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.152" endtime="20250214 14:58:48.171"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:48.171" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:48.171" endtime="20250214 14:58:48.171"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.599" endtime="20250214 14:58:48.171"/>
</kw>
<status status="PASS" starttime="20250214 14:58:46.107" endtime="20250214 14:58:48.171"/>
</iter>
<iter>
<var name="${name}">static</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:48.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:48.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:48.685" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:58:48.173" endtime="20250214 14:58:48.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:48.686" level="INFO">{
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:58:48.686" endtime="20250214 14:58:48.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:48.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:48.686" endtime="20250214 14:58:48.687"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.173" endtime="20250214 14:58:48.687"/>
</kw>
<msg timestamp="20250214 14:58:48.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:48.172" endtime="20250214 14:58:48.687"/>
</kw>
<msg timestamp="20250214 14:58:48.687" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:58:48.172" endtime="20250214 14:58:48.687"/>
</kw>
<msg timestamp="20250214 14:58:48.687" level="INFO">${result} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:58:48.172" endtime="20250214 14:58:48.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:48.687" endtime="20250214 14:58:48.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:48.688" endtime="20250214 14:58:48.688"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.172" endtime="20250214 14:58:48.688"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:48.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket static --key testkey --body /tmp/tempfile-velvalophh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:49.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:49.230" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:48.690" endtime="20250214 14:58:49.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:49.231" level="INFO">{
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:49.230" endtime="20250214 14:58:49.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:49.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:49.231" endtime="20250214 14:58:49.232"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.690" endtime="20250214 14:58:49.232"/>
</kw>
<msg timestamp="20250214 14:58:49.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:48.690" endtime="20250214 14:58:49.232"/>
</kw>
<msg timestamp="20250214 14:58:49.232" level="INFO">${output} = {
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\""
}</msg>
<status status="PASS" starttime="20250214 14:58:48.689" endtime="20250214 14:58:49.232"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.689" endtime="20250214 14:58:49.232"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:49.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:49.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:49.720" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:49.175Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:49.233" endtime="20250214 14:58:49.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:49.721" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:49.175Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:58:49.720" endtime="20250214 14:58:49.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:49.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:49.721" endtime="20250214 14:58:49.721"/>
</kw>
<status status="PASS" starttime="20250214 14:58:49.233" endtime="20250214 14:58:49.721"/>
</kw>
<msg timestamp="20250214 14:58:49.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:49.233" endtime="20250214 14:58:49.721"/>
</kw>
<msg timestamp="20250214 14:58:49.721" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:49.175Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:49.233" endtime="20250214 14:58:49.721"/>
</kw>
<msg timestamp="20250214 14:58:49.722" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:58:49.175Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:58:49.232" endtime="20250214 14:58:49.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:49.722" endtime="20250214 14:58:49.722"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:49.725" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket static --key testkey /tmp/tempfile-velvalophh.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:50.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:50.213" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:49 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:49.723" endtime="20250214 14:58:50.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:50.214" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:49 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:58:50 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:58:50 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:58:50.213" endtime="20250214 14:58:50.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:50.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:50.214" endtime="20250214 14:58:50.214"/>
</kw>
<status status="PASS" starttime="20250214 14:58:49.723" endtime="20250214 14:58:50.214"/>
</kw>
<msg timestamp="20250214 14:58:50.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:49.723" endtime="20250214 14:58:50.215"/>
</kw>
<msg timestamp="20250214 14:58:50.215" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:58:49 GMT",
    "ContentLength": 65536,
    "ETag": "\"8939684520c3eff17e00cf6c6b640c6b\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:58:49.722" endtime="20250214 14:58:50.215"/>
</kw>
<status status="PASS" starttime="20250214 14:58:49.722" endtime="20250214 14:58:50.215"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:50.219" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:50.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:50.223" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.216" endtime="20250214 14:58:50.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:50.224" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.224" endtime="20250214 14:58:50.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:50.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:50.224" endtime="20250214 14:58:50.225"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.216" endtime="20250214 14:58:50.225"/>
</kw>
<msg timestamp="20250214 14:58:50.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:50.216" endtime="20250214 14:58:50.225"/>
</kw>
<msg timestamp="20250214 14:58:50.225" level="INFO">${checksumbefore} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.215" endtime="20250214 14:58:50.225"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:50.228" level="INFO">Running command 'md5sum /tmp/tempfile-velvalophh.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:50.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:50.232" level="INFO">${output} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.226" endtime="20250214 14:58:50.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:50.233" level="INFO">8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.233" endtime="20250214 14:58:50.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:50.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:50.233" endtime="20250214 14:58:50.233"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.226" endtime="20250214 14:58:50.234"/>
</kw>
<msg timestamp="20250214 14:58:50.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:50.225" endtime="20250214 14:58:50.234"/>
</kw>
<msg timestamp="20250214 14:58:50.234" level="INFO">${checksumafter} = 8939684520c3eff17e00cf6c6b640c6b</msg>
<status status="PASS" starttime="20250214 14:58:50.225" endtime="20250214 14:58:50.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:50.234" endtime="20250214 14:58:50.234"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.215" endtime="20250214 14:58:50.234"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:58:50.235" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-velvalophh.verify"&gt;/tmp/tempfile-velvalophh.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:58:50.234" endtime="20250214 14:58:50.235"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.688" endtime="20250214 14:58:50.235"/>
</kw>
<status status="PASS" starttime="20250214 14:58:48.171" endtime="20250214 14:58:50.235"/>
</iter>
<status status="PASS" starttime="20250214 14:58:31.108" endtime="20250214 14:58:50.235"/>
</for>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:31.095" endtime="20250214 14:58:50.235"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:58:25.408" endtime="20250214 14:58:50.236"/>
</suite>
<suite id="s1-s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:50.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:50.251" endtime="20250214 14:58:50.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.251" endtime="20250214 14:58:50.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.251" endtime="20250214 14:58:50.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.251" endtime="20250214 14:58:50.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.252" endtime="20250214 14:58:50.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.252" endtime="20250214 14:58:50.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.252" endtime="20250214 14:58:50.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.252" endtime="20250214 14:58:50.252"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:50.252" endtime="20250214 14:58:50.252"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.251" endtime="20250214 14:58:50.252"/>
</kw>
<test id="s1-s1-s4-t1" name="Delete existing bucket" line="38">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:50.254" level="INFO">${randStr} = 3940937875</msg>
<status status="PASS" starttime="20250214 14:58:50.254" endtime="20250214 14:58:50.254"/>
</kw>
<msg timestamp="20250214 14:58:50.254" level="INFO">${postfix} = ozone-test-3940937875</msg>
<status status="PASS" starttime="20250214 14:58:50.253" endtime="20250214 14:58:50.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:50.255" level="INFO">${bucket} = bucket-ozone-test-3940937875</msg>
<status status="PASS" starttime="20250214 14:58:50.254" endtime="20250214 14:58:50.255"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:50.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3940937875 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:50.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:50.736" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3940937875"
}</msg>
<status status="PASS" starttime="20250214 14:58:50.256" endtime="20250214 14:58:50.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:50.737" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3940937875"
}</msg>
<status status="PASS" starttime="20250214 14:58:50.737" endtime="20250214 14:58:50.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:50.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:50.737" endtime="20250214 14:58:50.738"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.256" endtime="20250214 14:58:50.738"/>
</kw>
<msg timestamp="20250214 14:58:50.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:50.255" endtime="20250214 14:58:50.738"/>
</kw>
<msg timestamp="20250214 14:58:50.738" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3940937875"
}</msg>
<status status="PASS" starttime="20250214 14:58:50.255" endtime="20250214 14:58:50.738"/>
</kw>
<msg timestamp="20250214 14:58:50.738" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3940937875"
}</msg>
<status status="PASS" starttime="20250214 14:58:50.255" endtime="20250214 14:58:50.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:50.739" endtime="20250214 14:58:50.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:50.739" endtime="20250214 14:58:50.739"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.255" endtime="20250214 14:58:50.739"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.253" endtime="20250214 14:58:50.739"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.253" endtime="20250214 14:58:50.739"/>
</kw>
<msg timestamp="20250214 14:58:50.739" level="INFO">${bucket} = bucket-ozone-test-3940937875</msg>
<status status="PASS" starttime="20250214 14:58:50.253" endtime="20250214 14:58:50.739"/>
</kw>
<msg timestamp="20250214 14:58:50.739" level="INFO">${bucket} = bucket-ozone-test-3940937875</msg>
<status status="PASS" starttime="20250214 14:58:50.253" endtime="20250214 14:58:50.740"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:50.743" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-3940937875 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:51.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:51.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:50.741" endtime="20250214 14:58:51.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:51.238" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:51.237" endtime="20250214 14:58:51.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:51.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:51.238" endtime="20250214 14:58:51.238"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.740" endtime="20250214 14:58:51.238"/>
</kw>
<msg timestamp="20250214 14:58:51.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:50.740" endtime="20250214 14:58:51.238"/>
</kw>
<msg timestamp="20250214 14:58:51.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:50.740" endtime="20250214 14:58:51.238"/>
</kw>
<status status="PASS" starttime="20250214 14:58:50.740" endtime="20250214 14:58:51.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:50.252" endtime="20250214 14:58:51.239"/>
</test>
<test id="s1-s1-s4-t2" name="Delete non-existent bucket" line="42">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:51.240" level="INFO">${randStr} = 6508655085</msg>
<status status="PASS" starttime="20250214 14:58:51.240" endtime="20250214 14:58:51.240"/>
</kw>
<msg timestamp="20250214 14:58:51.240" level="INFO">${randStr} = ozone-test-6508655085</msg>
<status status="PASS" starttime="20250214 14:58:51.240" endtime="20250214 14:58:51.240"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:51.243" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-6508655085 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:51.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:51.752" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:58:51.241" endtime="20250214 14:58:51.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:51.758" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:58:51.755" endtime="20250214 14:58:51.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:51.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:51.760" endtime="20250214 14:58:51.762"/>
</kw>
<msg timestamp="20250214 14:58:51.762" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:58:51.241" endtime="20250214 14:58:51.762"/>
</kw>
<msg timestamp="20250214 14:58:51.762" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:58:51.241" endtime="20250214 14:58:51.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:51.763" endtime="20250214 14:58:51.763"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:51.239" endtime="20250214 14:58:51.763"/>
</test>
<test id="s1-s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="48">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:51.766" level="INFO">${randStr} = 2516477883</msg>
<status status="PASS" starttime="20250214 14:58:51.766" endtime="20250214 14:58:51.766"/>
</kw>
<msg timestamp="20250214 14:58:51.767" level="INFO">${postfix} = ozone-test-2516477883</msg>
<status status="PASS" starttime="20250214 14:58:51.766" endtime="20250214 14:58:51.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:58:51.767" level="INFO">${bucket} = bucket-ozone-test-2516477883</msg>
<status status="PASS" starttime="20250214 14:58:51.767" endtime="20250214 14:58:51.767"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:51.773" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2516477883 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:52.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:52.258" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2516477883"
}</msg>
<status status="PASS" starttime="20250214 14:58:51.769" endtime="20250214 14:58:52.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:52.259" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2516477883"
}</msg>
<status status="PASS" starttime="20250214 14:58:52.258" endtime="20250214 14:58:52.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:52.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:52.259" endtime="20250214 14:58:52.259"/>
</kw>
<status status="PASS" starttime="20250214 14:58:51.769" endtime="20250214 14:58:52.260"/>
</kw>
<msg timestamp="20250214 14:58:52.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:51.769" endtime="20250214 14:58:52.260"/>
</kw>
<msg timestamp="20250214 14:58:52.260" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2516477883"
}</msg>
<status status="PASS" starttime="20250214 14:58:51.768" endtime="20250214 14:58:52.260"/>
</kw>
<msg timestamp="20250214 14:58:52.260" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2516477883"
}</msg>
<status status="PASS" starttime="20250214 14:58:51.768" endtime="20250214 14:58:52.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:52.260" endtime="20250214 14:58:52.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:52.260" endtime="20250214 14:58:52.261"/>
</kw>
<status status="PASS" starttime="20250214 14:58:51.767" endtime="20250214 14:58:52.261"/>
</kw>
<msg timestamp="20250214 14:58:52.261" level="INFO">${bucket} = bucket-ozone-test-2516477883</msg>
<status status="PASS" starttime="20250214 14:58:51.765" endtime="20250214 14:58:52.261"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:52.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-2516477883 --key incomplete-multipartkey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:52.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:52.811" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2516477883",
    "Key": "incomplete-multipartkey",
    "UploadId": "696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737"
}</msg>
<status status="PASS" starttime="20250214 14:58:52.262" endtime="20250214 14:58:52.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:52.812" level="INFO">{
    "Bucket": "bucket-ozone-test-2516477883",
    "Key": "incomplete-multipartkey",
    "UploadId": "696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737"
}</msg>
<status status="PASS" starttime="20250214 14:58:52.812" endtime="20250214 14:58:52.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:52.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:52.812" endtime="20250214 14:58:52.813"/>
</kw>
<msg timestamp="20250214 14:58:52.813" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2516477883",
    "Key": "incomplete-multipartkey",
    "UploadId": "696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737"
}</msg>
<status status="PASS" starttime="20250214 14:58:52.262" endtime="20250214 14:58:52.813"/>
</kw>
<msg timestamp="20250214 14:58:52.813" level="INFO">${result} = {
    "Bucket": "bucket-ozone-test-2516477883",
    "Key": "incomplete-multipartkey",
    "UploadId": "696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737"
}</msg>
<status status="PASS" starttime="20250214 14:58:52.262" endtime="20250214 14:58:52.813"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:52.814" endtime="20250214 14:58:52.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:52.814" endtime="20250214 14:58:52.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:52.817" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-2516477883",
    "Key": "incomplete-multipartkey",
    "UploadId": "696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:52.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:52.823" level="INFO">${output} = 696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737</msg>
<status status="PASS" starttime="20250214 14:58:52.815" endtime="20250214 14:58:52.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:52.824" level="INFO">696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737</msg>
<status status="PASS" starttime="20250214 14:58:52.823" endtime="20250214 14:58:52.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:52.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:52.824" endtime="20250214 14:58:52.824"/>
</kw>
<msg timestamp="20250214 14:58:52.824" level="INFO">${upload_id} = 696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737</msg>
<status status="PASS" starttime="20250214 14:58:52.814" endtime="20250214 14:58:52.824"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:58:52.824" endtime="20250214 14:58:52.825"/>
</return>
<status status="PASS" starttime="20250214 14:58:52.813" endtime="20250214 14:58:52.825"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:58:52.825" endtime="20250214 14:58:52.825"/>
</return>
<status status="NOT RUN" starttime="20250214 14:58:52.825" endtime="20250214 14:58:52.825"/>
</branch>
<status status="PASS" starttime="20250214 14:58:52.813" endtime="20250214 14:58:52.825"/>
</if>
<msg timestamp="20250214 14:58:52.825" level="INFO">${uploadID} = 696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737</msg>
<status status="PASS" starttime="20250214 14:58:52.261" endtime="20250214 14:58:52.825"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:52.828" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2516477883 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:53.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:53.330" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:58:52.826" endtime="20250214 14:58:53.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:53.331" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20250214 14:58:53.331" endtime="20250214 14:58:53.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:53.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:53.331" endtime="20250214 14:58:53.332"/>
</kw>
<msg timestamp="20250214 14:58:53.332" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:58:52.826" endtime="20250214 14:58:53.332"/>
</kw>
<msg timestamp="20250214 14:58:53.332" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:58:52.825" endtime="20250214 14:58:53.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:53.332" endtime="20250214 14:58:53.333"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${abort_result}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<arg>${uploadID}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:53.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-2516477883 --key incomplete-multipartkey --upload-id 696f5f1c-2c0a-4106-8228-d11222c665d4-114002829819379737 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:53.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:53.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:53.334" endtime="20250214 14:58:53.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:53.818" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:53.818" endtime="20250214 14:58:53.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:53.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:53.818" endtime="20250214 14:58:53.819"/>
</kw>
<msg timestamp="20250214 14:58:53.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:53.334" endtime="20250214 14:58:53.819"/>
</kw>
<msg timestamp="20250214 14:58:53.819" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:58:53.333" endtime="20250214 14:58:53.820"/>
</kw>
<msg timestamp="20250214 14:58:53.820" level="INFO">${abort_result} = None</msg>
<status status="PASS" starttime="20250214 14:58:53.333" endtime="20250214 14:58:53.820"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:53.823" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2516477883 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:54.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:54.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:53.820" endtime="20250214 14:58:54.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:54.347" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:54.347" endtime="20250214 14:58:54.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:54.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:54.348" endtime="20250214 14:58:54.348"/>
</kw>
<msg timestamp="20250214 14:58:54.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:53.820" endtime="20250214 14:58:54.348"/>
</kw>
<msg timestamp="20250214 14:58:54.348" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20250214 14:58:53.820" endtime="20250214 14:58:54.349"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:51.765" endtime="20250214 14:58:54.349"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:58:50.237" endtime="20250214 14:58:54.350"/>
</suite>
<suite id="s1-s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:54.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:54.358" endtime="20250214 14:58:54.358"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:54.359" endtime="20250214 14:58:54.359"/>
</kw>
<status status="PASS" starttime="20250214 14:58:54.358" endtime="20250214 14:58:54.359"/>
</kw>
<test id="s1-s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:54.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:54.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:54.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:54.361" endtime="20250214 14:58:54.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:54.867" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:54.866" endtime="20250214 14:58:54.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:54.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:54.867" endtime="20250214 14:58:54.868"/>
</kw>
<status status="PASS" starttime="20250214 14:58:54.361" endtime="20250214 14:58:54.868"/>
</kw>
<msg timestamp="20250214 14:58:54.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:54.360" endtime="20250214 14:58:54.868"/>
</kw>
<msg timestamp="20250214 14:58:54.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:54.360" endtime="20250214 14:58:54.868"/>
</kw>
<msg timestamp="20250214 14:58:54.868" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:58:54.360" endtime="20250214 14:58:54.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:54.360" endtime="20250214 14:58:54.869"/>
</test>
<test id="s1-s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:58:54.871" level="INFO">${randStr} = 3158035580</msg>
<status status="PASS" starttime="20250214 14:58:54.870" endtime="20250214 14:58:54.871"/>
</kw>
<msg timestamp="20250214 14:58:54.871" level="INFO">${randStr} = ozone-test-3158035580</msg>
<status status="PASS" starttime="20250214 14:58:54.870" endtime="20250214 14:58:54.871"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:54.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-3158035580 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:55.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:58:55.351" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:58:54.872" endtime="20250214 14:58:55.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:55.352" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:58:55.351" endtime="20250214 14:58:55.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:55.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:55.352" endtime="20250214 14:58:55.352"/>
</kw>
<msg timestamp="20250214 14:58:55.352" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:58:54.871" endtime="20250214 14:58:55.352"/>
</kw>
<msg timestamp="20250214 14:58:55.352" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:58:54.871" endtime="20250214 14:58:55.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:55.353" endtime="20250214 14:58:55.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:55.353" endtime="20250214 14:58:55.353"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:54.869" endtime="20250214 14:58:55.353"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:58:54.351" endtime="20250214 14:58:55.354"/>
</suite>
<suite id="s1-s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:58:55.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.363" endtime="20250214 14:58:55.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.364" endtime="20250214 14:58:55.364"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.364" endtime="20250214 14:58:55.364"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:58:55.364" endtime="20250214 14:58:55.364"/>
</kw>
<status status="PASS" starttime="20250214 14:58:55.362" endtime="20250214 14:58:55.364"/>
</kw>
<test id="s1-s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:55.368" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:55.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:55.861" level="INFO">${output} = bucket-ozone-test-3424069005
bucket-ozone-test-7415133957
bucket-ozone-test-8919850771
bucket-qqilemsldv
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:58:55.365" endtime="20250214 14:58:55.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:55.863" level="INFO">bucket-ozone-test-3424069005
bucket-ozone-test-7415133957
bucket-ozone-test-8919850771
bucket-qqilemsldv
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:58:55.862" endtime="20250214 14:58:55.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:55.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:55.863" endtime="20250214 14:58:55.864"/>
</kw>
<status status="PASS" starttime="20250214 14:58:55.365" endtime="20250214 14:58:55.864"/>
</kw>
<msg timestamp="20250214 14:58:55.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:55.365" endtime="20250214 14:58:55.864"/>
</kw>
<msg timestamp="20250214 14:58:55.864" level="INFO">${output} = bucket-ozone-test-3424069005
bucket-ozone-test-7415133957
bucket-ozone-test-8919850771
bucket-qqilemsldv
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:58:55.365" endtime="20250214 14:58:55.864"/>
</kw>
<msg timestamp="20250214 14:58:55.864" level="INFO">${result} = bucket-ozone-test-3424069005
bucket-ozone-test-7415133957
bucket-ozone-test-8919850771
bucket-qqilemsldv
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:58:55.364" endtime="20250214 14:58:55.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:58:55.864" endtime="20250214 14:58:55.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:55.364" endtime="20250214 14:58:55.865"/>
</test>
<test id="s1-s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 14:58:55.866" endtime="20250214 14:58:55.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:55.870" level="INFO">Running command 'ozone sh bucket info /s3v/erasure | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:59.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:59.108" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250214 14:58:55.868" endtime="20250214 14:58:59.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:59.109" level="INFO">testuser</msg>
<status status="PASS" starttime="20250214 14:58:59.109" endtime="20250214 14:58:59.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:59.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:59.109" endtime="20250214 14:58:59.110"/>
</kw>
<status status="PASS" starttime="20250214 14:58:55.867" endtime="20250214 14:58:59.110"/>
</kw>
<msg timestamp="20250214 14:58:59.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:55.867" endtime="20250214 14:58:59.110"/>
</kw>
<msg timestamp="20250214 14:58:59.110" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250214 14:58:55.866" endtime="20250214 14:58:59.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:58:59.110" endtime="20250214 14:58:59.110"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:55.865" endtime="20250214 14:58:59.111"/>
</test>
<test id="s1-s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:59.115" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:59.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:59.461" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:59.112" endtime="20250214 14:58:59.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:59.462" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:59.462" endtime="20250214 14:58:59.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:59.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:59.463" endtime="20250214 14:58:59.463"/>
</kw>
<status status="PASS" starttime="20250214 14:58:59.112" endtime="20250214 14:58:59.463"/>
</kw>
<msg timestamp="20250214 14:58:59.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:59.112" endtime="20250214 14:58:59.463"/>
</kw>
<msg timestamp="20250214 14:58:59.463" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:59.112" endtime="20250214 14:58:59.463"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 14:58:59.464" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:58:59.464" endtime="20250214 14:58:59.464"/>
</kw>
<status status="PASS" starttime="20250214 14:58:59.111" endtime="20250214 14:58:59.464"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:59.467" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:58:59.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:58:59.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:58:59.465" endtime="20250214 14:58:59.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:58:59.805" level="INFO"/>
<status status="PASS" starttime="20250214 14:58:59.804" endtime="20250214 14:58:59.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:58:59.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:58:59.805" endtime="20250214 14:58:59.805"/>
</kw>
<status status="PASS" starttime="20250214 14:58:59.465" endtime="20250214 14:58:59.805"/>
</kw>
<msg timestamp="20250214 14:58:59.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:58:59.464" endtime="20250214 14:58:59.805"/>
</kw>
<status status="PASS" starttime="20250214 14:58:59.464" endtime="20250214 14:58:59.806"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:58:59.809" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:00.319" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:00.319" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:58:59.806" endtime="20250214 14:59:00.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:00.320" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:59:00.319" endtime="20250214 14:59:00.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:00.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:00.320" endtime="20250214 14:59:00.320"/>
</kw>
<msg timestamp="20250214 14:59:00.320" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:58:59.806" endtime="20250214 14:59:00.320"/>
</kw>
<msg timestamp="20250214 14:59:00.320" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:58:59.806" endtime="20250214 14:59:00.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:00.321" endtime="20250214 14:59:00.321"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:00.325" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:00.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:00.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:00.323" endtime="20250214 14:59:00.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:00.679" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:00.678" endtime="20250214 14:59:00.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:00.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:00.679" endtime="20250214 14:59:00.679"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.323" endtime="20250214 14:59:00.679"/>
</kw>
<msg timestamp="20250214 14:59:00.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:00.322" endtime="20250214 14:59:00.680"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.321" endtime="20250214 14:59:00.680"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.321" endtime="20250214 14:59:00.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:58:59.111" endtime="20250214 14:59:00.680"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:58:55.355" endtime="20250214 14:59:00.680"/>
</suite>
<suite id="s1-s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:59:00.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:00.689" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.690" endtime="20250214 14:59:00.690"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:59:00.691" endtime="20250214 14:59:00.691"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.689" endtime="20250214 14:59:00.691"/>
</kw>
<test id="s1-s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:00.694" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:01.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:01.040" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:59:00.692" endtime="20250214 14:59:01.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:01.041" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:59:01.040" endtime="20250214 14:59:01.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:01.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:01.041" endtime="20250214 14:59:01.041"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.692" endtime="20250214 14:59:01.041"/>
</kw>
<msg timestamp="20250214 14:59:01.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:00.692" endtime="20250214 14:59:01.041"/>
</kw>
<msg timestamp="20250214 14:59:01.041" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 14:59:00.691" endtime="20250214 14:59:01.041"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:01.045" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:01.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:01.376" level="INFO">${output} = b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:59:01.042" endtime="20250214 14:59:01.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:01.377" level="INFO">b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:59:01.377" endtime="20250214 14:59:01.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:01.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:01.377" endtime="20250214 14:59:01.378"/>
</kw>
<status status="PASS" starttime="20250214 14:59:01.042" endtime="20250214 14:59:01.378"/>
</kw>
<msg timestamp="20250214 14:59:01.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:01.042" endtime="20250214 14:59:01.378"/>
</kw>
<msg timestamp="20250214 14:59:01.378" level="INFO">${secret} = b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 14:59:01.042" endtime="20250214 14:59:01.378"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:59:01.378" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185'.</msg>
<status status="PASS" starttime="20250214 14:59:01.378" endtime="20250214 14:59:01.378"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:59:01.379" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250214 14:59:01.378" endtime="20250214 14:59:01.379"/>
</kw>
<status status="PASS" starttime="20250214 14:59:00.691" endtime="20250214 14:59:01.379"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:01.383" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-erasure  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.219" level="INFO">${output} = 2025-02-14 14:59:02,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:59:02,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250214 14:59:01.381" endtime="20250214 14:59:05.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.220" level="INFO">2025-02-14 14:59:02,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:59:02,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-14 14:59:02,920 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-14 14:59:03,084 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-erasure and number-of-tests 100
2025-02-14 14:59:03,170 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-14 14:59:04,173 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2025-02-14 14:59:05,173 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-14 14:59:05,186 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=47.81502, max=201.069887, mean=85.90560129050348, stddev=38.13802078050423, median=75.364173, p75=87.437297, p95=193.656492, p98=196.050672, p99=201.034618, p999=201.069887, mean_rate=68.84130853008523, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-14 14:59:05,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-14 14:59:05,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-14 14:59:05,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250214 14:59:05.219" endtime="20250214 14:59:05.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.220" endtime="20250214 14:59:05.220"/>
</kw>
<status status="PASS" starttime="20250214 14:59:01.380" endtime="20250214 14:59:05.220"/>
</kw>
<msg timestamp="20250214 14:59:05.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:01.380" endtime="20250214 14:59:05.221"/>
</kw>
<msg timestamp="20250214 14:59:05.221" level="INFO">${result} = 2025-02-14 14:59:02,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:59:02,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250214 14:59:01.380" endtime="20250214 14:59:05.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:05.221" endtime="20250214 14:59:05.221"/>
</kw>
<status status="PASS" starttime="20250214 14:59:01.379" endtime="20250214 14:59:05.221"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20250214 14:59:00.691" endtime="20250214 14:59:05.221"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:59:00.681" endtime="20250214 14:59:05.222"/>
</suite>
<suite id="s1-s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:59:05.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.233" endtime="20250214 14:59:05.233"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.233" endtime="20250214 14:59:05.233"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.233" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.234"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.233" endtime="20250214 14:59:05.234"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:59:05.235" endtime="20250214 14:59:05.236"/>
</kw>
<msg timestamp="20250214 14:59:05.236" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250214 14:59:05.235" endtime="20250214 14:59:05.236"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.239" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:05.237" endtime="20250214 14:59:05.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.274" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:05.273" endtime="20250214 14:59:05.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.274" endtime="20250214 14:59:05.274"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.236" endtime="20250214 14:59:05.274"/>
</kw>
<msg timestamp="20250214 14:59:05.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.236" endtime="20250214 14:59:05.275"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.236" endtime="20250214 14:59:05.275"/>
</kw>
<msg timestamp="20250214 14:59:05.275" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250214 14:59:05.235" endtime="20250214 14:59:05.275"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.234" endtime="20250214 14:59:05.275"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:59:05.276" endtime="20250214 14:59:05.276"/>
</kw>
<msg timestamp="20250214 14:59:05.277" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:59:05.276" endtime="20250214 14:59:05.277"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.280" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:05.277" endtime="20250214 14:59:05.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.290" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:05.290" endtime="20250214 14:59:05.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.290" endtime="20250214 14:59:05.291"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.277" endtime="20250214 14:59:05.291"/>
</kw>
<msg timestamp="20250214 14:59:05.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.277" endtime="20250214 14:59:05.291"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.277" endtime="20250214 14:59:05.291"/>
</kw>
<msg timestamp="20250214 14:59:05.291" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:59:05.275" endtime="20250214 14:59:05.291"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.275" endtime="20250214 14:59:05.291"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:59:05.293" endtime="20250214 14:59:05.293"/>
</kw>
<msg timestamp="20250214 14:59:05.293" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250214 14:59:05.292" endtime="20250214 14:59:05.293"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.296" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:05.294" endtime="20250214 14:59:05.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.337" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:05.337" endtime="20250214 14:59:05.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.337" endtime="20250214 14:59:05.338"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.293" endtime="20250214 14:59:05.338"/>
</kw>
<msg timestamp="20250214 14:59:05.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.293" endtime="20250214 14:59:05.338"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.293" endtime="20250214 14:59:05.338"/>
</kw>
<msg timestamp="20250214 14:59:05.338" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250214 14:59:05.292" endtime="20250214 14:59:05.338"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.291" endtime="20250214 14:59:05.338"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:59:05.340" endtime="20250214 14:59:05.340"/>
</kw>
<msg timestamp="20250214 14:59:05.340" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250214 14:59:05.339" endtime="20250214 14:59:05.340"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.343" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:05.341" endtime="20250214 14:59:05.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.428" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:05.427" endtime="20250214 14:59:05.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.428" endtime="20250214 14:59:05.428"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.341" endtime="20250214 14:59:05.428"/>
</kw>
<msg timestamp="20250214 14:59:05.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.340" endtime="20250214 14:59:05.428"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.340" endtime="20250214 14:59:05.429"/>
</kw>
<msg timestamp="20250214 14:59:05.429" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250214 14:59:05.339" endtime="20250214 14:59:05.429"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.338" endtime="20250214 14:59:05.429"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:59:05.430" endtime="20250214 14:59:05.430"/>
</kw>
<msg timestamp="20250214 14:59:05.431" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250214 14:59:05.430" endtime="20250214 14:59:05.431"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.434" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:05.431" endtime="20250214 14:59:05.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.438" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:05.438" endtime="20250214 14:59:05.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.438" endtime="20250214 14:59:05.438"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.431" endtime="20250214 14:59:05.439"/>
</kw>
<msg timestamp="20250214 14:59:05.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:05.431" endtime="20250214 14:59:05.439"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.431" endtime="20250214 14:59:05.439"/>
</kw>
<msg timestamp="20250214 14:59:05.439" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250214 14:59:05.429" endtime="20250214 14:59:05.439"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.429" endtime="20250214 14:59:05.439"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.233" endtime="20250214 14:59:05.439"/>
</kw>
<test id="s1-s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="60">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:05.441" level="INFO">${randStr} = 4971785635</msg>
<status status="PASS" starttime="20250214 14:59:05.440" endtime="20250214 14:59:05.441"/>
</kw>
<msg timestamp="20250214 14:59:05.441" level="INFO">${random} = ozone-test-4971785635</msg>
<status status="PASS" starttime="20250214 14:59:05.440" endtime="20250214 14:59:05.441"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:05.442" level="INFO">${PREFIX} = ozone-test-4971785635</msg>
<status status="PASS" starttime="20250214 14:59:05.441" endtime="20250214 14:59:05.442"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.440" endtime="20250214 14:59:05.442"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.446" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-4971785635  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.948" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "UploadId": "5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.444" endtime="20250214 14:59:05.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.949" level="INFO">{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "UploadId": "5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.949" endtime="20250214 14:59:05.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.949" endtime="20250214 14:59:05.950"/>
</kw>
<msg timestamp="20250214 14:59:05.950" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "UploadId": "5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.443" endtime="20250214 14:59:05.950"/>
</kw>
<msg timestamp="20250214 14:59:05.950" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "UploadId": "5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.443" endtime="20250214 14:59:05.950"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:05.950" endtime="20250214 14:59:05.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:05.951" endtime="20250214 14:59:05.951"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.954" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "UploadId": "5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:05.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:05.960" level="INFO">${output} = 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170</msg>
<status status="PASS" starttime="20250214 14:59:05.952" endtime="20250214 14:59:05.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:05.961" level="INFO">5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170</msg>
<status status="PASS" starttime="20250214 14:59:05.960" endtime="20250214 14:59:05.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:05.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:05.961" endtime="20250214 14:59:05.961"/>
</kw>
<msg timestamp="20250214 14:59:05.961" level="INFO">${upload_id} = 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170</msg>
<status status="PASS" starttime="20250214 14:59:05.951" endtime="20250214 14:59:05.961"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:05.961" endtime="20250214 14:59:05.961"/>
</return>
<status status="PASS" starttime="20250214 14:59:05.950" endtime="20250214 14:59:05.961"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:05.962" endtime="20250214 14:59:05.962"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:05.961" endtime="20250214 14:59:05.962"/>
</branch>
<status status="PASS" starttime="20250214 14:59:05.950" endtime="20250214 14:59:05.962"/>
</if>
<msg timestamp="20250214 14:59:05.962" level="INFO">${upload_id} = 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170</msg>
<status status="PASS" starttime="20250214 14:59:05.442" endtime="20250214 14:59:05.962"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:59:05.963" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:59:05.962" endtime="20250214 14:59:05.963"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:05.963" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:59:05.963" endtime="20250214 14:59:05.963"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:05.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-4971785635 --part-number 1 --body /tmp/part1 --upload-id 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:06.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:06.723" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.965" endtime="20250214 14:59:06.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:06.724" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:06.724" endtime="20250214 14:59:06.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:06.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:06.725" endtime="20250214 14:59:06.725"/>
</kw>
<msg timestamp="20250214 14:59:06.725" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.965" endtime="20250214 14:59:06.725"/>
</kw>
<msg timestamp="20250214 14:59:06.725" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:05.964" endtime="20250214 14:59:06.725"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:06.726" endtime="20250214 14:59:06.726"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:06.729" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:06.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:06.734" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.727" endtime="20250214 14:59:06.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:06.735" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.735" endtime="20250214 14:59:06.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:06.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:06.735" endtime="20250214 14:59:06.736"/>
</kw>
<status status="PASS" starttime="20250214 14:59:06.727" endtime="20250214 14:59:06.736"/>
</kw>
<msg timestamp="20250214 14:59:06.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:06.726" endtime="20250214 14:59:06.736"/>
</kw>
<msg timestamp="20250214 14:59:06.736" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.726" endtime="20250214 14:59:06.736"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:06.739" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:06.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:06.753" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.737" endtime="20250214 14:59:06.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:06.753" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.753" endtime="20250214 14:59:06.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:06.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:06.754" endtime="20250214 14:59:06.754"/>
</kw>
<status status="PASS" starttime="20250214 14:59:06.737" endtime="20250214 14:59:06.754"/>
</kw>
<msg timestamp="20250214 14:59:06.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:06.736" endtime="20250214 14:59:06.755"/>
</kw>
<msg timestamp="20250214 14:59:06.755" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:06.736" endtime="20250214 14:59:06.755"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:06.755" endtime="20250214 14:59:06.755"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:06.755" endtime="20250214 14:59:06.755"/>
</return>
<status status="PASS" starttime="20250214 14:59:06.725" endtime="20250214 14:59:06.755"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:06.755" endtime="20250214 14:59:06.755"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:06.755" endtime="20250214 14:59:06.755"/>
</branch>
<status status="PASS" starttime="20250214 14:59:06.725" endtime="20250214 14:59:06.755"/>
</if>
<msg timestamp="20250214 14:59:06.755" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:05.964" endtime="20250214 14:59:06.755"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:06.756" endtime="20250214 14:59:06.756"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.963" endtime="20250214 14:59:06.756"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:06.757" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:59:06.756" endtime="20250214 14:59:06.757"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:06.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-4971785635 --part-number 2 --body /tmp/part2 --upload-id 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:07.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:07.416" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:06.758" endtime="20250214 14:59:07.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:07.417" level="INFO">{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:07.416" endtime="20250214 14:59:07.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:07.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:07.417" endtime="20250214 14:59:07.418"/>
</kw>
<msg timestamp="20250214 14:59:07.418" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:06.757" endtime="20250214 14:59:07.418"/>
</kw>
<msg timestamp="20250214 14:59:07.418" level="INFO">${result} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:06.757" endtime="20250214 14:59:07.418"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:07.418" endtime="20250214 14:59:07.419"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:07.422" level="INFO">Running command 'echo '{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:07.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:07.427" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.420" endtime="20250214 14:59:07.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:07.428" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.427" endtime="20250214 14:59:07.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:07.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:07.428" endtime="20250214 14:59:07.428"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.419" endtime="20250214 14:59:07.428"/>
</kw>
<msg timestamp="20250214 14:59:07.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:07.419" endtime="20250214 14:59:07.429"/>
</kw>
<msg timestamp="20250214 14:59:07.429" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.419" endtime="20250214 14:59:07.429"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:07.432" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:07.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:07.438" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.430" endtime="20250214 14:59:07.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:07.439" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.438" endtime="20250214 14:59:07.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:07.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:07.439" endtime="20250214 14:59:07.439"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.429" endtime="20250214 14:59:07.439"/>
</kw>
<msg timestamp="20250214 14:59:07.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:07.429" endtime="20250214 14:59:07.439"/>
</kw>
<msg timestamp="20250214 14:59:07.439" level="INFO">${md5sum} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:07.429" endtime="20250214 14:59:07.439"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:07.440" endtime="20250214 14:59:07.440"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:07.440" endtime="20250214 14:59:07.440"/>
</return>
<status status="PASS" starttime="20250214 14:59:07.418" endtime="20250214 14:59:07.440"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:07.440" endtime="20250214 14:59:07.440"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:07.440" endtime="20250214 14:59:07.440"/>
</branch>
<status status="PASS" starttime="20250214 14:59:07.418" endtime="20250214 14:59:07.440"/>
</if>
<msg timestamp="20250214 14:59:07.440" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:06.757" endtime="20250214 14:59:07.440"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:07.440" endtime="20250214 14:59:07.441"/>
</kw>
<status status="PASS" starttime="20250214 14:59:06.756" endtime="20250214 14:59:07.441"/>
</iter>
<status status="PASS" starttime="20250214 14:59:05.963" endtime="20250214 14:59:07.441"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:59:07.441" level="INFO">${parts} = {ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:07.441" endtime="20250214 14:59:07.441"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:59:07.441" endtime="20250214 14:59:07.441"/>
</return>
<msg timestamp="20250214 14:59:07.441" level="INFO">${parts} = {ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:05.962" endtime="20250214 14:59:07.441"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:07.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-4971785635 --upload-id 5b7a7270-b856-4c86-b4ca-da730763bffe-114002830680326170 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:07.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:07.941" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:07.443" endtime="20250214 14:59:07.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:07.942" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:07.941" endtime="20250214 14:59:07.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:07.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:07.942" endtime="20250214 14:59:07.942"/>
</kw>
<msg timestamp="20250214 14:59:07.943" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:07.443" endtime="20250214 14:59:07.943"/>
</kw>
<msg timestamp="20250214 14:59:07.943" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:07.442" endtime="20250214 14:59:07.943"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:07.943" endtime="20250214 14:59:07.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:07.944" endtime="20250214 14:59:07.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:07.944" endtime="20250214 14:59:07.944"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:07.947" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4971785635",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:07.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:07.952" level="INFO">${output} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:07.945" endtime="20250214 14:59:07.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:07.953" level="INFO">"c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:07.953" endtime="20250214 14:59:07.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:07.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:07.953" endtime="20250214 14:59:07.954"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.945" endtime="20250214 14:59:07.954"/>
</kw>
<msg timestamp="20250214 14:59:07.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:07.945" endtime="20250214 14:59:07.954"/>
</kw>
<msg timestamp="20250214 14:59:07.954" level="INFO">${etag} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:07.944" endtime="20250214 14:59:07.954"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:07.954" endtime="20250214 14:59:07.954"/>
</return>
<status status="PASS" starttime="20250214 14:59:07.943" endtime="20250214 14:59:07.954"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:07.954" endtime="20250214 14:59:07.954"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:07.954" endtime="20250214 14:59:07.955"/>
</branch>
<status status="PASS" starttime="20250214 14:59:07.943" endtime="20250214 14:59:07.955"/>
</if>
<status status="PASS" starttime="20250214 14:59:07.442" endtime="20250214 14:59:07.955"/>
</kw>
<status status="PASS" starttime="20250214 14:59:05.442" endtime="20250214 14:59:07.955"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:07.956" level="INFO">${randStr} = 8107762833</msg>
<status status="PASS" starttime="20250214 14:59:07.955" endtime="20250214 14:59:07.956"/>
</kw>
<msg timestamp="20250214 14:59:07.956" level="INFO">${random} = ozone-test-8107762833</msg>
<status status="PASS" starttime="20250214 14:59:07.955" endtime="20250214 14:59:07.956"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:07.959" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key multipart/adjusted_length_ozone-test-4971785635 /tmp/verifyozone-test-8107762833 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:08.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:08.647" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:07 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:07.957" endtime="20250214 14:59:08.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:08.648" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:07 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:08 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:08 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:08.648" endtime="20250214 14:59:08.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:08.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:08.648" endtime="20250214 14:59:08.649"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.957" endtime="20250214 14:59:08.649"/>
</kw>
<msg timestamp="20250214 14:59:08.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:07.957" endtime="20250214 14:59:08.649"/>
</kw>
<msg timestamp="20250214 14:59:08.649" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:07 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:07.956" endtime="20250214 14:59:08.649"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.956" endtime="20250214 14:59:08.649"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:59:08.649" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:59:08.649" endtime="20250214 14:59:08.649"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:08.653" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-8107762833'.</msg>
<msg timestamp="20250214 14:59:08.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:08.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:08.650" endtime="20250214 14:59:08.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:08.663" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:08.662" endtime="20250214 14:59:08.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:08.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:08.663" endtime="20250214 14:59:08.663"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.650" endtime="20250214 14:59:08.663"/>
</kw>
<msg timestamp="20250214 14:59:08.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:08.650" endtime="20250214 14:59:08.663"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.650" endtime="20250214 14:59:08.663"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:08.667" level="INFO">Running command 'md5sum /tmp/originalozone-test-8107762833 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:08.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:08.682" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.665" endtime="20250214 14:59:08.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:08.683" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.682" endtime="20250214 14:59:08.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:08.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:08.683" endtime="20250214 14:59:08.683"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.664" endtime="20250214 14:59:08.683"/>
</kw>
<msg timestamp="20250214 14:59:08.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:08.664" endtime="20250214 14:59:08.683"/>
</kw>
<msg timestamp="20250214 14:59:08.684" level="INFO">${checksumbefore} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.664" endtime="20250214 14:59:08.684"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:08.687" level="INFO">Running command 'md5sum /tmp/verifyozone-test-8107762833 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:08.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:08.702" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.685" endtime="20250214 14:59:08.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:08.703" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.703" endtime="20250214 14:59:08.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:08.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:08.703" endtime="20250214 14:59:08.704"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.684" endtime="20250214 14:59:08.704"/>
</kw>
<msg timestamp="20250214 14:59:08.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:08.684" endtime="20250214 14:59:08.704"/>
</kw>
<msg timestamp="20250214 14:59:08.704" level="INFO">${checksumafter} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:08.684" endtime="20250214 14:59:08.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:08.704" endtime="20250214 14:59:08.705"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.664" endtime="20250214 14:59:08.705"/>
</kw>
<status status="PASS" starttime="20250214 14:59:07.955" endtime="20250214 14:59:08.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:05.439" endtime="20250214 14:59:08.705"/>
</test>
<test id="s1-s1-s8-t2" name="Overwrite Empty File" line="64">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:08.707" level="INFO">${randStr} = 7872130224</msg>
<status status="PASS" starttime="20250214 14:59:08.706" endtime="20250214 14:59:08.707"/>
</kw>
<msg timestamp="20250214 14:59:08.707" level="INFO">${random} = ozone-test-7872130224</msg>
<status status="PASS" starttime="20250214 14:59:08.706" endtime="20250214 14:59:08.707"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:08.707" level="INFO">${PREFIX} = ozone-test-7872130224</msg>
<status status="PASS" starttime="20250214 14:59:08.707" endtime="20250214 14:59:08.707"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.706" endtime="20250214 14:59:08.707"/>
</kw>
<kw name="Execute" library="os">
<arg>touch ${TEMP_DIR}/empty</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:08.710" level="INFO">Running command 'touch /tmp/empty 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:08.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:08.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:08.708" endtime="20250214 14:59:08.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:08.715" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:08.715" endtime="20250214 14:59:08.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:08.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:08.715" endtime="20250214 14:59:08.716"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.708" endtime="20250214 14:59:08.716"/>
</kw>
<msg timestamp="20250214 14:59:08.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:08.708" endtime="20250214 14:59:08.716"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.707" endtime="20250214 14:59:08.716"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${TEMP_DIR}/empty s3://${BUCKET}/empty_file_${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:08.720" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/empty s3://erasure/empty_file_ozone-test-7872130224 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:09.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:09.262" level="INFO">${output} = upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-7872130224</msg>
<status status="PASS" starttime="20250214 14:59:08.718" endtime="20250214 14:59:09.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:09.263" level="INFO">upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-7872130224</msg>
<status status="PASS" starttime="20250214 14:59:09.262" endtime="20250214 14:59:09.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:09.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:09.263" endtime="20250214 14:59:09.264"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.717" endtime="20250214 14:59:09.264"/>
</kw>
<msg timestamp="20250214 14:59:09.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:08.717" endtime="20250214 14:59:09.264"/>
</kw>
<msg timestamp="20250214 14:59:09.264" level="INFO">${output} = upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-7872130224</msg>
<status status="PASS" starttime="20250214 14:59:08.716" endtime="20250214 14:59:09.264"/>
</kw>
<status status="PASS" starttime="20250214 14:59:08.716" endtime="20250214 14:59:09.264"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:09.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key empty_file_ozone-test-7872130224  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:09.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:09.779" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "UploadId": "6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.266" endtime="20250214 14:59:09.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:09.780" level="INFO">{
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "UploadId": "6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.780" endtime="20250214 14:59:09.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:09.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:09.781" endtime="20250214 14:59:09.781"/>
</kw>
<msg timestamp="20250214 14:59:09.781" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "UploadId": "6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.266" endtime="20250214 14:59:09.781"/>
</kw>
<msg timestamp="20250214 14:59:09.781" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "UploadId": "6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.265" endtime="20250214 14:59:09.781"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:09.782" endtime="20250214 14:59:09.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:09.782" endtime="20250214 14:59:09.782"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:09.785" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "UploadId": "6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:09.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:09.790" level="INFO">${output} = 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910</msg>
<status status="PASS" starttime="20250214 14:59:09.783" endtime="20250214 14:59:09.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:09.791" level="INFO">6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910</msg>
<status status="PASS" starttime="20250214 14:59:09.791" endtime="20250214 14:59:09.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:09.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:09.791" endtime="20250214 14:59:09.792"/>
</kw>
<msg timestamp="20250214 14:59:09.792" level="INFO">${upload_id} = 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910</msg>
<status status="PASS" starttime="20250214 14:59:09.782" endtime="20250214 14:59:09.792"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:09.792" endtime="20250214 14:59:09.792"/>
</return>
<status status="PASS" starttime="20250214 14:59:09.781" endtime="20250214 14:59:09.792"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:09.792" endtime="20250214 14:59:09.792"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:09.792" endtime="20250214 14:59:09.792"/>
</branch>
<status status="PASS" starttime="20250214 14:59:09.781" endtime="20250214 14:59:09.792"/>
</if>
<msg timestamp="20250214 14:59:09.793" level="INFO">${upload_id} = 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910</msg>
<status status="PASS" starttime="20250214 14:59:09.265" endtime="20250214 14:59:09.793"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:59:09.793" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:59:09.793" endtime="20250214 14:59:09.793"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:09.794" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:59:09.794" endtime="20250214 14:59:09.794"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:09.798" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key empty_file_ozone-test-7872130224 --part-number 1 --body /tmp/part1 --upload-id 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:10.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:10.541" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.796" endtime="20250214 14:59:10.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:10.542" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:10.541" endtime="20250214 14:59:10.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:10.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:10.542" endtime="20250214 14:59:10.542"/>
</kw>
<msg timestamp="20250214 14:59:10.543" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.795" endtime="20250214 14:59:10.543"/>
</kw>
<msg timestamp="20250214 14:59:10.543" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:09.795" endtime="20250214 14:59:10.543"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:10.543" endtime="20250214 14:59:10.543"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:10.547" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:10.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:10.553" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.545" endtime="20250214 14:59:10.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:10.553" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.553" endtime="20250214 14:59:10.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:10.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:10.553" endtime="20250214 14:59:10.554"/>
</kw>
<status status="PASS" starttime="20250214 14:59:10.544" endtime="20250214 14:59:10.554"/>
</kw>
<msg timestamp="20250214 14:59:10.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:10.544" endtime="20250214 14:59:10.554"/>
</kw>
<msg timestamp="20250214 14:59:10.554" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.544" endtime="20250214 14:59:10.554"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:10.558" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:10.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:10.571" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.555" endtime="20250214 14:59:10.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:10.573" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.572" endtime="20250214 14:59:10.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:10.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:10.573" endtime="20250214 14:59:10.573"/>
</kw>
<status status="PASS" starttime="20250214 14:59:10.555" endtime="20250214 14:59:10.574"/>
</kw>
<msg timestamp="20250214 14:59:10.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:10.555" endtime="20250214 14:59:10.574"/>
</kw>
<msg timestamp="20250214 14:59:10.574" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:10.554" endtime="20250214 14:59:10.574"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:10.574" endtime="20250214 14:59:10.574"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:10.574" endtime="20250214 14:59:10.575"/>
</return>
<status status="PASS" starttime="20250214 14:59:10.543" endtime="20250214 14:59:10.575"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:10.575" endtime="20250214 14:59:10.575"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:10.575" endtime="20250214 14:59:10.575"/>
</branch>
<status status="PASS" starttime="20250214 14:59:10.543" endtime="20250214 14:59:10.575"/>
</if>
<msg timestamp="20250214 14:59:10.575" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:09.794" endtime="20250214 14:59:10.575"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:10.575" endtime="20250214 14:59:10.576"/>
</kw>
<status status="PASS" starttime="20250214 14:59:09.794" endtime="20250214 14:59:10.576"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:10.577" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:59:10.576" endtime="20250214 14:59:10.577"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:10.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key empty_file_ozone-test-7872130224 --part-number 2 --body /tmp/part2 --upload-id 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:11.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:11.204" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:10.578" endtime="20250214 14:59:11.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:11.205" level="INFO">{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:11.205" endtime="20250214 14:59:11.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:11.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:11.205" endtime="20250214 14:59:11.206"/>
</kw>
<msg timestamp="20250214 14:59:11.206" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:10.578" endtime="20250214 14:59:11.206"/>
</kw>
<msg timestamp="20250214 14:59:11.206" level="INFO">${result} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:10.577" endtime="20250214 14:59:11.206"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:11.207" endtime="20250214 14:59:11.207"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:11.210" level="INFO">Running command 'echo '{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:11.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:11.215" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.208" endtime="20250214 14:59:11.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:11.216" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.216" endtime="20250214 14:59:11.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:11.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:11.216" endtime="20250214 14:59:11.217"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.207" endtime="20250214 14:59:11.217"/>
</kw>
<msg timestamp="20250214 14:59:11.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:11.207" endtime="20250214 14:59:11.217"/>
</kw>
<msg timestamp="20250214 14:59:11.217" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.207" endtime="20250214 14:59:11.217"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:11.220" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:11.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:11.226" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.218" endtime="20250214 14:59:11.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:11.226" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.226" endtime="20250214 14:59:11.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:11.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:11.226" endtime="20250214 14:59:11.227"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.218" endtime="20250214 14:59:11.227"/>
</kw>
<msg timestamp="20250214 14:59:11.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:11.217" endtime="20250214 14:59:11.227"/>
</kw>
<msg timestamp="20250214 14:59:11.227" level="INFO">${md5sum} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:11.217" endtime="20250214 14:59:11.227"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:11.227" endtime="20250214 14:59:11.228"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:11.228" endtime="20250214 14:59:11.228"/>
</return>
<status status="PASS" starttime="20250214 14:59:11.206" endtime="20250214 14:59:11.228"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:11.228" endtime="20250214 14:59:11.228"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:11.228" endtime="20250214 14:59:11.228"/>
</branch>
<status status="PASS" starttime="20250214 14:59:11.206" endtime="20250214 14:59:11.228"/>
</if>
<msg timestamp="20250214 14:59:11.228" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:10.577" endtime="20250214 14:59:11.228"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:11.228" endtime="20250214 14:59:11.229"/>
</kw>
<status status="PASS" starttime="20250214 14:59:10.576" endtime="20250214 14:59:11.229"/>
</iter>
<status status="PASS" starttime="20250214 14:59:09.793" endtime="20250214 14:59:11.229"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:59:11.229" level="INFO">${parts} = {ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:11.229" endtime="20250214 14:59:11.229"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:59:11.229" endtime="20250214 14:59:11.229"/>
</return>
<msg timestamp="20250214 14:59:11.229" level="INFO">${parts} = {ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:09.793" endtime="20250214 14:59:11.229"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:11.233" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key empty_file_ozone-test-7872130224 --upload-id 6846c8aa-830d-41cc-9bc5-45067ba1650d-114002830931066910 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:11.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:11.733" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:11.231" endtime="20250214 14:59:11.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:11.733" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:11.733" endtime="20250214 14:59:11.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:11.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:11.734" endtime="20250214 14:59:11.734"/>
</kw>
<msg timestamp="20250214 14:59:11.734" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:11.230" endtime="20250214 14:59:11.734"/>
</kw>
<msg timestamp="20250214 14:59:11.734" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:11.230" endtime="20250214 14:59:11.734"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:11.735" endtime="20250214 14:59:11.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:11.735" endtime="20250214 14:59:11.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:11.735" endtime="20250214 14:59:11.736"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:11.739" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-7872130224",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:11.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:11.744" level="INFO">${output} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:11.737" endtime="20250214 14:59:11.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:11.745" level="INFO">"c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:11.744" endtime="20250214 14:59:11.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:11.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:11.745" endtime="20250214 14:59:11.745"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.736" endtime="20250214 14:59:11.745"/>
</kw>
<msg timestamp="20250214 14:59:11.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:11.736" endtime="20250214 14:59:11.746"/>
</kw>
<msg timestamp="20250214 14:59:11.746" level="INFO">${etag} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:11.736" endtime="20250214 14:59:11.746"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:11.746" endtime="20250214 14:59:11.746"/>
</return>
<status status="PASS" starttime="20250214 14:59:11.734" endtime="20250214 14:59:11.746"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:11.746" endtime="20250214 14:59:11.746"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:11.746" endtime="20250214 14:59:11.746"/>
</branch>
<status status="PASS" starttime="20250214 14:59:11.734" endtime="20250214 14:59:11.746"/>
</if>
<status status="PASS" starttime="20250214 14:59:11.229" endtime="20250214 14:59:11.746"/>
</kw>
<status status="PASS" starttime="20250214 14:59:09.264" endtime="20250214 14:59:11.746"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:11.748" level="INFO">${randStr} = 0589040633</msg>
<status status="PASS" starttime="20250214 14:59:11.747" endtime="20250214 14:59:11.748"/>
</kw>
<msg timestamp="20250214 14:59:11.748" level="INFO">${random} = ozone-test-0589040633</msg>
<status status="PASS" starttime="20250214 14:59:11.747" endtime="20250214 14:59:11.748"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:11.751" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key empty_file_ozone-test-7872130224 /tmp/verifyozone-test-0589040633 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:12.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.354" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:11.749" endtime="20250214 14:59:12.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.355" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:12 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:12 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.354" endtime="20250214 14:59:12.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.355" endtime="20250214 14:59:12.355"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.749" endtime="20250214 14:59:12.355"/>
</kw>
<msg timestamp="20250214 14:59:12.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:11.748" endtime="20250214 14:59:12.355"/>
</kw>
<msg timestamp="20250214 14:59:12.356" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:11.748" endtime="20250214 14:59:12.356"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.748" endtime="20250214 14:59:12.356"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:59:12.356" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:59:12.356" endtime="20250214 14:59:12.356"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.359" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-0589040633'.</msg>
<msg timestamp="20250214 14:59:12.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:12.357" endtime="20250214 14:59:12.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.369" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:12.369" endtime="20250214 14:59:12.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.370" endtime="20250214 14:59:12.370"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.357" endtime="20250214 14:59:12.370"/>
</kw>
<msg timestamp="20250214 14:59:12.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:12.357" endtime="20250214 14:59:12.370"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.356" endtime="20250214 14:59:12.370"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.374" level="INFO">Running command 'md5sum /tmp/originalozone-test-0589040633 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:12.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.388" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.371" endtime="20250214 14:59:12.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.389" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.389" endtime="20250214 14:59:12.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.389" endtime="20250214 14:59:12.390"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.371" endtime="20250214 14:59:12.390"/>
</kw>
<msg timestamp="20250214 14:59:12.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:12.371" endtime="20250214 14:59:12.390"/>
</kw>
<msg timestamp="20250214 14:59:12.390" level="INFO">${checksumbefore} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.371" endtime="20250214 14:59:12.390"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.393" level="INFO">Running command 'md5sum /tmp/verifyozone-test-0589040633 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:12.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.408" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.391" endtime="20250214 14:59:12.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.408" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.408" endtime="20250214 14:59:12.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.409" endtime="20250214 14:59:12.409"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.391" endtime="20250214 14:59:12.409"/>
</kw>
<msg timestamp="20250214 14:59:12.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:12.390" endtime="20250214 14:59:12.409"/>
</kw>
<msg timestamp="20250214 14:59:12.409" level="INFO">${checksumafter} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:12.390" endtime="20250214 14:59:12.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:12.409" endtime="20250214 14:59:12.410"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.370" endtime="20250214 14:59:12.410"/>
</kw>
<status status="PASS" starttime="20250214 14:59:11.746" endtime="20250214 14:59:12.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:08.705" endtime="20250214 14:59:12.410"/>
</test>
<test id="s1-s1-s8-t3" name="Test Multipart Upload" line="70">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:12.412" level="INFO">${randStr} = 6232161917</msg>
<status status="PASS" starttime="20250214 14:59:12.411" endtime="20250214 14:59:12.412"/>
</kw>
<msg timestamp="20250214 14:59:12.412" level="INFO">${random} = ozone-test-6232161917</msg>
<status status="PASS" starttime="20250214 14:59:12.411" endtime="20250214 14:59:12.412"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:12.412" level="INFO">${PREFIX} = ozone-test-6232161917</msg>
<status status="PASS" starttime="20250214 14:59:12.412" endtime="20250214 14:59:12.412"/>
</kw>
<status status="PASS" starttime="20250214 14:59:12.411" endtime="20250214 14:59:12.412"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6232161917/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:12.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.921" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.414" endtime="20250214 14:59:12.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.922" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.921" endtime="20250214 14:59:12.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.922" endtime="20250214 14:59:12.922"/>
</kw>
<msg timestamp="20250214 14:59:12.922" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.414" endtime="20250214 14:59:12.922"/>
</kw>
<msg timestamp="20250214 14:59:12.923" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.413" endtime="20250214 14:59:12.923"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:12.923" endtime="20250214 14:59:12.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:12.923" endtime="20250214 14:59:12.924"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.926" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:12.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:12.932" level="INFO">${output} = e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385</msg>
<status status="PASS" starttime="20250214 14:59:12.924" endtime="20250214 14:59:12.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:12.933" level="INFO">e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385</msg>
<status status="PASS" starttime="20250214 14:59:12.932" endtime="20250214 14:59:12.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:12.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:12.933" endtime="20250214 14:59:12.933"/>
</kw>
<msg timestamp="20250214 14:59:12.934" level="INFO">${upload_id} = e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385</msg>
<status status="PASS" starttime="20250214 14:59:12.924" endtime="20250214 14:59:12.934"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:12.934" endtime="20250214 14:59:12.934"/>
</return>
<status status="PASS" starttime="20250214 14:59:12.923" endtime="20250214 14:59:12.934"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:12.934" endtime="20250214 14:59:12.934"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:12.934" endtime="20250214 14:59:12.934"/>
</branch>
<status status="PASS" starttime="20250214 14:59:12.923" endtime="20250214 14:59:12.934"/>
</if>
<msg timestamp="20250214 14:59:12.934" level="INFO">${uploadID} = e2039f35-cdd4-4154-b904-279deae2d645-114002831137636385</msg>
<status status="PASS" starttime="20250214 14:59:12.412" endtime="20250214 14:59:12.934"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${nextUploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:12.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6232161917/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:13.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:13.426" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.936" endtime="20250214 14:59:13.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:13.427" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890"
}</msg>
<status status="PASS" starttime="20250214 14:59:13.426" endtime="20250214 14:59:13.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:13.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:13.427" endtime="20250214 14:59:13.427"/>
</kw>
<msg timestamp="20250214 14:59:13.428" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.935" endtime="20250214 14:59:13.428"/>
</kw>
<msg timestamp="20250214 14:59:13.428" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890"
}</msg>
<status status="PASS" starttime="20250214 14:59:12.935" endtime="20250214 14:59:13.428"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:13.428" endtime="20250214 14:59:13.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:13.429" endtime="20250214 14:59:13.429"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:13.432" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6232161917/multipartKey",
    "UploadId": "9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:13.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:13.437" level="INFO">${output} = 9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890</msg>
<status status="PASS" starttime="20250214 14:59:13.429" endtime="20250214 14:59:13.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:13.438" level="INFO">9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890</msg>
<status status="PASS" starttime="20250214 14:59:13.437" endtime="20250214 14:59:13.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:13.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:13.438" endtime="20250214 14:59:13.438"/>
</kw>
<msg timestamp="20250214 14:59:13.438" level="INFO">${upload_id} = 9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890</msg>
<status status="PASS" starttime="20250214 14:59:13.429" endtime="20250214 14:59:13.438"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:13.439" endtime="20250214 14:59:13.439"/>
</return>
<status status="PASS" starttime="20250214 14:59:13.428" endtime="20250214 14:59:13.439"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:13.439" endtime="20250214 14:59:13.439"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:13.439" endtime="20250214 14:59:13.439"/>
</branch>
<status status="PASS" starttime="20250214 14:59:13.428" endtime="20250214 14:59:13.439"/>
</if>
<msg timestamp="20250214 14:59:13.439" level="INFO">${nextUploadID} = 9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890</msg>
<status status="PASS" starttime="20250214 14:59:12.934" endtime="20250214 14:59:13.439"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250214 14:59:13.439" endtime="20250214 14:59:13.439"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:13.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6232161917/multipartKey --part-number 1 --body /tmp/part1 --upload-id 9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:14.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:14.334" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:13.441" endtime="20250214 14:59:14.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:14.335" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:14.334" endtime="20250214 14:59:14.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:14.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:14.335" endtime="20250214 14:59:14.336"/>
</kw>
<msg timestamp="20250214 14:59:14.336" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:13.441" endtime="20250214 14:59:14.336"/>
</kw>
<msg timestamp="20250214 14:59:14.336" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:13.440" endtime="20250214 14:59:14.336"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:14.337" endtime="20250214 14:59:14.337"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:14.344" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:14.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:14.353" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.340" endtime="20250214 14:59:14.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:14.355" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.354" endtime="20250214 14:59:14.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:14.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:14.355" endtime="20250214 14:59:14.355"/>
</kw>
<status status="PASS" starttime="20250214 14:59:14.339" endtime="20250214 14:59:14.355"/>
</kw>
<msg timestamp="20250214 14:59:14.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:14.339" endtime="20250214 14:59:14.359"/>
</kw>
<msg timestamp="20250214 14:59:14.359" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.337" endtime="20250214 14:59:14.359"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:14.366" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:14.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:14.399" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.361" endtime="20250214 14:59:14.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:14.401" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.400" endtime="20250214 14:59:14.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:14.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:14.402" endtime="20250214 14:59:14.403"/>
</kw>
<status status="PASS" starttime="20250214 14:59:14.361" endtime="20250214 14:59:14.404"/>
</kw>
<msg timestamp="20250214 14:59:14.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:14.360" endtime="20250214 14:59:14.404"/>
</kw>
<msg timestamp="20250214 14:59:14.404" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:14.359" endtime="20250214 14:59:14.404"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:14.404" endtime="20250214 14:59:14.405"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:14.405" endtime="20250214 14:59:14.406"/>
</return>
<status status="PASS" starttime="20250214 14:59:14.337" endtime="20250214 14:59:14.406"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:14.406" endtime="20250214 14:59:14.406"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:14.406" endtime="20250214 14:59:14.406"/>
</branch>
<status status="PASS" starttime="20250214 14:59:14.337" endtime="20250214 14:59:14.406"/>
</if>
<status status="PASS" starttime="20250214 14:59:13.440" endtime="20250214 14:59:14.406"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:14.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6232161917/multipartKey --part-number 1 --body /tmp/part1 --upload-id 9c077447-d4a0-41ff-af43-2e064b965529-114002831171321890 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:15.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:15.215" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:14.410" endtime="20250214 14:59:15.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:15.216" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.215" endtime="20250214 14:59:15.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:15.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:15.216" endtime="20250214 14:59:15.217"/>
</kw>
<msg timestamp="20250214 14:59:15.217" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:14.408" endtime="20250214 14:59:15.217"/>
</kw>
<msg timestamp="20250214 14:59:15.217" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:14.407" endtime="20250214 14:59:15.217"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:15.217" endtime="20250214 14:59:15.217"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:15.221" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:15.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:15.226" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.218" endtime="20250214 14:59:15.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:15.226" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.226" endtime="20250214 14:59:15.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:15.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:15.227" endtime="20250214 14:59:15.227"/>
</kw>
<status status="PASS" starttime="20250214 14:59:15.218" endtime="20250214 14:59:15.227"/>
</kw>
<msg timestamp="20250214 14:59:15.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:15.218" endtime="20250214 14:59:15.227"/>
</kw>
<msg timestamp="20250214 14:59:15.227" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.218" endtime="20250214 14:59:15.227"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:15.230" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:15.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:15.244" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.228" endtime="20250214 14:59:15.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:15.245" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.244" endtime="20250214 14:59:15.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:15.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:15.245" endtime="20250214 14:59:15.245"/>
</kw>
<status status="PASS" starttime="20250214 14:59:15.228" endtime="20250214 14:59:15.245"/>
</kw>
<msg timestamp="20250214 14:59:15.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:15.228" endtime="20250214 14:59:15.245"/>
</kw>
<msg timestamp="20250214 14:59:15.246" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.227" endtime="20250214 14:59:15.246"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:15.246" endtime="20250214 14:59:15.246"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:15.246" endtime="20250214 14:59:15.246"/>
</return>
<status status="PASS" starttime="20250214 14:59:15.217" endtime="20250214 14:59:15.246"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:15.246" endtime="20250214 14:59:15.246"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:15.246" endtime="20250214 14:59:15.246"/>
</branch>
<status status="PASS" starttime="20250214 14:59:15.217" endtime="20250214 14:59:15.246"/>
</if>
<status status="PASS" starttime="20250214 14:59:14.406" endtime="20250214 14:59:15.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:12.410" endtime="20250214 14:59:15.247"/>
</test>
<test id="s1-s1-s8-t4" name="Test Multipart Upload Complete" line="84">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:15.248" level="INFO">${randStr} = 6660284094</msg>
<status status="PASS" starttime="20250214 14:59:15.248" endtime="20250214 14:59:15.248"/>
</kw>
<msg timestamp="20250214 14:59:15.249" level="INFO">${random} = ozone-test-6660284094</msg>
<status status="PASS" starttime="20250214 14:59:15.248" endtime="20250214 14:59:15.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:15.249" level="INFO">${PREFIX} = ozone-test-6660284094</msg>
<status status="PASS" starttime="20250214 14:59:15.249" endtime="20250214 14:59:15.249"/>
</kw>
<status status="PASS" starttime="20250214 14:59:15.248" endtime="20250214 14:59:15.249"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>0</arg>
<arg>--metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:15.252" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6660284094/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:15.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:15.747" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "UploadId": "cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.250" endtime="20250214 14:59:15.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:15.748" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "UploadId": "cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.747" endtime="20250214 14:59:15.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:15.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:15.748" endtime="20250214 14:59:15.749"/>
</kw>
<msg timestamp="20250214 14:59:15.749" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "UploadId": "cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.250" endtime="20250214 14:59:15.749"/>
</kw>
<msg timestamp="20250214 14:59:15.749" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "UploadId": "cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.249" endtime="20250214 14:59:15.749"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:15.749" endtime="20250214 14:59:15.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:15.750" endtime="20250214 14:59:15.750"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:15.753" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "UploadId": "cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:15.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:15.758" level="INFO">${output} = cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269</msg>
<status status="PASS" starttime="20250214 14:59:15.750" endtime="20250214 14:59:15.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:15.758" level="INFO">cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269</msg>
<status status="PASS" starttime="20250214 14:59:15.758" endtime="20250214 14:59:15.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:15.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:15.759" endtime="20250214 14:59:15.759"/>
</kw>
<msg timestamp="20250214 14:59:15.759" level="INFO">${upload_id} = cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269</msg>
<status status="PASS" starttime="20250214 14:59:15.750" endtime="20250214 14:59:15.759"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:15.759" endtime="20250214 14:59:15.759"/>
</return>
<status status="PASS" starttime="20250214 14:59:15.749" endtime="20250214 14:59:15.759"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:15.760" endtime="20250214 14:59:15.760"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:15.760" endtime="20250214 14:59:15.760"/>
</branch>
<status status="PASS" starttime="20250214 14:59:15.749" endtime="20250214 14:59:15.760"/>
</if>
<msg timestamp="20250214 14:59:15.760" level="INFO">${uploadID} = cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269</msg>
<status status="PASS" starttime="20250214 14:59:15.249" endtime="20250214 14:59:15.760"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:15.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6660284094/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:16.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:16.423" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.761" endtime="20250214 14:59:16.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:16.424" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:16.424" endtime="20250214 14:59:16.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:16.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:16.424" endtime="20250214 14:59:16.425"/>
</kw>
<msg timestamp="20250214 14:59:16.425" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.761" endtime="20250214 14:59:16.425"/>
</kw>
<msg timestamp="20250214 14:59:16.425" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:15.760" endtime="20250214 14:59:16.425"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:16.426" endtime="20250214 14:59:16.426"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:16.429" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:16.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:16.434" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.427" endtime="20250214 14:59:16.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:16.435" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.435" endtime="20250214 14:59:16.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:16.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:16.435" endtime="20250214 14:59:16.436"/>
</kw>
<status status="PASS" starttime="20250214 14:59:16.426" endtime="20250214 14:59:16.436"/>
</kw>
<msg timestamp="20250214 14:59:16.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:16.426" endtime="20250214 14:59:16.436"/>
</kw>
<msg timestamp="20250214 14:59:16.436" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.426" endtime="20250214 14:59:16.436"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:16.439" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:16.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:16.453" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.437" endtime="20250214 14:59:16.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:16.453" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.453" endtime="20250214 14:59:16.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:16.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:16.454" endtime="20250214 14:59:16.454"/>
</kw>
<status status="PASS" starttime="20250214 14:59:16.437" endtime="20250214 14:59:16.455"/>
</kw>
<msg timestamp="20250214 14:59:16.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:16.437" endtime="20250214 14:59:16.455"/>
</kw>
<msg timestamp="20250214 14:59:16.455" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:16.436" endtime="20250214 14:59:16.455"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:16.455" endtime="20250214 14:59:16.455"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:16.455" endtime="20250214 14:59:16.455"/>
</return>
<status status="PASS" starttime="20250214 14:59:16.425" endtime="20250214 14:59:16.455"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:16.455" endtime="20250214 14:59:16.455"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:16.455" endtime="20250214 14:59:16.456"/>
</branch>
<status status="PASS" starttime="20250214 14:59:16.425" endtime="20250214 14:59:16.456"/>
</if>
<msg timestamp="20250214 14:59:16.456" level="INFO">${eTag1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:15.760" endtime="20250214 14:59:16.456"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:16.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6660284094/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:17.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:17.091" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:16.457" endtime="20250214 14:59:17.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:17.092" level="INFO">{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:17.092" endtime="20250214 14:59:17.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:17.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:17.093" endtime="20250214 14:59:17.093"/>
</kw>
<msg timestamp="20250214 14:59:17.093" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:16.457" endtime="20250214 14:59:17.093"/>
</kw>
<msg timestamp="20250214 14:59:17.093" level="INFO">${result} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:16.456" endtime="20250214 14:59:17.093"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:17.094" endtime="20250214 14:59:17.094"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:17.098" level="INFO">Running command 'echo '{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:17.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:17.104" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.095" endtime="20250214 14:59:17.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:17.105" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.105" endtime="20250214 14:59:17.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:17.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:17.105" endtime="20250214 14:59:17.106"/>
</kw>
<status status="PASS" starttime="20250214 14:59:17.095" endtime="20250214 14:59:17.106"/>
</kw>
<msg timestamp="20250214 14:59:17.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:17.095" endtime="20250214 14:59:17.106"/>
</kw>
<msg timestamp="20250214 14:59:17.106" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.094" endtime="20250214 14:59:17.106"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:17.109" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:17.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:17.115" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.107" endtime="20250214 14:59:17.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:17.116" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.116" endtime="20250214 14:59:17.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:17.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:17.116" endtime="20250214 14:59:17.117"/>
</kw>
<status status="PASS" starttime="20250214 14:59:17.107" endtime="20250214 14:59:17.117"/>
</kw>
<msg timestamp="20250214 14:59:17.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:17.107" endtime="20250214 14:59:17.117"/>
</kw>
<msg timestamp="20250214 14:59:17.117" level="INFO">${md5sum} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:17.106" endtime="20250214 14:59:17.117"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:17.117" endtime="20250214 14:59:17.117"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:17.117" endtime="20250214 14:59:17.118"/>
</return>
<status status="PASS" starttime="20250214 14:59:17.094" endtime="20250214 14:59:17.118"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:17.118" endtime="20250214 14:59:17.118"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:17.118" endtime="20250214 14:59:17.118"/>
</branch>
<status status="PASS" starttime="20250214 14:59:17.094" endtime="20250214 14:59:17.118"/>
</if>
<msg timestamp="20250214 14:59:17.118" level="INFO">${eTag2} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:16.456" endtime="20250214 14:59:17.118"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:17.121" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269 --bucket erasure --key ozone-test-6660284094/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:17.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:17.597" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:59:17.119" endtime="20250214 14:59:17.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:17.598" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:59:17.598" endtime="20250214 14:59:17.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:17.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:17.598" endtime="20250214 14:59:17.599"/>
</kw>
<msg timestamp="20250214 14:59:17.599" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:59:17.119" endtime="20250214 14:59:17.599"/>
</kw>
<msg timestamp="20250214 14:59:17.599" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:59:17.118" endtime="20250214 14:59:17.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:17.600" endtime="20250214 14:59:17.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:17.600" endtime="20250214 14:59:17.600"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${resultETag}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:17.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-6660284094/multipartKey1 --upload-id cbd01f80-a31f-45b0-9a1e-286a18b92263-114002831323103269 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:18.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:18.102" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:17.602" endtime="20250214 14:59:18.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:18.103" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:18.103" endtime="20250214 14:59:18.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:18.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:18.103" endtime="20250214 14:59:18.104"/>
</kw>
<msg timestamp="20250214 14:59:18.104" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:17.601" endtime="20250214 14:59:18.104"/>
</kw>
<msg timestamp="20250214 14:59:18.104" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:17.601" endtime="20250214 14:59:18.104"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:18.104" endtime="20250214 14:59:18.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:18.105" endtime="20250214 14:59:18.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:18.105" endtime="20250214 14:59:18.105"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:18.109" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6660284094/multipartKey1",
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:18.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:18.114" level="INFO">${output} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:18.106" endtime="20250214 14:59:18.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:18.115" level="INFO">"c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:18.114" endtime="20250214 14:59:18.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:18.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:18.115" endtime="20250214 14:59:18.115"/>
</kw>
<status status="PASS" starttime="20250214 14:59:18.106" endtime="20250214 14:59:18.115"/>
</kw>
<msg timestamp="20250214 14:59:18.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:18.106" endtime="20250214 14:59:18.115"/>
</kw>
<msg timestamp="20250214 14:59:18.116" level="INFO">${etag} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:18.106" endtime="20250214 14:59:18.116"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:18.116" endtime="20250214 14:59:18.116"/>
</return>
<status status="PASS" starttime="20250214 14:59:18.104" endtime="20250214 14:59:18.116"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:18.116" endtime="20250214 14:59:18.116"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:18.116" endtime="20250214 14:59:18.116"/>
</branch>
<status status="PASS" starttime="20250214 14:59:18.104" endtime="20250214 14:59:18.116"/>
</if>
<msg timestamp="20250214 14:59:18.116" level="INFO">${resultETag} = "c15aff8c9315886edaf3a3d6c361b3fa-2"</msg>
<status status="PASS" starttime="20250214 14:59:17.600" endtime="20250214 14:59:18.116"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:18.119" level="INFO">Running command 'echo -n 579169d123baa9a4e9feb61198aa73513d71118658d13abbf47949aa9d6e2646 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:18.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:18.124" level="INFO">${output} = c15aff8c9315886edaf3a3d6c361b3fa</msg>
<status status="PASS" starttime="20250214 14:59:18.117" endtime="20250214 14:59:18.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:18.125" level="INFO">c15aff8c9315886edaf3a3d6c361b3fa</msg>
<status status="PASS" starttime="20250214 14:59:18.124" endtime="20250214 14:59:18.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:18.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:18.125" endtime="20250214 14:59:18.125"/>
</kw>
<status status="PASS" starttime="20250214 14:59:18.117" endtime="20250214 14:59:18.125"/>
</kw>
<msg timestamp="20250214 14:59:18.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:18.117" endtime="20250214 14:59:18.126"/>
</kw>
<msg timestamp="20250214 14:59:18.126" level="INFO">${expectedResultETag} = c15aff8c9315886edaf3a3d6c361b3fa</msg>
<status status="PASS" starttime="20250214 14:59:18.116" endtime="20250214 14:59:18.126"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:18.126" endtime="20250214 14:59:18.126"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:18.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6660284094/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:18.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:18.604" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:59:18.128" endtime="20250214 14:59:18.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:18.605" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:18 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:18 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:18.605" endtime="20250214 14:59:18.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:18.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:18.605" endtime="20250214 14:59:18.606"/>
</kw>
<status status="PASS" starttime="20250214 14:59:18.127" endtime="20250214 14:59:18.606"/>
</kw>
<msg timestamp="20250214 14:59:18.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:18.127" endtime="20250214 14:59:18.606"/>
</kw>
<msg timestamp="20250214 14:59:18.606" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:59:18.127" endtime="20250214 14:59:18.606"/>
</kw>
<msg timestamp="20250214 14:59:18.606" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:59:18.126" endtime="20250214 14:59:18.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:18.607" endtime="20250214 14:59:18.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:18.607" endtime="20250214 14:59:18.607"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:18.610" level="INFO">Running command 'echo '{
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:18 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:18 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:18.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:18.615" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:18.608" endtime="20250214 14:59:18.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:18.616" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:18.615" endtime="20250214 14:59:18.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:18.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:18.616" endtime="20250214 14:59:18.616"/>
</kw>
<msg timestamp="20250214 14:59:18.616" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:59:18.607" endtime="20250214 14:59:18.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:18.616" endtime="20250214 14:59:18.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:18.620" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-6660284094/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:21.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:21.902" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6660284094/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:59:18.043Z",
 ...</msg>
<status status="PASS" starttime="20250214 14:59:18.618" endtime="20250214 14:59:21.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:21.903" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6660284094/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:59:18.043Z",
  "modificationTime" : "2025-02-14T14:59:18.043Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "requiredNodes" : 5,
    "minimumNodes" : 3,
    "replicationType" : "EC"
  },
  "metadata" : {
    "ETag" : "c15aff8c9315886edaf3a3d6c361b3fa-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600030,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 5,
    "localID" : 115816896921600031,
    "length" : 1047552,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 393,
  "file" : true
}</msg>
<status status="PASS" starttime="20250214 14:59:21.903" endtime="20250214 14:59:21.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:21.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:21.903" endtime="20250214 14:59:21.904"/>
</kw>
<status status="PASS" starttime="20250214 14:59:18.617" endtime="20250214 14:59:21.904"/>
</kw>
<msg timestamp="20250214 14:59:21.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:18.617" endtime="20250214 14:59:21.904"/>
</kw>
<msg timestamp="20250214 14:59:21.904" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6660284094/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:59:18.043Z",
 ...</msg>
<status status="PASS" starttime="20250214 14:59:18.617" endtime="20250214 14:59:21.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:21.904" endtime="20250214 14:59:21.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:21.905" endtime="20250214 14:59:21.905"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:21.905" endtime="20250214 14:59:21.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:21.905" endtime="20250214 14:59:21.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:21.906" endtime="20250214 14:59:21.906"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:21.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6660284094/multipartKey1 /tmp/ozone-test-6660284094-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:22.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.549" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:21.907" endtime="20250214 14:59:22.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.550" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:22 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:22 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:22.549" endtime="20250214 14:59:22.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.550" endtime="20250214 14:59:22.550"/>
</kw>
<status status="PASS" starttime="20250214 14:59:21.907" endtime="20250214 14:59:22.550"/>
</kw>
<msg timestamp="20250214 14:59:22.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:21.907" endtime="20250214 14:59:22.550"/>
</kw>
<msg timestamp="20250214 14:59:22.551" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:21.906" endtime="20250214 14:59:22.551"/>
</kw>
<msg timestamp="20250214 14:59:22.551" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:21.906" endtime="20250214 14:59:22.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:22.551" endtime="20250214 14:59:22.551"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.554" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:22 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:22 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:22.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.559" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:22.552" endtime="20250214 14:59:22.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.560" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:22.559" endtime="20250214 14:59:22.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.560" endtime="20250214 14:59:22.560"/>
</kw>
<msg timestamp="20250214 14:59:22.561" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:59:22.551" endtime="20250214 14:59:22.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:22.561" endtime="20250214 14:59:22.561"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.563" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 6291456,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:22 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:22 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:22.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.568" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:22.561" endtime="20250214 14:59:22.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.569" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:22.569" endtime="20250214 14:59:22.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.569" endtime="20250214 14:59:22.570"/>
</kw>
<msg timestamp="20250214 14:59:22.570" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:59:22.561" endtime="20250214 14:59:22.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:22.570" endtime="20250214 14:59:22.570"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.573" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-6660284094-multipartKey1'.</msg>
<msg timestamp="20250214 14:59:22.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:22.571" endtime="20250214 14:59:22.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.584" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:22.584" endtime="20250214 14:59:22.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.585" endtime="20250214 14:59:22.585"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.571" endtime="20250214 14:59:22.585"/>
</kw>
<msg timestamp="20250214 14:59:22.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:22.571" endtime="20250214 14:59:22.585"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.570" endtime="20250214 14:59:22.585"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.590" level="INFO">Running command 'md5sum /tmp/ozone-test-6660284094-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:22.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.605" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.587" endtime="20250214 14:59:22.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.605" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.605" endtime="20250214 14:59:22.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.606" endtime="20250214 14:59:22.606"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.587" endtime="20250214 14:59:22.606"/>
</kw>
<msg timestamp="20250214 14:59:22.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:22.586" endtime="20250214 14:59:22.606"/>
</kw>
<msg timestamp="20250214 14:59:22.606" level="INFO">${checksumbefore} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.586" endtime="20250214 14:59:22.606"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.609" level="INFO">Running command 'md5sum /tmp/ozone-test-6660284094-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:22.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:22.624" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.607" endtime="20250214 14:59:22.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:22.625" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.625" endtime="20250214 14:59:22.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:22.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:22.625" endtime="20250214 14:59:22.625"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.607" endtime="20250214 14:59:22.626"/>
</kw>
<msg timestamp="20250214 14:59:22.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:22.607" endtime="20250214 14:59:22.626"/>
</kw>
<msg timestamp="20250214 14:59:22.626" level="INFO">${checksumafter} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:22.607" endtime="20250214 14:59:22.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:22.626" endtime="20250214 14:59:22.626"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.586" endtime="20250214 14:59:22.626"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:22.630" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6660284094/multipartKey1 --part-number 1 /tmp/ozone-test-6660284094-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.231" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:22.628" endtime="20250214 14:59:23.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.232" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:23 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:23.232" endtime="20250214 14:59:23.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.232" endtime="20250214 14:59:23.233"/>
</kw>
<status status="PASS" starttime="20250214 14:59:22.628" endtime="20250214 14:59:23.233"/>
</kw>
<msg timestamp="20250214 14:59:23.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:22.627" endtime="20250214 14:59:23.233"/>
</kw>
<msg timestamp="20250214 14:59:23.233" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:22.627" endtime="20250214 14:59:23.233"/>
</kw>
<msg timestamp="20250214 14:59:23.233" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:22.626" endtime="20250214 14:59:23.233"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.237" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.251" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.235" endtime="20250214 14:59:23.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.252" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.251" endtime="20250214 14:59:23.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.252" endtime="20250214 14:59:23.253"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.234" endtime="20250214 14:59:23.253"/>
</kw>
<msg timestamp="20250214 14:59:23.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:23.234" endtime="20250214 14:59:23.253"/>
</kw>
<msg timestamp="20250214 14:59:23.253" level="INFO">${checksumbefore} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.234" endtime="20250214 14:59:23.253"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.257" level="INFO">Running command 'md5sum /tmp/ozone-test-6660284094-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.270" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.254" endtime="20250214 14:59:23.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.271" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.271" endtime="20250214 14:59:23.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.271" endtime="20250214 14:59:23.272"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.254" endtime="20250214 14:59:23.272"/>
</kw>
<msg timestamp="20250214 14:59:23.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:23.254" endtime="20250214 14:59:23.272"/>
</kw>
<msg timestamp="20250214 14:59:23.272" level="INFO">${checksumafter} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:23.253" endtime="20250214 14:59:23.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:23.273" endtime="20250214 14:59:23.273"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.234" endtime="20250214 14:59:23.273"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.276" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:23 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.282" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:23.274" endtime="20250214 14:59:23.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.283" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:23.282" endtime="20250214 14:59:23.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.283" endtime="20250214 14:59:23.283"/>
</kw>
<msg timestamp="20250214 14:59:23.283" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:59:23.273" endtime="20250214 14:59:23.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:23.283" endtime="20250214 14:59:23.284"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.286" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:23 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.291" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:23.284" endtime="20250214 14:59:23.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.292" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:23.291" endtime="20250214 14:59:23.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.292" endtime="20250214 14:59:23.292"/>
</kw>
<msg timestamp="20250214 14:59:23.292" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:59:23.284" endtime="20250214 14:59:23.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:23.293" endtime="20250214 14:59:23.293"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.297" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6660284094/multipartKey1 --part-number 2 /tmp/ozone-test-6660284094-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.777" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 1047552,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:23.295" endtime="20250214 14:59:23.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.778" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 1047552,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:23 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:23.777" endtime="20250214 14:59:23.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.778" endtime="20250214 14:59:23.778"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.295" endtime="20250214 14:59:23.778"/>
</kw>
<msg timestamp="20250214 14:59:23.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:23.294" endtime="20250214 14:59:23.778"/>
</kw>
<msg timestamp="20250214 14:59:23.779" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 1047552,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:23.294" endtime="20250214 14:59:23.779"/>
</kw>
<msg timestamp="20250214 14:59:23.779" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:18 GMT",
    "ContentLength": 1047552,
    "ETag": "\"c15aff8c9315886edaf3a3d6c361b3fa-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:23.293" endtime="20250214 14:59:23.779"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.782" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.788" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.780" endtime="20250214 14:59:23.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.789" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.788" endtime="20250214 14:59:23.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.789" endtime="20250214 14:59:23.789"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.780" endtime="20250214 14:59:23.790"/>
</kw>
<msg timestamp="20250214 14:59:23.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:23.780" endtime="20250214 14:59:23.790"/>
</kw>
<msg timestamp="20250214 14:59:23.790" level="INFO">${checksumbefore} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.779" endtime="20250214 14:59:23.790"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.793" level="INFO">Running command 'md5sum /tmp/ozone-test-6660284094-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:23.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:23.798" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.791" endtime="20250214 14:59:23.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:23.799" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.798" endtime="20250214 14:59:23.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:23.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:23.799" endtime="20250214 14:59:23.799"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.791" endtime="20250214 14:59:23.800"/>
</kw>
<msg timestamp="20250214 14:59:23.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:23.790" endtime="20250214 14:59:23.800"/>
</kw>
<msg timestamp="20250214 14:59:23.800" level="INFO">${checksumafter} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:23.790" endtime="20250214 14:59:23.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:23.800" endtime="20250214 14:59:23.800"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.779" endtime="20250214 14:59:23.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:15.247" endtime="20250214 14:59:23.800"/>
</test>
<test id="s1-s1-s8-t5" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="140">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:23.802" level="INFO">${randStr} = 8669863608</msg>
<status status="PASS" starttime="20250214 14:59:23.802" endtime="20250214 14:59:23.802"/>
</kw>
<msg timestamp="20250214 14:59:23.802" level="INFO">${random} = ozone-test-8669863608</msg>
<status status="PASS" starttime="20250214 14:59:23.802" endtime="20250214 14:59:23.802"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:23.803" level="INFO">${PREFIX} = ozone-test-8669863608</msg>
<status status="PASS" starttime="20250214 14:59:23.802" endtime="20250214 14:59:23.803"/>
</kw>
<status status="PASS" starttime="20250214 14:59:23.801" endtime="20250214 14:59:23.803"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:23.805" level="INFO">${custom_metadata_value} = OY2KxSvCgf98yJRvyR1Bh7T5tekWoKRHPMTNpapJeua79wbxt7CsS11CCRKY5gNvNXHV2qMH6EAKoI2ugQ5OkYaKh8tE80iUxbUmnH8lievZ7oyobhLYDlNVMM8JQhyNwUWXnsGl9EMAE0KlYX5rlDIpWIcQyYYes3LMW3TQUEg9WwhSwUkmKPo5mnCwtHbuL8R4dQ1C...</msg>
<status status="PASS" starttime="20250214 14:59:23.803" endtime="20250214 14:59:23.805"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/mpuWithLargeMetadata</arg>
<arg>255</arg>
<arg>--metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:23.808" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8669863608/mpuWithLargeMetadata --metadata="custom-key1=OY2KxSvCgf98yJRvyR1Bh7T5tekWoKRHPMTNpapJeua79wbxt7CsS11CCRKY5gNvNXHV2qMH6EAKoI2ugQ5OkYaKh8tE80iUxbUmnH8lievZ7oyobhLYDlNVMM8JQhyNwUWXnsGl9EMAE0KlYX5rlDIpWIcQyYYes3LMW3TQUEg9WwhSwUkmKPo5mnCwtHbuL8R4dQ1C78ndbc0florK5X3v31SQ9nkirjsB4ge6gd8fVn2B15ZFdcMHnZT76SYrFrDaJfxsobs6sIvLcaFxTBY4lAjD14fZKWQ3KiNp5J9v0Kpz2vnTLiTMqRhBZ7F1FxPfQDvSf4InOGAMCAgqaVewnSWDpylaGLjOVuCQXhXMaOMakUObc3Tvs8WTOmOsYZa2AEqrH61Xh4H3nV6aMepqpIaiclQ0acxC4T5sYAY5Ew6a2Pap3Xb1eyrsdmJSGirZH4LLVdiCZZuW74WK2DISO8ZrSPDtA4m4ptQInnxlgsQltv5sTr4saxeiea5fnk2Pv6RnS7HGtTGjQ1nwzg4piPMXMRlvjUx8WCbgJe2YZMjYU5p3nDVJIA6P7iSxNwiclklZfXz4pNPU49PEwYI0W6nnavXYsQoCn8okZCLtXLnYaydBROzeuvcV6tepdhe7Fk51LVRIK83psLXECv9uDwiB9Sgmh2ZmsVFehxR9JKzQd0c47HQAPWmCQ5iO4Z4dTDSQqT5YSQrIUl8mT3tR4acxLxJMgHcGQg6gIDBSrVK2928EuD7445iHg2TfWxPoTcgbDenfzamgBUNAuIJFVegKVDU0gxE8VBsP9vEFqqZbRuLSdYLEpuTwh4KmZTTCMqZvP6rVv3JOquNAeaoveftkH0SMCRF5q5j9ezIx005KGY8aS5A383u0HARjmQKQRBBTksUOxr6OjpGLz85Gdy2Jsaxkf6KBStuAUc1rPF1zXzSX5cCvfwPK2PWlEVySPAvjk79R9FozgzPXwNyRUXlUpPnP1rMBS7ufc9NeH04KB0PvIwk072CmcIUSgczBELe57OSMNoEevxVJi6R6ZV192nqrWalfTDgKmv1N90xH54dQcDjgBSqkfDP1jvyLvbLZVXZ3OcOBLxjoVuNZYvTjfFqo0N1mpIVOZyJ20aMj8V7rJQg0ZDREoY3GDpMoG2cFYfDGSZWQbHfugIlEZ2BJcfWi8avggspteM3f0fsZneub9KA0NUW91GxOGlmDTI9Vin9I0CwBaAg2qi25G8zduZumqYuQV7NkmAConlu4gCSEFA4leS232FjuOltBAUAIxFoRLrBIxjUSFScihqDur8LSKr2doDwUNP0KreEeRjsXTtlfgYiSRFuClBKAPdKNq0xHkw3IhxDp4o2sFVx4sKYRfsbWeXqE6edVGXbDwgddEfYqFwFBI1zLkuRecLx9c9rIvnfO7rOuiupiOQCWW2rB39CeqoIChX5ZxqjkIaZeINx9rQAzZS99bCGqzcIBeJ4vRliSYWV3SpFTKYh33xWLIfMBB0BFHjQ0pzsGsOsj9uCgnHGeaPvFnZN7zkudw2vGUzY0WztiUAvzQt8OU5tRkIFOu9D1Z05qKVK3hBalne1VEU6XHknupW2QiXGbBVR5FQNmKNyPfKB0d8INVLH15MeKu2SrDWX1ts5KUoLzxqUS0nMv5uOxYPfqWYYIkrqpMdzapk1CKwHDIHcEOxyyDz5YBfeQxzNFETlmTh3flNdmsKzpILDPqyPH55qi8T2ooduA5K3qcrvCXdFzvuBknoXYypF9FgYIKVYlff4i5Wssup4dtqoKgaKr6aOfRe20weuviAfRs2Zudj529f6GWS0KSE5fhEx3xoKw0rGGEkyf4OrlkhWi1VpMVmMnZ5LQrIOibDvm9LPA9RscJQZFSYJuMUQQZb1ROs0zwYwAZSMdwQ34REmZoPdTIDjnsbCkM1KvZd3a5lznjNTH9s2hajXYsYtXIjHTapCYXALlzmdKXJNXGgx4zBtRMBGDbHqbAlismrTr1n44yoAW08emUCguXuYghdtEuood13V7sbhckPXN9Pfjgw28A8k29GTvIrxdTzfuEpgH6EhKif22L4mlMqlc664aTvXN7cxkqWHGmCc9MLoH8FIGK9UCK99E8iGDTD6zCeQNpmZUGllwILGL4tMqS5scoTYzQFelzYNa5FKJFANpF7LljaLp9a1n9xtPVS8ms7Y3No1KQmyU0SDJA6ulb5PMj3jTrR4cBWLFBQdjh14NrjqBKJ6ZEOWsayskB74xmtiusYOUIwPWYnHDdyVRuswURb3UoajbNrItnPWZ6Y9xWqUI4f4gUtFvGbD5JdFEExb9cwoRiGcCDlbJTrZLyxNyLsNjbuIjdAbkLn2cG19bihTcd7VI1gcwKmz2ssGkAom473GBhZcQxP78Z2AtcziJ3YeciWeg5r6LTOWqpLCi6JbRXl7eeZVz9RDTHmxXSKtb4oPzssHEDbTqDdvsYjVlTBaJgMftOq8cnTgZi5VlwIJN0TdZeejbDJZuLzHylt4PFn6QIODMQgnWdGx8d7GTi7YXfwJCtQZ6kyvsHWCt8PgqFZXRpOevYHHQKxbLZ63ntEEX60Z1XMxrQa5UPlPA6gv8n9dqmrK2L3m1hNxgyCUvV4JbNteLfXyGyVDtINdyIHMr81IlqwXDH1KReYBaCcwLngyzyHYP0jFtxCuquvNWQHRtn8FzxmC0nA9jkl0On86UmmXlNWuhXD1iYAMFghCFq6suftfEdTOrlD8fuWoMpQZTthHow9Lkflcm4yUeGrM29TTt1iWXNyuC0VF8dgfZPgQSDBEZf2YqqLasG8x1SfjQfOFQdjkzyZK0wUafJ2gjGJOscjaooijRLPjw6xwKwDO6w9JP8TG2rHd4m1Lrmy3JejrXS3dDZUWnydIzWDpohlBoRj9WLRBFYjuaiaGkG6BebqjGw8wSaLmz5QKGA8nQoDWSCRjSUFZikzIBT0BGArvqMvpGc46Kvrzy38dGoKKhQVSW" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:24.299" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:24.299" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:59:23.806" endtime="20250214 14:59:24.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:24.300" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:59:24.299" endtime="20250214 14:59:24.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:24.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:24.300" endtime="20250214 14:59:24.300"/>
</kw>
<msg timestamp="20250214 14:59:24.301" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:59:23.806" endtime="20250214 14:59:24.301"/>
</kw>
<msg timestamp="20250214 14:59:24.301" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:59:23.805" endtime="20250214 14:59:24.301"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:24.301" endtime="20250214 14:59:24.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:24.301" endtime="20250214 14:59:24.301"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.302"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="NOT RUN" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.302"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:24.301" endtime="20250214 14:59:24.302"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.302"/>
</return>
<status status="PASS" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.302"/>
</branch>
<status status="PASS" starttime="20250214 14:59:24.301" endtime="20250214 14:59:24.302"/>
</if>
<msg timestamp="20250214 14:59:24.302" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:59:23.805" endtime="20250214 14:59:24.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.302"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:24.302" endtime="20250214 14:59:24.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:23.801" endtime="20250214 14:59:24.303"/>
</test>
<test id="s1-s1-s8-t6" name="Test Multipart Upload Complete Entity too small" line="146">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:24.305" level="INFO">${randStr} = 5741758232</msg>
<status status="PASS" starttime="20250214 14:59:24.304" endtime="20250214 14:59:24.305"/>
</kw>
<msg timestamp="20250214 14:59:24.305" level="INFO">${random} = ozone-test-5741758232</msg>
<status status="PASS" starttime="20250214 14:59:24.304" endtime="20250214 14:59:24.305"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:24.305" level="INFO">${PREFIX} = ozone-test-5741758232</msg>
<status status="PASS" starttime="20250214 14:59:24.305" endtime="20250214 14:59:24.305"/>
</kw>
<status status="PASS" starttime="20250214 14:59:24.304" endtime="20250214 14:59:24.305"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:24.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5741758232/multipartKey2  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:24.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:24.806" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5741758232/multipartKey2",
    "UploadId": "736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.307" endtime="20250214 14:59:24.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:24.807" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5741758232/multipartKey2",
    "UploadId": "736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.806" endtime="20250214 14:59:24.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:24.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:24.807" endtime="20250214 14:59:24.807"/>
</kw>
<msg timestamp="20250214 14:59:24.807" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5741758232/multipartKey2",
    "UploadId": "736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.306" endtime="20250214 14:59:24.807"/>
</kw>
<msg timestamp="20250214 14:59:24.808" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5741758232/multipartKey2",
    "UploadId": "736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.306" endtime="20250214 14:59:24.808"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:24.808" endtime="20250214 14:59:24.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:24.808" endtime="20250214 14:59:24.809"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:24.811" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5741758232/multipartKey2",
    "UploadId": "736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:24.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:24.816" level="INFO">${output} = 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608</msg>
<status status="PASS" starttime="20250214 14:59:24.809" endtime="20250214 14:59:24.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:24.817" level="INFO">736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608</msg>
<status status="PASS" starttime="20250214 14:59:24.817" endtime="20250214 14:59:24.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:24.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:24.817" endtime="20250214 14:59:24.818"/>
</kw>
<msg timestamp="20250214 14:59:24.818" level="INFO">${upload_id} = 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608</msg>
<status status="PASS" starttime="20250214 14:59:24.809" endtime="20250214 14:59:24.818"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:24.818" endtime="20250214 14:59:24.818"/>
</return>
<status status="PASS" starttime="20250214 14:59:24.808" endtime="20250214 14:59:24.818"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:24.818" endtime="20250214 14:59:24.818"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:24.818" endtime="20250214 14:59:24.818"/>
</branch>
<status status="PASS" starttime="20250214 14:59:24.808" endtime="20250214 14:59:24.818"/>
</if>
<msg timestamp="20250214 14:59:24.818" level="INFO">${uploadID} = 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608</msg>
<status status="PASS" starttime="20250214 14:59:24.305" endtime="20250214 14:59:24.818"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>/tmp/10kb</arg>
<arg>/tmp/10kb</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:59:24.819" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:59:24.819" endtime="20250214 14:59:24.819"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:24.820" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:59:24.820" endtime="20250214 14:59:24.820"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:24.823" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5741758232/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.355" level="INFO">${output} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.821" endtime="20250214 14:59:25.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.356" level="INFO">{
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:25.356" endtime="20250214 14:59:25.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.357" endtime="20250214 14:59:25.357"/>
</kw>
<msg timestamp="20250214 14:59:25.357" level="INFO">${output} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.821" endtime="20250214 14:59:25.357"/>
</kw>
<msg timestamp="20250214 14:59:25.357" level="INFO">${result} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:24.821" endtime="20250214 14:59:25.357"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:25.358" endtime="20250214 14:59:25.358"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.361" level="INFO">Running command 'echo '{
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.366" level="INFO">${output} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.359" endtime="20250214 14:59:25.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.367" level="INFO">e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.366" endtime="20250214 14:59:25.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.367" endtime="20250214 14:59:25.367"/>
</kw>
<status status="PASS" starttime="20250214 14:59:25.359" endtime="20250214 14:59:25.367"/>
</kw>
<msg timestamp="20250214 14:59:25.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:25.358" endtime="20250214 14:59:25.367"/>
</kw>
<msg timestamp="20250214 14:59:25.368" level="INFO">${etag} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.358" endtime="20250214 14:59:25.368"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.371" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.375" level="INFO">${output} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.369" endtime="20250214 14:59:25.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.376" level="INFO">e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.376" endtime="20250214 14:59:25.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.376" endtime="20250214 14:59:25.377"/>
</kw>
<status status="PASS" starttime="20250214 14:59:25.368" endtime="20250214 14:59:25.377"/>
</kw>
<msg timestamp="20250214 14:59:25.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:25.368" endtime="20250214 14:59:25.377"/>
</kw>
<msg timestamp="20250214 14:59:25.377" level="INFO">${md5sum} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.368" endtime="20250214 14:59:25.377"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:25.377" endtime="20250214 14:59:25.377"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:25.377" endtime="20250214 14:59:25.378"/>
</return>
<status status="PASS" starttime="20250214 14:59:25.357" endtime="20250214 14:59:25.378"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:25.378" endtime="20250214 14:59:25.378"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:25.378" endtime="20250214 14:59:25.378"/>
</branch>
<status status="PASS" starttime="20250214 14:59:25.357" endtime="20250214 14:59:25.378"/>
</if>
<msg timestamp="20250214 14:59:25.378" level="INFO">${etag} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:24.820" endtime="20250214 14:59:25.378"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:25.378" endtime="20250214 14:59:25.378"/>
</kw>
<status status="PASS" starttime="20250214 14:59:24.819" endtime="20250214 14:59:25.378"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:59:25.379" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:59:25.379" endtime="20250214 14:59:25.379"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.383" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5741758232/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.931" level="INFO">${output} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:25.381" endtime="20250214 14:59:25.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.932" level="INFO">{
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:25.931" endtime="20250214 14:59:25.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.932" endtime="20250214 14:59:25.932"/>
</kw>
<msg timestamp="20250214 14:59:25.932" level="INFO">${output} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:25.380" endtime="20250214 14:59:25.932"/>
</kw>
<msg timestamp="20250214 14:59:25.932" level="INFO">${result} = {
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}</msg>
<status status="PASS" starttime="20250214 14:59:25.380" endtime="20250214 14:59:25.932"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:25.933" endtime="20250214 14:59:25.933"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.936" level="INFO">Running command 'echo '{
    "ETag": "e23e54766f57662a5e6ac6a8f8cd92ba"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.941" level="INFO">${output} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.934" endtime="20250214 14:59:25.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.942" level="INFO">e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.942" endtime="20250214 14:59:25.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.942" endtime="20250214 14:59:25.943"/>
</kw>
<status status="PASS" starttime="20250214 14:59:25.934" endtime="20250214 14:59:25.943"/>
</kw>
<msg timestamp="20250214 14:59:25.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:25.933" endtime="20250214 14:59:25.943"/>
</kw>
<msg timestamp="20250214 14:59:25.943" level="INFO">${etag} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.933" endtime="20250214 14:59:25.943"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.946" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:25.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:25.951" level="INFO">${output} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.944" endtime="20250214 14:59:25.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:25.951" level="INFO">e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.951" endtime="20250214 14:59:25.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:25.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:25.952" endtime="20250214 14:59:25.952"/>
</kw>
<status status="PASS" starttime="20250214 14:59:25.944" endtime="20250214 14:59:25.952"/>
</kw>
<msg timestamp="20250214 14:59:25.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:25.943" endtime="20250214 14:59:25.952"/>
</kw>
<msg timestamp="20250214 14:59:25.952" level="INFO">${md5sum} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.943" endtime="20250214 14:59:25.952"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:25.952" endtime="20250214 14:59:25.953"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:25.953" endtime="20250214 14:59:25.953"/>
</return>
<status status="PASS" starttime="20250214 14:59:25.932" endtime="20250214 14:59:25.953"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:25.953" endtime="20250214 14:59:25.953"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:25.953" endtime="20250214 14:59:25.953"/>
</branch>
<status status="PASS" starttime="20250214 14:59:25.932" endtime="20250214 14:59:25.953"/>
</if>
<msg timestamp="20250214 14:59:25.953" level="INFO">${etag} = e23e54766f57662a5e6ac6a8f8cd92ba</msg>
<status status="PASS" starttime="20250214 14:59:25.379" endtime="20250214 14:59:25.953"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:59:25.953" endtime="20250214 14:59:25.954"/>
</kw>
<status status="PASS" starttime="20250214 14:59:25.379" endtime="20250214 14:59:25.954"/>
</iter>
<status status="PASS" starttime="20250214 14:59:24.819" endtime="20250214 14:59:25.954"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:59:25.954" level="INFO">${parts} = {ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=1},{ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:25.954" endtime="20250214 14:59:25.954"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:59:25.954" endtime="20250214 14:59:25.954"/>
</return>
<msg timestamp="20250214 14:59:25.955" level="INFO">${parts} = {ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=1},{ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:59:24.819" endtime="20250214 14:59:25.955"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>${parts}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:25.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-5741758232/multipartKey2 --upload-id 736cdb6a-8a22-451d-817e-fcde2d8e75e0-114002831916269608 --multipart-upload 'Parts=[{ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=1},{ETag=e23e54766f57662a5e6ac6a8f8cd92ba,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:26.435" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:26.435" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:59:25.956" endtime="20250214 14:59:26.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:26.436" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20250214 14:59:26.435" endtime="20250214 14:59:26.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:26.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:26.436" endtime="20250214 14:59:26.436"/>
</kw>
<msg timestamp="20250214 14:59:26.436" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:59:25.956" endtime="20250214 14:59:26.436"/>
</kw>
<msg timestamp="20250214 14:59:26.437" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:59:25.955" endtime="20250214 14:59:26.437"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.437"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.437"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.437"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.438"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:26.438" endtime="20250214 14:59:26.438"/>
</return>
<status status="PASS" starttime="20250214 14:59:26.438" endtime="20250214 14:59:26.438"/>
</branch>
<status status="PASS" starttime="20250214 14:59:26.437" endtime="20250214 14:59:26.438"/>
</if>
<msg timestamp="20250214 14:59:26.438" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:59:25.955" endtime="20250214 14:59:26.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:26.438" endtime="20250214 14:59:26.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:24.303" endtime="20250214 14:59:26.439"/>
</test>
<test id="s1-s1-s8-t7" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="153">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:26.441" level="INFO">${randStr} = 3488854329</msg>
<status status="PASS" starttime="20250214 14:59:26.440" endtime="20250214 14:59:26.441"/>
</kw>
<msg timestamp="20250214 14:59:26.441" level="INFO">${random} = ozone-test-3488854329</msg>
<status status="PASS" starttime="20250214 14:59:26.440" endtime="20250214 14:59:26.441"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:26.441" level="INFO">${PREFIX} = ozone-test-3488854329</msg>
<status status="PASS" starttime="20250214 14:59:26.441" endtime="20250214 14:59:26.441"/>
</kw>
<status status="PASS" starttime="20250214 14:59:26.440" endtime="20250214 14:59:26.441"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:26.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:26.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:26.946" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "UploadId": "217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187"
}</msg>
<status status="PASS" starttime="20250214 14:59:26.443" endtime="20250214 14:59:26.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:26.947" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "UploadId": "217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187"
}</msg>
<status status="PASS" starttime="20250214 14:59:26.947" endtime="20250214 14:59:26.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:26.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:26.947" endtime="20250214 14:59:26.948"/>
</kw>
<msg timestamp="20250214 14:59:26.948" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "UploadId": "217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187"
}</msg>
<status status="PASS" starttime="20250214 14:59:26.443" endtime="20250214 14:59:26.948"/>
</kw>
<msg timestamp="20250214 14:59:26.948" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "UploadId": "217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187"
}</msg>
<status status="PASS" starttime="20250214 14:59:26.442" endtime="20250214 14:59:26.948"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:26.948" endtime="20250214 14:59:26.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:26.949" endtime="20250214 14:59:26.949"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:26.952" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "UploadId": "217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:26.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:26.957" level="INFO">${output} = 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187</msg>
<status status="PASS" starttime="20250214 14:59:26.949" endtime="20250214 14:59:26.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:26.958" level="INFO">217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187</msg>
<status status="PASS" starttime="20250214 14:59:26.957" endtime="20250214 14:59:26.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:26.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:26.958" endtime="20250214 14:59:26.958"/>
</kw>
<msg timestamp="20250214 14:59:26.958" level="INFO">${upload_id} = 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187</msg>
<status status="PASS" starttime="20250214 14:59:26.949" endtime="20250214 14:59:26.958"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:26.958" endtime="20250214 14:59:26.958"/>
</return>
<status status="PASS" starttime="20250214 14:59:26.948" endtime="20250214 14:59:26.959"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:26.959" endtime="20250214 14:59:26.959"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:26.959" endtime="20250214 14:59:26.959"/>
</branch>
<status status="PASS" starttime="20250214 14:59:26.948" endtime="20250214 14:59:26.959"/>
</if>
<msg timestamp="20250214 14:59:26.959" level="INFO">${uploadID} = 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187</msg>
<status status="PASS" starttime="20250214 14:59:26.441" endtime="20250214 14:59:26.959"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:26.962" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:27.443" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:27.443" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:26.960" endtime="20250214 14:59:27.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:27.444" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:59:27.443" endtime="20250214 14:59:27.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:27.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:27.444" endtime="20250214 14:59:27.444"/>
</kw>
<msg timestamp="20250214 14:59:27.445" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:26.960" endtime="20250214 14:59:27.445"/>
</kw>
<msg timestamp="20250214 14:59:27.445" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:26.959" endtime="20250214 14:59:27.445"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.445"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.445"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:27.446" endtime="20250214 14:59:27.446"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.446"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:27.446" endtime="20250214 14:59:27.446"/>
</return>
<status status="PASS" starttime="20250214 14:59:27.446" endtime="20250214 14:59:27.446"/>
</branch>
<status status="PASS" starttime="20250214 14:59:27.445" endtime="20250214 14:59:27.446"/>
</if>
<msg timestamp="20250214 14:59:27.446" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:26.959" endtime="20250214 14:59:27.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:27.446" endtime="20250214 14:59:27.446"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:27.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:27.925" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:27.925" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:27.448" endtime="20250214 14:59:27.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:27.926" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:59:27.925" endtime="20250214 14:59:27.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:27.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:27.926" endtime="20250214 14:59:27.926"/>
</kw>
<msg timestamp="20250214 14:59:27.927" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:27.447" endtime="20250214 14:59:27.927"/>
</kw>
<msg timestamp="20250214 14:59:27.927" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:27.447" endtime="20250214 14:59:27.927"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.927" endtime="20250214 14:59:27.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.927" endtime="20250214 14:59:27.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:27.927" endtime="20250214 14:59:27.927"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:27.928" endtime="20250214 14:59:27.928"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:27.928" endtime="20250214 14:59:27.928"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:27.927" endtime="20250214 14:59:27.928"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:27.928" endtime="20250214 14:59:27.928"/>
</return>
<status status="PASS" starttime="20250214 14:59:27.928" endtime="20250214 14:59:27.928"/>
</branch>
<status status="PASS" starttime="20250214 14:59:27.927" endtime="20250214 14:59:27.928"/>
</if>
<msg timestamp="20250214 14:59:27.928" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:27.446" endtime="20250214 14:59:27.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:27.928" endtime="20250214 14:59:27.928"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:27.932" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3488854329/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:28.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:28.660" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:27.930" endtime="20250214 14:59:28.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:28.661" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:28.661" endtime="20250214 14:59:28.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:28.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:28.662" endtime="20250214 14:59:28.662"/>
</kw>
<msg timestamp="20250214 14:59:28.662" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:27.929" endtime="20250214 14:59:28.662"/>
</kw>
<msg timestamp="20250214 14:59:28.662" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:27.929" endtime="20250214 14:59:28.662"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:28.663" endtime="20250214 14:59:28.663"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:28.667" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:28.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:28.673" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.664" endtime="20250214 14:59:28.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:28.674" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.673" endtime="20250214 14:59:28.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:28.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:28.674" endtime="20250214 14:59:28.674"/>
</kw>
<status status="PASS" starttime="20250214 14:59:28.664" endtime="20250214 14:59:28.674"/>
</kw>
<msg timestamp="20250214 14:59:28.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:28.664" endtime="20250214 14:59:28.675"/>
</kw>
<msg timestamp="20250214 14:59:28.675" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.663" endtime="20250214 14:59:28.675"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:28.678" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:28.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:28.693" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.676" endtime="20250214 14:59:28.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:28.693" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.693" endtime="20250214 14:59:28.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:28.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:28.694" endtime="20250214 14:59:28.694"/>
</kw>
<status status="PASS" starttime="20250214 14:59:28.676" endtime="20250214 14:59:28.694"/>
</kw>
<msg timestamp="20250214 14:59:28.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:28.675" endtime="20250214 14:59:28.694"/>
</kw>
<msg timestamp="20250214 14:59:28.694" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.675" endtime="20250214 14:59:28.694"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:28.695" endtime="20250214 14:59:28.695"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:28.695" endtime="20250214 14:59:28.695"/>
</return>
<status status="PASS" starttime="20250214 14:59:28.663" endtime="20250214 14:59:28.695"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:28.695" endtime="20250214 14:59:28.695"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:28.695" endtime="20250214 14:59:28.695"/>
</branch>
<status status="PASS" starttime="20250214 14:59:28.663" endtime="20250214 14:59:28.695"/>
</if>
<msg timestamp="20250214 14:59:28.695" level="INFO">${eTag1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:27.928" endtime="20250214 14:59:28.696"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:28.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3488854329/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.361" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:28.698" endtime="20250214 14:59:29.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.362" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:29.362" endtime="20250214 14:59:29.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.362" endtime="20250214 14:59:29.363"/>
</kw>
<msg timestamp="20250214 14:59:29.363" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:28.697" endtime="20250214 14:59:29.363"/>
</kw>
<msg timestamp="20250214 14:59:29.363" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:28.696" endtime="20250214 14:59:29.363"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:29.363" endtime="20250214 14:59:29.364"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.367" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.372" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.365" endtime="20250214 14:59:29.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.372" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.372" endtime="20250214 14:59:29.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.373" endtime="20250214 14:59:29.373"/>
</kw>
<status status="PASS" starttime="20250214 14:59:29.364" endtime="20250214 14:59:29.373"/>
</kw>
<msg timestamp="20250214 14:59:29.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:29.364" endtime="20250214 14:59:29.373"/>
</kw>
<msg timestamp="20250214 14:59:29.373" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.364" endtime="20250214 14:59:29.373"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.376" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.389" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.374" endtime="20250214 14:59:29.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.390" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.389" endtime="20250214 14:59:29.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.390" endtime="20250214 14:59:29.390"/>
</kw>
<status status="PASS" starttime="20250214 14:59:29.374" endtime="20250214 14:59:29.390"/>
</kw>
<msg timestamp="20250214 14:59:29.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:29.374" endtime="20250214 14:59:29.391"/>
</kw>
<msg timestamp="20250214 14:59:29.391" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:29.373" endtime="20250214 14:59:29.391"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:29.391" endtime="20250214 14:59:29.391"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:29.391" endtime="20250214 14:59:29.391"/>
</return>
<status status="PASS" starttime="20250214 14:59:29.363" endtime="20250214 14:59:29.391"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:29.391" endtime="20250214 14:59:29.391"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:29.391" endtime="20250214 14:59:29.391"/>
</branch>
<status status="PASS" starttime="20250214 14:59:29.363" endtime="20250214 14:59:29.391"/>
</if>
<msg timestamp="20250214 14:59:29.392" level="INFO">${eTag2} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:28.696" endtime="20250214 14:59:29.392"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag3}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>3</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.395" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3488854329/multipartKey3 --part-number 3 --body /tmp/part2 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.966" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:29.393" endtime="20250214 14:59:29.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.967" level="INFO">{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:29.966" endtime="20250214 14:59:29.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.967" endtime="20250214 14:59:29.967"/>
</kw>
<msg timestamp="20250214 14:59:29.967" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:29.393" endtime="20250214 14:59:29.968"/>
</kw>
<msg timestamp="20250214 14:59:29.968" level="INFO">${result} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:29.392" endtime="20250214 14:59:29.968"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:29.968" endtime="20250214 14:59:29.968"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.972" level="INFO">Running command 'echo '{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.978" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.970" endtime="20250214 14:59:29.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.979" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.978" endtime="20250214 14:59:29.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.979" endtime="20250214 14:59:29.979"/>
</kw>
<status status="PASS" starttime="20250214 14:59:29.969" endtime="20250214 14:59:29.980"/>
</kw>
<msg timestamp="20250214 14:59:29.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:29.969" endtime="20250214 14:59:29.980"/>
</kw>
<msg timestamp="20250214 14:59:29.980" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.968" endtime="20250214 14:59:29.980"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.983" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:29.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:29.990" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.981" endtime="20250214 14:59:29.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:29.990" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.990" endtime="20250214 14:59:29.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:29.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:29.991" endtime="20250214 14:59:29.991"/>
</kw>
<status status="PASS" starttime="20250214 14:59:29.981" endtime="20250214 14:59:29.991"/>
</kw>
<msg timestamp="20250214 14:59:29.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:29.981" endtime="20250214 14:59:29.991"/>
</kw>
<msg timestamp="20250214 14:59:29.992" level="INFO">${md5sum} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.980" endtime="20250214 14:59:29.992"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:29.992" endtime="20250214 14:59:29.992"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:29.992" endtime="20250214 14:59:29.992"/>
</return>
<status status="PASS" starttime="20250214 14:59:29.968" endtime="20250214 14:59:29.992"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:29.992" endtime="20250214 14:59:29.992"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:29.992" endtime="20250214 14:59:29.992"/>
</branch>
<status status="PASS" starttime="20250214 14:59:29.968" endtime="20250214 14:59:29.992"/>
</if>
<msg timestamp="20250214 14:59:29.993" level="INFO">${eTag3} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:29.392" endtime="20250214 14:59:29.993"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:29.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:30.479" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:30.479" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:29.994" endtime="20250214 14:59:30.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:30.480" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:59:30.479" endtime="20250214 14:59:30.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:30.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:30.480" endtime="20250214 14:59:30.480"/>
</kw>
<msg timestamp="20250214 14:59:30.480" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:29.994" endtime="20250214 14:59:30.481"/>
</kw>
<msg timestamp="20250214 14:59:30.481" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:29.993" endtime="20250214 14:59:30.481"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.481"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.481"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.482"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.482"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:30.482" endtime="20250214 14:59:30.482"/>
</return>
<status status="PASS" starttime="20250214 14:59:30.482" endtime="20250214 14:59:30.482"/>
</branch>
<status status="PASS" starttime="20250214 14:59:30.481" endtime="20250214 14:59:30.482"/>
</if>
<msg timestamp="20250214 14:59:30.482" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:29.993" endtime="20250214 14:59:30.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:30.482" endtime="20250214 14:59:30.482"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:30.486" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:30.966" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:30.966" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:30.484" endtime="20250214 14:59:30.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:30.967" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:59:30.967" endtime="20250214 14:59:30.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:30.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:30.967" endtime="20250214 14:59:30.968"/>
</kw>
<msg timestamp="20250214 14:59:30.968" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:30.483" endtime="20250214 14:59:30.968"/>
</kw>
<msg timestamp="20250214 14:59:30.968" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:30.483" endtime="20250214 14:59:30.968"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:30.968" endtime="20250214 14:59:30.969"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</return>
<status status="PASS" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.969"/>
</branch>
<status status="PASS" starttime="20250214 14:59:30.968" endtime="20250214 14:59:30.969"/>
</if>
<msg timestamp="20250214 14:59:30.969" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:59:30.482" endtime="20250214 14:59:30.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:30.969" endtime="20250214 14:59:30.970"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:30.974" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:31.455" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:31.455" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:59:30.972" endtime="20250214 14:59:31.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:31.456" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:59:31.455" endtime="20250214 14:59:31.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:31.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:31.456" endtime="20250214 14:59:31.456"/>
</kw>
<msg timestamp="20250214 14:59:31.457" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:59:30.971" endtime="20250214 14:59:31.457"/>
</kw>
<msg timestamp="20250214 14:59:31.457" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:59:30.970" endtime="20250214 14:59:31.457"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:31.457" endtime="20250214 14:59:31.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:31.457" endtime="20250214 14:59:31.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:31.457" endtime="20250214 14:59:31.457"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.458"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.458"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:31.457" endtime="20250214 14:59:31.458"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.458"/>
</return>
<status status="PASS" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.458"/>
</branch>
<status status="PASS" starttime="20250214 14:59:31.457" endtime="20250214 14:59:31.458"/>
</if>
<msg timestamp="20250214 14:59:31.458" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:59:30.970" endtime="20250214 14:59:31.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.458"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:31.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-3488854329/multipartKey3 --upload-id 217c5ce8-d20d-43d3-bc5f-d2bd57ccf058-114002832056582187 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1},{ETag=3d71118658d13abbf47949aa9d6e2646,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:31.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:31.951" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\""
}</msg>
<status status="PASS" starttime="20250214 14:59:31.460" endtime="20250214 14:59:31.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:31.952" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\""
}</msg>
<status status="PASS" starttime="20250214 14:59:31.952" endtime="20250214 14:59:31.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:31.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:31.953" endtime="20250214 14:59:31.953"/>
</kw>
<msg timestamp="20250214 14:59:31.953" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\""
}</msg>
<status status="PASS" starttime="20250214 14:59:31.460" endtime="20250214 14:59:31.953"/>
</kw>
<msg timestamp="20250214 14:59:31.953" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\""
}</msg>
<status status="PASS" starttime="20250214 14:59:31.459" endtime="20250214 14:59:31.953"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:31.954" endtime="20250214 14:59:31.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:31.954" endtime="20250214 14:59:31.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:31.954" endtime="20250214 14:59:31.955"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:31.958" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3488854329/multipartKey3",
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:31.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:31.963" level="INFO">${output} = "f5341b14bc65d2791cbfa8d01ac0fceb-3"</msg>
<status status="PASS" starttime="20250214 14:59:31.956" endtime="20250214 14:59:31.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:31.964" level="INFO">"f5341b14bc65d2791cbfa8d01ac0fceb-3"</msg>
<status status="PASS" starttime="20250214 14:59:31.964" endtime="20250214 14:59:31.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:31.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:31.965" endtime="20250214 14:59:31.965"/>
</kw>
<status status="PASS" starttime="20250214 14:59:31.955" endtime="20250214 14:59:31.965"/>
</kw>
<msg timestamp="20250214 14:59:31.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:31.955" endtime="20250214 14:59:31.965"/>
</kw>
<msg timestamp="20250214 14:59:31.965" level="INFO">${etag} = "f5341b14bc65d2791cbfa8d01ac0fceb-3"</msg>
<status status="PASS" starttime="20250214 14:59:31.955" endtime="20250214 14:59:31.965"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:31.965" endtime="20250214 14:59:31.966"/>
</return>
<status status="PASS" starttime="20250214 14:59:31.954" endtime="20250214 14:59:31.966"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:31.966" endtime="20250214 14:59:31.966"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:31.966" endtime="20250214 14:59:31.966"/>
</branch>
<status status="PASS" starttime="20250214 14:59:31.953" endtime="20250214 14:59:31.966"/>
</if>
<msg timestamp="20250214 14:59:31.966" level="INFO">${result} = "f5341b14bc65d2791cbfa8d01ac0fceb-3"</msg>
<status status="PASS" starttime="20250214 14:59:31.458" endtime="20250214 14:59:31.966"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:31.970" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3488854329/multipartKey3 /tmp/ozone-test-3488854329-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:32.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:32.578" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 6291456,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:31.967" endtime="20250214 14:59:32.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:32.579" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 6291456,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:32 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:32 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:32.578" endtime="20250214 14:59:32.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:32.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:32.579" endtime="20250214 14:59:32.580"/>
</kw>
<status status="PASS" starttime="20250214 14:59:31.967" endtime="20250214 14:59:32.580"/>
</kw>
<msg timestamp="20250214 14:59:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:31.967" endtime="20250214 14:59:32.580"/>
</kw>
<msg timestamp="20250214 14:59:32.580" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 6291456,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:31.967" endtime="20250214 14:59:32.580"/>
</kw>
<msg timestamp="20250214 14:59:32.581" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 6291456,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:31.966" endtime="20250214 14:59:32.581"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:32.586" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-3488854329-multipartKey3'.</msg>
<msg timestamp="20250214 14:59:32.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:32.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:32.582" endtime="20250214 14:59:32.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:32.595" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:32.595" endtime="20250214 14:59:32.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:32.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:32.596" endtime="20250214 14:59:32.596"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.581" endtime="20250214 14:59:32.596"/>
</kw>
<msg timestamp="20250214 14:59:32.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:32.581" endtime="20250214 14:59:32.596"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.581" endtime="20250214 14:59:32.596"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:32.600" level="INFO">Running command 'md5sum /tmp/ozone-test-3488854329-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:32.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:32.615" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.598" endtime="20250214 14:59:32.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:32.615" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.615" endtime="20250214 14:59:32.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:32.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:32.616" endtime="20250214 14:59:32.616"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.597" endtime="20250214 14:59:32.616"/>
</kw>
<msg timestamp="20250214 14:59:32.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:32.597" endtime="20250214 14:59:32.616"/>
</kw>
<msg timestamp="20250214 14:59:32.616" level="INFO">${checksumbefore} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.597" endtime="20250214 14:59:32.616"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:32.619" level="INFO">Running command 'md5sum /tmp/ozone-test-3488854329-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:32.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:32.634" level="INFO">${output} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.617" endtime="20250214 14:59:32.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:32.635" level="INFO">c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.635" endtime="20250214 14:59:32.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:32.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:32.635" endtime="20250214 14:59:32.636"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.617" endtime="20250214 14:59:32.636"/>
</kw>
<msg timestamp="20250214 14:59:32.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:32.617" endtime="20250214 14:59:32.636"/>
</kw>
<msg timestamp="20250214 14:59:32.636" level="INFO">${checksumafter} = c78a7ba164ecc0205b885d89ffeab5a0</msg>
<status status="PASS" starttime="20250214 14:59:32.617" endtime="20250214 14:59:32.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:32.636" endtime="20250214 14:59:32.636"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.596" endtime="20250214 14:59:32.637"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:32.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3488854329/multipartKey3 --part-number 1 /tmp/ozone-test-3488854329-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.204" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:32.638" endtime="20250214 14:59:33.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.205" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:33 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:33 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:33.204" endtime="20250214 14:59:33.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.205" endtime="20250214 14:59:33.205"/>
</kw>
<status status="PASS" starttime="20250214 14:59:32.638" endtime="20250214 14:59:33.206"/>
</kw>
<msg timestamp="20250214 14:59:33.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:32.637" endtime="20250214 14:59:33.206"/>
</kw>
<msg timestamp="20250214 14:59:33.206" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:32.637" endtime="20250214 14:59:33.206"/>
</kw>
<msg timestamp="20250214 14:59:33.206" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:32.637" endtime="20250214 14:59:33.206"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.209" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.222" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.207" endtime="20250214 14:59:33.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.223" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.223" endtime="20250214 14:59:33.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.224" endtime="20250214 14:59:33.224"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.207" endtime="20250214 14:59:33.224"/>
</kw>
<msg timestamp="20250214 14:59:33.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:33.207" endtime="20250214 14:59:33.224"/>
</kw>
<msg timestamp="20250214 14:59:33.224" level="INFO">${checksumbefore} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.206" endtime="20250214 14:59:33.224"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.227" level="INFO">Running command 'md5sum /tmp/ozone-test-3488854329-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.240" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.225" endtime="20250214 14:59:33.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.241" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.240" endtime="20250214 14:59:33.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.241" endtime="20250214 14:59:33.241"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.225" endtime="20250214 14:59:33.241"/>
</kw>
<msg timestamp="20250214 14:59:33.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:33.225" endtime="20250214 14:59:33.241"/>
</kw>
<msg timestamp="20250214 14:59:33.241" level="INFO">${checksumafter} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:33.224" endtime="20250214 14:59:33.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:33.242" endtime="20250214 14:59:33.242"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.206" endtime="20250214 14:59:33.242"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3488854329/multipartKey3 --part-number 3 /tmp/ozone-test-3488854329-multipartKey3-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.721" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 1047552,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:33.243" endtime="20250214 14:59:33.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.722" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 1047552,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:33 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:33 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:33.721" endtime="20250214 14:59:33.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.722" endtime="20250214 14:59:33.722"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.243" endtime="20250214 14:59:33.722"/>
</kw>
<msg timestamp="20250214 14:59:33.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:33.243" endtime="20250214 14:59:33.723"/>
</kw>
<msg timestamp="20250214 14:59:33.723" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 1047552,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:33.242" endtime="20250214 14:59:33.723"/>
</kw>
<msg timestamp="20250214 14:59:33.723" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:31 GMT",
    "ContentLength": 1047552,
    "ETag": "\"f5341b14bc65d2791cbfa8d01ac0fceb-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:33.242" endtime="20250214 14:59:33.723"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.727" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.732" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.724" endtime="20250214 14:59:33.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.733" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.733" endtime="20250214 14:59:33.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.733" endtime="20250214 14:59:33.734"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.724" endtime="20250214 14:59:33.734"/>
</kw>
<msg timestamp="20250214 14:59:33.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:33.724" endtime="20250214 14:59:33.734"/>
</kw>
<msg timestamp="20250214 14:59:33.734" level="INFO">${checksumbefore} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.723" endtime="20250214 14:59:33.734"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.737" level="INFO">Running command 'md5sum /tmp/ozone-test-3488854329-multipartKey3-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:33.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:33.743" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.735" endtime="20250214 14:59:33.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:33.743" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.743" endtime="20250214 14:59:33.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:33.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:33.743" endtime="20250214 14:59:33.744"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.735" endtime="20250214 14:59:33.744"/>
</kw>
<msg timestamp="20250214 14:59:33.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:33.735" endtime="20250214 14:59:33.744"/>
</kw>
<msg timestamp="20250214 14:59:33.744" level="INFO">${checksumafter} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:33.734" endtime="20250214 14:59:33.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:33.744" endtime="20250214 14:59:33.744"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.723" endtime="20250214 14:59:33.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:26.439" endtime="20250214 14:59:33.745"/>
</test>
<test id="s1-s1-s8-t8" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:33.746" level="INFO">${randStr} = 1990641295</msg>
<status status="PASS" starttime="20250214 14:59:33.746" endtime="20250214 14:59:33.746"/>
</kw>
<msg timestamp="20250214 14:59:33.747" level="INFO">${random} = ozone-test-1990641295</msg>
<status status="PASS" starttime="20250214 14:59:33.746" endtime="20250214 14:59:33.747"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:33.747" level="INFO">${PREFIX} = ozone-test-1990641295</msg>
<status status="PASS" starttime="20250214 14:59:33.747" endtime="20250214 14:59:33.747"/>
</kw>
<status status="PASS" starttime="20250214 14:59:33.746" endtime="20250214 14:59:33.747"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>0</arg>
<arg>--storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:33.750" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-1990641295/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:34.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:34.228" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1990641295/multipartKey4",
    "UploadId": "5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455"
}</msg>
<status status="PASS" starttime="20250214 14:59:33.748" endtime="20250214 14:59:34.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:34.229" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-1990641295/multipartKey4",
    "UploadId": "5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455"
}</msg>
<status status="PASS" starttime="20250214 14:59:34.228" endtime="20250214 14:59:34.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:34.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:34.229" endtime="20250214 14:59:34.229"/>
</kw>
<msg timestamp="20250214 14:59:34.229" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1990641295/multipartKey4",
    "UploadId": "5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455"
}</msg>
<status status="PASS" starttime="20250214 14:59:33.748" endtime="20250214 14:59:34.229"/>
</kw>
<msg timestamp="20250214 14:59:34.230" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1990641295/multipartKey4",
    "UploadId": "5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455"
}</msg>
<status status="PASS" starttime="20250214 14:59:33.748" endtime="20250214 14:59:34.230"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:34.230" endtime="20250214 14:59:34.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:34.230" endtime="20250214 14:59:34.231"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:34.233" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-1990641295/multipartKey4",
    "UploadId": "5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:34.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:34.238" level="INFO">${output} = 5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455</msg>
<status status="PASS" starttime="20250214 14:59:34.231" endtime="20250214 14:59:34.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:34.239" level="INFO">5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455</msg>
<status status="PASS" starttime="20250214 14:59:34.238" endtime="20250214 14:59:34.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:34.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:34.239" endtime="20250214 14:59:34.239"/>
</kw>
<msg timestamp="20250214 14:59:34.239" level="INFO">${upload_id} = 5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455</msg>
<status status="PASS" starttime="20250214 14:59:34.231" endtime="20250214 14:59:34.239"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:34.240" endtime="20250214 14:59:34.240"/>
</return>
<status status="PASS" starttime="20250214 14:59:34.230" endtime="20250214 14:59:34.240"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:34.240" endtime="20250214 14:59:34.240"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:34.240" endtime="20250214 14:59:34.240"/>
</branch>
<status status="PASS" starttime="20250214 14:59:34.230" endtime="20250214 14:59:34.240"/>
</if>
<msg timestamp="20250214 14:59:34.240" level="INFO">${uploadID} = 5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455</msg>
<status status="PASS" starttime="20250214 14:59:33.747" endtime="20250214 14:59:34.240"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:34.244" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-1990641295/multipartKey4 --upload-id 5baadd2d-2510-4d70-ae24-1d2a5c035bab-114002832534929455 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:34.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:34.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:34.242" endtime="20250214 14:59:34.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:34.712" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:34.711" endtime="20250214 14:59:34.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:34.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:34.712" endtime="20250214 14:59:34.712"/>
</kw>
<msg timestamp="20250214 14:59:34.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:34.242" endtime="20250214 14:59:34.712"/>
</kw>
<msg timestamp="20250214 14:59:34.713" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:59:34.241" endtime="20250214 14:59:34.713"/>
</kw>
<msg timestamp="20250214 14:59:34.713" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:59:34.240" endtime="20250214 14:59:34.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:33.745" endtime="20250214 14:59:34.713"/>
</test>
<test id="s1-s1-s8-t9" name="Test abort Multipart upload with invalid uploadId" line="190">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:34.715" level="INFO">${randStr} = 4020795476</msg>
<status status="PASS" starttime="20250214 14:59:34.714" endtime="20250214 14:59:34.715"/>
</kw>
<msg timestamp="20250214 14:59:34.715" level="INFO">${random} = ozone-test-4020795476</msg>
<status status="PASS" starttime="20250214 14:59:34.714" endtime="20250214 14:59:34.715"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:34.715" level="INFO">${PREFIX} = ozone-test-4020795476</msg>
<status status="PASS" starttime="20250214 14:59:34.715" endtime="20250214 14:59:34.715"/>
</kw>
<status status="PASS" starttime="20250214 14:59:34.714" endtime="20250214 14:59:34.715"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>"random"</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:34.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-4020795476/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:35.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:35.195" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:59:34.717" endtime="20250214 14:59:35.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:35.196" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250214 14:59:35.195" endtime="20250214 14:59:35.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:35.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:35.196" endtime="20250214 14:59:35.196"/>
</kw>
<msg timestamp="20250214 14:59:35.197" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:59:34.716" endtime="20250214 14:59:35.197"/>
</kw>
<msg timestamp="20250214 14:59:35.197" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:59:34.716" endtime="20250214 14:59:35.197"/>
</kw>
<msg timestamp="20250214 14:59:35.197" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:59:34.715" endtime="20250214 14:59:35.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:34.713" endtime="20250214 14:59:35.197"/>
</test>
<test id="s1-s1-s8-t10" name="Upload part with Incorrect uploadID" line="193">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:35.199" level="INFO">${randStr} = 7934882594</msg>
<status status="PASS" starttime="20250214 14:59:35.198" endtime="20250214 14:59:35.199"/>
</kw>
<msg timestamp="20250214 14:59:35.199" level="INFO">${random} = ozone-test-7934882594</msg>
<status status="PASS" starttime="20250214 14:59:35.198" endtime="20250214 14:59:35.199"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:35.199" level="INFO">${PREFIX} = ozone-test-7934882594</msg>
<status status="PASS" starttime="20250214 14:59:35.199" endtime="20250214 14:59:35.199"/>
</kw>
<status status="PASS" starttime="20250214 14:59:35.198" endtime="20250214 14:59:35.199"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:35.203" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7934882594/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:35.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:35.687" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7934882594/multipartKey",
    "UploadId": "fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336"
}</msg>
<status status="PASS" starttime="20250214 14:59:35.201" endtime="20250214 14:59:35.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:35.688" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7934882594/multipartKey",
    "UploadId": "fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336"
}</msg>
<status status="PASS" starttime="20250214 14:59:35.688" endtime="20250214 14:59:35.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:35.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:35.689" endtime="20250214 14:59:35.689"/>
</kw>
<msg timestamp="20250214 14:59:35.689" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7934882594/multipartKey",
    "UploadId": "fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336"
}</msg>
<status status="PASS" starttime="20250214 14:59:35.200" endtime="20250214 14:59:35.689"/>
</kw>
<msg timestamp="20250214 14:59:35.689" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7934882594/multipartKey",
    "UploadId": "fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336"
}</msg>
<status status="PASS" starttime="20250214 14:59:35.200" endtime="20250214 14:59:35.689"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:35.690" endtime="20250214 14:59:35.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:35.690" endtime="20250214 14:59:35.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:35.693" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7934882594/multipartKey",
    "UploadId": "fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:35.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:35.698" level="INFO">${output} = fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336</msg>
<status status="PASS" starttime="20250214 14:59:35.691" endtime="20250214 14:59:35.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:35.699" level="INFO">fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336</msg>
<status status="PASS" starttime="20250214 14:59:35.698" endtime="20250214 14:59:35.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:35.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:35.699" endtime="20250214 14:59:35.699"/>
</kw>
<msg timestamp="20250214 14:59:35.699" level="INFO">${upload_id} = fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336</msg>
<status status="PASS" starttime="20250214 14:59:35.690" endtime="20250214 14:59:35.699"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:35.700" endtime="20250214 14:59:35.700"/>
</return>
<status status="PASS" starttime="20250214 14:59:35.689" endtime="20250214 14:59:35.700"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:35.700" endtime="20250214 14:59:35.700"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:35.700" endtime="20250214 14:59:35.700"/>
</branch>
<status status="PASS" starttime="20250214 14:59:35.689" endtime="20250214 14:59:35.700"/>
</if>
<msg timestamp="20250214 14:59:35.700" level="INFO">${uploadID} = fed05e6c-bb02-446e-aa90-72eddcef2c08-114002832630284336</msg>
<status status="PASS" starttime="20250214 14:59:35.199" endtime="20250214 14:59:35.700"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>"no-such-upload-id"</arg>
<arg>1</arg>
<arg>/tmp/10kb</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:35.704" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-7934882594/multipartKey --part-number 1 --body /tmp/10kb --upload-id "no-such-upload-id" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:36.185" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:36.185" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:59:35.702" endtime="20250214 14:59:36.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:36.186" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250214 14:59:36.186" endtime="20250214 14:59:36.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:36.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:36.186" endtime="20250214 14:59:36.187"/>
</kw>
<msg timestamp="20250214 14:59:36.187" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:59:35.701" endtime="20250214 14:59:36.187"/>
</kw>
<msg timestamp="20250214 14:59:36.187" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:59:35.701" endtime="20250214 14:59:36.187"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:59:36.187" endtime="20250214 14:59:36.188"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:36.187" endtime="20250214 14:59:36.188"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</return>
<status status="PASS" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.188"/>
</branch>
<status status="PASS" starttime="20250214 14:59:36.187" endtime="20250214 14:59:36.188"/>
</if>
<msg timestamp="20250214 14:59:36.188" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:59:35.700" endtime="20250214 14:59:36.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:36.188" endtime="20250214 14:59:36.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:35.197" endtime="20250214 14:59:36.189"/>
</test>
<test id="s1-s1-s8-t11" name="Test list parts" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:36.190" level="INFO">${randStr} = 4879335571</msg>
<status status="PASS" starttime="20250214 14:59:36.190" endtime="20250214 14:59:36.190"/>
</kw>
<msg timestamp="20250214 14:59:36.191" level="INFO">${random} = ozone-test-4879335571</msg>
<status status="PASS" starttime="20250214 14:59:36.190" endtime="20250214 14:59:36.191"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:36.191" level="INFO">${PREFIX} = ozone-test-4879335571</msg>
<status status="PASS" starttime="20250214 14:59:36.191" endtime="20250214 14:59:36.191"/>
</kw>
<status status="PASS" starttime="20250214 14:59:36.190" endtime="20250214 14:59:36.191"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:36.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4879335571/multipartKey5  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:36.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:36.674" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4879335571/multipartKey5",
    "UploadId": "550332a8-f812-429e-b918-c375d3788e99-114002832694968370"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.193" endtime="20250214 14:59:36.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:36.675" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4879335571/multipartKey5",
    "UploadId": "550332a8-f812-429e-b918-c375d3788e99-114002832694968370"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.675" endtime="20250214 14:59:36.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:36.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:36.675" endtime="20250214 14:59:36.676"/>
</kw>
<msg timestamp="20250214 14:59:36.676" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4879335571/multipartKey5",
    "UploadId": "550332a8-f812-429e-b918-c375d3788e99-114002832694968370"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.192" endtime="20250214 14:59:36.676"/>
</kw>
<msg timestamp="20250214 14:59:36.676" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4879335571/multipartKey5",
    "UploadId": "550332a8-f812-429e-b918-c375d3788e99-114002832694968370"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.192" endtime="20250214 14:59:36.676"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:36.676" endtime="20250214 14:59:36.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:36.677" endtime="20250214 14:59:36.677"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:36.680" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4879335571/multipartKey5",
    "UploadId": "550332a8-f812-429e-b918-c375d3788e99-114002832694968370"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:36.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:36.685" level="INFO">${output} = 550332a8-f812-429e-b918-c375d3788e99-114002832694968370</msg>
<status status="PASS" starttime="20250214 14:59:36.677" endtime="20250214 14:59:36.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:36.685" level="INFO">550332a8-f812-429e-b918-c375d3788e99-114002832694968370</msg>
<status status="PASS" starttime="20250214 14:59:36.685" endtime="20250214 14:59:36.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:36.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:36.686" endtime="20250214 14:59:36.686"/>
</kw>
<msg timestamp="20250214 14:59:36.686" level="INFO">${upload_id} = 550332a8-f812-429e-b918-c375d3788e99-114002832694968370</msg>
<status status="PASS" starttime="20250214 14:59:36.677" endtime="20250214 14:59:36.686"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:36.686" endtime="20250214 14:59:36.686"/>
</return>
<status status="PASS" starttime="20250214 14:59:36.676" endtime="20250214 14:59:36.686"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:36.687" endtime="20250214 14:59:36.687"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:36.686" endtime="20250214 14:59:36.687"/>
</branch>
<status status="PASS" starttime="20250214 14:59:36.676" endtime="20250214 14:59:36.687"/>
</if>
<msg timestamp="20250214 14:59:36.687" level="INFO">${uploadID} = 550332a8-f812-429e-b918-c375d3788e99-114002832694968370</msg>
<status status="PASS" starttime="20250214 14:59:36.191" endtime="20250214 14:59:36.687"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:36.690" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4879335571/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:37.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:37.360" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.688" endtime="20250214 14:59:37.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:37.362" level="INFO">{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:37.361" endtime="20250214 14:59:37.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:37.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:37.362" endtime="20250214 14:59:37.362"/>
</kw>
<msg timestamp="20250214 14:59:37.362" level="INFO">${output} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.688" endtime="20250214 14:59:37.362"/>
</kw>
<msg timestamp="20250214 14:59:37.363" level="INFO">${result} = {
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}</msg>
<status status="PASS" starttime="20250214 14:59:36.687" endtime="20250214 14:59:37.363"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:37.363" endtime="20250214 14:59:37.363"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:37.368" level="INFO">Running command 'echo '{
    "ETag": "579169d123baa9a4e9feb61198aa7351"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:37.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:37.375" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.365" endtime="20250214 14:59:37.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:37.377" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.376" endtime="20250214 14:59:37.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:37.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:37.377" endtime="20250214 14:59:37.377"/>
</kw>
<status status="PASS" starttime="20250214 14:59:37.364" endtime="20250214 14:59:37.378"/>
</kw>
<msg timestamp="20250214 14:59:37.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:37.364" endtime="20250214 14:59:37.378"/>
</kw>
<msg timestamp="20250214 14:59:37.378" level="INFO">${etag} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.364" endtime="20250214 14:59:37.378"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:37.382" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:37.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:37.395" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.379" endtime="20250214 14:59:37.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:37.396" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.395" endtime="20250214 14:59:37.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:37.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:37.396" endtime="20250214 14:59:37.397"/>
</kw>
<status status="PASS" starttime="20250214 14:59:37.379" endtime="20250214 14:59:37.397"/>
</kw>
<msg timestamp="20250214 14:59:37.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:37.379" endtime="20250214 14:59:37.397"/>
</kw>
<msg timestamp="20250214 14:59:37.397" level="INFO">${md5sum} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:37.378" endtime="20250214 14:59:37.397"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:37.397" endtime="20250214 14:59:37.397"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:37.397" endtime="20250214 14:59:37.398"/>
</return>
<status status="PASS" starttime="20250214 14:59:37.363" endtime="20250214 14:59:37.398"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:37.398" endtime="20250214 14:59:37.398"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:37.398" endtime="20250214 14:59:37.398"/>
</branch>
<status status="PASS" starttime="20250214 14:59:37.363" endtime="20250214 14:59:37.398"/>
</if>
<msg timestamp="20250214 14:59:37.398" level="INFO">${eTag1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:36.687" endtime="20250214 14:59:37.398"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:37.402" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4879335571/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.000" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:37.399" endtime="20250214 14:59:38.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.001" level="INFO">{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:38.000" endtime="20250214 14:59:38.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.001" endtime="20250214 14:59:38.001"/>
</kw>
<msg timestamp="20250214 14:59:38.001" level="INFO">${output} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:37.399" endtime="20250214 14:59:38.001"/>
</kw>
<msg timestamp="20250214 14:59:38.002" level="INFO">${result} = {
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}</msg>
<status status="PASS" starttime="20250214 14:59:37.399" endtime="20250214 14:59:38.002"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:38.002" endtime="20250214 14:59:38.002"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.006" level="INFO">Running command 'echo '{
    "ETag": "3d71118658d13abbf47949aa9d6e2646"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.011" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.003" endtime="20250214 14:59:38.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.011" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.011" endtime="20250214 14:59:38.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.012" endtime="20250214 14:59:38.012"/>
</kw>
<status status="PASS" starttime="20250214 14:59:38.003" endtime="20250214 14:59:38.012"/>
</kw>
<msg timestamp="20250214 14:59:38.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:38.003" endtime="20250214 14:59:38.012"/>
</kw>
<msg timestamp="20250214 14:59:38.012" level="INFO">${etag} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.002" endtime="20250214 14:59:38.012"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.015" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.021" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.013" endtime="20250214 14:59:38.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.022" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.021" endtime="20250214 14:59:38.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.022" endtime="20250214 14:59:38.022"/>
</kw>
<status status="PASS" starttime="20250214 14:59:38.013" endtime="20250214 14:59:38.022"/>
</kw>
<msg timestamp="20250214 14:59:38.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:38.013" endtime="20250214 14:59:38.022"/>
</kw>
<msg timestamp="20250214 14:59:38.023" level="INFO">${md5sum} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.012" endtime="20250214 14:59:38.023"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:59:38.023" endtime="20250214 14:59:38.023"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:38.023" endtime="20250214 14:59:38.023"/>
</return>
<status status="PASS" starttime="20250214 14:59:38.002" endtime="20250214 14:59:38.023"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:38.023" endtime="20250214 14:59:38.023"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:38.023" endtime="20250214 14:59:38.023"/>
</branch>
<status status="PASS" starttime="20250214 14:59:38.002" endtime="20250214 14:59:38.023"/>
</if>
<msg timestamp="20250214 14:59:38.023" level="INFO">${eTag2} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:37.398" endtime="20250214 14:59:38.023"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4879335571/multipartKey5 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.535" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.025" endtime="20250214 14:59:38.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.536" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250214 14:59:38.535" endtime="20250214 14:59:38.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.536" endtime="20250214 14:59:38.536"/>
</kw>
<status status="PASS" starttime="20250214 14:59:38.024" endtime="20250214 14:59:38.536"/>
</kw>
<msg timestamp="20250214 14:59:38.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:38.024" endtime="20250214 14:59:38.536"/>
</kw>
<msg timestamp="20250214 14:59:38.537" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.024" endtime="20250214 14:59:38.537"/>
</kw>
<msg timestamp="20250214 14:59:38.537" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.024" endtime="20250214 14:59:38.537"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.539" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.545" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:38.537" endtime="20250214 14:59:38.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.545" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:38.545" endtime="20250214 14:59:38.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.545" endtime="20250214 14:59:38.546"/>
</kw>
<msg timestamp="20250214 14:59:38.546" level="INFO">${part1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:38.537" endtime="20250214 14:59:38.546"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.548" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:38.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:38.553" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.546" endtime="20250214 14:59:38.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:38.554" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.554" endtime="20250214 14:59:38.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:38.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:38.554" endtime="20250214 14:59:38.554"/>
</kw>
<msg timestamp="20250214 14:59:38.555" level="INFO">${part2} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:38.546" endtime="20250214 14:59:38.555"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:38.555" endtime="20250214 14:59:38.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:38.555" endtime="20250214 14:59:38.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:38.555" endtime="20250214 14:59:38.556"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:38.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4879335571/multipartKey5 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:39.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:39.040" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.557" endtime="20250214 14:59:39.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:39.041" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20250214 14:59:39.041" endtime="20250214 14:59:39.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:39.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:39.041" endtime="20250214 14:59:39.042"/>
</kw>
<status status="PASS" starttime="20250214 14:59:38.557" endtime="20250214 14:59:39.042"/>
</kw>
<msg timestamp="20250214 14:59:39.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:38.556" endtime="20250214 14:59:39.042"/>
</kw>
<msg timestamp="20250214 14:59:39.042" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.556" endtime="20250214 14:59:39.042"/>
</kw>
<msg timestamp="20250214 14:59:39.042" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:59:38.556" endtime="20250214 14:59:39.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:39.045" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:39.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:39.050" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:39.043" endtime="20250214 14:59:39.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:39.051" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:39.050" endtime="20250214 14:59:39.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:39.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:39.051" endtime="20250214 14:59:39.051"/>
</kw>
<msg timestamp="20250214 14:59:39.051" level="INFO">${part1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:39.042" endtime="20250214 14:59:39.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:39.054" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:59:37.278Z",
            "ETag": "579169d123baa9a4e9feb61198aa7351",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:39.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:39.059" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:59:39.052" endtime="20250214 14:59:39.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:39.059" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:59:39.059" endtime="20250214 14:59:39.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:39.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:39.059" endtime="20250214 14:59:39.060"/>
</kw>
<msg timestamp="20250214 14:59:39.060" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:59:39.051" endtime="20250214 14:59:39.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:39.060" endtime="20250214 14:59:39.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:39.060" endtime="20250214 14:59:39.061"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:39.064" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4879335571/multipartKey5 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:39.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:39.541" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:59:39.062" endtime="20250214 14:59:39.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:39.542" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250214 14:59:39.542" endtime="20250214 14:59:39.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:39.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:39.543" endtime="20250214 14:59:39.543"/>
</kw>
<status status="PASS" starttime="20250214 14:59:39.062" endtime="20250214 14:59:39.543"/>
</kw>
<msg timestamp="20250214 14:59:39.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:39.061" endtime="20250214 14:59:39.543"/>
</kw>
<msg timestamp="20250214 14:59:39.543" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:59:39.061" endtime="20250214 14:59:39.543"/>
</kw>
<msg timestamp="20250214 14:59:39.544" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:59:39.061" endtime="20250214 14:59:39.544"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:39.546" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:59:37.931Z",
            "ETag": "3d71118658d13abbf47949aa9d6e2646",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:39.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:39.551" level="INFO">${output} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:39.544" endtime="20250214 14:59:39.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:39.552" level="INFO">3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:39.552" endtime="20250214 14:59:39.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:39.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:39.552" endtime="20250214 14:59:39.553"/>
</kw>
<msg timestamp="20250214 14:59:39.553" level="INFO">${part2} = 3d71118658d13abbf47949aa9d6e2646</msg>
<status status="PASS" starttime="20250214 14:59:39.544" endtime="20250214 14:59:39.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:39.553" endtime="20250214 14:59:39.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:39.553" endtime="20250214 14:59:39.554"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:39.557" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-4879335571/multipartKey5 --upload-id 550332a8-f812-429e-b918-c375d3788e99-114002832694968370 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:40.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:40.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:39.555" endtime="20250214 14:59:40.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:40.045" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:40.044" endtime="20250214 14:59:40.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:40.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:40.045" endtime="20250214 14:59:40.046"/>
</kw>
<msg timestamp="20250214 14:59:40.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:39.555" endtime="20250214 14:59:40.046"/>
</kw>
<msg timestamp="20250214 14:59:40.046" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:59:39.554" endtime="20250214 14:59:40.046"/>
</kw>
<msg timestamp="20250214 14:59:40.046" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:59:39.554" endtime="20250214 14:59:40.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:36.189" endtime="20250214 14:59:40.046"/>
</test>
<test id="s1-s1-s8-t12" name="Test Multipart Upload with the simplified aws s3 cp API" line="229">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:40.048" level="INFO">${randStr} = 9479767769</msg>
<status status="PASS" starttime="20250214 14:59:40.048" endtime="20250214 14:59:40.048"/>
</kw>
<msg timestamp="20250214 14:59:40.048" level="INFO">${random} = ozone-test-9479767769</msg>
<status status="PASS" starttime="20250214 14:59:40.047" endtime="20250214 14:59:40.048"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:40.049" level="INFO">${PREFIX} = ozone-test-9479767769</msg>
<status status="PASS" starttime="20250214 14:59:40.048" endtime="20250214 14:59:40.049"/>
</kw>
<status status="PASS" starttime="20250214 14:59:40.047" endtime="20250214 14:59:40.049"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:40.052" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:41.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:41.257" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.3 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:59:40.050" endtime="20250214 14:59:41.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:41.258" level="INFO">Completed 256.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (13.3 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (16.4 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (22.3 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (29.6 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (34.8 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (41.2 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (45.5 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (47.1 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (49.1 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (53.2 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (60.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (61.4 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (63.3 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (64.7 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (66.8 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (67.2 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (69.2 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (71.0 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (72.3 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (73.2 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (75.9 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (77.8 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (78.8 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (78.2 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (79.7 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (80.3 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (80.8 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (81.9 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (82.8 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (83.2 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (84.7 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (83.6 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (85.1 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (85.9 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (86.8 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (88.2 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (89.1 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (90.2 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (91.2 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (91.2 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (91.1 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (92.4 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (93.4 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (93.0 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (93.3 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (93.8 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (95.1 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (95.6 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (96.4 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (97.5 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (98.1 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (98.7 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (99.3 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (99.8 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (100.2 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (100.7 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (101.8 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (102.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (102.3 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (103.0 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (103.9 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (105.0 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (101.4 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (102.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (103.1 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (103.3 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (104.2 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (105.0 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (105.7 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (106.5 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (107.6 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (108.6 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://erasure/mpyawscli                  </msg>
<status status="PASS" starttime="20250214 14:59:41.258" endtime="20250214 14:59:41.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:41.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:41.258" endtime="20250214 14:59:41.259"/>
</kw>
<status status="PASS" starttime="20250214 14:59:40.050" endtime="20250214 14:59:41.259"/>
</kw>
<msg timestamp="20250214 14:59:41.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:40.049" endtime="20250214 14:59:41.259"/>
</kw>
<msg timestamp="20250214 14:59:41.259" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.3 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:59:40.049" endtime="20250214 14:59:41.259"/>
</kw>
<status status="PASS" starttime="20250214 14:59:40.049" endtime="20250214 14:59:41.259"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:41.263" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://erasure/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:42.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:42.135" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 14:59:41.260" endtime="20250214 14:59:42.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:42.136" level="INFO">Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (9.9 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (11.1 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (13.5 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (15.9 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (19.4 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (20.5 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (21.7 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (22.9 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (23.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (24.9 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (26.0 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (28.4 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (29.5 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (30.7 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (31.8 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (32.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (34.0 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (34.8 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (36.2 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (37.8 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (40.7 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (40.8 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (41.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (44.4 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (45.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (46.4 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (39.0 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (40.5 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (41.2 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (42.0 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (42.5 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (43.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (43.8 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (44.5 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (45.2 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (46.6 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (44.2 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (45.8 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (46.5 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (47.1 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (48.4 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (49.1 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (49.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (50.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (50.8 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (52.1 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (52.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (53.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (54.0 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (55.6 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (57.5 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining
download: s3://erasure/mpyawscli to ../../tmp/22mb.result        </msg>
<status status="PASS" starttime="20250214 14:59:42.136" endtime="20250214 14:59:42.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:42.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:42.137" endtime="20250214 14:59:42.137"/>
</kw>
<status status="PASS" starttime="20250214 14:59:41.260" endtime="20250214 14:59:42.137"/>
</kw>
<msg timestamp="20250214 14:59:42.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:41.260" endtime="20250214 14:59:42.137"/>
</kw>
<msg timestamp="20250214 14:59:42.137" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 14:59:41.260" endtime="20250214 14:59:42.137"/>
</kw>
<status status="PASS" starttime="20250214 14:59:41.259" endtime="20250214 14:59:42.138"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:42.142" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:42.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:42.602" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:59:42.139" endtime="20250214 14:59:42.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:42.603" level="INFO">delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:59:42.602" endtime="20250214 14:59:42.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:42.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:42.603" endtime="20250214 14:59:42.603"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.139" endtime="20250214 14:59:42.603"/>
</kw>
<msg timestamp="20250214 14:59:42.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:42.139" endtime="20250214 14:59:42.604"/>
</kw>
<msg timestamp="20250214 14:59:42.604" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:59:42.138" endtime="20250214 14:59:42.604"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.138" endtime="20250214 14:59:42.604"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:42.607" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:42.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:42.652" level="INFO">${output} = 97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.605" endtime="20250214 14:59:42.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:42.652" level="INFO">97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.652" endtime="20250214 14:59:42.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:42.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:42.653" endtime="20250214 14:59:42.653"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.605" endtime="20250214 14:59:42.653"/>
</kw>
<msg timestamp="20250214 14:59:42.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:42.605" endtime="20250214 14:59:42.653"/>
</kw>
<msg timestamp="20250214 14:59:42.653" level="INFO">${checksumbefore} = 97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.604" endtime="20250214 14:59:42.653"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:42.657" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:42.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:42.700" level="INFO">${output} = 97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.654" endtime="20250214 14:59:42.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:42.700" level="INFO">97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.700" endtime="20250214 14:59:42.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:42.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:42.701" endtime="20250214 14:59:42.701"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.654" endtime="20250214 14:59:42.701"/>
</kw>
<msg timestamp="20250214 14:59:42.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:42.654" endtime="20250214 14:59:42.701"/>
</kw>
<msg timestamp="20250214 14:59:42.701" level="INFO">${checksumafter} = 97f64bcadef637374c95bc10ca1d3ab7</msg>
<status status="PASS" starttime="20250214 14:59:42.653" endtime="20250214 14:59:42.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:42.701" endtime="20250214 14:59:42.702"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.604" endtime="20250214 14:59:42.702"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:40.047" endtime="20250214 14:59:42.702"/>
</test>
<test id="s1-s1-s8-t13" name="Test Multipart Upload Put With Copy" line="235">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:42.704" level="INFO">${randStr} = 7833036864</msg>
<status status="PASS" starttime="20250214 14:59:42.703" endtime="20250214 14:59:42.704"/>
</kw>
<msg timestamp="20250214 14:59:42.704" level="INFO">${random} = ozone-test-7833036864</msg>
<status status="PASS" starttime="20250214 14:59:42.703" endtime="20250214 14:59:42.704"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:42.704" level="INFO">${PREFIX} = ozone-test-7833036864</msg>
<status status="PASS" starttime="20250214 14:59:42.704" endtime="20250214 14:59:42.704"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.703" endtime="20250214 14:59:42.704"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:42.708" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7833036864/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:43.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:43.431" level="INFO">${output} = {
    "ETag": "\"579169d123baa9a4e9feb61198aa7351\""
}</msg>
<status status="PASS" starttime="20250214 14:59:42.706" endtime="20250214 14:59:43.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:43.432" level="INFO">{
    "ETag": "\"579169d123baa9a4e9feb61198aa7351\""
}</msg>
<status status="PASS" starttime="20250214 14:59:43.431" endtime="20250214 14:59:43.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:43.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:43.432" endtime="20250214 14:59:43.432"/>
</kw>
<status status="PASS" starttime="20250214 14:59:42.705" endtime="20250214 14:59:43.433"/>
</kw>
<msg timestamp="20250214 14:59:43.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:42.705" endtime="20250214 14:59:43.433"/>
</kw>
<msg timestamp="20250214 14:59:43.433" level="INFO">${output} = {
    "ETag": "\"579169d123baa9a4e9feb61198aa7351\""
}</msg>
<status status="PASS" starttime="20250214 14:59:42.705" endtime="20250214 14:59:43.433"/>
</kw>
<msg timestamp="20250214 14:59:43.433" level="INFO">${result} = {
    "ETag": "\"579169d123baa9a4e9feb61198aa7351\""
}</msg>
<status status="PASS" starttime="20250214 14:59:42.704" endtime="20250214 14:59:43.433"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:43.438" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7833036864/copytest/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:43.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:43.915" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "UploadId": "9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626"
}</msg>
<status status="PASS" starttime="20250214 14:59:43.435" endtime="20250214 14:59:43.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:43.915" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "UploadId": "9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626"
}</msg>
<status status="PASS" starttime="20250214 14:59:43.915" endtime="20250214 14:59:43.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:43.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:43.916" endtime="20250214 14:59:43.916"/>
</kw>
<msg timestamp="20250214 14:59:43.916" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "UploadId": "9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626"
}</msg>
<status status="PASS" starttime="20250214 14:59:43.435" endtime="20250214 14:59:43.916"/>
</kw>
<msg timestamp="20250214 14:59:43.916" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "UploadId": "9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626"
}</msg>
<status status="PASS" starttime="20250214 14:59:43.434" endtime="20250214 14:59:43.916"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:43.917" endtime="20250214 14:59:43.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:43.917" endtime="20250214 14:59:43.917"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:43.920" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "UploadId": "9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:43.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:43.925" level="INFO">${output} = 9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626</msg>
<status status="PASS" starttime="20250214 14:59:43.918" endtime="20250214 14:59:43.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:43.926" level="INFO">9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626</msg>
<status status="PASS" starttime="20250214 14:59:43.925" endtime="20250214 14:59:43.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:43.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:43.926" endtime="20250214 14:59:43.926"/>
</kw>
<msg timestamp="20250214 14:59:43.926" level="INFO">${upload_id} = 9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626</msg>
<status status="PASS" starttime="20250214 14:59:43.917" endtime="20250214 14:59:43.926"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:43.927" endtime="20250214 14:59:43.927"/>
</return>
<status status="PASS" starttime="20250214 14:59:43.916" endtime="20250214 14:59:43.927"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:43.927" endtime="20250214 14:59:43.927"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:43.927" endtime="20250214 14:59:43.927"/>
</branch>
<status status="PASS" starttime="20250214 14:59:43.916" endtime="20250214 14:59:43.927"/>
</if>
<msg timestamp="20250214 14:59:43.927" level="INFO">${uploadID} = 9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626</msg>
<status status="PASS" starttime="20250214 14:59:43.433" endtime="20250214 14:59:43.927"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:43.930" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7833036864/copytest/destination --upload-id 9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626 --part-number 1 --copy-source erasure/ozone-test-7833036864/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:44.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:44.724" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "579169d123baa9a4e9feb61198aa7351",
        "LastModified": "2025-02-14T14:59:44.662Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:43.928" endtime="20250214 14:59:44.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:44.725" level="INFO">{
    "CopyPartResult": {
        "ETag": "579169d123baa9a4e9feb61198aa7351",
        "LastModified": "2025-02-14T14:59:44.662Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:44.724" endtime="20250214 14:59:44.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:44.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:44.725" endtime="20250214 14:59:44.725"/>
</kw>
<status status="PASS" starttime="20250214 14:59:43.928" endtime="20250214 14:59:44.725"/>
</kw>
<msg timestamp="20250214 14:59:44.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:43.928" endtime="20250214 14:59:44.725"/>
</kw>
<msg timestamp="20250214 14:59:44.725" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "579169d123baa9a4e9feb61198aa7351",
        "LastModified": "2025-02-14T14:59:44.662Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:43.928" endtime="20250214 14:59:44.725"/>
</kw>
<msg timestamp="20250214 14:59:44.726" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "579169d123baa9a4e9feb61198aa7351",
        "LastModified": "2025-02-14T14:59:44.662Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:43.927" endtime="20250214 14:59:44.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:44.726" endtime="20250214 14:59:44.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:44.726" endtime="20250214 14:59:44.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:44.729" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "579169d123baa9a4e9feb61198aa7351",
        "LastModified": "2025-02-14T14:59:44.662Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:44.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:44.734" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:44.727" endtime="20250214 14:59:44.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:44.735" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:44.734" endtime="20250214 14:59:44.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:44.735" endtime="20250214 14:59:44.735"/>
</kw>
<msg timestamp="20250214 14:59:44.735" level="INFO">${eTag1} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:44.726" endtime="20250214 14:59:44.735"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:44.739" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-7833036864/copytest/destination --upload-id 9c3aee25-ecfb-4ab5-9b4a-50465d7504b7-114002833169645626 --multipart-upload 'Parts=[{ETag=579169d123baa9a4e9feb61198aa7351,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:45.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:45.231" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\""
}</msg>
<status status="PASS" starttime="20250214 14:59:44.737" endtime="20250214 14:59:45.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:45.232" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\""
}</msg>
<status status="PASS" starttime="20250214 14:59:45.232" endtime="20250214 14:59:45.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:45.232" endtime="20250214 14:59:45.233"/>
</kw>
<msg timestamp="20250214 14:59:45.233" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\""
}</msg>
<status status="PASS" starttime="20250214 14:59:44.737" endtime="20250214 14:59:45.233"/>
</kw>
<msg timestamp="20250214 14:59:45.233" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\""
}</msg>
<status status="PASS" starttime="20250214 14:59:44.736" endtime="20250214 14:59:45.233"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:45.233" endtime="20250214 14:59:45.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:45.234" endtime="20250214 14:59:45.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:45.234" endtime="20250214 14:59:45.234"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:45.237" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7833036864/copytest/destination",
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:45.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:45.243" level="INFO">${output} = "1cc08bb1d1a71f90d9b850b5ed24243c-1"</msg>
<status status="PASS" starttime="20250214 14:59:45.235" endtime="20250214 14:59:45.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:45.243" level="INFO">"1cc08bb1d1a71f90d9b850b5ed24243c-1"</msg>
<status status="PASS" starttime="20250214 14:59:45.243" endtime="20250214 14:59:45.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:45.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:45.243" endtime="20250214 14:59:45.244"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.235" endtime="20250214 14:59:45.244"/>
</kw>
<msg timestamp="20250214 14:59:45.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:45.235" endtime="20250214 14:59:45.244"/>
</kw>
<msg timestamp="20250214 14:59:45.244" level="INFO">${etag} = "1cc08bb1d1a71f90d9b850b5ed24243c-1"</msg>
<status status="PASS" starttime="20250214 14:59:45.234" endtime="20250214 14:59:45.244"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:45.244" endtime="20250214 14:59:45.244"/>
</return>
<status status="PASS" starttime="20250214 14:59:45.233" endtime="20250214 14:59:45.244"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:45.245" endtime="20250214 14:59:45.245"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:45.244" endtime="20250214 14:59:45.245"/>
</branch>
<status status="PASS" starttime="20250214 14:59:45.233" endtime="20250214 14:59:45.245"/>
</if>
<status status="PASS" starttime="20250214 14:59:44.735" endtime="20250214 14:59:45.245"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:45.248" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7833036864/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:45.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:45.839" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:45.246" endtime="20250214 14:59:45.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:45.840" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:45 GMT",
    "Metadata": {},
    "PartsCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:45 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:45.840" endtime="20250214 14:59:45.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:45.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:45.840" endtime="20250214 14:59:45.841"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.246" endtime="20250214 14:59:45.841"/>
</kw>
<msg timestamp="20250214 14:59:45.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:45.246" endtime="20250214 14:59:45.841"/>
</kw>
<msg timestamp="20250214 14:59:45.841" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:45 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1cc08bb1d1a71f90d9b850b5ed24243c-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:59:45.245" endtime="20250214 14:59:45.841"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.245" endtime="20250214 14:59:45.841"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:45.846" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:45.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:45.860" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.843" endtime="20250214 14:59:45.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:45.861" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.860" endtime="20250214 14:59:45.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:45.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:45.861" endtime="20250214 14:59:45.862"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.842" endtime="20250214 14:59:45.862"/>
</kw>
<msg timestamp="20250214 14:59:45.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:45.842" endtime="20250214 14:59:45.862"/>
</kw>
<msg timestamp="20250214 14:59:45.862" level="INFO">${checksumbefore} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.842" endtime="20250214 14:59:45.862"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:45.865" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:45.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:45.878" level="INFO">${output} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.863" endtime="20250214 14:59:45.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:45.879" level="INFO">579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.878" endtime="20250214 14:59:45.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:45.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:45.879" endtime="20250214 14:59:45.879"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.863" endtime="20250214 14:59:45.879"/>
</kw>
<msg timestamp="20250214 14:59:45.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:45.863" endtime="20250214 14:59:45.879"/>
</kw>
<msg timestamp="20250214 14:59:45.879" level="INFO">${checksumafter} = 579169d123baa9a4e9feb61198aa7351</msg>
<status status="PASS" starttime="20250214 14:59:45.862" endtime="20250214 14:59:45.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:45.879" endtime="20250214 14:59:45.880"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.841" endtime="20250214 14:59:45.880"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:42.702" endtime="20250214 14:59:45.880"/>
</test>
<test id="s1-s1-s8-t14" name="Test Multipart Upload Put With Copy and range" line="251">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:45.882" level="INFO">${randStr} = 9574082611</msg>
<status status="PASS" starttime="20250214 14:59:45.881" endtime="20250214 14:59:45.882"/>
</kw>
<msg timestamp="20250214 14:59:45.882" level="INFO">${random} = ozone-test-9574082611</msg>
<status status="PASS" starttime="20250214 14:59:45.881" endtime="20250214 14:59:45.882"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:45.882" level="INFO">${PREFIX} = ozone-test-9574082611</msg>
<status status="PASS" starttime="20250214 14:59:45.882" endtime="20250214 14:59:45.882"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.881" endtime="20250214 14:59:45.882"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:45.886" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9574082611/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:46.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:46.732" level="INFO">${output} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:45.884" endtime="20250214 14:59:46.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:46.733" level="INFO">{
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:46.732" endtime="20250214 14:59:46.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:46.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:46.733" endtime="20250214 14:59:46.734"/>
</kw>
<status status="PASS" starttime="20250214 14:59:45.883" endtime="20250214 14:59:46.734"/>
</kw>
<msg timestamp="20250214 14:59:46.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:45.883" endtime="20250214 14:59:46.734"/>
</kw>
<msg timestamp="20250214 14:59:46.734" level="INFO">${output} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:45.883" endtime="20250214 14:59:46.734"/>
</kw>
<msg timestamp="20250214 14:59:46.734" level="INFO">${result} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:45.882" endtime="20250214 14:59:46.734"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:46.740" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-9574082611/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:47.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:47.225" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "UploadId": "a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717"
}</msg>
<status status="PASS" starttime="20250214 14:59:46.737" endtime="20250214 14:59:47.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:47.226" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "UploadId": "a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717"
}</msg>
<status status="PASS" starttime="20250214 14:59:47.225" endtime="20250214 14:59:47.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:47.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:47.226" endtime="20250214 14:59:47.226"/>
</kw>
<msg timestamp="20250214 14:59:47.226" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "UploadId": "a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717"
}</msg>
<status status="PASS" starttime="20250214 14:59:46.736" endtime="20250214 14:59:47.226"/>
</kw>
<msg timestamp="20250214 14:59:47.227" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "UploadId": "a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717"
}</msg>
<status status="PASS" starttime="20250214 14:59:46.736" endtime="20250214 14:59:47.227"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:47.227" endtime="20250214 14:59:47.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:47.227" endtime="20250214 14:59:47.228"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:47.231" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "UploadId": "a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:47.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:47.236" level="INFO">${output} = a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717</msg>
<status status="PASS" starttime="20250214 14:59:47.228" endtime="20250214 14:59:47.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:47.236" level="INFO">a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717</msg>
<status status="PASS" starttime="20250214 14:59:47.236" endtime="20250214 14:59:47.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:47.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:47.236" endtime="20250214 14:59:47.237"/>
</kw>
<msg timestamp="20250214 14:59:47.237" level="INFO">${upload_id} = a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717</msg>
<status status="PASS" starttime="20250214 14:59:47.228" endtime="20250214 14:59:47.237"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:47.237" endtime="20250214 14:59:47.237"/>
</return>
<status status="PASS" starttime="20250214 14:59:47.227" endtime="20250214 14:59:47.237"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:47.237" endtime="20250214 14:59:47.237"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:47.237" endtime="20250214 14:59:47.237"/>
</branch>
<status status="PASS" starttime="20250214 14:59:47.227" endtime="20250214 14:59:47.237"/>
</if>
<msg timestamp="20250214 14:59:47.238" level="INFO">${uploadID} = a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717</msg>
<status status="PASS" starttime="20250214 14:59:46.735" endtime="20250214 14:59:47.238"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:47.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-9574082611/copyrange/destination --upload-id a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717 --part-number 1 --copy-source erasure/ozone-test-9574082611/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:48.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:48.115" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.052Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:47.239" endtime="20250214 14:59:48.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:48.116" level="INFO">{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.052Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:48.115" endtime="20250214 14:59:48.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:48.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:48.116" endtime="20250214 14:59:48.116"/>
</kw>
<status status="PASS" starttime="20250214 14:59:47.239" endtime="20250214 14:59:48.116"/>
</kw>
<msg timestamp="20250214 14:59:48.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:47.239" endtime="20250214 14:59:48.117"/>
</kw>
<msg timestamp="20250214 14:59:48.117" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.052Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:47.238" endtime="20250214 14:59:48.117"/>
</kw>
<msg timestamp="20250214 14:59:48.117" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.052Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:47.238" endtime="20250214 14:59:48.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:48.117" endtime="20250214 14:59:48.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:48.117" endtime="20250214 14:59:48.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:48.120" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.052Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:48.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:48.126" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.118" endtime="20250214 14:59:48.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:48.126" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.126" endtime="20250214 14:59:48.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:48.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:48.126" endtime="20250214 14:59:48.127"/>
</kw>
<msg timestamp="20250214 14:59:48.127" level="INFO">${eTag1} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.118" endtime="20250214 14:59:48.127"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:48.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-9574082611/copyrange/destination --upload-id a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717 --part-number 2 --copy-source erasure/ozone-test-9574082611/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:48.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:48.659" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.611Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:48.128" endtime="20250214 14:59:48.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:48.660" level="INFO">{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.611Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:48.660" endtime="20250214 14:59:48.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:48.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:48.660" endtime="20250214 14:59:48.661"/>
</kw>
<status status="PASS" starttime="20250214 14:59:48.128" endtime="20250214 14:59:48.661"/>
</kw>
<msg timestamp="20250214 14:59:48.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:48.128" endtime="20250214 14:59:48.661"/>
</kw>
<msg timestamp="20250214 14:59:48.661" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.611Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:48.128" endtime="20250214 14:59:48.661"/>
</kw>
<msg timestamp="20250214 14:59:48.661" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.611Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:48.127" endtime="20250214 14:59:48.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:48.661" endtime="20250214 14:59:48.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:48.662" endtime="20250214 14:59:48.662"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:48.665" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:48.611Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:48.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:48.670" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.662" endtime="20250214 14:59:48.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:48.671" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.670" endtime="20250214 14:59:48.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:48.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:48.671" endtime="20250214 14:59:48.671"/>
</kw>
<msg timestamp="20250214 14:59:48.671" level="INFO">${eTag2} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:48.662" endtime="20250214 14:59:48.671"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:48.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-9574082611/copyrange/destination --upload-id a8554f35-c2bc-4f53-9a51-ab174cf6fc0d-114002833386438717 --multipart-upload 'Parts=[{ETag=7225a24c7991f16a5a9f3d8194202864,PartNumber=1},{ETag=7225a24c7991f16a5a9f3d8194202864,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:49.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:49.161" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:48.673" endtime="20250214 14:59:49.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:49.162" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:49.161" endtime="20250214 14:59:49.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:49.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:49.162" endtime="20250214 14:59:49.162"/>
</kw>
<msg timestamp="20250214 14:59:49.162" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:48.673" endtime="20250214 14:59:49.162"/>
</kw>
<msg timestamp="20250214 14:59:49.162" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:48.672" endtime="20250214 14:59:49.163"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:49.163" endtime="20250214 14:59:49.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:49.163" endtime="20250214 14:59:49.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:49.163" endtime="20250214 14:59:49.164"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:49.167" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-9574082611/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:49.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:49.172" level="INFO">${output} = "5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:49.165" endtime="20250214 14:59:49.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:49.173" level="INFO">"5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:49.173" endtime="20250214 14:59:49.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:49.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:49.173" endtime="20250214 14:59:49.174"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.164" endtime="20250214 14:59:49.174"/>
</kw>
<msg timestamp="20250214 14:59:49.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:49.164" endtime="20250214 14:59:49.174"/>
</kw>
<msg timestamp="20250214 14:59:49.174" level="INFO">${etag} = "5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:49.164" endtime="20250214 14:59:49.174"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:49.174" endtime="20250214 14:59:49.174"/>
</return>
<status status="PASS" starttime="20250214 14:59:49.163" endtime="20250214 14:59:49.174"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:49.174" endtime="20250214 14:59:49.174"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:49.174" endtime="20250214 14:59:49.174"/>
</branch>
<status status="PASS" starttime="20250214 14:59:49.163" endtime="20250214 14:59:49.174"/>
</if>
<status status="PASS" starttime="20250214 14:59:48.672" endtime="20250214 14:59:49.175"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:49.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9574082611/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:49.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:49.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:59:49.176" endtime="20250214 14:59:49.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:49.795" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:49 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:49 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:49.794" endtime="20250214 14:59:49.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:49.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:49.795" endtime="20250214 14:59:49.795"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.176" endtime="20250214 14:59:49.795"/>
</kw>
<msg timestamp="20250214 14:59:49.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:49.175" endtime="20250214 14:59:49.795"/>
</kw>
<msg timestamp="20250214 14:59:49.795" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:59:49.175" endtime="20250214 14:59:49.796"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.175" endtime="20250214 14:59:49.796"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:49.800" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:49.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:49.822" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.797" endtime="20250214 14:59:49.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:49.823" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.822" endtime="20250214 14:59:49.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:49.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:49.823" endtime="20250214 14:59:49.823"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.797" endtime="20250214 14:59:49.823"/>
</kw>
<msg timestamp="20250214 14:59:49.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:49.796" endtime="20250214 14:59:49.824"/>
</kw>
<msg timestamp="20250214 14:59:49.824" level="INFO">${checksumbefore} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.796" endtime="20250214 14:59:49.824"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:49.827" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:49.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:49.848" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.825" endtime="20250214 14:59:49.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:49.849" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.849" endtime="20250214 14:59:49.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:49.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:49.849" endtime="20250214 14:59:49.850"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.824" endtime="20250214 14:59:49.850"/>
</kw>
<msg timestamp="20250214 14:59:49.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:49.824" endtime="20250214 14:59:49.850"/>
</kw>
<msg timestamp="20250214 14:59:49.850" level="INFO">${checksumafter} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:49.824" endtime="20250214 14:59:49.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:49.850" endtime="20250214 14:59:49.850"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.796" endtime="20250214 14:59:49.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:45.880" endtime="20250214 14:59:49.850"/>
</test>
<test id="s1-s1-s8-t15" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="273">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:49.852" level="INFO">${randStr} = 4343865812</msg>
<status status="PASS" starttime="20250214 14:59:49.852" endtime="20250214 14:59:49.852"/>
</kw>
<msg timestamp="20250214 14:59:49.852" level="INFO">${random} = ozone-test-4343865812</msg>
<status status="PASS" starttime="20250214 14:59:49.852" endtime="20250214 14:59:49.852"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:49.853" level="INFO">${PREFIX} = ozone-test-4343865812</msg>
<status status="PASS" starttime="20250214 14:59:49.852" endtime="20250214 14:59:49.853"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.851" endtime="20250214 14:59:49.853"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250214 14:59:49.853" level="INFO">${curDate} = 2025-02-14 14:59:49.853</msg>
<status status="PASS" starttime="20250214 14:59:49.853" endtime="20250214 14:59:49.853"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20250214 14:59:49.856" level="INFO">${beforeCreate} = 2025-02-13 14:59:49.853</msg>
<status status="PASS" starttime="20250214 14:59:49.853" endtime="20250214 14:59:49.856"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250214 14:59:49.857" level="INFO">${tomorrow} = 2025-02-15 14:59:49.853</msg>
<status status="PASS" starttime="20250214 14:59:49.856" endtime="20250214 14:59:49.857"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:49.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-4343865812/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:50.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:50.589" level="INFO">${output} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:49.858" endtime="20250214 14:59:50.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:50.590" level="INFO">{
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:50.589" endtime="20250214 14:59:50.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:50.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:50.590" endtime="20250214 14:59:50.590"/>
</kw>
<status status="PASS" starttime="20250214 14:59:49.857" endtime="20250214 14:59:50.591"/>
</kw>
<msg timestamp="20250214 14:59:50.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:49.857" endtime="20250214 14:59:50.591"/>
</kw>
<msg timestamp="20250214 14:59:50.591" level="INFO">${output} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:49.857" endtime="20250214 14:59:50.591"/>
</kw>
<msg timestamp="20250214 14:59:50.591" level="INFO">${result} = {
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\""
}</msg>
<status status="PASS" starttime="20250214 14:59:49.857" endtime="20250214 14:59:50.591"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:50.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4343865812/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:51.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:51.078" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "UploadId": "46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073"
}</msg>
<status status="PASS" starttime="20250214 14:59:50.593" endtime="20250214 14:59:51.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:51.078" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "UploadId": "46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073"
}</msg>
<status status="PASS" starttime="20250214 14:59:51.078" endtime="20250214 14:59:51.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:51.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:51.079" endtime="20250214 14:59:51.079"/>
</kw>
<msg timestamp="20250214 14:59:51.079" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "UploadId": "46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073"
}</msg>
<status status="PASS" starttime="20250214 14:59:50.593" endtime="20250214 14:59:51.079"/>
</kw>
<msg timestamp="20250214 14:59:51.079" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "UploadId": "46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073"
}</msg>
<status status="PASS" starttime="20250214 14:59:50.592" endtime="20250214 14:59:51.079"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:51.080" endtime="20250214 14:59:51.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:51.080" endtime="20250214 14:59:51.080"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:51.083" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "UploadId": "46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:51.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:51.088" level="INFO">${output} = 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073</msg>
<status status="PASS" starttime="20250214 14:59:51.081" endtime="20250214 14:59:51.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:51.089" level="INFO">46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073</msg>
<status status="PASS" starttime="20250214 14:59:51.088" endtime="20250214 14:59:51.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:51.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:51.089" endtime="20250214 14:59:51.089"/>
</kw>
<msg timestamp="20250214 14:59:51.089" level="INFO">${upload_id} = 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073</msg>
<status status="PASS" starttime="20250214 14:59:51.080" endtime="20250214 14:59:51.089"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:51.089" endtime="20250214 14:59:51.089"/>
</return>
<status status="PASS" starttime="20250214 14:59:51.079" endtime="20250214 14:59:51.089"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:51.089" endtime="20250214 14:59:51.089"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:51.089" endtime="20250214 14:59:51.090"/>
</branch>
<status status="PASS" starttime="20250214 14:59:51.079" endtime="20250214 14:59:51.090"/>
</if>
<msg timestamp="20250214 14:59:51.090" level="INFO">${uploadID} = 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073</msg>
<status status="PASS" starttime="20250214 14:59:50.591" endtime="20250214 14:59:51.090"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:51.093" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-4343865812/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:51.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:51.561" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:59:51.091" endtime="20250214 14:59:51.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:51.562" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:59:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:51 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:59:51 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:51.561" endtime="20250214 14:59:51.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:51.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:51.562" endtime="20250214 14:59:51.562"/>
</kw>
<status status="PASS" starttime="20250214 14:59:51.091" endtime="20250214 14:59:51.563"/>
</kw>
<msg timestamp="20250214 14:59:51.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:51.091" endtime="20250214 14:59:51.563"/>
</kw>
<msg timestamp="20250214 14:59:51.563" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:59:51.090" endtime="20250214 14:59:51.563"/>
</kw>
<msg timestamp="20250214 14:59:51.563" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:59:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:59:51.090" endtime="20250214 14:59:51.563"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:51.566" level="INFO">Running command 'echo '{
    "LastModified": "Fri, 14 Feb 2025 14:59:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"7225a24c7991f16a5a9f3d8194202864\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:51 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:59:51 GMT"
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:51.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:51.571" level="INFO">${output} = Fri, 14 Feb 2025 14:59:50 GMT</msg>
<status status="PASS" starttime="20250214 14:59:51.564" endtime="20250214 14:59:51.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:51.572" level="INFO">Fri, 14 Feb 2025 14:59:50 GMT</msg>
<status status="PASS" starttime="20250214 14:59:51.571" endtime="20250214 14:59:51.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:51.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:51.572" endtime="20250214 14:59:51.572"/>
</kw>
<msg timestamp="20250214 14:59:51.572" level="INFO">${lastModified} = Fri, 14 Feb 2025 14:59:50 GMT</msg>
<status status="PASS" starttime="20250214 14:59:51.563" endtime="20250214 14:59:51.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:51.572" endtime="20250214 14:59:51.573"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250214 14:59:51.574" level="INFO">${lmDate} = 2025-02-14 14:59:50.000</msg>
<status status="PASS" starttime="20250214 14:59:51.573" endtime="20250214 14:59:51.574"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250214 14:59:51.575" level="INFO">${afterCreate} = 2025-02-14 14:59:53.000</msg>
<status status="PASS" starttime="20250214 14:59:51.575" endtime="20250214 14:59:51.575"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250214 14:59:51.576" level="INFO">${latestDate} = 2025-02-14 14:59:51.576</msg>
<status status="PASS" starttime="20250214 14:59:51.575" endtime="20250214 14:59:51.576"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20250214 14:59:51.576" level="INFO">${sleepSeconds} = 1.424</msg>
<status status="PASS" starttime="20250214 14:59:51.576" endtime="20250214 14:59:51.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 14:59:53.001" level="INFO">Slept 1 second 424 milliseconds</msg>
<status status="PASS" starttime="20250214 14:59:51.577" endtime="20250214 14:59:53.001"/>
</kw>
<status status="PASS" starttime="20250214 14:59:51.576" endtime="20250214 14:59:53.001"/>
</kw>
<status status="PASS" starttime="20250214 14:59:51.575" endtime="20250214 14:59:53.001"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:53.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --part-number 1 --copy-source erasure/ozone-test-4343865812/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-14 14:59:53.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:53.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:53.474" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.003" endtime="20250214 14:59:53.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:53.475" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.474" endtime="20250214 14:59:53.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:53.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:53.475" endtime="20250214 14:59:53.475"/>
</kw>
<msg timestamp="20250214 14:59:53.475" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.002" endtime="20250214 14:59:53.476"/>
</kw>
<msg timestamp="20250214 14:59:53.476" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.001" endtime="20250214 14:59:53.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:53.476" endtime="20250214 14:59:53.476"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:53.479" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --part-number 2 --copy-source erasure/ozone-test-4343865812/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-13 14:59:49.853' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:53.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:59:53.954" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.477" endtime="20250214 14:59:53.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:53.955" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.955" endtime="20250214 14:59:53.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:53.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:53.955" endtime="20250214 14:59:53.956"/>
</kw>
<msg timestamp="20250214 14:59:53.956" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.477" endtime="20250214 14:59:53.956"/>
</kw>
<msg timestamp="20250214 14:59:53.956" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:59:53.476" endtime="20250214 14:59:53.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:53.956" endtime="20250214 14:59:53.956"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:53.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --part-number 1 --copy-source erasure/ozone-test-4343865812/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-13 14:59:49.853' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:54.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:54.916" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:54.844Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:53.958" endtime="20250214 14:59:54.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:54.917" level="INFO">{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:54.844Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:54.917" endtime="20250214 14:59:54.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:54.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:54.917" endtime="20250214 14:59:54.918"/>
</kw>
<msg timestamp="20250214 14:59:54.918" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:54.844Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:53.957" endtime="20250214 14:59:54.918"/>
</kw>
<msg timestamp="20250214 14:59:54.918" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:54.844Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:53.957" endtime="20250214 14:59:54.918"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:54.918" endtime="20250214 14:59:54.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:54.919" endtime="20250214 14:59:54.919"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:54.922" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:54.844Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:54.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:54.928" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:54.919" endtime="20250214 14:59:54.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:54.928" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:54.928" endtime="20250214 14:59:54.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:54.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:54.929" endtime="20250214 14:59:54.929"/>
</kw>
<msg timestamp="20250214 14:59:54.929" level="INFO">${eTag1} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:54.919" endtime="20250214 14:59:54.929"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:54.933" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --part-number 2 --copy-source erasure/ozone-test-4343865812/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-14 14:59:53.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:55.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:55.466" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:55.411Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:54.930" endtime="20250214 14:59:55.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:55.467" level="INFO">{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:55.411Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:55.466" endtime="20250214 14:59:55.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:55.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:55.467" endtime="20250214 14:59:55.467"/>
</kw>
<msg timestamp="20250214 14:59:55.467" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:55.411Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:54.930" endtime="20250214 14:59:55.467"/>
</kw>
<msg timestamp="20250214 14:59:55.468" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:55.411Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:54.929" endtime="20250214 14:59:55.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:55.468" endtime="20250214 14:59:55.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:55.468" endtime="20250214 14:59:55.468"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:55.471" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:55.411Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:55.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:55.477" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:55.469" endtime="20250214 14:59:55.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:55.478" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:55.477" endtime="20250214 14:59:55.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:55.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:55.478" endtime="20250214 14:59:55.478"/>
</kw>
<msg timestamp="20250214 14:59:55.478" level="INFO">${eTag2} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:55.468" endtime="20250214 14:59:55.478"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:55.482" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --part-number 1 --copy-source erasure/ozone-test-4343865812/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-15 14:59:49.853' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:56.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:56.294" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:56.229Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:55.480" endtime="20250214 14:59:56.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:56.295" level="INFO">{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:56.229Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:56.295" endtime="20250214 14:59:56.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:56.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:56.295" endtime="20250214 14:59:56.296"/>
</kw>
<msg timestamp="20250214 14:59:56.296" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:56.229Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:55.480" endtime="20250214 14:59:56.296"/>
</kw>
<msg timestamp="20250214 14:59:56.296" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:56.229Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:59:55.479" endtime="20250214 14:59:56.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:56.296" endtime="20250214 14:59:56.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:56.297" endtime="20250214 14:59:56.297"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:56.300" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "7225a24c7991f16a5a9f3d8194202864",
        "LastModified": "2025-02-14T14:59:56.229Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:56.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:56.305" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:56.297" endtime="20250214 14:59:56.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:56.305" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:56.305" endtime="20250214 14:59:56.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:56.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:56.306" endtime="20250214 14:59:56.306"/>
</kw>
<msg timestamp="20250214 14:59:56.306" level="INFO">${eTag1} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:56.297" endtime="20250214 14:59:56.306"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:56.310" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4343865812/copyrange/destination --upload-id 46834636-d1eb-4367-a217-0d9ef9fa68e4-114002833639211073 --multipart-upload 'Parts=[{ETag=7225a24c7991f16a5a9f3d8194202864,PartNumber=1},{ETag=7225a24c7991f16a5a9f3d8194202864,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:56.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:56.795" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:56.308" endtime="20250214 14:59:56.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:56.796" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:56.796" endtime="20250214 14:59:56.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:56.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:56.796" endtime="20250214 14:59:56.797"/>
</kw>
<msg timestamp="20250214 14:59:56.797" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:56.307" endtime="20250214 14:59:56.797"/>
</kw>
<msg timestamp="20250214 14:59:56.797" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}</msg>
<status status="PASS" starttime="20250214 14:59:56.307" endtime="20250214 14:59:56.797"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:56.797" endtime="20250214 14:59:56.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:56.798" endtime="20250214 14:59:56.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:56.798" endtime="20250214 14:59:56.798"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:56.802" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4343865812/copyrange/destination",
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:56.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:56.807" level="INFO">${output} = "5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:56.799" endtime="20250214 14:59:56.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:56.808" level="INFO">"5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:56.807" endtime="20250214 14:59:56.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:56.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:56.808" endtime="20250214 14:59:56.808"/>
</kw>
<status status="PASS" starttime="20250214 14:59:56.799" endtime="20250214 14:59:56.808"/>
</kw>
<msg timestamp="20250214 14:59:56.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:56.799" endtime="20250214 14:59:56.808"/>
</kw>
<msg timestamp="20250214 14:59:56.808" level="INFO">${etag} = "5aa3600b79d8dda62646b8d8aebe5713-2"</msg>
<status status="PASS" starttime="20250214 14:59:56.798" endtime="20250214 14:59:56.808"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:59:56.808" endtime="20250214 14:59:56.809"/>
</return>
<status status="PASS" starttime="20250214 14:59:56.797" endtime="20250214 14:59:56.809"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:56.809" endtime="20250214 14:59:56.809"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:56.809" endtime="20250214 14:59:56.809"/>
</branch>
<status status="PASS" starttime="20250214 14:59:56.797" endtime="20250214 14:59:56.809"/>
</if>
<status status="PASS" starttime="20250214 14:59:56.306" endtime="20250214 14:59:56.809"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:56.812" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4343865812/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:57.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:57.399" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:59:56.810" endtime="20250214 14:59:57.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:57.400" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:59:57 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:59:57 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.399" endtime="20250214 14:59:57.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:57.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:57.400" endtime="20250214 14:59:57.400"/>
</kw>
<status status="PASS" starttime="20250214 14:59:56.810" endtime="20250214 14:59:57.401"/>
</kw>
<msg timestamp="20250214 14:59:57.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:56.810" endtime="20250214 14:59:57.401"/>
</kw>
<msg timestamp="20250214 14:59:57.401" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:59:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"5aa3600b79d8dda62646b8d8aebe5713-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:59:56.809" endtime="20250214 14:59:57.401"/>
</kw>
<status status="PASS" starttime="20250214 14:59:56.809" endtime="20250214 14:59:57.401"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:57.405" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:57.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:57.428" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.402" endtime="20250214 14:59:57.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:57.429" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.429" endtime="20250214 14:59:57.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:57.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:57.429" endtime="20250214 14:59:57.430"/>
</kw>
<status status="PASS" starttime="20250214 14:59:57.402" endtime="20250214 14:59:57.430"/>
</kw>
<msg timestamp="20250214 14:59:57.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:57.402" endtime="20250214 14:59:57.430"/>
</kw>
<msg timestamp="20250214 14:59:57.430" level="INFO">${checksumbefore} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.401" endtime="20250214 14:59:57.430"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:57.433" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:57.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:57.456" level="INFO">${output} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.431" endtime="20250214 14:59:57.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:57.457" level="INFO">7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.456" endtime="20250214 14:59:57.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:57.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:57.457" endtime="20250214 14:59:57.457"/>
</kw>
<status status="PASS" starttime="20250214 14:59:57.431" endtime="20250214 14:59:57.457"/>
</kw>
<msg timestamp="20250214 14:59:57.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:57.431" endtime="20250214 14:59:57.457"/>
</kw>
<msg timestamp="20250214 14:59:57.457" level="INFO">${checksumafter} = 7225a24c7991f16a5a9f3d8194202864</msg>
<status status="PASS" starttime="20250214 14:59:57.430" endtime="20250214 14:59:57.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:57.458" endtime="20250214 14:59:57.458"/>
</kw>
<status status="PASS" starttime="20250214 14:59:57.401" endtime="20250214 14:59:57.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:49.851" endtime="20250214 14:59:57.458"/>
</test>
<test id="s1-s1-s8-t16" name="Test Multipart Upload list" line="320">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:57.460" level="INFO">${randStr} = 6275424850</msg>
<status status="PASS" starttime="20250214 14:59:57.460" endtime="20250214 14:59:57.460"/>
</kw>
<msg timestamp="20250214 14:59:57.460" level="INFO">${random} = ozone-test-6275424850</msg>
<status status="PASS" starttime="20250214 14:59:57.459" endtime="20250214 14:59:57.460"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:59:57.461" level="INFO">${PREFIX} = ozone-test-6275424850</msg>
<status status="PASS" starttime="20250214 14:59:57.460" endtime="20250214 14:59:57.461"/>
</kw>
<status status="PASS" starttime="20250214 14:59:57.459" endtime="20250214 14:59:57.461"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:57.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6275424850/listtest/key1  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:57.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:57.965" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key1",
    "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.462" endtime="20250214 14:59:57.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:57.966" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key1",
    "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.965" endtime="20250214 14:59:57.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:57.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:57.966" endtime="20250214 14:59:57.966"/>
</kw>
<msg timestamp="20250214 14:59:57.966" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key1",
    "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.462" endtime="20250214 14:59:57.966"/>
</kw>
<msg timestamp="20250214 14:59:57.967" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key1",
    "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.462" endtime="20250214 14:59:57.967"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:57.967" endtime="20250214 14:59:57.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:57.967" endtime="20250214 14:59:57.967"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:57.970" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key1",
    "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:57.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:57.976" level="INFO">${output} = 41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397</msg>
<status status="PASS" starttime="20250214 14:59:57.968" endtime="20250214 14:59:57.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:57.976" level="INFO">41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397</msg>
<status status="PASS" starttime="20250214 14:59:57.976" endtime="20250214 14:59:57.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:57.977" endtime="20250214 14:59:57.977"/>
</kw>
<msg timestamp="20250214 14:59:57.977" level="INFO">${upload_id} = 41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397</msg>
<status status="PASS" starttime="20250214 14:59:57.968" endtime="20250214 14:59:57.977"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:57.978" endtime="20250214 14:59:57.978"/>
</return>
<status status="PASS" starttime="20250214 14:59:57.967" endtime="20250214 14:59:57.978"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:57.978" endtime="20250214 14:59:57.978"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:57.978" endtime="20250214 14:59:57.978"/>
</branch>
<status status="PASS" starttime="20250214 14:59:57.967" endtime="20250214 14:59:57.978"/>
</if>
<msg timestamp="20250214 14:59:57.978" level="INFO">${uploadID1} = 41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397</msg>
<status status="PASS" starttime="20250214 14:59:57.461" endtime="20250214 14:59:57.978"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:57.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6275424850/listtest/key2  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:58.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:58.471" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key2",
    "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.981" endtime="20250214 14:59:58.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:58.472" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key2",
    "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974"
}</msg>
<status status="PASS" starttime="20250214 14:59:58.472" endtime="20250214 14:59:58.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:58.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:58.472" endtime="20250214 14:59:58.473"/>
</kw>
<msg timestamp="20250214 14:59:58.473" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key2",
    "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.980" endtime="20250214 14:59:58.473"/>
</kw>
<msg timestamp="20250214 14:59:58.473" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key2",
    "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974"
}</msg>
<status status="PASS" starttime="20250214 14:59:57.980" endtime="20250214 14:59:58.473"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:58.474" endtime="20250214 14:59:58.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:58.474" endtime="20250214 14:59:58.474"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:58.478" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6275424850/listtest/key2",
    "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:58.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:58.486" level="INFO">${output} = 9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974</msg>
<status status="PASS" starttime="20250214 14:59:58.475" endtime="20250214 14:59:58.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:58.487" level="INFO">9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974</msg>
<status status="PASS" starttime="20250214 14:59:58.486" endtime="20250214 14:59:58.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:58.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:58.487" endtime="20250214 14:59:58.488"/>
</kw>
<msg timestamp="20250214 14:59:58.488" level="INFO">${upload_id} = 9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974</msg>
<status status="PASS" starttime="20250214 14:59:58.474" endtime="20250214 14:59:58.488"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:59:58.488" endtime="20250214 14:59:58.488"/>
</return>
<status status="PASS" starttime="20250214 14:59:58.473" endtime="20250214 14:59:58.488"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:59:58.488" endtime="20250214 14:59:58.488"/>
</return>
<status status="NOT RUN" starttime="20250214 14:59:58.488" endtime="20250214 14:59:58.488"/>
</branch>
<status status="PASS" starttime="20250214 14:59:58.473" endtime="20250214 14:59:58.488"/>
</if>
<msg timestamp="20250214 14:59:58.489" level="INFO">${uploadID2} = 9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974</msg>
<status status="PASS" starttime="20250214 14:59:57.979" endtime="20250214 14:59:58.489"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:58.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket erasure --prefix ozone-test-6275424850/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:59.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:59.010" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397",
            "Key": "ozone-test-6275424850/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:59:58.490" endtime="20250214 14:59:59.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:59.011" level="INFO">{
    "Uploads": [
        {
            "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397",
            "Key": "ozone-test-6275424850/listtest/key1",
            "Initiated": "2025-02-14T14:59:57.898Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974",
            "Key": "ozone-test-6275424850/listtest/key2",
            "Initiated": "2025-02-14T14:59:58.414Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:59:59.010" endtime="20250214 14:59:59.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:59.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:59.011" endtime="20250214 14:59:59.012"/>
</kw>
<status status="PASS" starttime="20250214 14:59:58.490" endtime="20250214 14:59:59.012"/>
</kw>
<msg timestamp="20250214 14:59:59.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:58.490" endtime="20250214 14:59:59.012"/>
</kw>
<msg timestamp="20250214 14:59:59.012" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397",
            "Key": "ozone-test-6275424850/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:59:58.489" endtime="20250214 14:59:59.012"/>
</kw>
<msg timestamp="20250214 14:59:59.012" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397",
            "Key": "ozone-test-6275424850/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:59:58.489" endtime="20250214 14:59:59.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:59.013" endtime="20250214 14:59:59.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:59:59.013" endtime="20250214 14:59:59.013"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:59.017" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "41d021bb-4a04-4719-9507-e2ae45da32da-114002834089443397",
            "Key": "ozone-test-6275424850/listtest/key1",
            "Initiated": "2025-02-14T14:59:57.898Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "9d4ace97-2530-4193-9db6-a31c820b5f5a-114002834123259974",
            "Key": "ozone-test-6275424850/listtest/key2",
            "Initiated": "2025-02-14T14:59:58.414Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:59.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:59.022" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:59:59.014" endtime="20250214 14:59:59.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:59.023" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:59:59.023" endtime="20250214 14:59:59.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:59.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:59.023" endtime="20250214 14:59:59.023"/>
</kw>
<msg timestamp="20250214 14:59:59.024" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250214 14:59:59.014" endtime="20250214 14:59:59.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:59:59.024" endtime="20250214 14:59:59.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:57.458" endtime="20250214 14:59:59.024"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20250214 14:59:59.026" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 14:59:59.026" endtime="20250214 14:59:59.026"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.026" endtime="20250214 14:59:59.026"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:59:05.223" endtime="20250214 14:59:59.026"/>
</suite>
<suite id="s1-s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:59:59.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:59.037" endtime="20250214 14:59:59.037"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.037" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:59:59.038" endtime="20250214 14:59:59.038"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.037" endtime="20250214 14:59:59.039"/>
</kw>
<test id="s1-s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:59:59.040" level="INFO">${postfix} = 13115</msg>
<status status="PASS" starttime="20250214 14:59:59.040" endtime="20250214 14:59:59.040"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 14:59:59.040" level="INFO">${DESTBUCKET} = destbucket-13115</msg>
<status status="PASS" starttime="20250214 14:59:59.040" endtime="20250214 14:59:59.040"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:59.044" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-13115 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:59.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:59.525" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-13115"
}</msg>
<status status="PASS" starttime="20250214 14:59:59.042" endtime="20250214 14:59:59.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:59.526" level="INFO">{
    "Location": "http://s3g:9878/destbucket-13115"
}</msg>
<status status="PASS" starttime="20250214 14:59:59.525" endtime="20250214 14:59:59.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:59.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:59.526" endtime="20250214 14:59:59.526"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.041" endtime="20250214 14:59:59.527"/>
</kw>
<msg timestamp="20250214 14:59:59.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:59.041" endtime="20250214 14:59:59.527"/>
</kw>
<msg timestamp="20250214 14:59:59.527" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-13115"
}</msg>
<status status="PASS" starttime="20250214 14:59:59.041" endtime="20250214 14:59:59.527"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.041" endtime="20250214 14:59:59.527"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.039" endtime="20250214 14:59:59.527"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.039" endtime="20250214 14:59:59.527"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:59.530" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20250214 14:59:59.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:59.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:59:59.528" endtime="20250214 14:59:59.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:59.535" level="INFO"/>
<status status="PASS" starttime="20250214 14:59:59.534" endtime="20250214 14:59:59.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:59.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:59.535" endtime="20250214 14:59:59.535"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.528" endtime="20250214 14:59:59.535"/>
</kw>
<msg timestamp="20250214 14:59:59.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:59.528" endtime="20250214 14:59:59.536"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.527" endtime="20250214 14:59:59.536"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:59.539" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:59:59.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:59:59.543" level="INFO">${output} = f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 14:59:59.537" endtime="20250214 14:59:59.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:59:59.544" level="INFO">f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 14:59:59.543" endtime="20250214 14:59:59.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:59:59.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:59:59.544" endtime="20250214 14:59:59.544"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.536" endtime="20250214 14:59:59.544"/>
</kw>
<msg timestamp="20250214 14:59:59.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:59.536" endtime="20250214 14:59:59.545"/>
</kw>
<msg timestamp="20250214 14:59:59.545" level="INFO">${file_checksum} = f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 14:59:59.536" endtime="20250214 14:59:59.545"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:59:59.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:00.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:00.111" level="INFO">${output} = {
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\""
}</msg>
<status status="PASS" starttime="20250214 14:59:59.546" endtime="20250214 15:00:00.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:00.112" level="INFO">{
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\""
}</msg>
<status status="PASS" starttime="20250214 15:00:00.112" endtime="20250214 15:00:00.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:00.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:00.112" endtime="20250214 15:00:00.113"/>
</kw>
<status status="PASS" starttime="20250214 14:59:59.546" endtime="20250214 15:00:00.113"/>
</kw>
<msg timestamp="20250214 15:00:00.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:59:59.546" endtime="20250214 15:00:00.113"/>
</kw>
<msg timestamp="20250214 15:00:00.113" level="INFO">${output} = {
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\""
}</msg>
<status status="PASS" starttime="20250214 14:59:59.545" endtime="20250214 15:00:00.113"/>
</kw>
<msg timestamp="20250214 15:00:00.113" level="INFO">${result} = {
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\""
}</msg>
<status status="PASS" starttime="20250214 14:59:59.545" endtime="20250214 15:00:00.113"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:00.116" level="INFO">Running command 'echo '{
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:00.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:00.121" level="INFO">${output} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:00.114" endtime="20250214 15:00:00.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:00.122" level="INFO">"f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:00.121" endtime="20250214 15:00:00.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:00.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:00.122" endtime="20250214 15:00:00.122"/>
</kw>
<msg timestamp="20250214 15:00:00.122" level="INFO">${eTag} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:00.113" endtime="20250214 15:00:00.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:00.122" endtime="20250214 15:00:00.123"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:00.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:00.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:00.617" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:00.055Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:00.124" endtime="20250214 15:00:00.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:00.618" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:00.055Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:00.617" endtime="20250214 15:00:00.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:00.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:00.618" endtime="20250214 15:00:00.618"/>
</kw>
<status status="PASS" starttime="20250214 15:00:00.124" endtime="20250214 15:00:00.619"/>
</kw>
<msg timestamp="20250214 15:00:00.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:00.124" endtime="20250214 15:00:00.619"/>
</kw>
<msg timestamp="20250214 15:00:00.619" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:00.055Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:00.123" endtime="20250214 15:00:00.619"/>
</kw>
<msg timestamp="20250214 15:00:00.619" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:00.055Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:00.123" endtime="20250214 15:00:00.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:00.619" endtime="20250214 15:00:00.619"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:00.623" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:01.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:01.176" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:01.113Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:00.621" endtime="20250214 15:00:01.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:01.176" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:01.113Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:01.176" endtime="20250214 15:00:01.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:01.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:01.177" endtime="20250214 15:00:01.177"/>
</kw>
<status status="PASS" starttime="20250214 15:00:00.621" endtime="20250214 15:00:01.177"/>
</kw>
<msg timestamp="20250214 15:00:01.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:00.620" endtime="20250214 15:00:01.177"/>
</kw>
<msg timestamp="20250214 15:00:01.177" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:01.113Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:00.620" endtime="20250214 15:00:01.177"/>
</kw>
<msg timestamp="20250214 15:00:01.178" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:01.113Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:00.619" endtime="20250214 15:00:01.178"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:01.180" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:01.113Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:01.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:01.185" level="INFO">${output} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:01.178" endtime="20250214 15:00:01.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:01.186" level="INFO">"f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:01.186" endtime="20250214 15:00:01.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:01.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:01.186" endtime="20250214 15:00:01.187"/>
</kw>
<msg timestamp="20250214 15:00:01.187" level="INFO">${eTag} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:01.178" endtime="20250214 15:00:01.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:01.187" endtime="20250214 15:00:01.187"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:01.191" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-13115 --prefix ozone-test-6275424850/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:01.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:01.690" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:01.113Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:01.189" endtime="20250214 15:00:01.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:01.691" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:01.113Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:01.690" endtime="20250214 15:00:01.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:01.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:01.691" endtime="20250214 15:00:01.691"/>
</kw>
<status status="PASS" starttime="20250214 15:00:01.189" endtime="20250214 15:00:01.691"/>
</kw>
<msg timestamp="20250214 15:00:01.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:01.188" endtime="20250214 15:00:01.691"/>
</kw>
<msg timestamp="20250214 15:00:01.692" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:01.113Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:01.188" endtime="20250214 15:00:01.692"/>
</kw>
<msg timestamp="20250214 15:00:01.692" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:01.113Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:01.187" endtime="20250214 15:00:01.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:01.692" endtime="20250214 15:00:01.692"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:01.696" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:02.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:02.204" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:01.694" endtime="20250214 15:00:02.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:02.205" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:02 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 15:00:02 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:02.204" endtime="20250214 15:00:02.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:02.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:02.205" endtime="20250214 15:00:02.205"/>
</kw>
<status status="PASS" starttime="20250214 15:00:01.693" endtime="20250214 15:00:02.206"/>
</kw>
<msg timestamp="20250214 15:00:02.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:01.693" endtime="20250214 15:00:02.206"/>
</kw>
<msg timestamp="20250214 15:00:02.206" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:01.693" endtime="20250214 15:00:02.206"/>
</kw>
<msg timestamp="20250214 15:00:02.206" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:01.692" endtime="20250214 15:00:02.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:02.206" endtime="20250214 15:00:02.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:02.206" endtime="20250214 15:00:02.207"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:02.207" endtime="20250214 15:00:02.207"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:02.207" endtime="20250214 15:00:02.207"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:02.211" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:02.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:02.744" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:02.209" endtime="20250214 15:00:02.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:02.745" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:02 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:02 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:02.744" endtime="20250214 15:00:02.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:02.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:02.745" endtime="20250214 15:00:02.745"/>
</kw>
<status status="PASS" starttime="20250214 15:00:02.209" endtime="20250214 15:00:02.745"/>
</kw>
<msg timestamp="20250214 15:00:02.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:02.208" endtime="20250214 15:00:02.745"/>
</kw>
<msg timestamp="20250214 15:00:02.746" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:02.208" endtime="20250214 15:00:02.746"/>
</kw>
<msg timestamp="20250214 15:00:02.746" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:02.207" endtime="20250214 15:00:02.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:02.746" endtime="20250214 15:00:02.746"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:02.749" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:01 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:02 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:02 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:02.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:02.754" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 15:00:02.747" endtime="20250214 15:00:02.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:02.755" level="INFO">2</msg>
<status status="PASS" starttime="20250214 15:00:02.754" endtime="20250214 15:00:02.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:02.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:02.755" endtime="20250214 15:00:02.755"/>
</kw>
<msg timestamp="20250214 15:00:02.755" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 15:00:02.746" endtime="20250214 15:00:02.755"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:02.756" endtime="20250214 15:00:02.756"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:02.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:03.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:03.323" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:03.246Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:02.758" endtime="20250214 15:00:03.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:03.324" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:03.246Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:03.323" endtime="20250214 15:00:03.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:03.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:03.324" endtime="20250214 15:00:03.324"/>
</kw>
<status status="PASS" starttime="20250214 15:00:02.757" endtime="20250214 15:00:03.325"/>
</kw>
<msg timestamp="20250214 15:00:03.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:02.757" endtime="20250214 15:00:03.325"/>
</kw>
<msg timestamp="20250214 15:00:03.325" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:03.246Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:02.756" endtime="20250214 15:00:03.325"/>
</kw>
<msg timestamp="20250214 15:00:03.325" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:03.246Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:02.756" endtime="20250214 15:00:03.325"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:03.328" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:03.246Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:03.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:03.333" level="INFO">${output} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:03.326" endtime="20250214 15:00:03.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:03.334" level="INFO">"f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:03.333" endtime="20250214 15:00:03.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:03.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:03.334" endtime="20250214 15:00:03.334"/>
</kw>
<msg timestamp="20250214 15:00:03.334" level="INFO">${eTag} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:03.325" endtime="20250214 15:00:03.334"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:03.334" endtime="20250214 15:00:03.335"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:03.338" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-13115 --prefix ozone-test-6275424850/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:03.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:03.812" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:03.246Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:03.336" endtime="20250214 15:00:03.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:03.813" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:03.246Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:03.813" endtime="20250214 15:00:03.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:03.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:03.813" endtime="20250214 15:00:03.814"/>
</kw>
<status status="PASS" starttime="20250214 15:00:03.336" endtime="20250214 15:00:03.814"/>
</kw>
<msg timestamp="20250214 15:00:03.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:03.336" endtime="20250214 15:00:03.814"/>
</kw>
<msg timestamp="20250214 15:00:03.814" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:03.246Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:03.335" endtime="20250214 15:00:03.814"/>
</kw>
<msg timestamp="20250214 15:00:03.814" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/copyobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:03.246Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 15:00:03.335" endtime="20250214 15:00:03.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:03.814" endtime="20250214 15:00:03.815"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:03.818" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:04.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:04.298" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:03.816" endtime="20250214 15:00:04.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:04.299" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:04 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    },
    "ExpiresString": "Fri, 14 Feb 2025 15:00:04 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:04.298" endtime="20250214 15:00:04.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:04.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:04.299" endtime="20250214 15:00:04.299"/>
</kw>
<status status="PASS" starttime="20250214 15:00:03.816" endtime="20250214 15:00:04.299"/>
</kw>
<msg timestamp="20250214 15:00:04.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:03.816" endtime="20250214 15:00:04.299"/>
</kw>
<msg timestamp="20250214 15:00:04.300" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:03.815" endtime="20250214 15:00:04.300"/>
</kw>
<msg timestamp="20250214 15:00:04.300" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:03.815" endtime="20250214 15:00:04.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:04.300" endtime="20250214 15:00:04.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:04.300" endtime="20250214 15:00:04.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:04.300" endtime="20250214 15:00:04.301"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:04.302" endtime="20250214 15:00:04.302"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:04.305" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:04.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:04.779" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:04.303" endtime="20250214 15:00:04.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:04.780" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:04 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:04 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:04.780" endtime="20250214 15:00:04.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:04.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:04.781" endtime="20250214 15:00:04.781"/>
</kw>
<status status="PASS" starttime="20250214 15:00:04.303" endtime="20250214 15:00:04.781"/>
</kw>
<msg timestamp="20250214 15:00:04.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:04.303" endtime="20250214 15:00:04.781"/>
</kw>
<msg timestamp="20250214 15:00:04.781" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:04.302" endtime="20250214 15:00:04.781"/>
</kw>
<msg timestamp="20250214 15:00:04.782" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:04.302" endtime="20250214 15:00:04.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:04.782" endtime="20250214 15:00:04.782"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:04.785" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:03 GMT",
    "ContentLength": 29,
    "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:04 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:04 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:04.790" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250214 15:00:04.783" endtime="20250214 15:00:04.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:04.791" level="INFO">1</msg>
<status status="PASS" starttime="20250214 15:00:04.790" endtime="20250214 15:00:04.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:04.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:04.791" endtime="20250214 15:00:04.791"/>
</kw>
<msg timestamp="20250214 15:00:04.791" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250214 15:00:04.782" endtime="20250214 15:00:04.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:04.792" endtime="20250214 15:00:04.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:59:59.039" endtime="20250214 15:00:04.792"/>
</test>
<test id="s1-s1-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:04.796" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:05.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:05.277" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:04.794" endtime="20250214 15:00:05.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:05.278" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:05.278" endtime="20250214 15:00:05.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:05.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:05.278" endtime="20250214 15:00:05.279"/>
</kw>
<msg timestamp="20250214 15:00:05.279" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:04.793" endtime="20250214 15:00:05.279"/>
</kw>
<msg timestamp="20250214 15:00:05.279" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:04.793" endtime="20250214 15:00:05.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:05.279" endtime="20250214 15:00:05.279"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:05.283" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-6275424850/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:05.760" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:05.760" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:05.280" endtime="20250214 15:00:05.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:05.761" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:05.760" endtime="20250214 15:00:05.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:05.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:05.761" endtime="20250214 15:00:05.762"/>
</kw>
<msg timestamp="20250214 15:00:05.762" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:05.280" endtime="20250214 15:00:05.762"/>
</kw>
<msg timestamp="20250214 15:00:05.762" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:05.279" endtime="20250214 15:00:05.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:05.762" endtime="20250214 15:00:05.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:04.792" endtime="20250214 15:00:05.762"/>
</test>
<test id="s1-s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:05.767" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:05.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:05.772" level="INFO">${output} = f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 15:00:05.765" endtime="20250214 15:00:05.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:05.772" level="INFO">f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 15:00:05.772" endtime="20250214 15:00:05.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:05.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:05.773" endtime="20250214 15:00:05.773"/>
</kw>
<status status="PASS" starttime="20250214 15:00:05.764" endtime="20250214 15:00:05.773"/>
</kw>
<msg timestamp="20250214 15:00:05.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:05.764" endtime="20250214 15:00:05.773"/>
</kw>
<msg timestamp="20250214 15:00:05.773" level="INFO">${file_checksum} = f2e6a421572ea3d767264e84b169b0b7</msg>
<status status="PASS" starttime="20250214 15:00:05.763" endtime="20250214 15:00:05.773"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:05.777" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source destbucket-13115/ozone-test-6275424850/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:06.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:06.265" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:06.211Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:05.775" endtime="20250214 15:00:06.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:06.266" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:06.211Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:06.266" endtime="20250214 15:00:06.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:06.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:06.266" endtime="20250214 15:00:06.267"/>
</kw>
<status status="PASS" starttime="20250214 15:00:05.775" endtime="20250214 15:00:06.267"/>
</kw>
<msg timestamp="20250214 15:00:06.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:05.774" endtime="20250214 15:00:06.267"/>
</kw>
<msg timestamp="20250214 15:00:06.267" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:06.211Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:05.774" endtime="20250214 15:00:06.267"/>
</kw>
<msg timestamp="20250214 15:00:06.267" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:06.211Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:05.773" endtime="20250214 15:00:06.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:06.267" endtime="20250214 15:00:06.268"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:06.270" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"f2e6a421572ea3d767264e84b169b0b7\"",
        "LastModified": "2025-02-14T15:00:06.211Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:06.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:06.276" level="INFO">${output} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:06.268" endtime="20250214 15:00:06.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:06.276" level="INFO">"f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:06.276" endtime="20250214 15:00:06.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:06.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:06.277" endtime="20250214 15:00:06.277"/>
</kw>
<msg timestamp="20250214 15:00:06.277" level="INFO">${eTag} = "f2e6a421572ea3d767264e84b169b0b7"</msg>
<status status="PASS" starttime="20250214 15:00:06.268" endtime="20250214 15:00:06.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:06.277" endtime="20250214 15:00:06.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:05.763" endtime="20250214 15:00:06.278"/>
</test>
<test id="s1-s1-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:06.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:06.773" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:06.773" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:00:06.279" endtime="20250214 15:00:06.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:06.774" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:00:06.774" endtime="20250214 15:00:06.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:06.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:06.775" endtime="20250214 15:00:06.775"/>
</kw>
<msg timestamp="20250214 15:00:06.775" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:00:06.279" endtime="20250214 15:00:06.775"/>
</kw>
<msg timestamp="20250214 15:00:06.775" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:00:06.279" endtime="20250214 15:00:06.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:06.775" endtime="20250214 15:00:06.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:06.278" endtime="20250214 15:00:06.776"/>
</test>
<test id="s1-s1-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:06.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:07.265" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:07.265" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 15:00:06.778" endtime="20250214 15:00:07.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:07.266" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250214 15:00:07.265" endtime="20250214 15:00:07.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:07.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:07.266" endtime="20250214 15:00:07.267"/>
</kw>
<msg timestamp="20250214 15:00:07.267" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 15:00:06.777" endtime="20250214 15:00:07.267"/>
</kw>
<msg timestamp="20250214 15:00:07.267" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 15:00:06.777" endtime="20250214 15:00:07.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:07.267" endtime="20250214 15:00:07.267"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:07.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:07.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:07.754" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 15:00:07.268" endtime="20250214 15:00:07.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:07.755" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250214 15:00:07.754" endtime="20250214 15:00:07.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:07.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:07.755" endtime="20250214 15:00:07.755"/>
</kw>
<msg timestamp="20250214 15:00:07.756" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 15:00:07.268" endtime="20250214 15:00:07.756"/>
</kw>
<msg timestamp="20250214 15:00:07.756" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 15:00:07.267" endtime="20250214 15:00:07.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:07.756" endtime="20250214 15:00:07.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:06.776" endtime="20250214 15:00:07.756"/>
</test>
<test id="s1-s1-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:07.760" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 15:00:07.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:07.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:07.758" endtime="20250214 15:00:07.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:07.763" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:07.762" endtime="20250214 15:00:07.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:07.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:07.763" endtime="20250214 15:00:07.763"/>
</kw>
<status status="PASS" starttime="20250214 15:00:07.758" endtime="20250214 15:00:07.763"/>
</kw>
<msg timestamp="20250214 15:00:07.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:07.758" endtime="20250214 15:00:07.764"/>
</kw>
<status status="PASS" starttime="20250214 15:00:07.757" endtime="20250214 15:00:07.764"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:00:07.766" level="INFO">${custom_metadata_value} = LO0Lv83Q4WPmzWHJgo4ErKZihaAnRFcz9HJIboFq07aQ7uiJjNgBKsg7VdW2Eavg7jSdk8i8xfHRKTkPBxX7JKH0A9oh2X5rMI4ETSxeeD7qw6SkrGbcbON45FX1cBcCJ63MZA3FgnZwKdMyksv8Ryf8yxevSXrdFBCQLVlLPcu5oiGqQByvaZofwSCRLAnfKIboFX3g...</msg>
<status status="PASS" starttime="20250214 15:00:07.764" endtime="20250214 15:00:07.766"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:07.769" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-13115 --key ozone-test-6275424850/copyobject/key=value/f1 --copy-source erasure/ozone-test-6275424850/copyobject/key=value/f1 --metadata="custom-key1=LO0Lv83Q4WPmzWHJgo4ErKZihaAnRFcz9HJIboFq07aQ7uiJjNgBKsg7VdW2Eavg7jSdk8i8xfHRKTkPBxX7JKH0A9oh2X5rMI4ETSxeeD7qw6SkrGbcbON45FX1cBcCJ63MZA3FgnZwKdMyksv8Ryf8yxevSXrdFBCQLVlLPcu5oiGqQByvaZofwSCRLAnfKIboFX3gPM6KIfDlJImV5UNXjxMU32KB00KNM8bvWuWmQabAFuKWM0U05ruhpVCQlktQJ1uDc9YD5ZpZQawc2kvnHI6nb933AeZ9VbuftnBiUXJDdYw6zHrOWtvh5ZFpTg0vAXJQFoxVdnQLdrxUoldPzWsLKWtjB7bmZS1vLgvFl7Uk3umsSI0zgz1kzIo9VdBDneABVFWPy5w8E9yNW1fa2uYPCoUX0Iq9IwdUScFOy4qn4JvRn9HOZhhPQrkZUGuZ3tApSUMRqzkHbt23S76QpryUQiJqCGWUG0m6M1CUk2WyNXJjG2Y5anMiGDCAiXjkbb8xNxZMToEWoOYXEla85ZVrlBHRh8PYttIUeHdXk24yMkWZiQyPT0273I2Ql9z3sSVrjq4FPGpgMBMjqRGHIZruaXAgyJAHdySmbzBZ998O8eLrv1KNLGItigo4TPHpqHvC58FbGxXqZAoMCs5E5jNWxRDiyvGkMAKEeSdC25qwzokdA0vBasYlUSCXrcdesciDRe3md2PFWCkDUSb9ZB2dDMw5uBalYpXRH6abH7lWRIriNQKUwvbnF48NEpABVrN5JTzgRGyaA7HEGifuWs7zv598aae8lDS4XG7OGA2XjhgvvtdB8BxNium3GKUJuM7DO9hxB4EguaRTeLJAZtbJOc9Cg3trXiagybtyrVeupqOP3G0nqHr9cAnWB7HbHWqbGH1bISeu3hRKwCU9lUUGc7O9AD6oPMede4ili1nILZLCxKqdwv6FpRXwC28zcYIy88aVtApWHlbp5aeccpD1ip8ImleGlEq40NBK6PxBCmBhpj8uZoUSmsPucrRnCR8jZ1iZGTnuCkS4hYSXI6CMu5hwt4Im3kALPpTfgLjgkRPbitV3yde6ekHz4RYWKA5bzyJ0BoHt4kfzzVYZPy2D8RHdsiRt0CQmkLNbrPpHi1OyHiIFI28jGe2YgrwBKAQ4TaRyLqEA61a41mtW3kk0EH4kiRwDeBnmgsdKkwWOsF0H7ecmGlMv3FLgdjKVuymDx2pUtYaYfxMENMh7uodFmxVdZNMMnqUVyoJOdiFIGfRXTJTFbRCaSV3Xt9UJlvT5oMkZgx4e4VVqHqqF5nvQwcGqMwud7wsHBqnbtNGXhcfPCXrTZrdfAgph1OIGHEgA3MiZO9lZx37kx6s7YnQ9tP0aadcVfB04fz2yUtDIcna65ELRXf6f6uxOD1M5k0wTB2AdB6ubDzbAZmzj7ImANXgynsEdChe4OzhYLsGsaFnsM8Z2z7GEZFfbazNFsDUZpmKf476JYL4YRGfdTTZ97xwvD6FKzcAkj5fD5zMizaaWa2uPXkGnjqZKb8SIgnABuRNDxMqpBvo0NYXvpbZzth0tqAM5fksLekKHRgSLejGFTTAfS7xs1OnyNIUnPk16jan0Dn3jb83dr15udqxAppm1gNemcpOyp6VFYjXdVsOvboxpFlJSjhcjp74GIqpBkPYvVsdmRFjsYUVx0Roz0riHoPPqLus5oLQ1gGY5FWybcp3C12WDTytajJhkhwNkpco7VavxXeh9jpQLcLm2V9JkKJKbpmYt4Oq14Aa01wGYIEbT927LBdjql8FDJpTVMuBfuym3i9uAG61YdL0A58t4XnQW7zTOVxFZwDwt1vZRFuFlPd1KYZJQO45rMDfFf9r7nzTEuYLUjYoGfd8SrkyioFK4G6e8NB7LGDQIiMDDyHPo77JdNxAKSQRvOUvmq53bz2vdi5Y1n0AieXhjA8yOUeB83sRiP4guzjMBRjH2ifEHWok6XRVvc3c7ZP3q3P2KLZRNCIK7oVHQNEBo8MYVUSgH0RTrBg7zXY7yjJbIKb8vZG65brwAeYse8HC72m1tVktGMcshwhBGLjbi81dySHQwsj9iDEpFaXidEgM3o4jtFTN03uHVHuu7hPULgkoEs7AytxTVU7JRt7G1PYDiioGm7VUK0TIIfKzQX2eGm9IfDY3hhcHfz9BlOj2qaQ0m53f7XbkdUmqRemh6nCqDHlb8CZtkWhUpmQ5oW3YtCTGTmo28BCEUJRxf9NRrxlydLraSRko0OWpVQ02nVERHoQVK8hnkdw7xM5bmL9230M3WijWdN22paUO106zwfVai8YMMREvak1IOcucEOdBeKY8YdWDUUy6JR7QyFXb3G3MLh24f3mbZXjimR7YdGk7yVYrJvObCXg5Ictwwm8I7JTFNyHMusskU98c0cYRsZdx6RzN0qiAWW0bQECNkRSjbWm7xYQ0weioMNyeXnvKlDotsE2DECDUTa5g6Fiq42pUaBemH1Qnv0nr9RG8bPYcJ8XEAtT2VPxpoUjsANzVgrTThdeKALKNOC1BRhLo4H2j0KSAtjaAbx9SIQF7mZbxVScqSOrFCY9aupqzK0qs2wd2fe3U9hMKvY47nqAj5TR2zENjcvRJFfwqgLZmwInIh4j1uFSsZOZpewWuTrwVFQQqn6bE7jvkVLOkisGcpp1uxVCXlXdp4MThX0v24kQZXOCYF0mPIGSJuZZ0GluGyZnBjtJWmJkRIzBxP0k3OYO1D7sFRazhUYKgHpGzgEGQCC8DwP388nG7XF8qwHQOKzCDOSP4zqnC7r2jh7moUTCaDDfjZJQZ2eHOVrfJMQQwd8aPNSa1jyQzxpXye7mk37JS1cytbpEC8uL2WR4Z5N7zRvxBDINUinhKYdfy9e2VivW29a5Ucj0pcyG54FRTEGU9EXZt96AJBC3xj9xGl2tcC3Jq4pnYltiScRVLJjbCJ4wnNJImmPNVbHH2ILOxwPNjmE0gwU6Zg7VmqF1VxASD9" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:08.266" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:08.266" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:07.767" endtime="20250214 15:00:08.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:08.268" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:08.267" endtime="20250214 15:00:08.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:08.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:08.268" endtime="20250214 15:00:08.268"/>
</kw>
<msg timestamp="20250214 15:00:08.268" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:07.767" endtime="20250214 15:00:08.268"/>
</kw>
<msg timestamp="20250214 15:00:08.268" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:07.766" endtime="20250214 15:00:08.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:08.269" endtime="20250214 15:00:08.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:07.757" endtime="20250214 15:00:08.269"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:59:59.029" endtime="20250214 15:00:08.270"/>
</suite>
<suite id="s1-s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:00:08.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:08.279" endtime="20250214 15:00:08.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.279" endtime="20250214 15:00:08.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.279" endtime="20250214 15:00:08.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.279" endtime="20250214 15:00:08.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.280" endtime="20250214 15:00:08.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.280" endtime="20250214 15:00:08.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.280" endtime="20250214 15:00:08.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.280" endtime="20250214 15:00:08.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:00:08.280" endtime="20250214 15:00:08.280"/>
</kw>
<status status="PASS" starttime="20250214 15:00:08.279" endtime="20250214 15:00:08.280"/>
</kw>
<test id="s1-s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:08.284" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:08.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:08.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:08.281" endtime="20250214 15:00:08.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:08.286" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:08.286" endtime="20250214 15:00:08.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:08.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:08.287" endtime="20250214 15:00:08.287"/>
</kw>
<status status="PASS" starttime="20250214 15:00:08.281" endtime="20250214 15:00:08.287"/>
</kw>
<msg timestamp="20250214 15:00:08.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:08.281" endtime="20250214 15:00:08.287"/>
</kw>
<status status="PASS" starttime="20250214 15:00:08.281" endtime="20250214 15:00:08.287"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:08.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:08.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:08.792" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:08.288" endtime="20250214 15:00:08.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:08.793" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:08.793" endtime="20250214 15:00:08.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:08.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:08.793" endtime="20250214 15:00:08.794"/>
</kw>
<msg timestamp="20250214 15:00:08.794" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:08.288" endtime="20250214 15:00:08.794"/>
</kw>
<msg timestamp="20250214 15:00:08.794" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:08.287" endtime="20250214 15:00:08.794"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:08.798" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:09.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:09.278" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:08.795" endtime="20250214 15:00:09.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:09.279" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:09.278" endtime="20250214 15:00:09.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:09.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:09.279" endtime="20250214 15:00:09.280"/>
</kw>
<status status="PASS" starttime="20250214 15:00:08.795" endtime="20250214 15:00:09.280"/>
</kw>
<msg timestamp="20250214 15:00:09.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:08.795" endtime="20250214 15:00:09.280"/>
</kw>
<msg timestamp="20250214 15:00:09.280" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:08.795" endtime="20250214 15:00:09.280"/>
</kw>
<msg timestamp="20250214 15:00:09.280" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:08.794" endtime="20250214 15:00:09.280"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:09.281" endtime="20250214 15:00:09.281"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:09.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:09.756" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:09.756" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:09.282" endtime="20250214 15:00:09.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:09.757" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:09.756" endtime="20250214 15:00:09.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:09.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:09.757" endtime="20250214 15:00:09.757"/>
</kw>
<msg timestamp="20250214 15:00:09.757" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:09.281" endtime="20250214 15:00:09.757"/>
</kw>
<msg timestamp="20250214 15:00:09.757" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:09.281" endtime="20250214 15:00:09.758"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:09.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:10.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:10.259" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 15:00:09.759" endtime="20250214 15:00:10.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:10.260" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 15:00:10.259" endtime="20250214 15:00:10.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:10.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:10.260" endtime="20250214 15:00:10.260"/>
</kw>
<status status="PASS" starttime="20250214 15:00:09.759" endtime="20250214 15:00:10.260"/>
</kw>
<msg timestamp="20250214 15:00:10.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:09.758" endtime="20250214 15:00:10.261"/>
</kw>
<msg timestamp="20250214 15:00:10.261" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 15:00:09.758" endtime="20250214 15:00:10.261"/>
</kw>
<msg timestamp="20250214 15:00:10.261" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 15:00:09.758" endtime="20250214 15:00:10.261"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:10.261" endtime="20250214 15:00:10.261"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:10.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:10.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:10.817" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:10.263" endtime="20250214 15:00:10.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:10.818" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:10.817" endtime="20250214 15:00:10.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:10.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:10.818" endtime="20250214 15:00:10.818"/>
</kw>
<status status="PASS" starttime="20250214 15:00:10.262" endtime="20250214 15:00:10.819"/>
</kw>
<msg timestamp="20250214 15:00:10.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:10.262" endtime="20250214 15:00:10.819"/>
</kw>
<msg timestamp="20250214 15:00:10.819" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:10.262" endtime="20250214 15:00:10.819"/>
</kw>
<msg timestamp="20250214 15:00:10.819" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:10.261" endtime="20250214 15:00:10.819"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:10.822" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:11.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:11.301" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:10.820" endtime="20250214 15:00:11.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:11.302" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:11 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:11 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:11.301" endtime="20250214 15:00:11.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:11.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:11.302" endtime="20250214 15:00:11.303"/>
</kw>
<msg timestamp="20250214 15:00:11.303" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:10.820" endtime="20250214 15:00:11.303"/>
</kw>
<status status="PASS" starttime="20250214 15:00:10.819" endtime="20250214 15:00:11.303"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:11.306" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:11.791" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:11.791" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:11.304" endtime="20250214 15:00:11.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:11.792" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:11.791" endtime="20250214 15:00:11.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:11.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:11.792" endtime="20250214 15:00:11.792"/>
</kw>
<msg timestamp="20250214 15:00:11.792" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:11.304" endtime="20250214 15:00:11.792"/>
</kw>
<status status="PASS" starttime="20250214 15:00:11.303" endtime="20250214 15:00:11.792"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:11.796" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:12.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:12.276" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:11.794" endtime="20250214 15:00:12.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:12.277" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:12.276" endtime="20250214 15:00:12.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:12.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:12.277" endtime="20250214 15:00:12.277"/>
</kw>
<status status="PASS" starttime="20250214 15:00:11.793" endtime="20250214 15:00:12.277"/>
</kw>
<msg timestamp="20250214 15:00:12.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:11.793" endtime="20250214 15:00:12.278"/>
</kw>
<msg timestamp="20250214 15:00:12.278" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:11.793" endtime="20250214 15:00:12.278"/>
</kw>
<msg timestamp="20250214 15:00:12.278" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 15:00:11.793" endtime="20250214 15:00:12.278"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:12.278" endtime="20250214 15:00:12.278"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:12.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket erasure --key ozone-test-6275424850/word.txt --copy-source erasure/ozone-test-6275424850/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:12.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:12.848" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T15:00:12.784Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:12.280" endtime="20250214 15:00:12.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:12.849" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T15:00:12.784Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:12.848" endtime="20250214 15:00:12.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:12.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:12.849" endtime="20250214 15:00:12.849"/>
</kw>
<status status="PASS" starttime="20250214 15:00:12.279" endtime="20250214 15:00:12.850"/>
</kw>
<msg timestamp="20250214 15:00:12.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:12.279" endtime="20250214 15:00:12.850"/>
</kw>
<msg timestamp="20250214 15:00:12.850" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T15:00:12.784Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:12.279" endtime="20250214 15:00:12.850"/>
</kw>
<msg timestamp="20250214 15:00:12.850" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T15:00:12.784Z"
    }
}</msg>
<status status="PASS" starttime="20250214 15:00:12.278" endtime="20250214 15:00:12.850"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:12.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:13.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:13.333" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:12.851" endtime="20250214 15:00:13.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:13.334" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:13 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:13 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:13.334" endtime="20250214 15:00:13.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:13.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:13.335" endtime="20250214 15:00:13.335"/>
</kw>
<msg timestamp="20250214 15:00:13.335" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:12.851" endtime="20250214 15:00:13.335"/>
</kw>
<status status="PASS" starttime="20250214 15:00:12.850" endtime="20250214 15:00:13.335"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:13.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:13.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:13.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:13.337" endtime="20250214 15:00:13.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:13.820" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:13.819" endtime="20250214 15:00:13.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:13.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:13.820" endtime="20250214 15:00:13.820"/>
</kw>
<status status="PASS" starttime="20250214 15:00:13.337" endtime="20250214 15:00:13.820"/>
</kw>
<msg timestamp="20250214 15:00:13.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:13.337" endtime="20250214 15:00:13.821"/>
</kw>
<msg timestamp="20250214 15:00:13.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:13.336" endtime="20250214 15:00:13.821"/>
</kw>
<status status="PASS" starttime="20250214 15:00:13.335" endtime="20250214 15:00:13.821"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:13.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:14.313" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:14.313" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:13.822" endtime="20250214 15:00:14.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:14.314" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:14.313" endtime="20250214 15:00:14.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:14.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:14.314" endtime="20250214 15:00:14.314"/>
</kw>
<msg timestamp="20250214 15:00:14.315" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:13.821" endtime="20250214 15:00:14.315"/>
</kw>
<status status="PASS" starttime="20250214 15:00:13.821" endtime="20250214 15:00:14.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:08.280" endtime="20250214 15:00:14.315"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:00:08.271" endtime="20250214 15:00:14.315"/>
</suite>
<suite id="s1-s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:00:14.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.324" endtime="20250214 15:00:14.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.325" endtime="20250214 15:00:14.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.325" endtime="20250214 15:00:14.325"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:00:14.325" endtime="20250214 15:00:14.325"/>
</kw>
<status status="PASS" starttime="20250214 15:00:14.323" endtime="20250214 15:00:14.325"/>
</kw>
<test id="s1-s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:14.328" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:14.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:14.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:14.326" endtime="20250214 15:00:14.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:14.333" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:14.332" endtime="20250214 15:00:14.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:14.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:14.333" endtime="20250214 15:00:14.333"/>
</kw>
<status status="PASS" starttime="20250214 15:00:14.326" endtime="20250214 15:00:14.333"/>
</kw>
<msg timestamp="20250214 15:00:14.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:14.326" endtime="20250214 15:00:14.333"/>
</kw>
<status status="PASS" starttime="20250214 15:00:14.325" endtime="20250214 15:00:14.333"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:14.337" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:14.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:14.930" level="INFO">${output} = {
    "ETag": "\"b37209661ba6b578750c590816f96c66\""
}</msg>
<status status="PASS" starttime="20250214 15:00:14.335" endtime="20250214 15:00:14.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:14.931" level="INFO">{
    "ETag": "\"b37209661ba6b578750c590816f96c66\""
}</msg>
<status status="PASS" starttime="20250214 15:00:14.931" endtime="20250214 15:00:14.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:14.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:14.932" endtime="20250214 15:00:14.932"/>
</kw>
<status status="PASS" starttime="20250214 15:00:14.334" endtime="20250214 15:00:14.932"/>
</kw>
<msg timestamp="20250214 15:00:14.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:14.334" endtime="20250214 15:00:14.933"/>
</kw>
<msg timestamp="20250214 15:00:14.933" level="INFO">${output} = {
    "ETag": "\"b37209661ba6b578750c590816f96c66\""
}</msg>
<status status="PASS" starttime="20250214 15:00:14.334" endtime="20250214 15:00:14.933"/>
</kw>
<msg timestamp="20250214 15:00:14.933" level="INFO">${result} = {
    "ETag": "\"b37209661ba6b578750c590816f96c66\""
}</msg>
<status status="PASS" starttime="20250214 15:00:14.334" endtime="20250214 15:00:14.933"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:14.937" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:15.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:15.426" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T15:00:14.853Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 15:00:14.935" endtime="20250214 15:00:15.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:15.426" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T15:00:14.853Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:15.426" endtime="20250214 15:00:15.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:15.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:15.427" endtime="20250214 15:00:15.427"/>
</kw>
<status status="PASS" starttime="20250214 15:00:14.934" endtime="20250214 15:00:15.427"/>
</kw>
<msg timestamp="20250214 15:00:15.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:14.934" endtime="20250214 15:00:15.427"/>
</kw>
<msg timestamp="20250214 15:00:15.427" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T15:00:14.853Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 15:00:14.934" endtime="20250214 15:00:15.427"/>
</kw>
<msg timestamp="20250214 15:00:15.428" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T15:00:14.853Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 15:00:14.933" endtime="20250214 15:00:15.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:15.428" endtime="20250214 15:00:15.428"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:15.432" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:15.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:15.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:15.429" endtime="20250214 15:00:15.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:15.939" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:15.938" endtime="20250214 15:00:15.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:15.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:15.939" endtime="20250214 15:00:15.939"/>
</kw>
<status status="PASS" starttime="20250214 15:00:15.429" endtime="20250214 15:00:15.939"/>
</kw>
<msg timestamp="20250214 15:00:15.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:15.429" endtime="20250214 15:00:15.939"/>
</kw>
<msg timestamp="20250214 15:00:15.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:15.429" endtime="20250214 15:00:15.940"/>
</kw>
<msg timestamp="20250214 15:00:15.940" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:15.428" endtime="20250214 15:00:15.940"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:15.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:16.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:16.423" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:15.942" endtime="20250214 15:00:16.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:16.424" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:16.423" endtime="20250214 15:00:16.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:16.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:16.424" endtime="20250214 15:00:16.424"/>
</kw>
<status status="PASS" starttime="20250214 15:00:15.941" endtime="20250214 15:00:16.424"/>
</kw>
<msg timestamp="20250214 15:00:16.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:15.941" endtime="20250214 15:00:16.424"/>
</kw>
<msg timestamp="20250214 15:00:16.424" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:15.940" endtime="20250214 15:00:16.424"/>
</kw>
<msg timestamp="20250214 15:00:16.425" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:15.940" endtime="20250214 15:00:16.425"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:16.425" endtime="20250214 15:00:16.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:14.325" endtime="20250214 15:00:16.425"/>
</test>
<test id="s1-s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:16.430" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:16.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:16.920" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:16.427" endtime="20250214 15:00:16.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:16.921" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
                           PRE ozone-test-6275424850/
                           PRE ozone-test-6660284094/
                           PRE ozone-test-7833036864/
                           PRE ozone-test-9574082611/
                           PRE specialchars/
2025-02-14 14:58:23       4068 README1.md
2025-02-14 14:58:21       4068 README10.md
2025-02-14 14:59:11    6291456 empty_file_ozone-test-7872130224
2025-02-14 14:58:22   10485761 multiUpload.1.gz
2025-02-14 14:58:23   10485761 multiUpload.2.gz
2025-02-14 14:58:25   20971522 rbufgvtajf
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 15:00:16.920" endtime="20250214 15:00:16.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:16.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:16.921" endtime="20250214 15:00:16.922"/>
</kw>
<status status="PASS" starttime="20250214 15:00:16.427" endtime="20250214 15:00:16.922"/>
</kw>
<msg timestamp="20250214 15:00:16.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:16.427" endtime="20250214 15:00:16.922"/>
</kw>
<msg timestamp="20250214 15:00:16.922" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:16.426" endtime="20250214 15:00:16.922"/>
</kw>
<msg timestamp="20250214 15:00:16.922" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:16.426" endtime="20250214 15:00:16.922"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:16.922" endtime="20250214 15:00:16.923"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:16.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:17.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:17.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:16.924" endtime="20250214 15:00:17.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:17.399" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:17.398" endtime="20250214 15:00:17.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:17.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:17.399" endtime="20250214 15:00:17.399"/>
</kw>
<status status="PASS" starttime="20250214 15:00:16.924" endtime="20250214 15:00:17.400"/>
</kw>
<msg timestamp="20250214 15:00:17.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:16.923" endtime="20250214 15:00:17.400"/>
</kw>
<msg timestamp="20250214 15:00:17.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:16.923" endtime="20250214 15:00:17.400"/>
</kw>
<msg timestamp="20250214 15:00:17.400" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:16.923" endtime="20250214 15:00:17.400"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:17.404" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:17.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:17.862" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:17.402" endtime="20250214 15:00:17.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:17.863" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
                           PRE ozone-test-6275424850/
                           PRE ozone-test-6660284094/
                           PRE ozone-test-7833036864/
                           PRE ozone-test-9574082611/
                           PRE specialchars/
2025-02-14 14:58:23       4068 README1.md
2025-02-14 14:58:21       4068 README10.md
2025-02-14 14:59:11    6291456 empty_file_ozone-test-7872130224
2025-02-14 14:58:22   10485761 multiUpload.1.gz
2025-02-14 14:58:23   10485761 multiUpload.2.gz
2025-02-14 14:58:25   20971522 rbufgvtajf
2025-02-14 14:58:17         29 testfile</msg>
<status status="PASS" starttime="20250214 15:00:17.862" endtime="20250214 15:00:17.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:17.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:17.863" endtime="20250214 15:00:17.863"/>
</kw>
<status status="PASS" starttime="20250214 15:00:17.401" endtime="20250214 15:00:17.863"/>
</kw>
<msg timestamp="20250214 15:00:17.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:17.401" endtime="20250214 15:00:17.863"/>
</kw>
<msg timestamp="20250214 15:00:17.864" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:17.400" endtime="20250214 15:00:17.864"/>
</kw>
<msg timestamp="20250214 15:00:17.864" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3488854329/
                           PRE ozone-test-4343865812/
             ...</msg>
<status status="PASS" starttime="20250214 15:00:17.400" endtime="20250214 15:00:17.864"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:17.864" endtime="20250214 15:00:17.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:16.426" endtime="20250214 15:00:17.864"/>
</test>
<test id="s1-s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:17.868" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:17.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:17.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:17.866" endtime="20250214 15:00:17.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:17.872" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:17.872" endtime="20250214 15:00:17.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:17.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:17.873" endtime="20250214 15:00:17.873"/>
</kw>
<status status="PASS" starttime="20250214 15:00:17.866" endtime="20250214 15:00:17.873"/>
</kw>
<msg timestamp="20250214 15:00:17.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:17.865" endtime="20250214 15:00:17.873"/>
</kw>
<status status="PASS" starttime="20250214 15:00:17.865" endtime="20250214 15:00:17.873"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:17.876" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:18.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:18.350" level="INFO">${output} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 15:00:17.875" endtime="20250214 15:00:18.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:18.351" level="INFO">Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 15:00:18.351" endtime="20250214 15:00:18.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:18.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:18.351" endtime="20250214 15:00:18.352"/>
</kw>
<status status="PASS" starttime="20250214 15:00:17.874" endtime="20250214 15:00:18.352"/>
</kw>
<msg timestamp="20250214 15:00:18.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:17.874" endtime="20250214 15:00:18.352"/>
</kw>
<msg timestamp="20250214 15:00:18.352" level="INFO">${output} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 15:00:17.874" endtime="20250214 15:00:18.352"/>
</kw>
<msg timestamp="20250214 15:00:18.352" level="INFO">${result} = Completed 29 Bytes/29 Bytes (728 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 15:00:17.873" endtime="20250214 15:00:18.352"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:18.356" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:18.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:18.826" level="INFO">${output} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:18.354" endtime="20250214 15:00:18.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:18.827" level="INFO">2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:18.826" endtime="20250214 15:00:18.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:18.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:18.827" endtime="20250214 15:00:18.828"/>
</kw>
<status status="PASS" starttime="20250214 15:00:18.354" endtime="20250214 15:00:18.828"/>
</kw>
<msg timestamp="20250214 15:00:18.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:18.353" endtime="20250214 15:00:18.828"/>
</kw>
<msg timestamp="20250214 15:00:18.828" level="INFO">${output} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:18.353" endtime="20250214 15:00:18.828"/>
</kw>
<msg timestamp="20250214 15:00:18.828" level="INFO">${result} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:18.353" endtime="20250214 15:00:18.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:18.828" endtime="20250214 15:00:18.828"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:18.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:19.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:19.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:18.831" endtime="20250214 15:00:19.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:19.302" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:19.302" endtime="20250214 15:00:19.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:19.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:19.303" endtime="20250214 15:00:19.303"/>
</kw>
<status status="PASS" starttime="20250214 15:00:18.830" endtime="20250214 15:00:19.303"/>
</kw>
<msg timestamp="20250214 15:00:19.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:18.830" endtime="20250214 15:00:19.303"/>
</kw>
<msg timestamp="20250214 15:00:19.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:18.829" endtime="20250214 15:00:19.303"/>
</kw>
<msg timestamp="20250214 15:00:19.304" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:18.829" endtime="20250214 15:00:19.304"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:19.307" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-6275424850/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:19.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:19.756" level="INFO">${output} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:19.305" endtime="20250214 15:00:19.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:19.757" level="INFO">2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:19.756" endtime="20250214 15:00:19.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:19.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:19.757" endtime="20250214 15:00:19.757"/>
</kw>
<status status="PASS" starttime="20250214 15:00:19.305" endtime="20250214 15:00:19.757"/>
</kw>
<msg timestamp="20250214 15:00:19.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:19.304" endtime="20250214 15:00:19.757"/>
</kw>
<msg timestamp="20250214 15:00:19.757" level="INFO">${output} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:19.304" endtime="20250214 15:00:19.758"/>
</kw>
<msg timestamp="20250214 15:00:19.758" level="INFO">${result} = 2025-02-14 15:00:18         29 f1</msg>
<status status="PASS" starttime="20250214 15:00:19.304" endtime="20250214 15:00:19.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:19.758" endtime="20250214 15:00:19.758"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:19.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:20.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:20.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:19.759" endtime="20250214 15:00:20.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:20.239" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:20.238" endtime="20250214 15:00:20.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:20.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:20.239" endtime="20250214 15:00:20.240"/>
</kw>
<status status="PASS" starttime="20250214 15:00:19.759" endtime="20250214 15:00:20.240"/>
</kw>
<msg timestamp="20250214 15:00:20.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:19.759" endtime="20250214 15:00:20.240"/>
</kw>
<msg timestamp="20250214 15:00:20.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:19.759" endtime="20250214 15:00:20.240"/>
</kw>
<msg timestamp="20250214 15:00:20.240" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:19.758" endtime="20250214 15:00:20.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:17.865" endtime="20250214 15:00:20.240"/>
</test>
<test id="s1-s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:20.244" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:20.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:20.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:20.242" endtime="20250214 15:00:20.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:20.249" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:20.248" endtime="20250214 15:00:20.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:20.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:20.249" endtime="20250214 15:00:20.250"/>
</kw>
<status status="PASS" starttime="20250214 15:00:20.242" endtime="20250214 15:00:20.250"/>
</kw>
<msg timestamp="20250214 15:00:20.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:20.242" endtime="20250214 15:00:20.250"/>
</kw>
<status status="PASS" starttime="20250214 15:00:20.241" endtime="20250214 15:00:20.250"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:20.253" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:20.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:20.779" level="INFO">${output} = Completed 29 Bytes/29 Bytes (388 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.251" endtime="20250214 15:00:20.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:20.780" level="INFO">Completed 29 Bytes/29 Bytes (388 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.780" endtime="20250214 15:00:20.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:20.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:20.780" endtime="20250214 15:00:20.781"/>
</kw>
<status status="PASS" starttime="20250214 15:00:20.251" endtime="20250214 15:00:20.781"/>
</kw>
<msg timestamp="20250214 15:00:20.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:20.251" endtime="20250214 15:00:20.781"/>
</kw>
<msg timestamp="20250214 15:00:20.781" level="INFO">${output} = Completed 29 Bytes/29 Bytes (388 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.250" endtime="20250214 15:00:20.781"/>
</kw>
<msg timestamp="20250214 15:00:20.782" level="INFO">${result} = Completed 29 Bytes/29 Bytes (388 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.250" endtime="20250214 15:00:20.782"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:20.786" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:21.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:21.257" level="INFO">${output} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.783" endtime="20250214 15:00:21.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:21.258" level="INFO">2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:21.258" endtime="20250214 15:00:21.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:21.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:21.258" endtime="20250214 15:00:21.259"/>
</kw>
<status status="PASS" starttime="20250214 15:00:20.783" endtime="20250214 15:00:21.259"/>
</kw>
<msg timestamp="20250214 15:00:21.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:20.783" endtime="20250214 15:00:21.259"/>
</kw>
<msg timestamp="20250214 15:00:21.259" level="INFO">${output} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.782" endtime="20250214 15:00:21.259"/>
</kw>
<msg timestamp="20250214 15:00:21.259" level="INFO">${result} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:20.782" endtime="20250214 15:00:21.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:21.259" endtime="20250214 15:00:21.260"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:21.263" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:21.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:21.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:21.261" endtime="20250214 15:00:21.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:21.759" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:21.758" endtime="20250214 15:00:21.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:21.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:21.759" endtime="20250214 15:00:21.760"/>
</kw>
<status status="PASS" starttime="20250214 15:00:21.261" endtime="20250214 15:00:21.760"/>
</kw>
<msg timestamp="20250214 15:00:21.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:21.260" endtime="20250214 15:00:21.760"/>
</kw>
<msg timestamp="20250214 15:00:21.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:21.260" endtime="20250214 15:00:21.760"/>
</kw>
<msg timestamp="20250214 15:00:21.760" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:21.260" endtime="20250214 15:00:21.760"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:21.765" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-6275424850/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:22.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:22.247" level="INFO">${output} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:21.763" endtime="20250214 15:00:22.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:22.248" level="INFO">2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:22.247" endtime="20250214 15:00:22.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:22.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:22.248" endtime="20250214 15:00:22.248"/>
</kw>
<status status="PASS" starttime="20250214 15:00:21.762" endtime="20250214 15:00:22.248"/>
</kw>
<msg timestamp="20250214 15:00:22.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:21.762" endtime="20250214 15:00:22.249"/>
</kw>
<msg timestamp="20250214 15:00:22.249" level="INFO">${output} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:21.761" endtime="20250214 15:00:22.249"/>
</kw>
<msg timestamp="20250214 15:00:22.249" level="INFO">${result} = 2025-02-14 15:00:20         29 filefile</msg>
<status status="PASS" starttime="20250214 15:00:21.761" endtime="20250214 15:00:22.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:22.249" endtime="20250214 15:00:22.249"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:22.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:22.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:22.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:22.251" endtime="20250214 15:00:22.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:22.734" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:22.734" endtime="20250214 15:00:22.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:22.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:22.734" endtime="20250214 15:00:22.735"/>
</kw>
<status status="PASS" starttime="20250214 15:00:22.250" endtime="20250214 15:00:22.735"/>
</kw>
<msg timestamp="20250214 15:00:22.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:22.250" endtime="20250214 15:00:22.735"/>
</kw>
<msg timestamp="20250214 15:00:22.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:22.250" endtime="20250214 15:00:22.735"/>
</kw>
<msg timestamp="20250214 15:00:22.735" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:22.249" endtime="20250214 15:00:22.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:20.241" endtime="20250214 15:00:22.735"/>
</test>
<test id="s1-s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:22.739" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:23.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:23.238" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:22.737" endtime="20250214 15:00:23.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:23.239" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:23.238" endtime="20250214 15:00:23.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:23.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:23.239" endtime="20250214 15:00:23.239"/>
</kw>
<msg timestamp="20250214 15:00:23.239" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:22.737" endtime="20250214 15:00:23.239"/>
</kw>
<msg timestamp="20250214 15:00:23.240" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 15:00:22.736" endtime="20250214 15:00:23.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:23.240" endtime="20250214 15:00:23.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:22.736" endtime="20250214 15:00:23.240"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:00:14.316" endtime="20250214 15:00:23.241"/>
</suite>
<suite id="s1-s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:00:23.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.250"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.250"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.251" endtime="20250214 15:00:23.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.251" endtime="20250214 15:00:23.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.251" endtime="20250214 15:00:23.251"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:00:23.251" endtime="20250214 15:00:23.251"/>
</kw>
<status status="PASS" starttime="20250214 15:00:23.250" endtime="20250214 15:00:23.251"/>
</kw>
<test id="s1-s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:23.254" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:23.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:23.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:23.252" endtime="20250214 15:00:23.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:23.257" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:23.257" endtime="20250214 15:00:23.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:23.257" endtime="20250214 15:00:23.257"/>
</kw>
<status status="PASS" starttime="20250214 15:00:23.252" endtime="20250214 15:00:23.258"/>
</kw>
<msg timestamp="20250214 15:00:23.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:23.252" endtime="20250214 15:00:23.258"/>
</kw>
<status status="PASS" starttime="20250214 15:00:23.251" endtime="20250214 15:00:23.258"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:23.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:23.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:23.788" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:23.259" endtime="20250214 15:00:23.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:23.789" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:23.788" endtime="20250214 15:00:23.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:23.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:23.789" endtime="20250214 15:00:23.789"/>
</kw>
<msg timestamp="20250214 15:00:23.790" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:23.258" endtime="20250214 15:00:23.790"/>
</kw>
<msg timestamp="20250214 15:00:23.790" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:23.258" endtime="20250214 15:00:23.790"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:23.793" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:24.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:24.270" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:23.791" endtime="20250214 15:00:24.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:24.271" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:24 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:24 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:24.271" endtime="20250214 15:00:24.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:24.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:24.271" endtime="20250214 15:00:24.272"/>
</kw>
<msg timestamp="20250214 15:00:24.272" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:23.790" endtime="20250214 15:00:24.272"/>
</kw>
<msg timestamp="20250214 15:00:24.272" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:23.790" endtime="20250214 15:00:24.272"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:24.275" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-6275424850/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:24.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:24.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:24.273" endtime="20250214 15:00:24.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:24.742" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:24.741" endtime="20250214 15:00:24.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:24.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:24.742" endtime="20250214 15:00:24.742"/>
</kw>
<msg timestamp="20250214 15:00:24.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:24.273" endtime="20250214 15:00:24.742"/>
</kw>
<msg timestamp="20250214 15:00:24.743" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:00:24.272" endtime="20250214 15:00:24.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:23.251" endtime="20250214 15:00:24.743"/>
</test>
<test id="s1-s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:24.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure-non-existent --key ozone-test-6275424850/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:25.217" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:25.217" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:24.745" endtime="20250214 15:00:25.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:25.218" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:25.217" endtime="20250214 15:00:25.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:25.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:25.218" endtime="20250214 15:00:25.218"/>
</kw>
<msg timestamp="20250214 15:00:25.218" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:24.744" endtime="20250214 15:00:25.218"/>
</kw>
<msg timestamp="20250214 15:00:25.219" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:24.744" endtime="20250214 15:00:25.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:25.219" endtime="20250214 15:00:25.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:25.219" endtime="20250214 15:00:25.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:24.743" endtime="20250214 15:00:25.219"/>
</test>
<test id="s1-s1-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:00:25.220" endtime="20250214 15:00:25.221"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:25.224" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:25.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:25.742" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:25.221" endtime="20250214 15:00:25.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:25.743" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:25.742" endtime="20250214 15:00:25.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:25.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:25.743" endtime="20250214 15:00:25.743"/>
</kw>
<msg timestamp="20250214 15:00:25.743" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:25.221" endtime="20250214 15:00:25.743"/>
</kw>
<msg timestamp="20250214 15:00:25.743" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:25.221" endtime="20250214 15:00:25.743"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:25.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:26.232" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:26.232" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:25.744" endtime="20250214 15:00:26.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:26.233" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:26.232" endtime="20250214 15:00:26.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:26.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:26.233" endtime="20250214 15:00:26.233"/>
</kw>
<msg timestamp="20250214 15:00:26.233" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:25.744" endtime="20250214 15:00:26.233"/>
</kw>
<msg timestamp="20250214 15:00:26.233" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:25.744" endtime="20250214 15:00:26.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:26.234" endtime="20250214 15:00:26.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:26.234" endtime="20250214 15:00:26.234"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:25.220" endtime="20250214 15:00:26.234"/>
</test>
<test id="s1-s1-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:00:26.235" endtime="20250214 15:00:26.235"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:26.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:26.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:26.748" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:26.236" endtime="20250214 15:00:26.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:26.748" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:26.748" endtime="20250214 15:00:26.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:26.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:26.749" endtime="20250214 15:00:26.749"/>
</kw>
<msg timestamp="20250214 15:00:26.749" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:26.236" endtime="20250214 15:00:26.749"/>
</kw>
<msg timestamp="20250214 15:00:26.749" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:26.236" endtime="20250214 15:00:26.749"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:26.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:27.233" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:27.233" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:26.750" endtime="20250214 15:00:27.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:27.234" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:27.234" endtime="20250214 15:00:27.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:27.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:27.234" endtime="20250214 15:00:27.235"/>
</kw>
<msg timestamp="20250214 15:00:27.235" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:26.750" endtime="20250214 15:00:27.235"/>
</kw>
<msg timestamp="20250214 15:00:27.235" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:26.749" endtime="20250214 15:00:27.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:27.235" endtime="20250214 15:00:27.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:27.235" endtime="20250214 15:00:27.236"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:27.239" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:27.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:27.713" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:27.237" endtime="20250214 15:00:27.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:27.714" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:27 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:27 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:27.713" endtime="20250214 15:00:27.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:27.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:27.714" endtime="20250214 15:00:27.714"/>
</kw>
<msg timestamp="20250214 15:00:27.715" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:27.236" endtime="20250214 15:00:27.715"/>
</kw>
<msg timestamp="20250214 15:00:27.715" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:27.236" endtime="20250214 15:00:27.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:26.235" endtime="20250214 15:00:27.715"/>
</test>
<test id="s1-s1-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:27.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:28.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:28.200" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:27.717" endtime="20250214 15:00:28.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:28.201" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:28.201" endtime="20250214 15:00:28.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:28.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:28.201" endtime="20250214 15:00:28.202"/>
</kw>
<msg timestamp="20250214 15:00:28.202" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:27.717" endtime="20250214 15:00:28.202"/>
</kw>
<msg timestamp="20250214 15:00:28.202" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 15:00:27.716" endtime="20250214 15:00:28.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:28.202" endtime="20250214 15:00:28.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:28.203" endtime="20250214 15:00:28.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:27.716" endtime="20250214 15:00:28.203"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:00:23.242" endtime="20250214 15:00:28.204"/>
</suite>
<suite id="s1-s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:00:28.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.213" endtime="20250214 15:00:28.214"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.214" endtime="20250214 15:00:28.214"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:00:28.214" endtime="20250214 15:00:28.214"/>
</kw>
<status status="PASS" starttime="20250214 15:00:28.212" endtime="20250214 15:00:28.214"/>
</kw>
<test id="s1-s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:28.217" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:28.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:28.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:28.215" endtime="20250214 15:00:28.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:28.222" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:28.221" endtime="20250214 15:00:28.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:28.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:28.222" endtime="20250214 15:00:28.222"/>
</kw>
<status status="PASS" starttime="20250214 15:00:28.215" endtime="20250214 15:00:28.222"/>
</kw>
<msg timestamp="20250214 15:00:28.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:28.214" endtime="20250214 15:00:28.222"/>
</kw>
<status status="PASS" starttime="20250214 15:00:28.214" endtime="20250214 15:00:28.223"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:28.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:28.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:28.749" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.224" endtime="20250214 15:00:28.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:28.750" level="INFO">{
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.750" endtime="20250214 15:00:28.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:28.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:28.750" endtime="20250214 15:00:28.751"/>
</kw>
<status status="PASS" starttime="20250214 15:00:28.224" endtime="20250214 15:00:28.751"/>
</kw>
<msg timestamp="20250214 15:00:28.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:28.223" endtime="20250214 15:00:28.751"/>
</kw>
<msg timestamp="20250214 15:00:28.751" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.223" endtime="20250214 15:00:28.751"/>
</kw>
<msg timestamp="20250214 15:00:28.751" level="INFO">${result} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.223" endtime="20250214 15:00:28.751"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:28.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:29.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:29.267" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.753" endtime="20250214 15:00:29.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:29.268" level="INFO">{
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:29.267" endtime="20250214 15:00:29.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:29.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:29.268" endtime="20250214 15:00:29.268"/>
</kw>
<status status="PASS" starttime="20250214 15:00:28.752" endtime="20250214 15:00:29.268"/>
</kw>
<msg timestamp="20250214 15:00:29.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:28.752" endtime="20250214 15:00:29.268"/>
</kw>
<msg timestamp="20250214 15:00:29.269" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.752" endtime="20250214 15:00:29.269"/>
</kw>
<msg timestamp="20250214 15:00:29.269" level="INFO">${result} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:28.751" endtime="20250214 15:00:29.269"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:29.272" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:29.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:29.780" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:29.270" endtime="20250214 15:00:29.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:29.781" level="INFO">{
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:29.781" endtime="20250214 15:00:29.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:29.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:29.781" endtime="20250214 15:00:29.782"/>
</kw>
<status status="PASS" starttime="20250214 15:00:29.270" endtime="20250214 15:00:29.782"/>
</kw>
<msg timestamp="20250214 15:00:29.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:29.270" endtime="20250214 15:00:29.782"/>
</kw>
<msg timestamp="20250214 15:00:29.782" level="INFO">${output} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:29.269" endtime="20250214 15:00:29.782"/>
</kw>
<msg timestamp="20250214 15:00:29.782" level="INFO">${result} = {
    "ETag": "\"8e517c979d6bab7f47243a8debac74f5\""
}</msg>
<status status="PASS" starttime="20250214 15:00:29.269" endtime="20250214 15:00:29.782"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:29.786" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:30.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:30.286" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1",
            "LastModified": "2025-02-14T15:00:28.685Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:29.784" endtime="20250214 15:00:30.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:30.287" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1",
            "LastModified": "2025-02-14T15:00:28.685Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f2",
            "LastModified": "2025-02-14T15:00:29.211Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f3",
            "LastModified": "2025-02-14T15:00:29.722Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:30.286" endtime="20250214 15:00:30.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:30.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:30.287" endtime="20250214 15:00:30.287"/>
</kw>
<status status="PASS" starttime="20250214 15:00:29.783" endtime="20250214 15:00:30.287"/>
</kw>
<msg timestamp="20250214 15:00:30.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:29.783" endtime="20250214 15:00:30.287"/>
</kw>
<msg timestamp="20250214 15:00:30.288" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1",
            "LastModified": "2025-02-14T15:00:28.685Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:29.783" endtime="20250214 15:00:30.288"/>
</kw>
<msg timestamp="20250214 15:00:30.288" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1",
            "LastModified": "2025-02-14T15:00:28.685Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:29.782" endtime="20250214 15:00:30.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.288" endtime="20250214 15:00:30.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.288" endtime="20250214 15:00:30.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.289" endtime="20250214 15:00:30.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.289" endtime="20250214 15:00:30.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.289" endtime="20250214 15:00:30.290"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:30.294" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket erasure --delete 'Objects=[{Key=ozone-test-6275424850/multidelete/key=value/f1},{Key=ozone-test-6275424850/multidelete/key=value/f2},{Key=ozone-test-6275424850/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:30.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:30.795" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 15:00:30.291" endtime="20250214 15:00:30.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:30.796" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 15:00:30.795" endtime="20250214 15:00:30.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:30.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:30.796" endtime="20250214 15:00:30.796"/>
</kw>
<status status="PASS" starttime="20250214 15:00:30.291" endtime="20250214 15:00:30.797"/>
</kw>
<msg timestamp="20250214 15:00:30.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:30.291" endtime="20250214 15:00:30.797"/>
</kw>
<msg timestamp="20250214 15:00:30.797" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 15:00:30.290" endtime="20250214 15:00:30.797"/>
</kw>
<msg timestamp="20250214 15:00:30.797" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 15:00:30.290" endtime="20250214 15:00:30.797"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:30.797" endtime="20250214 15:00:30.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:30.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:31.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:31.285" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f3",
            "LastModified": "2025-02-14T15:00:29.722Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:30.799" endtime="20250214 15:00:31.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:31.286" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f3",
            "LastModified": "2025-02-14T15:00:29.722Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:31.286" endtime="20250214 15:00:31.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:31.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:31.287" endtime="20250214 15:00:31.287"/>
</kw>
<status status="PASS" starttime="20250214 15:00:30.798" endtime="20250214 15:00:31.287"/>
</kw>
<msg timestamp="20250214 15:00:31.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:30.798" endtime="20250214 15:00:31.287"/>
</kw>
<msg timestamp="20250214 15:00:31.287" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f3",
            "LastModified": "2025-02-14T15:00:29.722Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:30.798" endtime="20250214 15:00:31.287"/>
</kw>
<msg timestamp="20250214 15:00:31.287" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/multidelete/key=value/f3",
            "LastModified": "2025-02-14T15:00:29.722Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 15:00:30.797" endtime="20250214 15:00:31.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:31.288" endtime="20250214 15:00:31.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:31.288" endtime="20250214 15:00:31.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:31.288" endtime="20250214 15:00:31.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:31.289" endtime="20250214 15:00:31.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:31.289" endtime="20250214 15:00:31.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:28.214" endtime="20250214 15:00:31.290"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:00:28.205" endtime="20250214 15:00:31.290"/>
</suite>
<suite id="s1-s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:00:31.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:31.298" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.299" endtime="20250214 15:00:31.299"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:00:31.300" endtime="20250214 15:00:31.300"/>
</kw>
<status status="PASS" starttime="20250214 15:00:31.298" endtime="20250214 15:00:31.300"/>
</kw>
<test id="s1-s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:31.303" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:00:31.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:31.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:31.301" endtime="20250214 15:00:31.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:31.306" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:31.305" endtime="20250214 15:00:31.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:31.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:31.306" endtime="20250214 15:00:31.306"/>
</kw>
<status status="PASS" starttime="20250214 15:00:31.300" endtime="20250214 15:00:31.306"/>
</kw>
<msg timestamp="20250214 15:00:31.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:31.300" endtime="20250214 15:00:31.306"/>
</kw>
<status status="PASS" starttime="20250214 15:00:31.300" endtime="20250214 15:00:31.306"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:31.310" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:31.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:31.819" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:31.308" endtime="20250214 15:00:31.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:31.820" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:31.819" endtime="20250214 15:00:31.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:31.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:31.820" endtime="20250214 15:00:31.820"/>
</kw>
<status status="PASS" starttime="20250214 15:00:31.307" endtime="20250214 15:00:31.820"/>
</kw>
<msg timestamp="20250214 15:00:31.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:31.307" endtime="20250214 15:00:31.820"/>
</kw>
<msg timestamp="20250214 15:00:31.821" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:31.307" endtime="20250214 15:00:31.821"/>
</kw>
<msg timestamp="20250214 15:00:31.821" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:31.306" endtime="20250214 15:00:31.821"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:31.825" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:32.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:32.351" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:31.823" endtime="20250214 15:00:32.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:32.352" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:32.352" endtime="20250214 15:00:32.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:32.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:32.353" endtime="20250214 15:00:32.353"/>
</kw>
<status status="PASS" starttime="20250214 15:00:31.822" endtime="20250214 15:00:32.353"/>
</kw>
<msg timestamp="20250214 15:00:32.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:31.822" endtime="20250214 15:00:32.353"/>
</kw>
<msg timestamp="20250214 15:00:32.353" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:31.821" endtime="20250214 15:00:32.353"/>
</kw>
<msg timestamp="20250214 15:00:32.353" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:31.821" endtime="20250214 15:00:32.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:32.354" endtime="20250214 15:00:32.354"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:32.357" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:32.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:32.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:32.355" endtime="20250214 15:00:32.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:32.361" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:32.361" endtime="20250214 15:00:32.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:32.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:32.362" endtime="20250214 15:00:32.362"/>
</kw>
<status status="PASS" starttime="20250214 15:00:32.354" endtime="20250214 15:00:32.362"/>
</kw>
<msg timestamp="20250214 15:00:32.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:32.354" endtime="20250214 15:00:32.362"/>
</kw>
<status status="PASS" starttime="20250214 15:00:32.354" endtime="20250214 15:00:32.362"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:32.366" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:32.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:32.871" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 15:00:32.364" endtime="20250214 15:00:32.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:32.872" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 15:00:32.871" endtime="20250214 15:00:32.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:32.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:32.872" endtime="20250214 15:00:32.872"/>
</kw>
<status status="PASS" starttime="20250214 15:00:32.363" endtime="20250214 15:00:32.872"/>
</kw>
<msg timestamp="20250214 15:00:32.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:32.363" endtime="20250214 15:00:32.873"/>
</kw>
<msg timestamp="20250214 15:00:32.873" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 15:00:32.363" endtime="20250214 15:00:32.873"/>
</kw>
<msg timestamp="20250214 15:00:32.873" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 15:00:32.362" endtime="20250214 15:00:32.873"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:32.877" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:33.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:33.355" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:32.874" endtime="20250214 15:00:33.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:33.356" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-6275424850/putobject/key=value/zerobyte",
            "LastModified": "2025-02-14T15:00:32.811Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:00:33.355" endtime="20250214 15:00:33.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:33.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:33.356" endtime="20250214 15:00:33.356"/>
</kw>
<status status="PASS" starttime="20250214 15:00:32.874" endtime="20250214 15:00:33.356"/>
</kw>
<msg timestamp="20250214 15:00:33.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:32.874" endtime="20250214 15:00:33.356"/>
</kw>
<msg timestamp="20250214 15:00:33.357" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:32.874" endtime="20250214 15:00:33.357"/>
</kw>
<msg timestamp="20250214 15:00:33.357" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:00:31.763Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:00:32.873" endtime="20250214 15:00:33.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:33.357" endtime="20250214 15:00:33.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:31.300" endtime="20250214 15:00:33.357"/>
</test>
<test id="s1-s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:33.362" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:33.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:33.847" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:33.360" endtime="20250214 15:00:33.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:33.848" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:33 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:33 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:33.847" endtime="20250214 15:00:33.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:33.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:33.848" endtime="20250214 15:00:33.848"/>
</kw>
<status status="PASS" starttime="20250214 15:00:33.359" endtime="20250214 15:00:33.848"/>
</kw>
<msg timestamp="20250214 15:00:33.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:33.359" endtime="20250214 15:00:33.848"/>
</kw>
<msg timestamp="20250214 15:00:33.849" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:33.359" endtime="20250214 15:00:33.849"/>
</kw>
<msg timestamp="20250214 15:00:33.849" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:33.358" endtime="20250214 15:00:33.849"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:33.852" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:33.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:33.857" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.850" endtime="20250214 15:00:33.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:33.858" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.857" endtime="20250214 15:00:33.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:33.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:33.858" endtime="20250214 15:00:33.858"/>
</kw>
<status status="PASS" starttime="20250214 15:00:33.850" endtime="20250214 15:00:33.858"/>
</kw>
<msg timestamp="20250214 15:00:33.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:33.850" endtime="20250214 15:00:33.858"/>
</kw>
<msg timestamp="20250214 15:00:33.859" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.849" endtime="20250214 15:00:33.859"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:33.862" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:33.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:33.866" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.860" endtime="20250214 15:00:33.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:33.867" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.866" endtime="20250214 15:00:33.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:33.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:33.867" endtime="20250214 15:00:33.867"/>
</kw>
<status status="PASS" starttime="20250214 15:00:33.859" endtime="20250214 15:00:33.867"/>
</kw>
<msg timestamp="20250214 15:00:33.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:33.859" endtime="20250214 15:00:33.867"/>
</kw>
<msg timestamp="20250214 15:00:33.867" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 15:00:33.859" endtime="20250214 15:00:33.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:33.868" endtime="20250214 15:00:33.868"/>
</kw>
<status status="PASS" starttime="20250214 15:00:33.849" endtime="20250214 15:00:33.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:33.868" endtime="20250214 15:00:33.868"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:33.872" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.354" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:32 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:33.870" endtime="20250214 15:00:34.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.354" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:32 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:34 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:34 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:34.354" endtime="20250214 15:00:34.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.355" endtime="20250214 15:00:34.355"/>
</kw>
<status status="PASS" starttime="20250214 15:00:33.869" endtime="20250214 15:00:34.355"/>
</kw>
<msg timestamp="20250214 15:00:34.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:33.869" endtime="20250214 15:00:34.355"/>
</kw>
<msg timestamp="20250214 15:00:34.355" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:32 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:33.869" endtime="20250214 15:00:34.355"/>
</kw>
<msg timestamp="20250214 15:00:34.355" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:32 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:33.868" endtime="20250214 15:00:34.355"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.359" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.364" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.357" endtime="20250214 15:00:34.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.365" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.364" endtime="20250214 15:00:34.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.365" endtime="20250214 15:00:34.365"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.356" endtime="20250214 15:00:34.365"/>
</kw>
<msg timestamp="20250214 15:00:34.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.356" endtime="20250214 15:00:34.366"/>
</kw>
<msg timestamp="20250214 15:00:34.366" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.356" endtime="20250214 15:00:34.366"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.369" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.373" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.367" endtime="20250214 15:00:34.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.374" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.374" endtime="20250214 15:00:34.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.374" endtime="20250214 15:00:34.375"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.366" endtime="20250214 15:00:34.375"/>
</kw>
<msg timestamp="20250214 15:00:34.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.366" endtime="20250214 15:00:34.375"/>
</kw>
<msg timestamp="20250214 15:00:34.375" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 15:00:34.366" endtime="20250214 15:00:34.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:34.375" endtime="20250214 15:00:34.375"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.356" endtime="20250214 15:00:34.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:33.358" endtime="20250214 15:00:34.376"/>
</test>
<test id="s1-s1-s14-t3" name="Get object with wrong signature" line="52">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:00:34.377" endtime="20250214 15:00:34.377"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.379" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/erasure/ozone-test-6275424850/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.396" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250214 15:00:34.377" endtime="20250214 15:00:34.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.397" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  82333      0 --:--:-- --:--:-- --:--:-- 82333
HTTP/1.1 403 Forbidden
Date: Fri, 14 Feb 2025 15:00:34 GMT
Cache-Control: no-cache
Expires: Fri, 14 Feb 2025 15:00:34 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: XuUgucWDeaPYiC
x-amz-request-id: 6b0f1116-4963-4ca7-bef9-7330c584c7f6
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.396" endtime="20250214 15:00:34.397"/>
</kw>
<msg timestamp="20250214 15:00:34.397" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250214 15:00:34.377" endtime="20250214 15:00:34.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:34.397" endtime="20250214 15:00:34.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:34.376" endtime="20250214 15:00:34.398"/>
</test>
<test id="s1-s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="57">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.400" endtime="20250214 15:00:34.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.907" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:34 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:34 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:34.906" endtime="20250214 15:00:34.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.907" endtime="20250214 15:00:34.907"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.400" endtime="20250214 15:00:34.907"/>
</kw>
<msg timestamp="20250214 15:00:34.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.400" endtime="20250214 15:00:34.907"/>
</kw>
<msg timestamp="20250214 15:00:34.908" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.399" endtime="20250214 15:00:34.908"/>
</kw>
<msg timestamp="20250214 15:00:34.908" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.399" endtime="20250214 15:00:34.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:34.908" endtime="20250214 15:00:34.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:34.908" endtime="20250214 15:00:34.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:34.909" endtime="20250214 15:00:34.909"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.912" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:34.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.916" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.910" endtime="20250214 15:00:34.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.916" level="INFO">Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.916" endtime="20250214 15:00:34.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.917" endtime="20250214 15:00:34.917"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.909" endtime="20250214 15:00:34.917"/>
</kw>
<msg timestamp="20250214 15:00:34.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.909" endtime="20250214 15:00:34.917"/>
</kw>
<msg timestamp="20250214 15:00:34.917" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.909" endtime="20250214 15:00:34.917"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.920" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:34.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:34.924" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.918" endtime="20250214 15:00:34.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:34.924" level="INFO">Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.924" endtime="20250214 15:00:34.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:34.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:34.924" endtime="20250214 15:00:34.925"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.918" endtime="20250214 15:00:34.925"/>
</kw>
<msg timestamp="20250214 15:00:34.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.918" endtime="20250214 15:00:34.925"/>
</kw>
<msg timestamp="20250214 15:00:34.925" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20250214 15:00:34.917" endtime="20250214 15:00:34.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:34.925" endtime="20250214 15:00:34.926"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:34.929" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:35.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.927" endtime="20250214 15:00:35.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.420" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:35 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:35 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:35.420" endtime="20250214 15:00:35.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.421" endtime="20250214 15:00:35.421"/>
</kw>
<status status="PASS" starttime="20250214 15:00:34.927" endtime="20250214 15:00:35.421"/>
</kw>
<msg timestamp="20250214 15:00:35.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:34.927" endtime="20250214 15:00:35.421"/>
</kw>
<msg timestamp="20250214 15:00:35.421" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.926" endtime="20250214 15:00:35.421"/>
</kw>
<msg timestamp="20250214 15:00:35.422" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:34.926" endtime="20250214 15:00:35.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.422" endtime="20250214 15:00:35.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.422" endtime="20250214 15:00:35.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.422" endtime="20250214 15:00:35.423"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.426" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:35.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.430" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.424" endtime="20250214 15:00:35.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.431" level="INFO">ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.430" endtime="20250214 15:00:35.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.431" endtime="20250214 15:00:35.431"/>
</kw>
<status status="PASS" starttime="20250214 15:00:35.423" endtime="20250214 15:00:35.431"/>
</kw>
<msg timestamp="20250214 15:00:35.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:35.423" endtime="20250214 15:00:35.431"/>
</kw>
<msg timestamp="20250214 15:00:35.431" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.423" endtime="20250214 15:00:35.431"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.435" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:35.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.438" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.432" endtime="20250214 15:00:35.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.439" level="INFO">ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.438" endtime="20250214 15:00:35.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.439" endtime="20250214 15:00:35.439"/>
</kw>
<status status="PASS" starttime="20250214 15:00:35.432" endtime="20250214 15:00:35.439"/>
</kw>
<msg timestamp="20250214 15:00:35.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:35.432" endtime="20250214 15:00:35.440"/>
</kw>
<msg timestamp="20250214 15:00:35.440" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20250214 15:00:35.432" endtime="20250214 15:00:35.440"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:35.440" endtime="20250214 15:00:35.440"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:35.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.933" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:35.442" endtime="20250214 15:00:35.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.934" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:35 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:35 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:35.934" endtime="20250214 15:00:35.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.934" endtime="20250214 15:00:35.935"/>
</kw>
<status status="PASS" starttime="20250214 15:00:35.441" endtime="20250214 15:00:35.935"/>
</kw>
<msg timestamp="20250214 15:00:35.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:35.441" endtime="20250214 15:00:35.935"/>
</kw>
<msg timestamp="20250214 15:00:35.935" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:35.441" endtime="20250214 15:00:35.935"/>
</kw>
<msg timestamp="20250214 15:00:35.935" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:35.440" endtime="20250214 15:00:35.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.935" endtime="20250214 15:00:35.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.936" endtime="20250214 15:00:35.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:35.936" endtime="20250214 15:00:35.936"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.939" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:35.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.943" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.937" endtime="20250214 15:00:35.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.944" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.943" endtime="20250214 15:00:35.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.944" endtime="20250214 15:00:35.944"/>
</kw>
<status status="PASS" starttime="20250214 15:00:35.937" endtime="20250214 15:00:35.944"/>
</kw>
<msg timestamp="20250214 15:00:35.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:35.937" endtime="20250214 15:00:35.945"/>
</kw>
<msg timestamp="20250214 15:00:35.945" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.936" endtime="20250214 15:00:35.945"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.948" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:35.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:35.951" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.946" endtime="20250214 15:00:35.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:35.952" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.952" endtime="20250214 15:00:35.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:35.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:35.952" endtime="20250214 15:00:35.952"/>
</kw>
<status status="PASS" starttime="20250214 15:00:35.945" endtime="20250214 15:00:35.953"/>
</kw>
<msg timestamp="20250214 15:00:35.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:35.945" endtime="20250214 15:00:35.953"/>
</kw>
<msg timestamp="20250214 15:00:35.953" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20250214 15:00:35.945" endtime="20250214 15:00:35.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:35.953" endtime="20250214 15:00:35.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:34.398" endtime="20250214 15:00:35.953"/>
</test>
<test id="s1-s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="83">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:35.957" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:36.441" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:36.441" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:35.955" endtime="20250214 15:00:36.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:36.442" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:36.441" endtime="20250214 15:00:36.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:36.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:36.442" endtime="20250214 15:00:36.442"/>
</kw>
<msg timestamp="20250214 15:00:36.443" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:35.955" endtime="20250214 15:00:36.443"/>
</kw>
<msg timestamp="20250214 15:00:36.443" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:35.954" endtime="20250214 15:00:36.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:36.443" endtime="20250214 15:00:36.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:35.954" endtime="20250214 15:00:36.443"/>
</test>
<test id="s1-s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="88">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:36.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:36.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:36.933" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.446" endtime="20250214 15:00:36.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:36.934" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:36 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:36 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:36.934" endtime="20250214 15:00:36.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:36.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:36.934" endtime="20250214 15:00:36.935"/>
</kw>
<status status="PASS" starttime="20250214 15:00:36.445" endtime="20250214 15:00:36.935"/>
</kw>
<msg timestamp="20250214 15:00:36.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:36.445" endtime="20250214 15:00:36.935"/>
</kw>
<msg timestamp="20250214 15:00:36.935" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.445" endtime="20250214 15:00:36.935"/>
</kw>
<msg timestamp="20250214 15:00:36.935" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.444" endtime="20250214 15:00:36.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:36.936" endtime="20250214 15:00:36.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:36.936" endtime="20250214 15:00:36.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:36.936" endtime="20250214 15:00:36.937"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:36.940" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:36.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:36.943" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.937" endtime="20250214 15:00:36.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:36.944" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.944" endtime="20250214 15:00:36.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:36.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:36.944" endtime="20250214 15:00:36.945"/>
</kw>
<status status="PASS" starttime="20250214 15:00:36.937" endtime="20250214 15:00:36.945"/>
</kw>
<msg timestamp="20250214 15:00:36.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:36.937" endtime="20250214 15:00:36.945"/>
</kw>
<msg timestamp="20250214 15:00:36.945" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.937" endtime="20250214 15:00:36.945"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:36.948" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:36.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:36.951" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.946" endtime="20250214 15:00:36.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:36.952" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.951" endtime="20250214 15:00:36.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:36.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:36.952" endtime="20250214 15:00:36.952"/>
</kw>
<status status="PASS" starttime="20250214 15:00:36.946" endtime="20250214 15:00:36.952"/>
</kw>
<msg timestamp="20250214 15:00:36.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:36.945" endtime="20250214 15:00:36.953"/>
</kw>
<msg timestamp="20250214 15:00:36.953" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:36.945" endtime="20250214 15:00:36.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:36.953" endtime="20250214 15:00:36.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:36.444" endtime="20250214 15:00:36.953"/>
</test>
<test id="s1-s1-s14-t7" name="Get Partial object from s3 with only start offset" line="97">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:36.957" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:37.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.437" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.955" endtime="20250214 15:00:37.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.438" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:37 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:37 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:37.438" endtime="20250214 15:00:37.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.438" endtime="20250214 15:00:37.439"/>
</kw>
<status status="PASS" starttime="20250214 15:00:36.955" endtime="20250214 15:00:37.439"/>
</kw>
<msg timestamp="20250214 15:00:37.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:36.955" endtime="20250214 15:00:37.439"/>
</kw>
<msg timestamp="20250214 15:00:37.439" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.955" endtime="20250214 15:00:37.439"/>
</kw>
<msg timestamp="20250214 15:00:37.439" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:36.954" endtime="20250214 15:00:37.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.440" endtime="20250214 15:00:37.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.440" endtime="20250214 15:00:37.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.440" endtime="20250214 15:00:37.440"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.443" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:37.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.447" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.441" endtime="20250214 15:00:37.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.448" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.447" endtime="20250214 15:00:37.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.448" endtime="20250214 15:00:37.448"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.441" endtime="20250214 15:00:37.448"/>
</kw>
<msg timestamp="20250214 15:00:37.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.441" endtime="20250214 15:00:37.449"/>
</kw>
<msg timestamp="20250214 15:00:37.449" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.440" endtime="20250214 15:00:37.449"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.452" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:37.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.455" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.450" endtime="20250214 15:00:37.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.456" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.455" endtime="20250214 15:00:37.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.456" endtime="20250214 15:00:37.456"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.449" endtime="20250214 15:00:37.456"/>
</kw>
<msg timestamp="20250214 15:00:37.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.449" endtime="20250214 15:00:37.457"/>
</kw>
<msg timestamp="20250214 15:00:37.457" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:37.449" endtime="20250214 15:00:37.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:37.457" endtime="20250214 15:00:37.457"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:36.954" endtime="20250214 15:00:37.457"/>
</test>
<test id="s1-s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="106">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:37.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.948" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.459" endtime="20250214 15:00:37.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.949" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:37 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:37 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:37.948" endtime="20250214 15:00:37.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.949" endtime="20250214 15:00:37.949"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.459" endtime="20250214 15:00:37.949"/>
</kw>
<msg timestamp="20250214 15:00:37.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.459" endtime="20250214 15:00:37.950"/>
</kw>
<msg timestamp="20250214 15:00:37.950" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.458" endtime="20250214 15:00:37.950"/>
</kw>
<msg timestamp="20250214 15:00:37.950" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.458" endtime="20250214 15:00:37.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.950" endtime="20250214 15:00:37.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.950" endtime="20250214 15:00:37.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:37.951" endtime="20250214 15:00:37.951"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.954" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:37.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.958" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250214 15:00:37.952" endtime="20250214 15:00:37.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.958" level="INFO">R</msg>
<status status="PASS" starttime="20250214 15:00:37.958" endtime="20250214 15:00:37.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.959" endtime="20250214 15:00:37.959"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.952" endtime="20250214 15:00:37.959"/>
</kw>
<msg timestamp="20250214 15:00:37.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.951" endtime="20250214 15:00:37.959"/>
</kw>
<msg timestamp="20250214 15:00:37.959" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20250214 15:00:37.951" endtime="20250214 15:00:37.959"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.962" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:37.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:37.966" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250214 15:00:37.960" endtime="20250214 15:00:37.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:37.966" level="INFO">R</msg>
<status status="PASS" starttime="20250214 15:00:37.966" endtime="20250214 15:00:37.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:37.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:37.966" endtime="20250214 15:00:37.967"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.960" endtime="20250214 15:00:37.967"/>
</kw>
<msg timestamp="20250214 15:00:37.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.960" endtime="20250214 15:00:37.967"/>
</kw>
<msg timestamp="20250214 15:00:37.967" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20250214 15:00:37.959" endtime="20250214 15:00:37.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:37.968" endtime="20250214 15:00:37.968"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:37.971" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:38.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.448" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.969" endtime="20250214 15:00:38.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.449" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:38 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:38 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:38.449" endtime="20250214 15:00:38.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.450" endtime="20250214 15:00:38.450"/>
</kw>
<status status="PASS" starttime="20250214 15:00:37.969" endtime="20250214 15:00:38.450"/>
</kw>
<msg timestamp="20250214 15:00:38.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:37.969" endtime="20250214 15:00:38.450"/>
</kw>
<msg timestamp="20250214 15:00:38.450" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.968" endtime="20250214 15:00:38.450"/>
</kw>
<msg timestamp="20250214 15:00:38.450" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:37.968" endtime="20250214 15:00:38.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.451" endtime="20250214 15:00:38.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.451" endtime="20250214 15:00:38.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.451" endtime="20250214 15:00:38.451"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.455" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:38.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.458" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250214 15:00:38.452" endtime="20250214 15:00:38.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.459" level="INFO">o</msg>
<status status="PASS" starttime="20250214 15:00:38.459" endtime="20250214 15:00:38.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.459" endtime="20250214 15:00:38.460"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.452" endtime="20250214 15:00:38.460"/>
</kw>
<msg timestamp="20250214 15:00:38.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.452" endtime="20250214 15:00:38.460"/>
</kw>
<msg timestamp="20250214 15:00:38.460" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20250214 15:00:38.452" endtime="20250214 15:00:38.460"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.463" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:38.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.466" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250214 15:00:38.461" endtime="20250214 15:00:38.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.467" level="INFO">o</msg>
<status status="PASS" starttime="20250214 15:00:38.467" endtime="20250214 15:00:38.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.467" endtime="20250214 15:00:38.468"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.461" endtime="20250214 15:00:38.468"/>
</kw>
<msg timestamp="20250214 15:00:38.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.460" endtime="20250214 15:00:38.468"/>
</kw>
<msg timestamp="20250214 15:00:38.468" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20250214 15:00:38.460" endtime="20250214 15:00:38.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:38.468" endtime="20250214 15:00:38.469"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:37.458" endtime="20250214 15:00:38.469"/>
</test>
<test id="s1-s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="123">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:38.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.959" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:38.471" endtime="20250214 15:00:38.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.960" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:38 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:38 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:38.959" endtime="20250214 15:00:38.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.960" endtime="20250214 15:00:38.960"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.471" endtime="20250214 15:00:38.961"/>
</kw>
<msg timestamp="20250214 15:00:38.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.471" endtime="20250214 15:00:38.961"/>
</kw>
<msg timestamp="20250214 15:00:38.961" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:38.470" endtime="20250214 15:00:38.961"/>
</kw>
<msg timestamp="20250214 15:00:38.961" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 15:00:38.470" endtime="20250214 15:00:38.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.961" endtime="20250214 15:00:38.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.961" endtime="20250214 15:00:38.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:38.962" endtime="20250214 15:00:38.962"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.965" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 15:00:38.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.969" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250214 15:00:38.963" endtime="20250214 15:00:38.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.970" level="INFO">ext</msg>
<status status="PASS" starttime="20250214 15:00:38.970" endtime="20250214 15:00:38.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.970" endtime="20250214 15:00:38.971"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.963" endtime="20250214 15:00:38.971"/>
</kw>
<msg timestamp="20250214 15:00:38.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.963" endtime="20250214 15:00:38.971"/>
</kw>
<msg timestamp="20250214 15:00:38.971" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20250214 15:00:38.962" endtime="20250214 15:00:38.971"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.974" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:38.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:38.977" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250214 15:00:38.972" endtime="20250214 15:00:38.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:38.978" level="INFO">ext</msg>
<status status="PASS" starttime="20250214 15:00:38.978" endtime="20250214 15:00:38.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:38.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:38.978" endtime="20250214 15:00:38.979"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.972" endtime="20250214 15:00:38.979"/>
</kw>
<msg timestamp="20250214 15:00:38.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.971" endtime="20250214 15:00:38.979"/>
</kw>
<msg timestamp="20250214 15:00:38.979" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20250214 15:00:38.971" endtime="20250214 15:00:38.979"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:38.979" endtime="20250214 15:00:38.980"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:38.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:39.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:39.480" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:38.981" endtime="20250214 15:00:39.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:39.481" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:39 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:39 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:39.481" endtime="20250214 15:00:39.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:39.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:39.481" endtime="20250214 15:00:39.482"/>
</kw>
<status status="PASS" starttime="20250214 15:00:38.981" endtime="20250214 15:00:39.482"/>
</kw>
<msg timestamp="20250214 15:00:39.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:38.981" endtime="20250214 15:00:39.482"/>
</kw>
<msg timestamp="20250214 15:00:39.482" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:38.980" endtime="20250214 15:00:39.482"/>
</kw>
<msg timestamp="20250214 15:00:39.482" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:38.980" endtime="20250214 15:00:39.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:39.482" endtime="20250214 15:00:39.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:39.483" endtime="20250214 15:00:39.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:39.483" endtime="20250214 15:00:39.483"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:39.486" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:39.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:39.490" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.484" endtime="20250214 15:00:39.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:39.491" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.490" endtime="20250214 15:00:39.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:39.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:39.491" endtime="20250214 15:00:39.491"/>
</kw>
<status status="PASS" starttime="20250214 15:00:39.484" endtime="20250214 15:00:39.491"/>
</kw>
<msg timestamp="20250214 15:00:39.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:39.484" endtime="20250214 15:00:39.491"/>
</kw>
<msg timestamp="20250214 15:00:39.491" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.483" endtime="20250214 15:00:39.491"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:39.494" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:39.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:39.498" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.492" endtime="20250214 15:00:39.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:39.498" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.498" endtime="20250214 15:00:39.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:39.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:39.499" endtime="20250214 15:00:39.499"/>
</kw>
<status status="PASS" starttime="20250214 15:00:39.492" endtime="20250214 15:00:39.499"/>
</kw>
<msg timestamp="20250214 15:00:39.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:39.492" endtime="20250214 15:00:39.499"/>
</kw>
<msg timestamp="20250214 15:00:39.499" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.492" endtime="20250214 15:00:39.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:39.500" endtime="20250214 15:00:39.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:38.469" endtime="20250214 15:00:39.500"/>
</test>
<test id="s1-s1-s14-t10" name="Incorrect values for end and start offset" line="141">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:39.504" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:39.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:39.985" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:39.502" endtime="20250214 15:00:39.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:39.986" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:39 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:39 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:39.985" endtime="20250214 15:00:39.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:39.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:39.986" endtime="20250214 15:00:39.986"/>
</kw>
<status status="PASS" starttime="20250214 15:00:39.502" endtime="20250214 15:00:39.987"/>
</kw>
<msg timestamp="20250214 15:00:39.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:39.502" endtime="20250214 15:00:39.987"/>
</kw>
<msg timestamp="20250214 15:00:39.987" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:39.501" endtime="20250214 15:00:39.987"/>
</kw>
<msg timestamp="20250214 15:00:39.987" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:39.501" endtime="20250214 15:00:39.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:39.987" endtime="20250214 15:00:39.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:39.988" endtime="20250214 15:00:39.988"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:39.991" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:39.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:39.995" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.989" endtime="20250214 15:00:39.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:39.995" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.995" endtime="20250214 15:00:39.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:39.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:39.996" endtime="20250214 15:00:39.996"/>
</kw>
<status status="PASS" starttime="20250214 15:00:39.989" endtime="20250214 15:00:39.996"/>
</kw>
<msg timestamp="20250214 15:00:39.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:39.988" endtime="20250214 15:00:39.996"/>
</kw>
<msg timestamp="20250214 15:00:39.996" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.988" endtime="20250214 15:00:39.996"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:39.999" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:40.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:40.003" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.997" endtime="20250214 15:00:40.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:40.003" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.003" endtime="20250214 15:00:40.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:40.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:40.004" endtime="20250214 15:00:40.004"/>
</kw>
<status status="PASS" starttime="20250214 15:00:39.997" endtime="20250214 15:00:40.004"/>
</kw>
<msg timestamp="20250214 15:00:40.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:39.997" endtime="20250214 15:00:40.004"/>
</kw>
<msg timestamp="20250214 15:00:40.004" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:39.996" endtime="20250214 15:00:40.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:40.005" endtime="20250214 15:00:40.005"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:40.008" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:40.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:40.483" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:40.006" endtime="20250214 15:00:40.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:40.484" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:40 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 15:00:40 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:40.483" endtime="20250214 15:00:40.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:40.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:40.484" endtime="20250214 15:00:40.484"/>
</kw>
<status status="PASS" starttime="20250214 15:00:40.006" endtime="20250214 15:00:40.484"/>
</kw>
<msg timestamp="20250214 15:00:40.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:40.006" endtime="20250214 15:00:40.484"/>
</kw>
<msg timestamp="20250214 15:00:40.485" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:40.005" endtime="20250214 15:00:40.485"/>
</kw>
<msg timestamp="20250214 15:00:40.485" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:40.005" endtime="20250214 15:00:40.485"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:40.485" endtime="20250214 15:00:40.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:40.485" endtime="20250214 15:00:40.485"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:40.488" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:40.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:40.492" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.486" endtime="20250214 15:00:40.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:40.493" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.492" endtime="20250214 15:00:40.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:40.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:40.493" endtime="20250214 15:00:40.493"/>
</kw>
<status status="PASS" starttime="20250214 15:00:40.486" endtime="20250214 15:00:40.493"/>
</kw>
<msg timestamp="20250214 15:00:40.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:40.486" endtime="20250214 15:00:40.493"/>
</kw>
<msg timestamp="20250214 15:00:40.494" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.485" endtime="20250214 15:00:40.494"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:40.497" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:40.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:40.501" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.495" endtime="20250214 15:00:40.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:40.501" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.501" endtime="20250214 15:00:40.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:40.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:40.501" endtime="20250214 15:00:40.502"/>
</kw>
<status status="PASS" starttime="20250214 15:00:40.495" endtime="20250214 15:00:40.502"/>
</kw>
<msg timestamp="20250214 15:00:40.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:40.494" endtime="20250214 15:00:40.502"/>
</kw>
<msg timestamp="20250214 15:00:40.502" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 15:00:40.494" endtime="20250214 15:00:40.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:40.502" endtime="20250214 15:00:40.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:39.500" endtime="20250214 15:00:40.503"/>
</test>
<test id="s1-s1-s14-t11" name="Zero byte file" line="156">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:40.506" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:40.991" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:40.991" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.504" endtime="20250214 15:00:40.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:40.992" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.991" endtime="20250214 15:00:40.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:40.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:40.992" endtime="20250214 15:00:40.992"/>
</kw>
<msg timestamp="20250214 15:00:40.992" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.504" endtime="20250214 15:00:40.992"/>
</kw>
<msg timestamp="20250214 15:00:40.992" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.504" endtime="20250214 15:00:40.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:40.993" endtime="20250214 15:00:40.993"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:40.996" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:41.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:41.473" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.994" endtime="20250214 15:00:41.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:41.474" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:41.473" endtime="20250214 15:00:41.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:41.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:41.474" endtime="20250214 15:00:41.474"/>
</kw>
<msg timestamp="20250214 15:00:41.474" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.993" endtime="20250214 15:00:41.474"/>
</kw>
<msg timestamp="20250214 15:00:41.475" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:40.993" endtime="20250214 15:00:41.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:41.475" endtime="20250214 15:00:41.475"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:41.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:41.965" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:41.965" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:41.476" endtime="20250214 15:00:41.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:41.966" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:41.965" endtime="20250214 15:00:41.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:41.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:41.966" endtime="20250214 15:00:41.966"/>
</kw>
<msg timestamp="20250214 15:00:41.967" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:41.476" endtime="20250214 15:00:41.967"/>
</kw>
<msg timestamp="20250214 15:00:41.967" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 15:00:41.475" endtime="20250214 15:00:41.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:41.967" endtime="20250214 15:00:41.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:40.503" endtime="20250214 15:00:41.967"/>
</test>
<test id="s1-s1-s14-t12" name="Create file with user defined metadata and tags" line="166">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:41.971" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 15:00:41.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:41.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:41.969" endtime="20250214 15:00:41.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:41.974" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:41.974" endtime="20250214 15:00:41.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:41.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:41.974" endtime="20250214 15:00:41.975"/>
</kw>
<status status="PASS" starttime="20250214 15:00:41.969" endtime="20250214 15:00:41.975"/>
</kw>
<msg timestamp="20250214 15:00:41.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:41.969" endtime="20250214 15:00:41.975"/>
</kw>
<status status="PASS" starttime="20250214 15:00:41.968" endtime="20250214 15:00:41.975"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:41.979" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:42.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:42.517" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:41.977" endtime="20250214 15:00:42.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:42.518" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:42.518" endtime="20250214 15:00:42.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:42.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:42.518" endtime="20250214 15:00:42.519"/>
</kw>
<status status="PASS" starttime="20250214 15:00:41.976" endtime="20250214 15:00:42.519"/>
</kw>
<msg timestamp="20250214 15:00:42.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:41.976" endtime="20250214 15:00:42.519"/>
</kw>
<msg timestamp="20250214 15:00:42.519" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:41.976" endtime="20250214 15:00:42.519"/>
</kw>
<status status="PASS" starttime="20250214 15:00:41.975" endtime="20250214 15:00:42.519"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:42.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:42.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:42.986" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:42.521" endtime="20250214 15:00:42.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:42.987" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:42 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 15:00:42 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:42.986" endtime="20250214 15:00:42.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:42.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:42.987" endtime="20250214 15:00:42.988"/>
</kw>
<status status="PASS" starttime="20250214 15:00:42.520" endtime="20250214 15:00:42.988"/>
</kw>
<msg timestamp="20250214 15:00:42.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:42.520" endtime="20250214 15:00:42.988"/>
</kw>
<msg timestamp="20250214 15:00:42.988" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:42.520" endtime="20250214 15:00:42.988"/>
</kw>
<msg timestamp="20250214 15:00:42.988" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:42.519" endtime="20250214 15:00:42.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:42.988" endtime="20250214 15:00:42.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:42.989" endtime="20250214 15:00:42.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:42.992" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-6275424850/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:46.078" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6275424850/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T15:00...</msg>
<status status="PASS" starttime="20250214 15:00:42.990" endtime="20250214 15:00:46.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:46.079" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6275424850/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T15:00:42.410Z",
  "modificationTime" : "2025-02-14T15:00:42.466Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5,
    "minimumNodes" : 3
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600067,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 644,
  "file" : true
}</msg>
<status status="PASS" starttime="20250214 15:00:46.078" endtime="20250214 15:00:46.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:46.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:46.079" endtime="20250214 15:00:46.079"/>
</kw>
<status status="PASS" starttime="20250214 15:00:42.990" endtime="20250214 15:00:46.079"/>
</kw>
<msg timestamp="20250214 15:00:46.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:42.989" endtime="20250214 15:00:46.079"/>
</kw>
<msg timestamp="20250214 15:00:46.080" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-6275424850/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T15:00...</msg>
<status status="PASS" starttime="20250214 15:00:42.989" endtime="20250214 15:00:46.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:46.080" endtime="20250214 15:00:46.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:46.080" endtime="20250214 15:00:46.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:46.080" endtime="20250214 15:00:46.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:46.081" endtime="20250214 15:00:46.081"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:46.085" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:46.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:46.566" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:46.082" endtime="20250214 15:00:46.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:46.567" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:46 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:46 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:46.566" endtime="20250214 15:00:46.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:46.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:46.567" endtime="20250214 15:00:46.567"/>
</kw>
<status status="PASS" starttime="20250214 15:00:46.082" endtime="20250214 15:00:46.568"/>
</kw>
<msg timestamp="20250214 15:00:46.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:46.082" endtime="20250214 15:00:46.568"/>
</kw>
<msg timestamp="20250214 15:00:46.568" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:46.081" endtime="20250214 15:00:46.568"/>
</kw>
<msg timestamp="20250214 15:00:46.568" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:00:46.081" endtime="20250214 15:00:46.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:46.568" endtime="20250214 15:00:46.568"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:46.571" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:42 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:46 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:46 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:46.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:46.576" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 15:00:46.569" endtime="20250214 15:00:46.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:46.577" level="INFO">2</msg>
<status status="PASS" starttime="20250214 15:00:46.577" endtime="20250214 15:00:46.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:46.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:46.577" endtime="20250214 15:00:46.578"/>
</kw>
<msg timestamp="20250214 15:00:46.578" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 15:00:46.569" endtime="20250214 15:00:46.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:00:46.578" endtime="20250214 15:00:46.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:41.968" endtime="20250214 15:00:46.579"/>
</test>
<test id="s1-s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="185">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:46.582" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 15:00:46.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:46.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:46.580" endtime="20250214 15:00:46.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:46.585" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:46.584" endtime="20250214 15:00:46.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:46.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:46.585" endtime="20250214 15:00:46.585"/>
</kw>
<status status="PASS" starttime="20250214 15:00:46.580" endtime="20250214 15:00:46.585"/>
</kw>
<msg timestamp="20250214 15:00:46.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:46.580" endtime="20250214 15:00:46.586"/>
</kw>
<status status="PASS" starttime="20250214 15:00:46.579" endtime="20250214 15:00:46.586"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:46.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:47.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:47.127" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:46.587" endtime="20250214 15:00:47.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:47.128" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:47.127" endtime="20250214 15:00:47.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:47.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:47.128" endtime="20250214 15:00:47.128"/>
</kw>
<status status="PASS" starttime="20250214 15:00:46.587" endtime="20250214 15:00:47.128"/>
</kw>
<msg timestamp="20250214 15:00:47.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:46.587" endtime="20250214 15:00:47.129"/>
</kw>
<msg timestamp="20250214 15:00:47.129" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:00:46.586" endtime="20250214 15:00:47.129"/>
</kw>
<status status="PASS" starttime="20250214 15:00:46.586" endtime="20250214 15:00:47.129"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:47.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:47.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:47.601" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:47.130" endtime="20250214 15:00:47.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:47.602" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 15:00:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:47 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 15:00:47 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:47.601" endtime="20250214 15:00:47.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:47.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:47.602" endtime="20250214 15:00:47.602"/>
</kw>
<status status="PASS" starttime="20250214 15:00:47.130" endtime="20250214 15:00:47.602"/>
</kw>
<msg timestamp="20250214 15:00:47.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:47.130" endtime="20250214 15:00:47.602"/>
</kw>
<msg timestamp="20250214 15:00:47.602" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:47.129" endtime="20250214 15:00:47.603"/>
</kw>
<msg timestamp="20250214 15:00:47.603" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 15:00:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 15:00:47.129" endtime="20250214 15:00:47.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:47.603" endtime="20250214 15:00:47.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:47.603" endtime="20250214 15:00:47.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:46.579" endtime="20250214 15:00:47.603"/>
</test>
<test id="s1-s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="193">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:47.607" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 15:00:47.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:47.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:47.605" endtime="20250214 15:00:47.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:47.610" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:47.610" endtime="20250214 15:00:47.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:47.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:47.610" endtime="20250214 15:00:47.611"/>
</kw>
<status status="PASS" starttime="20250214 15:00:47.605" endtime="20250214 15:00:47.611"/>
</kw>
<msg timestamp="20250214 15:00:47.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:47.605" endtime="20250214 15:00:47.611"/>
</kw>
<status status="PASS" starttime="20250214 15:00:47.604" endtime="20250214 15:00:47.611"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:00:47.613" level="INFO">${custom_metadata_value} = CcBrdmOHru24vq7VfPSEjAEgFVgpMzyLiMndH97aEwZHuRS8vmGDZF5zb3kxvIA8irJpLVGZo7956EuDOXVZU5pepjvKttz77FxDGPYVHfaqIkPbKpqRbfUYEnVoACgLVvJIb5A9Zl694YvyAmBxx9mMNIomV283WL5VgWg6w120LwckLzlK3LQcl06bSsdwapoGXaQ4...</msg>
<status status="PASS" starttime="20250214 15:00:47.611" endtime="20250214 15:00:47.613"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:47.616" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=CcBrdmOHru24vq7VfPSEjAEgFVgpMzyLiMndH97aEwZHuRS8vmGDZF5zb3kxvIA8irJpLVGZo7956EuDOXVZU5pepjvKttz77FxDGPYVHfaqIkPbKpqRbfUYEnVoACgLVvJIb5A9Zl694YvyAmBxx9mMNIomV283WL5VgWg6w120LwckLzlK3LQcl06bSsdwapoGXaQ4rtoXmgoRdOdHShzAnyIYEKJnFMJu05te2qsm2yWIiih4ir7KLgnI3yBAgwp7u4uEUgIVjiRTzJWvsxRv4TFtjr7XZbK6JFRp2Nm2cOxpvBU2IbStBt2NQ2cucCMRxA9DoTwnkFxx0F4FsTghsAmVimEWR8qCxjvoKbqPBki2fSocf9qc1HPoYbtwpvj0HEgb8eOCUs500OFmDVcsYnLmBuRdwZKBtxYMjW5MN0qnDwuTTFMKl69Wqvy6yN6Dknv50SYps5v5aaF9jb2zNOVhIS6mVP6cUXaqFLZaeNwbusOGVCiEISvwlNiZBdDMsIXj7ohTKej6P3flMNugj8gj4PK0Ow6HsVFZB0c1XQWEM00GM4YBMC3nWZRynjbInb5a1DUV42AKg34gU0lX9E54aBWQ8bG3qj5teeFKDseCymweUizdpL0Om1cZVTJpDM6isw1HjV6XfZxMlgiWj6EOz78jTCC8q2QxlsLfeDZIniU1tPMZWx7ZArEob4h4kt9gQsDQVifh4IbOVEQ5fFTA9auDlNPBBxm2cj9dhvctGCUhRHR4uCkjvbsPkw8ylQFL2LacXIHajbQMOkS2w1dglAO8RUCZ0MVAwkvALYivFaYlX45ec7XYQTb4rS7aZYh3fNZ4m6sotYLRXj2l1vhlfzPLdqhAaLUO6cIWkiIK8BCN5JEfg3E4wALaDS05BY0PeCsA6TEKQt7Vy5KAnra5UrNiv61KLzI8YmO5uyjmmLlHdVvkBtdfN8AxZzIYMPVgzdxqQa7JmbL1n1gKbnxwW6OWEcl9uihSEXoMWut0D3frqyiFEJuR7lz0FxQ6XrL91mb8mhzn0R6dFcI5dUb5nguGyWNkivmbz4g8SGMWvRF71pSeOtuADnWeVV2IuoPGws63xJyOx0CerTrxdVBPIuV8gHAdbSWgD2Lvfzl8OuyWnd9LkV6Va5MgAgn41rWHy0A3Kqeek4Gl0C7bfBHFzd4McH62hSoJwArTddFqlFBGAFCQCJtrMUlMytQPcz01ab7LkbluI27GAUGXnFkgJcprJLAjnSHnHRl7cQ3Tplfrxv8qFSXrunUmcB6nwEpqNedPxrsb23a4UbZ6UfFY7ovo2WO3f9VTl0gPEOZT0BHzJoRZS9WCjgIaq73Fx9EsnO2x08dyzw1pa0faDRkT4gzrQs9WHttdfDPVUb0UEcWXvsV2xmruFgWPGWLJfKe0Qou5YBPy3jdkNUruA1GjTDYeGHqZzEKChitDLsBwccZulX0W4T3S497jT1wwiuth5wRKpgQmrvCWQHlgaFW8OYnjyVUU604QViGsfjeHVn6QuOoIVRCpNTZGsuDV1PMG7lUCbiGoQnMTZxglignuKb1fAKitwkslr94JnM1ZUfeGIJNcorsDeWrASudSeRj4cKUA5u9SpQez1VA3xSjBFkXEryDsB3usoeEa3Xws4B3Ki7rDQMrE2OJidrbJEvN7rp8y5t6ALq79qI2F25cZldBN55oDMe9Lhm7ieiQaQcfnXZFHMR8qhSiPUtI1eehl5Ix3rIIBiPZkKzwP6iLKeP5WfTtspMnGGNEuuUynJXeaJDDezI361LujcxSPa80GUPy6gMYoaB7bfbIxz0wRRBQusCOFm6LYAtDycIwmwUz1A8upPWbB0gMj5CW2EAFkRcvjvLNCktP8unDw6fgqOMFZkDigYXN1lo545MtpqiQoiPEoTXueag2zMhrRCCER1o6fx1w75CGWCqleRUfLjwk6d8nZJ72KOAzBPGxWHzDFVa9vBQqSsLbgqdWnEaUKOvCqYdsXwrn1fHL23I9Qq43eba61YempjhQk9zFIGSM1X2Hj1Y2rd1CroCZIykK9KOgxX1MIkIXgrSoy9EcrqwjpZx2g3qRoJi1W0VDVIVQ40KLAhcFBMDvoHYKISYW7jSz7wXMKq9S6GGUbM9U78tnWVn8XTm7Bn30HUqBWiI186Sv5N2b880WvXH4nAq77iLy02tyQJOz8ciWHNTHaSQlWK7pbWMQsQ4Dh5r7fUFEJVRSppVk9dddCFWuoCPl4459RNEPMUcsUpKXvH6byqQTi8kI3yB1SiDVCBlNmsFnJ4bl1Dr1zsj0HmP2ZyuTAybNzgRvFiyNHg6tduhFBLh1Lw9w7hHfv0CbPIWOWuwnlceojpJfDKTslAZ8G4k5pntags8s8ocNCmIbvHZNUA8uMrNfWJc0AoRbvzUt1tsgKiwrRtUEr71DL9OQ9OaSepAkFmIrharTRgxn3Z2wFW45oGOfR83y5WlttBgqzFX6D55h8pWQM3b7kMVqadHhF5o9HD361Q3iFISqpWqYC7IXPmDjD1pCwoYsFnRgrmZg4SM9vBfcqppfuvVRYVtTl08KfauYXQG9hlSqV1HSatav8koAAPRybsJg2rhnXVRAr4byjUtX1npRKGu52gwskGRu3vuPnqZr8tvi2Yb3ABH13NDNfgC8gFKKZRlxBnKwqEov3qrkArfeimoqOsJ4m6TjlQMP6Rp52WOJKqPn6DXMM2D1UkOHFgXHI5LucuF3GNC34shn8qnUq2zEWF8G3w5Ljr6Ax15Tx9JMTP0QwIo3vhoK3My80hhJAEFzj31sEkiYzW2JmX2CIUzz0PtBrxN0yUenTE8icmnDXXysoSnHmI6AFGFmh1NuLWizkzYvQIYVICmN6kBBibFkTPDfrLI4bItvEH26Rioa7gi2UokDhGDZJ76NAFdPIoikvvTHAPtjAZyG6DfPA1NPM8UeUczSnSNu8de6MYGPLPuxI9U2XDC3TlxKu2zHJ8mabOJAA6476" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:48.098" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:48.099" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:47.614" endtime="20250214 15:00:48.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:48.100" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:48.099" endtime="20250214 15:00:48.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:48.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:48.100" endtime="20250214 15:00:48.100"/>
</kw>
<msg timestamp="20250214 15:00:48.100" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:47.614" endtime="20250214 15:00:48.100"/>
</kw>
<msg timestamp="20250214 15:00:48.100" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 15:00:47.613" endtime="20250214 15:00:48.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:48.101" endtime="20250214 15:00:48.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:48.101" endtime="20250214 15:00:48.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:47.604" endtime="20250214 15:00:48.101"/>
</test>
<test id="s1-s1-s14-t15" name="Create files invalid tags" line="200">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:48.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:48.606" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:48.606" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 15:00:48.103" endtime="20250214 15:00:48.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:48.607" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 15:00:48.606" endtime="20250214 15:00:48.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:48.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:48.607" endtime="20250214 15:00:48.607"/>
</kw>
<msg timestamp="20250214 15:00:48.607" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 15:00:48.103" endtime="20250214 15:00:48.607"/>
</kw>
<msg timestamp="20250214 15:00:48.608" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 15:00:48.102" endtime="20250214 15:00:48.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:48.608" endtime="20250214 15:00:48.608"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:00:48.609" level="INFO">${long_tag_key} = lQILOjpuu7aLissZwY7rDqtRplDlSvvX07PZgYyHv4UGn5UoFg7jGneJ3JBqTkSyOGX1l88UYvbXroR1egP1ER0gyZrlVDoVD3hL8kdHctWYdkZv13aNAsuWHP8M0kdBZ</msg>
<status status="PASS" starttime="20250214 15:00:48.608" endtime="20250214 15:00:48.609"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:48.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="lQILOjpuu7aLissZwY7rDqtRplDlSvvX07PZgYyHv4UGn5UoFg7jGneJ3JBqTkSyOGX1l88UYvbXroR1egP1ER0gyZrlVDoVD3hL8kdHctWYdkZv13aNAsuWHP8M0kdBZ=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:49.132" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:49.132" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 15:00:48.610" endtime="20250214 15:00:49.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:49.133" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 15:00:49.132" endtime="20250214 15:00:49.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:49.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:49.133" endtime="20250214 15:00:49.134"/>
</kw>
<msg timestamp="20250214 15:00:49.134" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 15:00:48.609" endtime="20250214 15:00:49.134"/>
</kw>
<msg timestamp="20250214 15:00:49.134" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 15:00:48.609" endtime="20250214 15:00:49.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:49.134" endtime="20250214 15:00:49.134"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:00:49.135" level="INFO">${long_tag_value} = dKizNwMSX26tS9d6Tdv2BIGftGTX7xWYYcEAevGGwWJOGw1rF4gwv5Cl4cfF3m5GjPJ2Dfgbi3jHAS3Pl1ejfjVyRcl603OZAITVsWuMoEQhHfCq807Va8SkzC4GbuBQq19BMFOxIc2by7riVOMQy8U8pta1GmLgejgYtWehDVcLUOrJKwpQGRbMhEhCtvMiggjO3XMB...</msg>
<status status="PASS" starttime="20250214 15:00:49.134" endtime="20250214 15:00:49.135"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:49.138" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=dKizNwMSX26tS9d6Tdv2BIGftGTX7xWYYcEAevGGwWJOGw1rF4gwv5Cl4cfF3m5GjPJ2Dfgbi3jHAS3Pl1ejfjVyRcl603OZAITVsWuMoEQhHfCq807Va8SkzC4GbuBQq19BMFOxIc2by7riVOMQy8U8pta1GmLgejgYtWehDVcLUOrJKwpQGRbMhEhCtvMiggjO3XMBTWZgAn26gFqF1x0i2HAYsZpQJcbh5kEoJQS02AWh8sStk5qm4z4Ss58sY" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:49.610" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:49.610" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 15:00:49.136" endtime="20250214 15:00:49.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:49.611" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 15:00:49.611" endtime="20250214 15:00:49.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:49.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:49.612" endtime="20250214 15:00:49.612"/>
</kw>
<msg timestamp="20250214 15:00:49.612" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 15:00:49.135" endtime="20250214 15:00:49.612"/>
</kw>
<msg timestamp="20250214 15:00:49.612" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 15:00:49.135" endtime="20250214 15:00:49.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:49.612" endtime="20250214 15:00:49.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:48.102" endtime="20250214 15:00:49.613"/>
</test>
<test id="s1-s1-s14-t16" name="Create files with too many tags" line="210">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:49.617" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 15:00:49.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:49.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:49.614" endtime="20250214 15:00:49.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:49.619" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:49.619" endtime="20250214 15:00:49.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:49.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:49.620" endtime="20250214 15:00:49.620"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.614" endtime="20250214 15:00:49.620"/>
</kw>
<msg timestamp="20250214 15:00:49.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:49.614" endtime="20250214 15:00:49.620"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.614" endtime="20250214 15:00:49.620"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 15:00:49.621" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20250214 15:00:49.620" endtime="20250214 15:00:49.621"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.621" endtime="20250214 15:00:49.621"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.621" endtime="20250214 15:00:49.621"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.622" endtime="20250214 15:00:49.622"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.621" endtime="20250214 15:00:49.622"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.622" endtime="20250214 15:00:49.622"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.622" endtime="20250214 15:00:49.622"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.622" endtime="20250214 15:00:49.623"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.622" endtime="20250214 15:00:49.623"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.623" endtime="20250214 15:00:49.623"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.623" endtime="20250214 15:00:49.623"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.623" endtime="20250214 15:00:49.624"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.623" endtime="20250214 15:00:49.624"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.624" endtime="20250214 15:00:49.624"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.624" endtime="20250214 15:00:49.624"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.624" endtime="20250214 15:00:49.625"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.624" endtime="20250214 15:00:49.625"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.625" endtime="20250214 15:00:49.625"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.625" endtime="20250214 15:00:49.625"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.625" endtime="20250214 15:00:49.626"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.625" endtime="20250214 15:00:49.626"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 15:00:49.626" endtime="20250214 15:00:49.626"/>
</kw>
<status status="PASS" starttime="20250214 15:00:49.626" endtime="20250214 15:00:49.626"/>
</iter>
<status status="PASS" starttime="20250214 15:00:49.621" endtime="20250214 15:00:49.626"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 15:00:49.627" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20250214 15:00:49.626" endtime="20250214 15:00:49.627"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:49.630" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:50.117" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:00:50.117" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 15:00:49.628" endtime="20250214 15:00:50.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:50.118" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 15:00:50.118" endtime="20250214 15:00:50.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:50.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:50.119" endtime="20250214 15:00:50.119"/>
</kw>
<msg timestamp="20250214 15:00:50.119" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 15:00:49.627" endtime="20250214 15:00:50.119"/>
</kw>
<msg timestamp="20250214 15:00:50.119" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 15:00:49.627" endtime="20250214 15:00:50.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:50.119" endtime="20250214 15:00:50.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:49.613" endtime="20250214 15:00:50.120"/>
</test>
<test id="s1-s1-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="221">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:50.124" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20250214 15:00:50.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:50.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:50.122" endtime="20250214 15:00:50.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:50.133" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:50.132" endtime="20250214 15:00:50.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:50.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:50.133" endtime="20250214 15:00:50.133"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.121" endtime="20250214 15:00:50.133"/>
</kw>
<msg timestamp="20250214 15:00:50.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:50.121" endtime="20250214 15:00:50.133"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.121" endtime="20250214 15:00:50.133"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:50.137" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:50.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:50.142" level="INFO">${output} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.134" endtime="20250214 15:00:50.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:50.143" level="INFO">5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.142" endtime="20250214 15:00:50.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:50.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:50.143" endtime="20250214 15:00:50.143"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.134" endtime="20250214 15:00:50.143"/>
</kw>
<msg timestamp="20250214 15:00:50.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:50.134" endtime="20250214 15:00:50.144"/>
</kw>
<msg timestamp="20250214 15:00:50.144" level="INFO">${file_md5_checksum} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.134" endtime="20250214 15:00:50.144"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:50.147" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:50.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:50.708" level="INFO">${output} = 2025-02-14 15:00:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:50,453 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.145" endtime="20250214 15:00:50.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:50.709" level="INFO">2025-02-14 15:00:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:50,453 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://erasure']
2025-02-14 15:00:50,453 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f51dacbf820&gt;
2025-02-14 15:00:50,453 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f51db5aac10&gt;
2025-02-14 15:00:50,453 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f51db29ce50&gt;
2025-02-14 15:00:50,455 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:50,457 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f51dad2d4c0&gt;
2025-02-14 15:00:50,457 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f51dac71820&gt;
2025-02-14 15:00:50,457 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f51dad46310&gt;
2025-02-14 15:00:50,457 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,458 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f51dac71820&gt;
2025-02-14 15:00:50,458 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f51dad46310&gt;
2025-02-14 15:00:50,459 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,459 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,459 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f51db26bca0&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f51dabc5520&gt;
2025-02-14 15:00:50,463 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:50,463 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:50,464 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:50,486 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:50,487 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f51dc7e19d0&gt;
2025-02-14 15:00:50,493 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:50,501 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:50,520 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:50,523 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:50,525 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f51db8e3a60&gt;
2025-02-14 15:00:50,525 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f51db8e3820&gt;
2025-02-14 15:00:50,526 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,529 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:50,531 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:50,531 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:50,531 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:50,531 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,531 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:50,532 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f51dc7e19d0&gt;
2025-02-14 15:00:50,532 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f51db8e3a60&gt;
2025-02-14 15:00:50,532 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f51db8e3820&gt;
2025-02-14 15:00:50,533 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,534 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:50,536 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:50,536 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:50,536 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,536 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:50,537 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f51dc7e19d0&gt;
2025-02-14 15:00:50,537 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f51db8e3a60&gt;
2025-02-14 15:00:50,537 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f51db8e3820&gt;
2025-02-14 15:00:50,538 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,540 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:50,541 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:50,541 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:50,541 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:50,542 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:50,542 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:50,543 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:50,543 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f51da020850&gt;}) about to wait for the following futures []
2025-02-14 15:00:50,543 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f51da020850&gt;}) done waiting for dependent futures
2025-02-14 15:00:50,543 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f51da020850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f51da0ce910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f51da018df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f51da018e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f51da01d100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f51da020850&gt;}
2025-02-14 15:00:50,544 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f51da01d100&gt; for transfer request: 0.
2025-02-14 15:00:50,544 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:50,544 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:50,544 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:50,544 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f51da0ce910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f51d9fb8100&gt;, 'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f51db82e4c0&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f51db82a8b0&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f51db82edc0&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f51db82a820&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f51db831700&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f51da0a8850&gt;&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f51da12e700&gt;&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f51db82a670&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f51db8318b0&gt;
2025-02-14 15:00:50,545 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f51da0a8850&gt;&gt;
2025-02-14 15:00:50,546 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:50,546 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:50,546 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:50,546 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:50,547 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f51db9a0790&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f51db82ab80&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f51da0a8820&gt;&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f51db82a280&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f51db831d30&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f51db82eee0&gt;
2025-02-14 15:00:50,549 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'XMoqLc8wfUGH/i5Fp0f5fA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f51d9fb8100&gt;, 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f51da0cea90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f51d9fb8100&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:50,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f51daf66790&gt;
2025-02-14 15:00:50,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f51da0cea00&gt;&gt;
2025-02-14 15:00:50,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f51db82a4c0&gt;
2025-02-14 15:00:50,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f51db831820&gt;
2025-02-14 15:00:50,550 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f51da0a8820&gt;&gt;
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/small_file

content-md5:XMoqLc8wfUGH/i5Fp0f5fA==
host:s3g:9878
x-amz-content-sha256:873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d
x-amz-date:20250214T150050Z

content-md5;host;x-amz-content-sha256;x-amz-date
873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150050Z
20250214/us-west-1/s3/aws4_request
b7e75af8b4b7d782d34122383ce20d5fd7537ae85e4c1074b2197555f9067b94
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
39e2eb8f3776f10f1a372d39acd100a7815524a86c1a5bbf00ee7475cad2eefc
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f51daf66820&gt;
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f51db831670&gt;
2025-02-14 15:00:50,551 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'XMoqLc8wfUGH/i5Fp0f5fA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150050Z', 'X-Amz-Content-SHA256': b'873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=39e2eb8f3776f10f1a372d39acd100a7815524a86c1a5bbf00ee7475cad2eefc', 'amz-sdk-invocation-id': b'ff6564b3-801f-41b1-bffe-85609d630fed', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-14 15:00:50,552 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:50,553 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:50,568 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (9.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (18.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (26.4 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:50,636 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/small_file HTTP/1.1" 200 0
2025-02-14 15:00:50,637 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f51db831b80&gt;
2025-02-14 15:00:50,637 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f51db8319d0&gt;
2025-02-14 15:00:50,637 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Server': 'Ozone', 'x-amz-id-2': 'r1wGhJxHOLQ', 'x-amz-request-id': 'adc5a99a-af37-42a5-8efb-6d7528762fde', 'Content-Length': '0'}
2025-02-14 15:00:50,637 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f51db831ca0&gt;
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f51da0a8790&gt;
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f51da0a8850&gt;&gt;
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f51dacbcd30&gt;
Completed 976.6 KiB/976.6 KiB (10.2 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:50,638 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://erasure/small_file            
2025-02-14 15:00:50,638 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:50.709" endtime="20250214 15:00:50.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:50.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:50.710" endtime="20250214 15:00:50.710"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.145" endtime="20250214 15:00:50.710"/>
</kw>
<msg timestamp="20250214 15:00:50.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:50.144" endtime="20250214 15:00:50.710"/>
</kw>
<msg timestamp="20250214 15:00:50.711" level="INFO">${output} = 2025-02-14 15:00:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:50,453 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.144" endtime="20250214 15:00:50.711"/>
</kw>
<msg timestamp="20250214 15:00:50.711" level="INFO">${result} = 2025-02-14 15:00:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:50,453 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.144" endtime="20250214 15:00:50.711"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:50.711" endtime="20250214 15:00:50.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:50.120" endtime="20250214 15:00:50.712"/>
</test>
<test id="s1-s1-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="228">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:50.717" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:50.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:50.723" level="INFO">${output} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.715" endtime="20250214 15:00:50.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:50.723" level="INFO">5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.723" endtime="20250214 15:00:50.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:50.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:50.723" endtime="20250214 15:00:50.724"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.714" endtime="20250214 15:00:50.724"/>
</kw>
<msg timestamp="20250214 15:00:50.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:50.714" endtime="20250214 15:00:50.724"/>
</kw>
<msg timestamp="20250214 15:00:50.724" level="INFO">${file_md5_checksum} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:50.713" endtime="20250214 15:00:50.724"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:50.728" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:51.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:51.253" level="INFO">${output} = 2025-02-14 15:00:51,063 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:51,063 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.726" endtime="20250214 15:00:51.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:51.254" level="INFO">2025-02-14 15:00:51,063 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:51,063 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/small_file', '/tmp/small_file_downloaded']
2025-02-14 15:00:51,063 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f714c103820&gt;
2025-02-14 15:00:51,063 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f714c9eec10&gt;
2025-02-14 15:00:51,064 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f714c6e0e50&gt;
2025-02-14 15:00:51,065 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:51,067 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f714c1714c0&gt;
2025-02-14 15:00:51,067 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f714c0b5820&gt;
2025-02-14 15:00:51,067 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f714c189310&gt;
2025-02-14 15:00:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,068 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f714c0b5820&gt;
2025-02-14 15:00:51,068 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f714c189310&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,070 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f714c6afca0&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f714c009520&gt;
2025-02-14 15:00:51,073 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:51,073 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:51,074 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:51,097 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:51,097 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f714dc249d0&gt;
2025-02-14 15:00:51,103 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:51,111 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:51,130 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:51,133 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:51,135 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f714cd27a60&gt;
2025-02-14 15:00:51,135 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f714cd27820&gt;
2025-02-14 15:00:51,135 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,138 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:51,140 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:51,140 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:51,140 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:51,141 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,141 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:51,141 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f714dc249d0&gt;
2025-02-14 15:00:51,142 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f714cd27a60&gt;
2025-02-14 15:00:51,142 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f714cd27820&gt;
2025-02-14 15:00:51,142 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,144 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:51,145 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:51,145 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:51,146 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,146 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:51,146 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f714dc249d0&gt;
2025-02-14 15:00:51,147 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f714cd27a60&gt;
2025-02-14 15:00:51,147 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f714cd27820&gt;
2025-02-14 15:00:51,147 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,149 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:51,150 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:51,150 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:51,151 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:51,151 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:51,151 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f714cc6e8b0&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f714cc6e820&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f714cc75700&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b45ca60&gt;&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f714b4ec970&gt;&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f714cc6e670&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f714cc758b0&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b45ca60&gt;&gt;
2025-02-14 15:00:51,152 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:51,153 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:51,153 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:51,153 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:51,153 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f714cc6eb80&gt;
2025-02-14 15:00:51,153 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f714b45ca30&gt;&gt;
2025-02-14 15:00:51,153 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f714cc6e280&gt;
2025-02-14 15:00:51,153 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f714cc75d30&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f714cc72ee0&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f714b489cd0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:51,154 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f714b489c40&gt;&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f714cc6e4c0&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f714cc75820&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f714b45ca30&gt;&gt;
2025-02-14 15:00:51,154 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:51,154 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150051Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:51,154 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150051Z
20250214/us-west-1/s3/aws4_request
65dc9f8337401fb49e6a90cf50a852cbec6f6898039c3ecd06af27144704ce4a
2025-02-14 15:00:51,155 - MainThread - botocore.auth - DEBUG - Signature:
1a0e3abf8c8d5eb44a4fe5654db0e689997002d2a4356dc585e00e65c39f0218
2025-02-14 15:00:51,155 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f714cc75670&gt;
2025-02-14 15:00:51,155 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150051Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1a0e3abf8c8d5eb44a4fe5654db0e689997002d2a4356dc585e00e65c39f0218', 'amz-sdk-invocation-id': b'f4528a9f-42da-4582-aafa-4d0d911af9b5', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:51,155 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:51,163 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/small_file HTTP/1.1" 200 0
2025-02-14 15:00:51,163 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f714cc75b80&gt;
2025-02-14 15:00:51,163 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f714cc759d0&gt;
2025-02-14 15:00:51,164 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'CfPM7gvT61', 'x-amz-request-id': '0f2a9689-0e17-4851-9ee8-56efadfbf8c4', 'Content-Length': '1000000'}
2025-02-14 15:00:51,164 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:51,164 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f714cc75ca0&gt;
2025-02-14 15:00:51,164 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f714b45c9a0&gt;
2025-02-14 15:00:51,164 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:51,164 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b45ca60&gt;&gt;
2025-02-14 15:00:51,164 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f714c100d30&gt;
2025-02-14 15:00:51,165 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:51,165 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;}) about to wait for the following futures []
2025-02-14 15:00:51,165 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;}) done waiting for dependent futures
2025-02-14 15:00:51,165 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f714b512910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f714b45cdf0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f714b45ce80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f714b460100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f714b4601c0&gt;}
2025-02-14 15:00:51,166 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f714b460100&gt; for transfer request: 0.
2025-02-14 15:00:51,166 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:51,166 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:51,166 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:51,166 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:51,166 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f714b512910&gt;, 'bucket': 'erasure', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f714b463ee0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f714a3db610&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f714a3db370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f714a3db640&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f714a3db8e0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f714a3dbd30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f714cc6e8b0&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f714cc6e820&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f714cc75700&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b4ec850&gt;&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f714b571760&gt;&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f714cc6e670&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f714cc758b0&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b4ec850&gt;&gt;
2025-02-14 15:00:51,167 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f714cc6eb80&gt;
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f714b4ec820&gt;&gt;
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f714cc6e280&gt;
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f714cc75d30&gt;
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f714cc72ee0&gt;
2025-02-14 15:00:51,168 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f714b512a90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f714c3aa790&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f714b512a00&gt;&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f714cc6e4c0&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f714cc75820&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f714b4ec820&gt;&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150051Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150051Z
20250214/us-west-1/s3/aws4_request
db8f3f94994b642d50cbfb2750cf77f5c6e0c5e56895511cfe08836dd10ea3ec
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
35e1455a02fb5751ac9b95d00e6678de7fe576b20d86744df51cd0481bce15c7
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f714c3aa820&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f714cc75670&gt;
2025-02-14 15:00:51,169 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150051Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=35e1455a02fb5751ac9b95d00e6678de7fe576b20d86744df51cd0481bce15c7', 'amz-sdk-invocation-id': b'62a95565-0643-4b02-8da2-69f63cdb66b6', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:51,170 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:51,197 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/small_file HTTP/1.1" 200 1000000
2025-02-14 15:00:51,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f714cc75b80&gt;
2025-02-14 15:00:51,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f714cc759d0&gt;
2025-02-14 15:00:51,198 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'k0E3GlqZxn', 'x-amz-request-id': '7e51aaa7-d8fe-4c2f-8e2e-e37981d13706', 'Content-Length': '1000000'}
2025-02-14 15:00:51,198 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f714a3a7c10&gt;
2025-02-14 15:00:51,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f714cc75ca0&gt;
2025-02-14 15:00:51,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f714b4ec790&gt;
2025-02-14 15:00:51,199 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:51,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f714b4ec850&gt;&gt;
2025-02-14 15:00:51,199 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f714c100d30&gt;
2025-02-14 15:00:51,200 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (7.4 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:51,200 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 15:00:51,200 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'offset': 0}
2025-02-14 15:00:51,201 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (14.2 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:51,201 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 15:00:51,201 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'offset': 262144}
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (21.0 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-14 15:00:51,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (26.3 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:51,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2025-02-14 15:00:51,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2025-02-14 15:00:51,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f714a3dbe50&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f714b45ce80&gt;}
2025-02-14 15:00:51,203 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/small_file to ../../tmp/small_file_downloaded
2025-02-14 15:00:51,203 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:51.253" endtime="20250214 15:00:51.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:51.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:51.254" endtime="20250214 15:00:51.255"/>
</kw>
<status status="PASS" starttime="20250214 15:00:50.725" endtime="20250214 15:00:51.255"/>
</kw>
<msg timestamp="20250214 15:00:51.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:50.725" endtime="20250214 15:00:51.255"/>
</kw>
<msg timestamp="20250214 15:00:51.256" level="INFO">${output} = 2025-02-14 15:00:51,063 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:51,063 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.725" endtime="20250214 15:00:51.256"/>
</kw>
<msg timestamp="20250214 15:00:51.256" level="INFO">${result} = 2025-02-14 15:00:51,063 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:51,063 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:50.724" endtime="20250214 15:00:51.256"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:51.256" endtime="20250214 15:00:51.257"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:00:51.257" endtime="20250214 15:00:51.258"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:51.261" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:51.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:51.727" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 15:00:51.259" endtime="20250214 15:00:51.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:51.728" level="INFO">delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 15:00:51.727" endtime="20250214 15:00:51.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:51.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:51.728" endtime="20250214 15:00:51.729"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.259" endtime="20250214 15:00:51.729"/>
</kw>
<msg timestamp="20250214 15:00:51.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:51.259" endtime="20250214 15:00:51.729"/>
</kw>
<msg timestamp="20250214 15:00:51.729" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 15:00:51.259" endtime="20250214 15:00:51.729"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.258" endtime="20250214 15:00:51.729"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:51.736" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:51.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:51.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:51.731" endtime="20250214 15:00:51.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:51.748" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:51.747" endtime="20250214 15:00:51.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:51.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:51.748" endtime="20250214 15:00:51.748"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.731" endtime="20250214 15:00:51.748"/>
</kw>
<msg timestamp="20250214 15:00:51.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:51.731" endtime="20250214 15:00:51.749"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.730" endtime="20250214 15:00:51.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:50.713" endtime="20250214 15:00:51.749"/>
</test>
<test id="s1-s1-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="237">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:51.757" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:51.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:51.765" level="INFO">${output} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:51.752" endtime="20250214 15:00:51.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:51.766" level="INFO">5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:51.765" endtime="20250214 15:00:51.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:51.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:51.766" endtime="20250214 15:00:51.767"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.752" endtime="20250214 15:00:51.767"/>
</kw>
<msg timestamp="20250214 15:00:51.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:51.751" endtime="20250214 15:00:51.767"/>
</kw>
<msg timestamp="20250214 15:00:51.767" level="INFO">${file_md5_checksum} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<status status="PASS" starttime="20250214 15:00:51.751" endtime="20250214 15:00:51.768"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:51.772" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:52.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:52.304" level="INFO">${output} = 2025-02-14 15:00:52,073 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,074 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:51.769" endtime="20250214 15:00:52.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:52.305" level="INFO">2025-02-14 15:00:52,073 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,074 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://erasure/test_file']
2025-02-14 15:00:52,074 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f99170b7820&gt;
2025-02-14 15:00:52,074 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f99179a2c10&gt;
2025-02-14 15:00:52,074 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f9917694e50&gt;
2025-02-14 15:00:52,075 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:52,077 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f99171244c0&gt;
2025-02-14 15:00:52,077 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f9917069820&gt;
2025-02-14 15:00:52,078 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f991713e310&gt;
2025-02-14 15:00:52,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,078 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f9917069820&gt;
2025-02-14 15:00:52,078 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f991713e310&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,082 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f9917663ca0&gt;
2025-02-14 15:00:52,083 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f9916fbc520&gt;
2025-02-14 15:00:52,083 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:52,084 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:52,085 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:52,107 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:52,107 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9918bd89d0&gt;
2025-02-14 15:00:52,113 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:52,122 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:52,141 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:52,144 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:52,146 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9917cdba60&gt;
2025-02-14 15:00:52,146 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9917cdb820&gt;
2025-02-14 15:00:52,146 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,149 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,151 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:52,151 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,151 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,152 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,152 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,152 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9918bd89d0&gt;
2025-02-14 15:00:52,153 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9917cdba60&gt;
2025-02-14 15:00:52,153 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9917cdb820&gt;
2025-02-14 15:00:52,153 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,155 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,156 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,156 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,156 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,156 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,157 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f9918bd89d0&gt;
2025-02-14 15:00:52,157 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f9917cdba60&gt;
2025-02-14 15:00:52,157 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f9917cdb820&gt;
2025-02-14 15:00:52,158 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,160 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,161 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,161 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,161 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,162 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,162 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:52,163 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:52,163 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f991641c8b0&gt;}) about to wait for the following futures []
2025-02-14 15:00:52,163 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f991641c8b0&gt;}) done waiting for dependent futures
2025-02-14 15:00:52,163 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f991641c8b0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f99164c9970&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f9916413e50&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f9916413ee0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f9916419160&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f991641c8b0&gt;}
2025-02-14 15:00:52,164 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f9916419160&gt; for transfer request: 0.
2025-02-14 15:00:52,164 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:52,164 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2025-02-14 15:00:52,164 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:52,164 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f99164c9970&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f99163b2160&gt;, 'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f9917c264c0&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f9917c228b0&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f9917c26dc0&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f9917c22820&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f9917c29700&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f99164a28b0&gt;&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f99164a9760&gt;&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f9917c22670&gt;
2025-02-14 15:00:52,165 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f9917c298b0&gt;
2025-02-14 15:00:52,166 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f99164a28b0&gt;&gt;
2025-02-14 15:00:52,166 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:52,167 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:52,167 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:52,167 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:52,167 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f9917d98790&gt;
2025-02-14 15:00:52,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f9917c22b80&gt;
2025-02-14 15:00:52,169 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:52,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f99164a2880&gt;&gt;
2025-02-14 15:00:52,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f9917c22280&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f9917c29d30&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f9917c26ee0&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'XMoqLc8wfUGH/i5Fp0f5fA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f99163b2160&gt;, 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f99164c9af0&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f99163b2160&gt;, 'Metadata': {'ETag': 'custom-etag-value'}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f991735e790&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f99164c9a60&gt;&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f9917c224c0&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f9917c29820&gt;
2025-02-14 15:00:52,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f99164a2880&gt;&gt;
2025-02-14 15:00:52,171 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:52,171 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_file

content-md5:XMoqLc8wfUGH/i5Fp0f5fA==
host:s3g:9878
x-amz-content-sha256:873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d
x-amz-date:20250214T150052Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d
2025-02-14 15:00:52,171 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150052Z
20250214/us-west-1/s3/aws4_request
5e466374be4047c9682603381226beb3073ee3bd721fa6e38d6c8771c969c093
2025-02-14 15:00:52,171 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
68ae04824851d1636e02def572a41c8d42c9d75d211a0214e013863da0f819ac
2025-02-14 15:00:52,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f991735e820&gt;
2025-02-14 15:00:52,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f9917c29670&gt;
2025-02-14 15:00:52,172 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'XMoqLc8wfUGH/i5Fp0f5fA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150052Z', 'X-Amz-Content-SHA256': b'873c7ead71b20a6be09b5a89e7e3a1d54d48702bd5b62a54c0bd66508491b93d', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=68ae04824851d1636e02def572a41c8d42c9d75d211a0214e013863da0f819ac', 'amz-sdk-invocation-id': b'f1a210d2-c6df-44bc-b3d3-4d9f85dd425e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-14 15:00:52,172 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:52,173 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:52,187 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (10.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (19.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (28.0 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:52,231 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_file HTTP/1.1" 200 0
2025-02-14 15:00:52,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f9917c29b80&gt;
2025-02-14 15:00:52,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f9917c299d0&gt;
2025-02-14 15:00:52,232 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Server': 'Ozone', 'x-amz-id-2': 'irkIzv3RlSUDn63', 'x-amz-request-id': '59eab3c0-52cb-4591-b34a-4748d7e97969', 'Content-Length': '0'}
2025-02-14 15:00:52,232 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:52,233 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f9917c29ca0&gt;
2025-02-14 15:00:52,233 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f99164a27f0&gt;
2025-02-14 15:00:52,233 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:52,233 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f99164a28b0&gt;&gt;
2025-02-14 15:00:52,233 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f99170b3d30&gt;
2025-02-14 15:00:52,234 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 976.6 KiB/976.6 KiB (13.8 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://erasure/test_file             
2025-02-14 15:00:52,234 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:52.304" endtime="20250214 15:00:52.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:52.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:52.305" endtime="20250214 15:00:52.306"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.769" endtime="20250214 15:00:52.306"/>
</kw>
<msg timestamp="20250214 15:00:52.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:51.769" endtime="20250214 15:00:52.306"/>
</kw>
<msg timestamp="20250214 15:00:52.307" level="INFO">${output} = 2025-02-14 15:00:52,073 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,074 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:51.768" endtime="20250214 15:00:52.307"/>
</kw>
<status status="PASS" starttime="20250214 15:00:51.768" endtime="20250214 15:00:52.307"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:52.311" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:52.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:52.816" level="INFO">${output} = 2025-02-14 15:00:52,624 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,624 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:52.308" endtime="20250214 15:00:52.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:52.817" level="INFO">2025-02-14 15:00:52,624 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,624 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/test_file', '/tmp/test_file_downloaded']
2025-02-14 15:00:52,624 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fdec099d820&gt;
2025-02-14 15:00:52,624 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fdec1288c10&gt;
2025-02-14 15:00:52,624 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fdec0f7ae50&gt;
2025-02-14 15:00:52,626 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:52,628 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fdec0a0b4c0&gt;
2025-02-14 15:00:52,628 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fdec094f820&gt;
2025-02-14 15:00:52,628 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fdec0a22310&gt;
2025-02-14 15:00:52,628 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,628 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fdec094f820&gt;
2025-02-14 15:00:52,629 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fdec0a22310&gt;
2025-02-14 15:00:52,630 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,630 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,630 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,630 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,630 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,631 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,632 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdec0f49ca0&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,633 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,634 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,634 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,634 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,634 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdec08a3520&gt;
2025-02-14 15:00:52,634 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:52,634 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:52,635 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:52,659 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:52,659 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdec24be9d0&gt;
2025-02-14 15:00:52,665 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:52,673 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:52,693 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:52,696 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:52,698 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdec15c1a60&gt;
2025-02-14 15:00:52,698 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdec15c1820&gt;
2025-02-14 15:00:52,698 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,702 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,703 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:52,704 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,704 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,704 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,704 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,705 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdec24be9d0&gt;
2025-02-14 15:00:52,705 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdec15c1a60&gt;
2025-02-14 15:00:52,706 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdec15c1820&gt;
2025-02-14 15:00:52,706 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,708 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,709 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,710 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,710 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,710 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,710 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdec24be9d0&gt;
2025-02-14 15:00:52,711 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdec15c1a60&gt;
2025-02-14 15:00:52,711 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdec15c1820&gt;
2025-02-14 15:00:52,711 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,713 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:52,715 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:52,715 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:52,716 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:52,716 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:52,716 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fdec15088b0&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fdec1508820&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fdec150f700&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfce8a60&gt;&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fdebfe86970&gt;&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fdec1508670&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fdec150f8b0&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfce8a60&gt;&gt;
2025-02-14 15:00:52,717 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:52,718 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:52,718 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:52,718 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fdec1508b80&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fdebfce8a30&gt;&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fdec1508280&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7fdec150fd30&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fdec150cee0&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fdebfe23cd0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fdebfe23c40&gt;&gt;
2025-02-14 15:00:52,719 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fdec15084c0&gt;
2025-02-14 15:00:52,720 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fdec150f820&gt;
2025-02-14 15:00:52,720 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fdebfce8a30&gt;&gt;
2025-02-14 15:00:52,720 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:52,720 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150052Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:52,720 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150052Z
20250214/us-west-1/s3/aws4_request
d9441ffe90866165b0bc999281c5c85b13268818232222be5b7d62b22f9c6f20
2025-02-14 15:00:52,720 - MainThread - botocore.auth - DEBUG - Signature:
58683aad7b8408eb33cfd6e8900d68f2c0792cd97e5a430c502c679540665f72
2025-02-14 15:00:52,720 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fdec150f670&gt;
2025-02-14 15:00:52,720 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150052Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=58683aad7b8408eb33cfd6e8900d68f2c0792cd97e5a430c502c679540665f72', 'amz-sdk-invocation-id': b'bbdba3ea-0d1a-4ca8-b3fd-3f8f92a6bfb7', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:52,721 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:52,729 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/test_file HTTP/1.1" 200 0
2025-02-14 15:00:52,729 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fdec150fb80&gt;
2025-02-14 15:00:52,729 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7fdec150f9d0&gt;
2025-02-14 15:00:52,730 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:52 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': '0PNzL4f6', 'x-amz-request-id': 'dca510bd-356e-441a-86ac-71a28b7d67b5', 'Content-Length': '1000000'}
2025-02-14 15:00:52,730 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:52,730 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7fdec150fca0&gt;
2025-02-14 15:00:52,730 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fdebfce89a0&gt;
2025-02-14 15:00:52,730 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:52,730 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfce8a60&gt;&gt;
2025-02-14 15:00:52,730 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fdec099ad30&gt;
2025-02-14 15:00:52,731 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:52,732 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;}) about to wait for the following futures []
2025-02-14 15:00:52,732 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;}) done waiting for dependent futures
2025-02-14 15:00:52,732 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdebfeac910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fdebfce8df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fdebfce8e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fdebfced100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fdebfced1c0&gt;}
2025-02-14 15:00:52,732 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fdebfced100&gt; for transfer request: 0.
2025-02-14 15:00:52,732 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:52,732 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdebfeac910&gt;, 'bucket': 'erasure', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fdebfcf0eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fdebfcf0ee0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fdebfc9b340&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fdebfc9b610&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdebfc9b850&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fdebfc9bd00&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fdec15088b0&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fdec1508820&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fdec150f700&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfe86850&gt;&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fdebff0c760&gt;&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fdec1508670&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fdec150f8b0&gt;
2025-02-14 15:00:52,733 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfe86850&gt;&gt;
2025-02-14 15:00:52,734 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:52,734 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:52,734 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:52,734 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fdec1508b80&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fdebfe86820&gt;&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fdec1508280&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7fdec150fd30&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fdec150cee0&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fdebfeaca90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fdec0c44790&gt;
2025-02-14 15:00:52,735 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fdebfeaca00&gt;&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fdec15084c0&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fdec150f820&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fdebfe86820&gt;&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150052Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150052Z
20250214/us-west-1/s3/aws4_request
e900307a5ec7fa1e02d7312b9aab5d603ed35d1106f098385c3d120a97438176
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c8332ad2394f862078b1d1171140f6b5b3b1a0a1b6801673f3fbe0c9a157d85c
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fdec0c44820&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fdec150f670&gt;
2025-02-14 15:00:52,736 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150052Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c8332ad2394f862078b1d1171140f6b5b3b1a0a1b6801673f3fbe0c9a157d85c', 'amz-sdk-invocation-id': b'cdcca578-7f2d-4143-97f3-2d0f60d75a7f', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:52,737 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:52,737 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:52,756 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/test_file HTTP/1.1" 200 1000000
2025-02-14 15:00:52,756 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7fdec150fb80&gt;
2025-02-14 15:00:52,757 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7fdec150f9d0&gt;
2025-02-14 15:00:52,757 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"5cca2a2dcf307d4187fe2e45a747f97c"', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:52 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'yJwGgEGptJVHA08', 'x-amz-request-id': '6aec9490-2712-41ec-a4f5-bc4d503fd5a3', 'Content-Length': '1000000'}
2025-02-14 15:00:52,757 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fdebfc658e0&gt;
2025-02-14 15:00:52,758 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7fdec150fca0&gt;
2025-02-14 15:00:52,758 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fdebfe86790&gt;
2025-02-14 15:00:52,758 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:52,758 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fdebfe86850&gt;&gt;
2025-02-14 15:00:52,758 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fdec099ad30&gt;
2025-02-14 15:00:52,759 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-14 15:00:52,759 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 15:00:52,759 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (11.7 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:52,760 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-14 15:00:52,760 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 15:00:52,760 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (22.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (32.4 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:52,760 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 15:00:52,761 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-14 15:00:52,761 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'offset': 524288}
2025-02-14 15:00:52,761 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-14 15:00:52,761 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-14 15:00:52,761 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (39.9 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:52,762 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2025-02-14 15:00:52,762 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2025-02-14 15:00:52,762 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdebfc9be20&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fdebfce8e80&gt;}
2025-02-14 15:00:52,762 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/test_file to ../../tmp/test_file_downloaded 
2025-02-14 15:00:52,762 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:52.817" endtime="20250214 15:00:52.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:52.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:52.818" endtime="20250214 15:00:52.818"/>
</kw>
<status status="PASS" starttime="20250214 15:00:52.308" endtime="20250214 15:00:52.818"/>
</kw>
<msg timestamp="20250214 15:00:52.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:52.308" endtime="20250214 15:00:52.819"/>
</kw>
<msg timestamp="20250214 15:00:52.819" level="INFO">${output} = 2025-02-14 15:00:52,624 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,624 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:52.308" endtime="20250214 15:00:52.819"/>
</kw>
<msg timestamp="20250214 15:00:52.820" level="INFO">${result} = 2025-02-14 15:00:52,624 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:52,624 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:52.307" endtime="20250214 15:00:52.820"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 15:00:52.821" level="INFO">${match} = HEAD /erasure/test_file HTTP/1.1" 200 0
2025-02-14 15:00:52,729 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fdec150fb80&gt;...</msg>
<msg timestamp="20250214 15:00:52.821" level="INFO">${ETag} = 5cca2a2dcf307d4187fe2e45a747f97c</msg>
<msg timestamp="20250214 15:00:52.821" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20250214 15:00:52.820" endtime="20250214 15:00:52.821"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 15:00:52.821" endtime="20250214 15:00:52.821"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 15:00:52.821" endtime="20250214 15:00:52.822"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 15:00:52.822" endtime="20250214 15:00:52.822"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:52.826" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:53.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:53.271" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 15:00:52.823" endtime="20250214 15:00:53.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:53.272" level="INFO">delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 15:00:53.271" endtime="20250214 15:00:53.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:53.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:53.272" endtime="20250214 15:00:53.272"/>
</kw>
<status status="PASS" starttime="20250214 15:00:52.823" endtime="20250214 15:00:53.273"/>
</kw>
<msg timestamp="20250214 15:00:53.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:52.823" endtime="20250214 15:00:53.273"/>
</kw>
<msg timestamp="20250214 15:00:53.273" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 15:00:52.822" endtime="20250214 15:00:53.273"/>
</kw>
<status status="PASS" starttime="20250214 15:00:52.822" endtime="20250214 15:00:53.273"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:53.276" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:53.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:53.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:53.274" endtime="20250214 15:00:53.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:53.281" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:53.280" endtime="20250214 15:00:53.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:53.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:53.281" endtime="20250214 15:00:53.281"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.274" endtime="20250214 15:00:53.281"/>
</kw>
<msg timestamp="20250214 15:00:53.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:53.273" endtime="20250214 15:00:53.282"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.273" endtime="20250214 15:00:53.282"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:53.284" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:53.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:53.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:53.282" endtime="20250214 15:00:53.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:53.289" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:53.288" endtime="20250214 15:00:53.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:53.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:53.289" endtime="20250214 15:00:53.289"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.282" endtime="20250214 15:00:53.289"/>
</kw>
<msg timestamp="20250214 15:00:53.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:53.282" endtime="20250214 15:00:53.289"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.282" endtime="20250214 15:00:53.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:51.750" endtime="20250214 15:00:53.290"/>
</test>
<test id="s1-s1-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="250">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:53.294" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 15:00:53.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:53.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:53.292" endtime="20250214 15:00:53.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:53.338" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:53.337" endtime="20250214 15:00:53.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:53.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:53.338" endtime="20250214 15:00:53.338"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.291" endtime="20250214 15:00:53.338"/>
</kw>
<msg timestamp="20250214 15:00:53.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:53.291" endtime="20250214 15:00:53.339"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.291" endtime="20250214 15:00:53.339"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:53.342" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:54.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:54.388" level="INFO">${output} = 2025-02-14 15:00:53,649 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:53,649 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:53.340" endtime="20250214 15:00:54.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:54.389" level="INFO">2025-02-14 15:00:53,649 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:53,649 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 15:00:53,649 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f3cfedfa820&gt;
2025-02-14 15:00:53,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f3cff6e5c10&gt;
2025-02-14 15:00:53,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f3cff3d6e50&gt;
2025-02-14 15:00:53,651 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:53,653 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f3cfee674c0&gt;
2025-02-14 15:00:53,653 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f3cfedac820&gt;
2025-02-14 15:00:53,653 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f3cfee7e310&gt;
2025-02-14 15:00:53,654 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,654 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f3cfedac820&gt;
2025-02-14 15:00:53,654 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f3cfee7e310&gt;
2025-02-14 15:00:53,655 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,658 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3cff3a4ca0&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3cfecff520&gt;
2025-02-14 15:00:53,659 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:53,659 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:53,661 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:53,683 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:53,683 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3d0091b9d0&gt;
2025-02-14 15:00:53,690 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:53,697 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:53,717 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:53,720 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:53,722 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3cffa1ea60&gt;
2025-02-14 15:00:53,722 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3cffa1e820&gt;
2025-02-14 15:00:53,723 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,726 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:53,728 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:53,728 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:53,728 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:53,728 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,728 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:53,729 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3d0091b9d0&gt;
2025-02-14 15:00:53,729 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3cffa1ea60&gt;
2025-02-14 15:00:53,729 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3cffa1e820&gt;
2025-02-14 15:00:53,730 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,732 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:53,733 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:53,734 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:53,734 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,734 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:53,734 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3d0091b9d0&gt;
2025-02-14 15:00:53,735 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3cffa1ea60&gt;
2025-02-14 15:00:53,735 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3cffa1e820&gt;
2025-02-14 15:00:53,735 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,737 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:53,739 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:53,739 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:53,739 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:53,739 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:53,740 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:53,741 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:53,741 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3cfe130850&gt;}) about to wait for the following futures []
2025-02-14 15:00:53,741 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3cfe130850&gt;}) done waiting for dependent futures
2025-02-14 15:00:53,741 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3cfe130850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3cfe289910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f3cfe128df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3cfe128e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3cfe12c100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3cfe130850&gt;}
2025-02-14 15:00:53,742 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3cfe12c100&gt; for transfer request: 0.
2025-02-14 15:00:53,742 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:53,742 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:53,742 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:53,742 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3cfe289910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 15:00:53,742 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f3cff9694c0&gt;
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f3cff9668b0&gt;
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f3cff966820&gt;
2025-02-14 15:00:53,743 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3cfe12c100&gt; for transfer request: 0.
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3cff96c700&gt;
2025-02-14 15:00:53,743 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;]
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3cfe2e8700&gt;&gt;
2025-02-14 15:00:53,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f3cff966670&gt;
2025-02-14 15:00:53,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3cff96c8b0&gt;
2025-02-14 15:00:53,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,744 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f3cff966b80&gt;
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,745 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f3cff966280&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f3cff96cd30&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3cff969ee0&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3cfe289a90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f3cff0a0790&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3cfe289a00&gt;&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f3cff9664c0&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f3cff96c820&gt;
2025-02-14 15:00:53,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150053Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150053Z
20250214/us-west-1/s3/aws4_request
424a233d4e5dd22e93bf14ffa5940283068bcc51d855d83306b8235c85b2719c
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b3f8de4be6656cb13a41c3e9da09708f9f017940ff0079909193488cf6cc1afe
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f3cff0a0820&gt;
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f3cff96c670&gt;
2025-02-14 15:00:53,747 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150053Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b3f8de4be6656cb13a41c3e9da09708f9f017940ff0079909193488cf6cc1afe', 'amz-sdk-invocation-id': b'c490a182-c8c8-4f82-8415-b5361efda59e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 15:00:53,748 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:53,743 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3cfe12c100&gt; for transfer request: 0.
2025-02-14 15:00:53,743 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;
2025-02-14 15:00:53,748 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:53,748 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;]
2025-02-14 15:00:53,748 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3cfe12c100&gt; for transfer request: 0.
2025-02-14 15:00:53,748 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;
2025-02-14 15:00:53,748 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:53,749 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c7c40&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe08a940&gt;]
2025-02-14 15:00:53,749 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c73a0&gt;
2025-02-14 15:00:53,749 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:53,761 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f3cff96cb80&gt;
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f3cff96c9d0&gt;
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': '9FaEPl28Gx7yo', 'x-amz-request-id': '5ed80362-f6d4-4add-9308-8550872122fb', 'Content-Length': '285'}
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f3cff96cca0&gt;
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3cfe263790&gt;
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:53,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f3cfedf6d30&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3cfe289910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c7f70&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843'}
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f3cff9668b0&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f3cff969dc0&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f3cff966820&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3cff96c700&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,763 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3cfe2e8700&gt;&gt;
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f3cff966670&gt;
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3cff96c8b0&gt;
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:53,764 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f3cffadb8b0&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe0c7c40&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3cfe289910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c77f0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843'}
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f3cff9668b0&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f3cff969dc0&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f3cff966820&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3cff96c700&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3cfe2e8700&gt;&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f3cff966670&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3cff96c8b0&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:53,765 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:53,766 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:53,766 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:53,766 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f3cffadb8b0&gt;
2025-02-14 15:00:53,769 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f3cff966b80&gt;
2025-02-14 15:00:53,769 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f3cff966280&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f3cff96cd30&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3cff969ee0&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'l1RTzJC2Wtn2kh18EiNoKg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c7f70&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3cfe289a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c7f70&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f3cff0a0790&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3cfe289a00&gt;&gt;
2025-02-14 15:00:53,770 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f3cff9664c0&gt;
2025-02-14 15:00:53,771 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f3cff96c820&gt;
2025-02-14 15:00:53,771 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843
content-md5:l1RTzJC2Wtn2kh18EiNoKg==
host:s3g:9878
x-amz-content-sha256:cb43e3e3632f11b6ab868125ac86c7f219464af56f894d11a2a1637389b9928d
x-amz-date:20250214T150053Z

content-md5;host;x-amz-content-sha256;x-amz-date
cb43e3e3632f11b6ab868125ac86c7f219464af56f894d11a2a1637389b9928d
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150053Z
20250214/us-west-1/s3/aws4_request
df3205ff047b93074540efb8cd96f4abd3289f00d2545a72d6bfad952d7b318e
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
27ad1955eb6be7df8111f5aa92a652a6f259d879f4ba32addeb93e8db9bb96f7
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f3cff0a0820&gt;
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f3cff96c670&gt;
2025-02-14 15:00:53,773 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'l1RTzJC2Wtn2kh18EiNoKg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150053Z', 'X-Amz-Content-SHA256': b'cb43e3e3632f11b6ab868125ac86c7f219464af56f894d11a2a1637389b9928d', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=27ad1955eb6be7df8111f5aa92a652a6f259d879f4ba32addeb93e8db9bb96f7', 'amz-sdk-invocation-id': b'857d0290-abb1-4f66-8f85-9465b2d53b1d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 15:00:53,774 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f3cff966b80&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f3cff966280&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f3cff96cd30&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3cff969ee0&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '9efGjMQKXEm2mBN287R6jQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c77f0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3cfe289a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3cfe0c77f0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f3cff0a0790&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3cfe289a00&gt;&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f3cff9664c0&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f3cff96c820&gt;
2025-02-14 15:00:53,784 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:53,790 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843
content-md5:9efGjMQKXEm2mBN287R6jQ==
host:s3g:9878
x-amz-content-sha256:31f3036798fecd7a0aff2383928d517463ddddd31fda4343c78b5c078f5a8cab
x-amz-date:20250214T150053Z

content-md5;host;x-amz-content-sha256;x-amz-date
31f3036798fecd7a0aff2383928d517463ddddd31fda4343c78b5c078f5a8cab
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150053Z
20250214/us-west-1/s3/aws4_request
02ed8ca81cbaf3423c30e27e7422c60004539157cc2214fad3151657c00d78ea
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
0a8e9b8bd638e0e156d09265ba74a7dbeeff8691d585e9275b3d0c5175910d6e
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f3cff0a0820&gt;
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f3cff96c670&gt;
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'9efGjMQKXEm2mBN287R6jQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150053Z', 'X-Amz-Content-SHA256': b'31f3036798fecd7a0aff2383928d517463ddddd31fda4343c78b5c078f5a8cab', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=0a8e9b8bd638e0e156d09265ba74a7dbeeff8691d585e9275b3d0c5175910d6e', 'amz-sdk-invocation-id': b'7a19f5a1-a34a-4719-9b83-2cb3547de931', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 15:00:53,793 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
Completed 256.0 KiB/9.5 MiB (5.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (9.6 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:53,795 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 768.0 KiB/9.5 MiB (14.0 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (18.1 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (22.1 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (25.8 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:53,809 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (25.6 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (28.5 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (31.4 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (34.1 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (36.6 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (39.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (43.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (45.9 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (48.1 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (50.3 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (52.5 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (52.4 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (54.4 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (56.2 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (58.4 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (60.7 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (62.7 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (63.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (64.9 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (66.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (68.4 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (69.7 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (68.8 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (69.4 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (69.8 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (70.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (68.8 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (69.2 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:54,015 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f3cff96cb80&gt;
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f3cff96c9d0&gt;
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '975453cc90b65ad9f6921d7c1223682a', 'Server': 'Ozone', 'x-amz-id-2': 'MbKg6rdhztqSVy', 'x-amz-request-id': '54f6e0fe-0832-4ede-b2be-80edccb886e0', 'Content-Length': '0'}
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f3cff96cca0&gt;
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3cfe263790&gt;
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,016 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:54,017 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f3cfedf6d30&gt;
Completed 9.5 MiB/9.5 MiB (34.7 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:54,017 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,254 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 15:00:54,255 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f3cff96cb80&gt;
2025-02-14 15:00:54,255 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f3cff96c9d0&gt;
2025-02-14 15:00:54,255 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:53 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'f5e7c68cc40a5c49b6981376f3b47a8d', 'Server': 'Ozone', 'x-amz-id-2': 'jO4QzX1uE', 'x-amz-request-id': '1a341507-e554-47c4-a2d9-4a1bb3c6cdc6', 'Content-Length': '0'}
2025-02-14 15:00:54,256 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:54,256 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f3cff96cca0&gt;
2025-02-14 15:00:54,256 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3cfe263790&gt;
2025-02-14 15:00:54,259 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,259 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:54,259 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f3cfedf6d30&gt;
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f3cfe08a940&gt;
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3cfe289910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'parts': [{'ETag': 'f5e7c68cc40a5c49b6981376f3b47a8d', 'PartNumber': 1}, {'ETag': '975453cc90b65ad9f6921d7c1223682a', 'PartNumber': 2}]}
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f3cff9668b0&gt;
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f3cff966820&gt;
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3cff96c700&gt;
2025-02-14 15:00:54,260 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:54,261 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3cfe2e8700&gt;&gt;
2025-02-14 15:00:54,261 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f3cff966670&gt;
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3cff96c8b0&gt;
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:54,262 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f3cff966b80&gt;
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f3cff966280&gt;
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f3cff96cd30&gt;
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3cff969ee0&gt;
2025-02-14 15:00:54,263 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;f5e7c68cc40a5c49b6981376f3b47a8d&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;975453cc90b65ad9f6921d7c1223682a&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3cfe289a90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843', 'MultipartUpload': {'Parts': [{'ETag': 'f5e7c68cc40a5c49b6981376f3b47a8d', 'PartNumber': 1}, {'ETag': '975453cc90b65ad9f6921d7c1223682a', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:54,265 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f3cff0a0790&gt;
2025-02-14 15:00:54,265 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3cfe289a00&gt;&gt;
2025-02-14 15:00:54,265 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f3cff9664c0&gt;
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f3cff96c820&gt;
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3cfe263820&gt;&gt;
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843
host:s3g:9878
x-amz-content-sha256:58b8d9c8913c2faee29362fa86cbeda2a969ce4358fa62a57c811362d582fcb7
x-amz-date:20250214T150054Z

host;x-amz-content-sha256;x-amz-date
58b8d9c8913c2faee29362fa86cbeda2a969ce4358fa62a57c811362d582fcb7
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150054Z
20250214/us-west-1/s3/aws4_request
d39afff6c4b1c6ba05ae9dff62a55f4fdce25f8e599999fccb5a54acaff7e07c
2025-02-14 15:00:54,266 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
98371b945b57a05f1d6f8f1bcdac9758e9a2a7ea5d87142bebaf064744585827
2025-02-14 15:00:54,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f3cff0a0820&gt;
2025-02-14 15:00:54,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f3cff96c670&gt;
2025-02-14 15:00:54,269 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150054Z', 'X-Amz-Content-SHA256': b'58b8d9c8913c2faee29362fa86cbeda2a969ce4358fa62a57c811362d582fcb7', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=98371b945b57a05f1d6f8f1bcdac9758e9a2a7ea5d87142bebaf064744585827', 'amz-sdk-invocation-id': b'8890f329-0345-4483-999e-a8a39fec46e4', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 15:00:54,301 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843 HTTP/1.1" 200 286
2025-02-14 15:00:54,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f3cff96cb80&gt;
2025-02-14 15:00:54,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f3cff96c9d0&gt;
2025-02-14 15:00:54,302 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'O7Tv1lkTBGqx96c', 'x-amz-request-id': '44b3a842-ace3-495f-8fde-c0b746742df8', 'Content-Length': '286'}
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"816df5e0b88a0009ee679d47deb1db1f-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f3cff96cca0&gt;
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3cfe263790&gt;
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3cfe263850&gt;&gt;
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f3cfedf6d30&gt;
2025-02-14 15:00:54,303 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 15:00:54,305 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:54.389" endtime="20250214 15:00:54.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:54.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:54.390" endtime="20250214 15:00:54.391"/>
</kw>
<status status="PASS" starttime="20250214 15:00:53.340" endtime="20250214 15:00:54.391"/>
</kw>
<msg timestamp="20250214 15:00:54.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:53.339" endtime="20250214 15:00:54.391"/>
</kw>
<msg timestamp="20250214 15:00:54.392" level="INFO">${output} = 2025-02-14 15:00:53,649 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:53,649 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:53.339" endtime="20250214 15:00:54.392"/>
</kw>
<msg timestamp="20250214 15:00:54.393" level="INFO">${result} = 2025-02-14 15:00:53,649 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:53,649 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:53.339" endtime="20250214 15:00:54.393"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 15:00:54.394" level="INFO">${match} = POST /erasure/big_file?uploadId=8687e333-ec1b-4b64-80e9-bcf77652efca-114002837750218843 HTTP/1.1" 200 286
2025-02-14 15:00:54,302 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse...</msg>
<msg timestamp="20250214 15:00:54.394" level="INFO">${etag1} = 816df5e0b88a0009ee679d47deb1db1f-2</msg>
<status status="PASS" starttime="20250214 15:00:54.393" endtime="20250214 15:00:54.394"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:54.398" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:55.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:55.109" level="INFO">${output} = 2025-02-14 15:00:54,700 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:54,700 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:54.396" endtime="20250214 15:00:55.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:55.110" level="INFO">2025-02-14 15:00:54,700 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:54,700 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/big_file', '/tmp/big_file_downloaded']
2025-02-14 15:00:54,700 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f3a50ecc820&gt;
2025-02-14 15:00:54,700 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f3a517b7c10&gt;
2025-02-14 15:00:54,700 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f3a514a9e50&gt;
2025-02-14 15:00:54,702 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:54,704 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f3a50f394c0&gt;
2025-02-14 15:00:54,704 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f3a50e7e820&gt;
2025-02-14 15:00:54,704 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f3a50f53310&gt;
2025-02-14 15:00:54,704 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,704 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f3a50e7e820&gt;
2025-02-14 15:00:54,705 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f3a50f53310&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a51476ca0&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a50dd2520&gt;
2025-02-14 15:00:54,710 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:54,710 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:54,711 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:54,733 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:54,733 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a529ed9d0&gt;
2025-02-14 15:00:54,739 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:54,748 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:54,768 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:54,771 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:54,773 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a51af0a60&gt;
2025-02-14 15:00:54,773 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a51af0820&gt;
2025-02-14 15:00:54,773 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,777 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:54,779 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:54,779 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:54,779 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:54,779 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,779 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:54,780 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a529ed9d0&gt;
2025-02-14 15:00:54,781 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a51af0a60&gt;
2025-02-14 15:00:54,781 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a51af0820&gt;
2025-02-14 15:00:54,781 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,782 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:54,784 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:54,784 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:54,784 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,784 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:54,785 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a529ed9d0&gt;
2025-02-14 15:00:54,785 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a51af0a60&gt;
2025-02-14 15:00:54,785 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a51af0820&gt;
2025-02-14 15:00:54,786 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,788 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:54,789 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:54,789 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:54,790 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:54,790 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:54,790 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f3a51a378b0&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f3a51a37820&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3a51a3e700&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a50225a60&gt;&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3a502b5970&gt;&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3a51a37670&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3a51a3e8b0&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a50225a60&gt;&gt;
2025-02-14 15:00:54,791 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:54,792 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:54,792 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:54,792 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:54,792 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f3a51a37b80&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a50225a30&gt;&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f3a51a37280&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f3a51a3ed30&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3a51a3bee0&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3a50252cd0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3a50252c40&gt;&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f3a51a374c0&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f3a51a3e820&gt;
2025-02-14 15:00:54,793 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a50225a30&gt;&gt;
2025-02-14 15:00:54,794 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:54,794 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150054Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:54,794 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150054Z
20250214/us-west-1/s3/aws4_request
c5c8b202f0e9ef926dc344ede5b97bc71a8addbec37e170cb4d8de5786a75ace
2025-02-14 15:00:54,794 - MainThread - botocore.auth - DEBUG - Signature:
8910c26f87b4acd83d41f0a08207a41840798dc5821c962cee6c89253f230705
2025-02-14 15:00:54,794 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f3a51a3e670&gt;
2025-02-14 15:00:54,794 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/big_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150054Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8910c26f87b4acd83d41f0a08207a41840798dc5821c962cee6c89253f230705', 'amz-sdk-invocation-id': b'f42cfde5-6c27-4dc3-9aa9-054e18cae48e', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:54,794 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:54,801 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/big_file HTTP/1.1" 200 0
2025-02-14 15:00:54,802 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f3a51a3eb80&gt;
2025-02-14 15:00:54,802 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f3a51a3e9d0&gt;
2025-02-14 15:00:54,802 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"816df5e0b88a0009ee679d47deb1db1f-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'HhTmr5yRkt', 'x-amz-request-id': 'f88549e6-4030-4043-b3f7-e62c09d247d6', 'Content-Length': '10000000'}
2025-02-14 15:00:54,802 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:54,803 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f3a51a3eca0&gt;
2025-02-14 15:00:54,803 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3a502259a0&gt;
2025-02-14 15:00:54,803 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,803 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a50225a60&gt;&gt;
2025-02-14 15:00:54,803 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f3a50ec9d30&gt;
2025-02-14 15:00:54,804 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,804 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;}) about to wait for the following futures []
2025-02-14 15:00:54,804 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;}) done waiting for dependent futures
2025-02-14 15:00:54,804 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3a502db910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f3a50225df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3a50225e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a50229100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt;}
2025-02-14 15:00:54,805 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a50229100&gt; for transfer request: 0.
2025-02-14 15:00:54,805 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3a502db910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f3a5022dee0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f3a501d8610&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f3a501d8370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f3a501d8640&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f3a501d8d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f3a51a378b0&gt;
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f3a51a37820&gt;
2025-02-14 15:00:54,805 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3a51a3e700&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3a5033a760&gt;&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3a51a37670&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3a51a3e8b0&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,806 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f3a51a37b80&gt;
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a502b5820&gt;&gt;
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f3a51a37280&gt;
2025-02-14 15:00:54,807 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a50229100&gt; for transfer request: 0.
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f3a51a3ed30&gt;
2025-02-14 15:00:54,807 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,807 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3a51a3bee0&gt;
2025-02-14 15:00:54,808 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2025-02-14 15:00:54,808 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3a502dba90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'Range': 'bytes=0-8388607'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:54,808 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f3a51173790&gt;
2025-02-14 15:00:54,808 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3a502dba00&gt;&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f3a51a374c0&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f3a51a3e820&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a502b5820&gt;&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150054Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150054Z
20250214/us-west-1/s3/aws4_request
d675a4ed7c4381f7431f6845258ae41b291fe2a61629b1661f2719cf71de1881
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
31e3368131cd34942649930fa795ca1238a95df5af99bb6781cce750d7bb5518
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f3a51173820&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f3a51a3e670&gt;
2025-02-14 15:00:54,809 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150054Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=31e3368131cd34942649930fa795ca1238a95df5af99bb6781cce750d7bb5518', 'amz-sdk-invocation-id': b'1e5f191b-25b0-43c7-9528-a1222b5f205a', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:54,808 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,808 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3a502db910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f3a5022dee0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f3a501d8610&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f3a501d8370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f3a501d8640&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a501d8880&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f3a501d8d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f3a51a378b0&gt;
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f3a51a37820&gt;
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f3a51a3e700&gt;
2025-02-14 15:00:54,810 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f3a5033a760&gt;&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3a51a37670&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f3a51a3e8b0&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f3a51a37b80&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a502b5820&gt;&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f3a51a37280&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f3a51a3ed30&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3a51a3bee0&gt;
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3a502dba90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'Range': 'bytes=8388608-'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:54,811 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f3a51173790&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3a502dba00&gt;&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f3a51a374c0&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f3a51a3e820&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f3a502b5820&gt;&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150054Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150054Z
20250214/us-west-1/s3/aws4_request
b3f18f4bff8f344236f846d4b1906658996d2e2ef4bad5c6d1d203d0d68be2d0
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
620cd0fea9e63eced1e3cc816bf631448cc7e50ec2262f6c334d651ab6dff343
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f3a51173820&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f3a51a3e670&gt;
2025-02-14 15:00:54,812 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150054Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=620cd0fea9e63eced1e3cc816bf631448cc7e50ec2262f6c334d651ab6dff343', 'amz-sdk-invocation-id': b'77829b8c-591e-4600-8089-2320108a9085', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 15:00:54,813 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-14 15:00:54,920 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 1611392
2025-02-14 15:00:54,920 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f3a51a3eb80&gt;
2025-02-14 15:00:54,920 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f3a51a3e9d0&gt;
2025-02-14 15:00:54,921 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"816df5e0b88a0009ee679d47deb1db1f-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'xuxc24SoWG', 'x-amz-request-id': '3fc53ba0-09c9-4279-b968-e1887a90c2ec', 'Content-Length': '1611392'}
2025-02-14 15:00:54,921 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f3a501ae4c0&gt;
2025-02-14 15:00:54,922 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f3a51a3eca0&gt;
2025-02-14 15:00:54,922 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3a502b5790&gt;
2025-02-14 15:00:54,923 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,923 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,923 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f3a50ec9d30&gt;
2025-02-14 15:00:54,925 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 256.0 KiB/9.5 MiB (2.1 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:54,925 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,925 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2025-02-14 15:00:54,926 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2025-02-14 15:00:54,926 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 8388608}
2025-02-14 15:00:54,927 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,928 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 512.0 KiB/9.5 MiB (4.1 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:54,928 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,928 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,929 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2025-02-14 15:00:54,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2025-02-14 15:00:54,929 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 8650752}
Completed 768.0 KiB/9.5 MiB (6.1 MiB/s) with 1 file(s) remaining
2025-02-14 15:00:54,929 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,929 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,930 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,930 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,930 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,930 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,930 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,931 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,931 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,931 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2025-02-14 15:00:54,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2025-02-14 15:00:54,931 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 8912896}
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 9175040}
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2025-02-14 15:00:54,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 9437184}
2025-02-14 15:00:54,933 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2025-02-14 15:00:54,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2025-02-14 15:00:54,933 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 9699328}
Completed 1.0 MiB/9.5 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (11.9 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (12.2 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,934 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2025-02-14 15:00:54,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2025-02-14 15:00:54,934 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 9961472}
2025-02-14 15:00:54,934 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,941 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 8388608
2025-02-14 15:00:54,941 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f3a51a3eb80&gt;
2025-02-14 15:00:54,941 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f3a51a3e9d0&gt;
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"816df5e0b88a0009ee679d47deb1db1f-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 15:00:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'U3z2am3TfBAFiR', 'x-amz-request-id': 'fa86f127-d592-42ab-a587-4ffd7a227373', 'Content-Length': '8388608'}
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f3a501aeb80&gt;
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f3a51a3eca0&gt;
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3a502b5790&gt;
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f3a502b5850&gt;&gt;
2025-02-14 15:00:54,942 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f3a50ec9d30&gt;
Completed 1.8 MiB/9.5 MiB (12.9 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,943 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,943 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,944 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-14 15:00:54,944 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 15:00:54,944 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 0}
2025-02-14 15:00:54,944 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.0 MiB/9.5 MiB (14.5 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,945 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,945 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,945 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-14 15:00:54,945 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 15:00:54,945 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 262144}
2025-02-14 15:00:54,946 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.3 MiB/9.5 MiB (16.1 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,947 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,947 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,947 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 15:00:54,947 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-14 15:00:54,947 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 524288}
2025-02-14 15:00:54,947 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.5 MiB/9.5 MiB (17.7 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,948 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,948 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,948 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-14 15:00:54,949 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
Completed 2.8 MiB/9.5 MiB (19.3 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,949 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 786432}
2025-02-14 15:00:54,949 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,949 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,949 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,949 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
Completed 3.0 MiB/9.5 MiB (20.9 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,950 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2025-02-14 15:00:54,950 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 1048576}
2025-02-14 15:00:54,950 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,950 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,950 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.3 MiB/9.5 MiB (22.5 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,951 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,951 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2025-02-14 15:00:54,951 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2025-02-14 15:00:54,951 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 1310720}
2025-02-14 15:00:54,951 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,952 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,952 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (24.1 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,952 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2025-02-14 15:00:54,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
Completed 3.8 MiB/9.5 MiB (25.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 1572864}
2025-02-14 15:00:54,953 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,953 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2025-02-14 15:00:54,953 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2025-02-14 15:00:54,953 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 1835008}
2025-02-14 15:00:54,953 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,952 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,953 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 4.0 MiB/9.5 MiB (27.1 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,954 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,954 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2025-02-14 15:00:54,955 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,955 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (28.7 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (30.3 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (31.9 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,955 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2025-02-14 15:00:54,955 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 2097152}
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 2359296}
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2025-02-14 15:00:54,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 2621440}
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 2883584}
2025-02-14 15:00:54,957 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2025-02-14 15:00:54,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2025-02-14 15:00:54,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 3145728}
2025-02-14 15:00:54,958 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,958 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,958 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,958 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,958 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:54,959 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:54,959 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining 
Completed 5.3 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:54,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2025-02-14 15:00:54,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2025-02-14 15:00:54,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 3407872}
2025-02-14 15:00:54,959 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 3670016}
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 3932160}
2025-02-14 15:00:54,960 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,005 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 5.8 MiB/9.5 MiB (28.9 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,005 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,005 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2025-02-14 15:00:55,006 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2025-02-14 15:00:55,006 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 4194304}
2025-02-14 15:00:55,006 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,008 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 6.0 MiB/9.5 MiB (29.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,008 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.3 MiB/9.5 MiB (30.7 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,009 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2025-02-14 15:00:55,010 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
Completed 6.5 MiB/9.5 MiB (31.8 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 4456448}
2025-02-14 15:00:55,011 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,010 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,012 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,012 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 6.8 MiB/9.5 MiB (32.7 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,012 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2025-02-14 15:00:55,013 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2025-02-14 15:00:55,013 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (33.7 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,013 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 4718592}
2025-02-14 15:00:55,014 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,014 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2025-02-14 15:00:55,013 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,016 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,017 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,017 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,017 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,017 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (36.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,016 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2025-02-14 15:00:55,018 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 4980736}
2025-02-14 15:00:55,018 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,017 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,018 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,018 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
Completed 8.0 MiB/9.5 MiB (37.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,019 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2025-02-14 15:00:55,019 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 5242880}
2025-02-14 15:00:55,019 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,018 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,019 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (38.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,019 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2025-02-14 15:00:55,020 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2025-02-14 15:00:55,019 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,020 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,020 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 5505024}
2025-02-14 15:00:55,020 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.5 MiB/9.5 MiB (39.5 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,021 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2025-02-14 15:00:55,021 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,021 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,021 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
Completed 8.8 MiB/9.5 MiB (40.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,021 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 5767168}
2025-02-14 15:00:55,021 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,022 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,022 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 9.0 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,022 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2025-02-14 15:00:55,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2025-02-14 15:00:55,022 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (42.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,023 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 6029312}
2025-02-14 15:00:55,023 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,023 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,023 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,024 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
Completed 9.5 MiB/9.5 MiB (43.6 MiB/s) with 1 file(s) remaining 
2025-02-14 15:00:55,023 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2025-02-14 15:00:55,024 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,024 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2025-02-14 15:00:55,024 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 6291456}
2025-02-14 15:00:55,024 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a502291c0&gt; for transfer request: 0.
2025-02-14 15:00:55,024 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:55,025 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,024 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 6553600}
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2025-02-14 15:00:55,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 6815744}
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 7077888}
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2025-02-14 15:00:55,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 7340032}
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 7602176}
2025-02-14 15:00:55,027 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 7864320}
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2025-02-14 15:00:55,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'offset': 8126464}
2025-02-14 15:00:55,029 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2025-02-14 15:00:55,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2025-02-14 15:00:55,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a501d8e50&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3a50225e80&gt;}
download: s3://erasure/big_file to ../../tmp/big_file_downloaded
2025-02-14 15:00:55,029 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:55,030 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:55.109" endtime="20250214 15:00:55.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:55.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:55.112" endtime="20250214 15:00:55.112"/>
</kw>
<status status="PASS" starttime="20250214 15:00:54.395" endtime="20250214 15:00:55.113"/>
</kw>
<msg timestamp="20250214 15:00:55.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:54.395" endtime="20250214 15:00:55.113"/>
</kw>
<msg timestamp="20250214 15:00:55.116" level="INFO">${output} = 2025-02-14 15:00:54,700 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:54,700 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:54.395" endtime="20250214 15:00:55.116"/>
</kw>
<msg timestamp="20250214 15:00:55.117" level="INFO">${file_download_result} = 2025-02-14 15:00:54,700 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:54,700 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:54.394" endtime="20250214 15:00:55.117"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 15:00:55.119" level="INFO">${match} = GET /erasure/big_file HTTP/1.1" 206 1611392
2025-02-14 15:00:54,920 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at ...</msg>
<msg timestamp="20250214 15:00:55.119" level="INFO">${etag2} = 816df5e0b88a0009ee679d47deb1db1f-2</msg>
<status status="PASS" starttime="20250214 15:00:55.117" endtime="20250214 15:00:55.119"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 15:00:55.119" endtime="20250214 15:00:55.119"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:55.124" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:55.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:55.613" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:00:55.121" endtime="20250214 15:00:55.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:55.614" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:00:55.614" endtime="20250214 15:00:55.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:55.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:55.615" endtime="20250214 15:00:55.615"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.120" endtime="20250214 15:00:55.615"/>
</kw>
<msg timestamp="20250214 15:00:55.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:55.120" endtime="20250214 15:00:55.615"/>
</kw>
<msg timestamp="20250214 15:00:55.616" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:00:55.120" endtime="20250214 15:00:55.616"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.119" endtime="20250214 15:00:55.616"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:55.620" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:55.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:55.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:55.617" endtime="20250214 15:00:55.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:55.627" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:55.626" endtime="20250214 15:00:55.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:55.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:55.627" endtime="20250214 15:00:55.627"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.617" endtime="20250214 15:00:55.627"/>
</kw>
<msg timestamp="20250214 15:00:55.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:55.616" endtime="20250214 15:00:55.627"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.616" endtime="20250214 15:00:55.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:53.290" endtime="20250214 15:00:55.628"/>
</test>
<test id="s1-s1-s14-t21" name="Create key twice with different content and expect different ETags" line="261">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:55.632" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20250214 15:00:55.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:55.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:55.630" endtime="20250214 15:00:55.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:55.641" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:55.641" endtime="20250214 15:00:55.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:55.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:55.641" endtime="20250214 15:00:55.642"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.629" endtime="20250214 15:00:55.642"/>
</kw>
<msg timestamp="20250214 15:00:55.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:55.629" endtime="20250214 15:00:55.642"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.629" endtime="20250214 15:00:55.642"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:55.646" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20250214 15:00:55.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:55.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:55.643" endtime="20250214 15:00:55.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:55.654" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:55.654" endtime="20250214 15:00:55.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:55.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:55.654" endtime="20250214 15:00:55.655"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.643" endtime="20250214 15:00:55.655"/>
</kw>
<msg timestamp="20250214 15:00:55.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:55.643" endtime="20250214 15:00:55.655"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.642" endtime="20250214 15:00:55.655"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:55.658" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:56.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:56.284" level="INFO">${output} = 2025-02-14 15:00:55,971 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:55,971 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:55.656" endtime="20250214 15:00:56.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:56.285" level="INFO">2025-02-14 15:00:55,971 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:55,971 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://erasure/test_key_to_check_etag_differences']
2025-02-14 15:00:55,971 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f7c7e1a8820&gt;
2025-02-14 15:00:55,971 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f7c7ea94c10&gt;
2025-02-14 15:00:55,971 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f7c7e785e50&gt;
2025-02-14 15:00:55,973 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:55,975 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f7c7e2164c0&gt;
2025-02-14 15:00:55,975 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f7c7e15a820&gt;
2025-02-14 15:00:55,975 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f7c7e22d310&gt;
2025-02-14 15:00:55,976 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,976 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f7c7e15a820&gt;
2025-02-14 15:00:55,976 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f7c7e22d310&gt;
2025-02-14 15:00:55,977 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,977 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,978 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,979 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7c7e754ca0&gt;
2025-02-14 15:00:55,980 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7c7e0ae520&gt;
2025-02-14 15:00:55,981 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:55,981 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:55,983 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:56,006 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:56,006 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7c7fcc99d0&gt;
2025-02-14 15:00:56,012 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:56,020 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:56,040 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:56,043 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:56,044 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7c7edcca60&gt;
2025-02-14 15:00:56,044 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7c7edcc820&gt;
2025-02-14 15:00:56,045 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,048 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,050 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:56,050 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,050 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,051 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,051 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,051 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7c7fcc99d0&gt;
2025-02-14 15:00:56,052 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7c7edcca60&gt;
2025-02-14 15:00:56,052 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7c7edcc820&gt;
2025-02-14 15:00:56,052 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,054 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,055 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,055 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,056 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,056 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,056 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7c7fcc99d0&gt;
2025-02-14 15:00:56,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7c7edcca60&gt;
2025-02-14 15:00:56,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7c7edcc820&gt;
2025-02-14 15:00:56,057 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,059 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,060 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,061 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,061 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,061 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,061 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:56,062 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:56,063 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7c7d4f0850&gt;}) about to wait for the following futures []
2025-02-14 15:00:56,063 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7c7d4f0850&gt;}) done waiting for dependent futures
2025-02-14 15:00:56,063 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7c7d4f0850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7c7d6b7910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f7c7d4e8df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f7c7d4e8e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f7c7d4ed100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7c7d4f0850&gt;}
2025-02-14 15:00:56,063 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f7c7d4ed100&gt; for transfer request: 0.
2025-02-14 15:00:56,063 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7c7d6b7910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f7c7d488100&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f7c7ed174c0&gt;
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f7c7ed138b0&gt;
2025-02-14 15:00:56,064 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f7c7ed17dc0&gt;
2025-02-14 15:00:56,064 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f7c7ed13820&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f7c7ed1a700&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7c7d691850&gt;&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f7c7d718700&gt;&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f7c7ed13670&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f7c7ed1a8b0&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7c7d691850&gt;&gt;
2025-02-14 15:00:56,065 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:56,066 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:56,066 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:56,066 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:56,067 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f7c7ee89790&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f7c7ed13b80&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7c7d691820&gt;&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f7c7ed13280&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f7c7ed1ad30&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f7c7ed17ee0&gt;
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'GhJmJ3UavUzDZNX4JnlgMw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f7c7d488100&gt;, 'auth_path': '/erasure/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f7c7d6b7a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f7c7d488100&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:56,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f7c7e44f790&gt;
2025-02-14 15:00:56,070 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f7c7d6b7a00&gt;&gt;
2025-02-14 15:00:56,070 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f7c7ed134c0&gt;
2025-02-14 15:00:56,070 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f7c7ed1a820&gt;
2025-02-14 15:00:56,070 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7c7d691820&gt;&gt;
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:GhJmJ3UavUzDZNX4JnlgMw==
host:s3g:9878
x-amz-content-sha256:520b8a7640f50fb48b59e909596b29ffa90b2aff45d3b75a30b7dab324e8a29e
x-amz-date:20250214T150056Z

content-md5;host;x-amz-content-sha256;x-amz-date
520b8a7640f50fb48b59e909596b29ffa90b2aff45d3b75a30b7dab324e8a29e
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150056Z
20250214/us-west-1/s3/aws4_request
c6518cf3b34aa104fa2f626a059624b61eff91bc3889e7cb7ef29578663ad1c6
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
1de33fcc0fa390e9d4da4c3d37d410e3e5683a63b926ca159eecac236157801a
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f7c7e44f820&gt;
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f7c7ed1a670&gt;
2025-02-14 15:00:56,071 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'GhJmJ3UavUzDZNX4JnlgMw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150056Z', 'X-Amz-Content-SHA256': b'520b8a7640f50fb48b59e909596b29ffa90b2aff45d3b75a30b7dab324e8a29e', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=1de33fcc0fa390e9d4da4c3d37d410e3e5683a63b926ca159eecac236157801a', 'amz-sdk-invocation-id': b'84ce9fb6-bb48-4d72-b759-9b1c4f5162ff', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-14 15:00:56,072 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:56,073 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:56,102 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (6.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (12.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (17.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (22.6 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:56,225 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 15:00:56,226 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f7c7ed1ab80&gt;
2025-02-14 15:00:56,226 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f7c7ed1a9d0&gt;
2025-02-14 15:00:56,226 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:56 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:56 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"1a126627751abd4cc364d5f826796033"', 'Server': 'Ozone', 'x-amz-id-2': 'M0RzinGxNAoozn', 'x-amz-request-id': '7c9dc947-4ea1-4a50-a497-a491c33da4c4', 'Content-Length': '0'}
2025-02-14 15:00:56,226 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f7c7ed1aca0&gt;
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f7c7d691790&gt;
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7c7d691850&gt;&gt;
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f7c7e1a5d30&gt;
2025-02-14 15:00:56,227 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://erasure/test_key_to_check_etag_differences
2025-02-14 15:00:56,228 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:56.284" endtime="20250214 15:00:56.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:56.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:56.286" endtime="20250214 15:00:56.287"/>
</kw>
<status status="PASS" starttime="20250214 15:00:55.656" endtime="20250214 15:00:56.287"/>
</kw>
<msg timestamp="20250214 15:00:56.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:55.656" endtime="20250214 15:00:56.287"/>
</kw>
<msg timestamp="20250214 15:00:56.288" level="INFO">${output} = 2025-02-14 15:00:55,971 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:55,971 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:55.655" endtime="20250214 15:00:56.288"/>
</kw>
<msg timestamp="20250214 15:00:56.288" level="INFO">${file1UploadResult} = 2025-02-14 15:00:55,971 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:55,971 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:55.655" endtime="20250214 15:00:56.288"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 15:00:56.290" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 15:00:56,226 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _...</msg>
<msg timestamp="20250214 15:00:56.290" level="INFO">${etag1} = 1a126627751abd4cc364d5f826796033</msg>
<status status="PASS" starttime="20250214 15:00:56.289" endtime="20250214 15:00:56.290"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:56.295" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:56.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:56.864" level="INFO">${output} = 2025-02-14 15:00:56,603 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:56,603 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:56.292" endtime="20250214 15:00:56.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:56.865" level="INFO">2025-02-14 15:00:56,603 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:56,603 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://erasure/test_key_to_check_etag_differences']
2025-02-14 15:00:56,603 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f6cc2d05820&gt;
2025-02-14 15:00:56,603 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f6cc35f1c10&gt;
2025-02-14 15:00:56,603 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f6cc32e1e50&gt;
2025-02-14 15:00:56,604 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:56,607 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f6cc2d734c0&gt;
2025-02-14 15:00:56,607 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f6cc2cb7820&gt;
2025-02-14 15:00:56,607 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f6cc2d8a310&gt;
2025-02-14 15:00:56,607 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,607 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f6cc2cb7820&gt;
2025-02-14 15:00:56,608 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f6cc2d8a310&gt;
2025-02-14 15:00:56,609 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,609 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,609 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,609 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,609 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,610 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,611 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6cc32afca0&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,612 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,613 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,613 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6cc2c0b520&gt;
2025-02-14 15:00:56,613 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:56,613 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:56,614 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:56,638 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:56,638 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6cc48269d0&gt;
2025-02-14 15:00:56,644 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:56,652 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:56,671 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:56,674 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:56,676 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6cc3929a60&gt;
2025-02-14 15:00:56,676 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6cc3929820&gt;
2025-02-14 15:00:56,676 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,679 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,681 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:56,681 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,682 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,682 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,682 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,682 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6cc48269d0&gt;
2025-02-14 15:00:56,683 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6cc3929a60&gt;
2025-02-14 15:00:56,683 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6cc3929820&gt;
2025-02-14 15:00:56,683 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,685 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,686 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,687 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,687 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,687 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,687 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6cc48269d0&gt;
2025-02-14 15:00:56,688 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6cc3929a60&gt;
2025-02-14 15:00:56,688 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6cc3929820&gt;
2025-02-14 15:00:56,688 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,690 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:56,692 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:56,692 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:56,692 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:56,692 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:56,693 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:56,694 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:56,694 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6cc2066850&gt;}) about to wait for the following futures []
2025-02-14 15:00:56,694 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6cc2066850&gt;}) done waiting for dependent futures
2025-02-14 15:00:56,694 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6cc2066850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6cc2114910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f6cc205edf0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6cc205ee80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6cc2063100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6cc2066850&gt;}
2025-02-14 15:00:56,695 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6cc2063100&gt; for transfer request: 0.
2025-02-14 15:00:56,695 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:56,695 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:56,695 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:56,695 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6cc2114910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6cc0fc8100&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f6cc38744c0&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f6cc38708b0&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f6cc3874dc0&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f6cc3870820&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f6cc3877700&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6cc20ee850&gt;&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f6cc2175700&gt;&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f6cc3870670&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f6cc38778b0&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6cc20ee850&gt;&gt;
2025-02-14 15:00:56,696 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:56,697 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:56,697 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:56,697 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:56,697 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:56,698 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f6cc39e6790&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f6cc3870b80&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6cc20ee820&gt;&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f6cc3870280&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f6cc3877d30&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6cc3874ee0&gt;
2025-02-14 15:00:56,700 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'PUXd7u2uz4jdYLxMqV0xoA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6cc0fc8100&gt;, 'auth_path': '/erasure/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6cc2114a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6cc0fc8100&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:56,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f6cc2fac790&gt;
2025-02-14 15:00:56,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6cc2114a00&gt;&gt;
2025-02-14 15:00:56,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f6cc38704c0&gt;
2025-02-14 15:00:56,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f6cc3877820&gt;
2025-02-14 15:00:56,701 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6cc20ee820&gt;&gt;
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:PUXd7u2uz4jdYLxMqV0xoA==
host:s3g:9878
x-amz-content-sha256:6876274a9f7617e3a7cfd9f8d24e5103eebda72039c84d181464375400356ed7
x-amz-date:20250214T150056Z

content-md5;host;x-amz-content-sha256;x-amz-date
6876274a9f7617e3a7cfd9f8d24e5103eebda72039c84d181464375400356ed7
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150056Z
20250214/us-west-1/s3/aws4_request
a91dd5212bdd098e65649e2de9fac91ba238fd1ce8b8b7f1fd92cdda13d8637d
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ea552679dd478bba3b11b0422024c6ec53183a7b78cc974d1fc6508195ce7d80
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f6cc2fac820&gt;
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f6cc3877670&gt;
2025-02-14 15:00:56,702 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'PUXd7u2uz4jdYLxMqV0xoA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150056Z', 'X-Amz-Content-SHA256': b'6876274a9f7617e3a7cfd9f8d24e5103eebda72039c84d181464375400356ed7', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=ea552679dd478bba3b11b0422024c6ec53183a7b78cc974d1fc6508195ce7d80', 'amz-sdk-invocation-id': b'cbf7ac15-fbca-48e7-905a-cc25897686ad', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-14 15:00:56,703 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:56,704 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:56,733 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (6.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (12.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (17.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (22.7 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:56,812 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f6cc3877b80&gt;
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f6cc38779d0&gt;
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:56 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:56 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3d45ddeeedaecf88dd60bc4ca95d31a0"', 'Server': 'Ozone', 'x-amz-id-2': 'qRarIyDA3RFzRTk', 'x-amz-request-id': '0debd3c4-2fc0-4fdd-b140-07a113610d56', 'Content-Length': '0'}
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f6cc3877ca0&gt;
2025-02-14 15:00:56,814 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6cc20ee790&gt;
2025-02-14 15:00:56,814 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:56,814 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6cc20ee850&gt;&gt;
2025-02-14 15:00:56,814 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f6cc2d02d30&gt;
2025-02-14 15:00:56,814 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://erasure/test_key_to_check_etag_differences
2025-02-14 15:00:56,814 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:56.865" endtime="20250214 15:00:56.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:56.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:56.866" endtime="20250214 15:00:56.867"/>
</kw>
<status status="PASS" starttime="20250214 15:00:56.292" endtime="20250214 15:00:56.867"/>
</kw>
<msg timestamp="20250214 15:00:56.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:56.291" endtime="20250214 15:00:56.867"/>
</kw>
<msg timestamp="20250214 15:00:56.868" level="INFO">${output} = 2025-02-14 15:00:56,603 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:56,603 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:56.291" endtime="20250214 15:00:56.868"/>
</kw>
<msg timestamp="20250214 15:00:56.868" level="INFO">${file2UploadResult} = 2025-02-14 15:00:56,603 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:56,603 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:56.290" endtime="20250214 15:00:56.868"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 15:00:56.869" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 15:00:56,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _...</msg>
<msg timestamp="20250214 15:00:56.869" level="INFO">${etag2} = 3d45ddeeedaecf88dd60bc4ca95d31a0</msg>
<status status="PASS" starttime="20250214 15:00:56.868" endtime="20250214 15:00:56.869"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 15:00:56.870" endtime="20250214 15:00:56.870"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:56.875" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:57.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:57.328" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 15:00:56.872" endtime="20250214 15:00:57.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:57.329" level="INFO">delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 15:00:57.329" endtime="20250214 15:00:57.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:57.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:57.330" endtime="20250214 15:00:57.330"/>
</kw>
<status status="PASS" starttime="20250214 15:00:56.872" endtime="20250214 15:00:57.330"/>
</kw>
<msg timestamp="20250214 15:00:57.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:56.872" endtime="20250214 15:00:57.330"/>
</kw>
<msg timestamp="20250214 15:00:57.330" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 15:00:56.871" endtime="20250214 15:00:57.330"/>
</kw>
<status status="PASS" starttime="20250214 15:00:56.870" endtime="20250214 15:00:57.330"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:57.334" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:57.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:57.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:57.331" endtime="20250214 15:00:57.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:57.338" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:57.338" endtime="20250214 15:00:57.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:57.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:57.338" endtime="20250214 15:00:57.339"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.331" endtime="20250214 15:00:57.339"/>
</kw>
<msg timestamp="20250214 15:00:57.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:57.331" endtime="20250214 15:00:57.339"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.331" endtime="20250214 15:00:57.339"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:57.342" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:57.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:57.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:57.340" endtime="20250214 15:00:57.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:57.347" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:57.346" endtime="20250214 15:00:57.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:57.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:57.347" endtime="20250214 15:00:57.347"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.340" endtime="20250214 15:00:57.347"/>
</kw>
<msg timestamp="20250214 15:00:57.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:57.340" endtime="20250214 15:00:57.347"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.339" endtime="20250214 15:00:57.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:55.628" endtime="20250214 15:00:57.348"/>
</test>
<test id="s1-s1-s14-t22" name="Create&amp;Download big file by multipart upload and get file via part numbers" line="274">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:57.351" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 15:00:57.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:57.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:00:57.349" endtime="20250214 15:00:57.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:57.395" level="INFO"/>
<status status="PASS" starttime="20250214 15:00:57.395" endtime="20250214 15:00:57.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:57.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:57.395" endtime="20250214 15:00:57.395"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.349" endtime="20250214 15:00:57.396"/>
</kw>
<msg timestamp="20250214 15:00:57.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:57.349" endtime="20250214 15:00:57.396"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.348" endtime="20250214 15:00:57.396"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:57.400" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:58.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:58.369" level="INFO">${output} = 2025-02-14 15:00:57,699 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:57,699 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:57.398" endtime="20250214 15:00:58.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:58.370" level="INFO">2025-02-14 15:00:57,699 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:57,699 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 15:00:57,699 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fe2ae854820&gt;
2025-02-14 15:00:57,700 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fe2af13ec10&gt;
2025-02-14 15:00:57,700 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fe2aee30e50&gt;
2025-02-14 15:00:57,701 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:00:57,703 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fe2ae8c24c0&gt;
2025-02-14 15:00:57,703 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fe2ae806820&gt;
2025-02-14 15:00:57,703 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fe2ae8db310&gt;
2025-02-14 15:00:57,704 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,704 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fe2ae806820&gt;
2025-02-14 15:00:57,704 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fe2ae8db310&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe2aedfeca0&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe2ae759520&gt;
2025-02-14 15:00:57,709 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:00:57,709 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:00:57,711 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:00:57,733 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:00:57,733 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe2b03759d0&gt;
2025-02-14 15:00:57,739 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:00:57,747 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:00:57,767 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:00:57,770 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:00:57,772 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe2af478a60&gt;
2025-02-14 15:00:57,772 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe2af478820&gt;
2025-02-14 15:00:57,772 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,775 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:57,777 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:00:57,777 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:57,777 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:57,778 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,778 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:57,778 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe2b03759d0&gt;
2025-02-14 15:00:57,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe2af478a60&gt;
2025-02-14 15:00:57,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe2af478820&gt;
2025-02-14 15:00:57,779 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,781 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:57,782 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:57,782 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:57,783 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,783 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:57,783 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe2b03759d0&gt;
2025-02-14 15:00:57,784 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe2af478a60&gt;
2025-02-14 15:00:57,784 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe2af478820&gt;
2025-02-14 15:00:57,784 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,786 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:00:57,787 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:00:57,788 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:00:57,788 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:00:57,788 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:00:57,788 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:00:57,789 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:57,789 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe2adbb0850&gt;}) about to wait for the following futures []
2025-02-14 15:00:57,790 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe2adbb0850&gt;}) done waiting for dependent futures
2025-02-14 15:00:57,790 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe2adbb0850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe2adca3910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fe2adba8df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fe2adba8e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fe2adbad100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe2adbb0850&gt;}
2025-02-14 15:00:57,790 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe2adbad100&gt; for transfer request: 0.
2025-02-14 15:00:57,790 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:57,790 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe2adca3910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fe2af3c34c0&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fe2af3bf8b0&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fe2af3bf820&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fe2af3c6700&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fe2add02700&gt;&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fe2af3bf670&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fe2af3c68b0&gt;
2025-02-14 15:00:57,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:57,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fe2af3bfb80&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fe2af3bf280&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fe2af3c6d30&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe2af3c3ee0&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe2adca3a90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fe2aeafa790&gt;
2025-02-14 15:00:57,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe2adca3a00&gt;&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fe2af3bf4c0&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fe2af3c6820&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150057Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150057Z
20250214/us-west-1/s3/aws4_request
7623a19b2a887705ac3191ad4e8109db3468658965a790ae9dc17a90a7971e1c
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
8f9dee5acfc39ea431bddfc20e87a37cef1295f13a3eef75c12979255bc4cb06
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fe2aeafa820&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fe2af3c6670&gt;
2025-02-14 15:00:57,794 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150057Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8f9dee5acfc39ea431bddfc20e87a37cef1295f13a3eef75c12979255bc4cb06', 'amz-sdk-invocation-id': b'3cd634e8-6066-486d-a056-3aa8a9fdf491', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 15:00:57,795 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:00:57,795 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe2adbad100&gt; for transfer request: 0.
2025-02-14 15:00:57,795 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:57,796 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;]
2025-02-14 15:00:57,796 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;
2025-02-14 15:00:57,796 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe2adbad100&gt; for transfer request: 0.
2025-02-14 15:00:57,796 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:57,796 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;]
2025-02-14 15:00:57,796 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;
2025-02-14 15:00:57,796 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe2adbad100&gt; for transfer request: 0.
2025-02-14 15:00:57,796 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:00:57,796 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb0c1c0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb0c940&gt;]
2025-02-14 15:00:57,797 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb473a0&gt;
2025-02-14 15:00:57,797 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:57,811 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fe2af3c6b80&gt;
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fe2af3c69d0&gt;
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'XeX8TzkA', 'x-amz-request-id': '13ab7242-f6a4-4a24-a03a-81d3ddecba2c', 'Content-Length': '285'}
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7fe2af3c6ca0&gt;
2025-02-14 15:00:57,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe2adc7d790&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fe2ae851d30&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe2adca3910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb0c4f0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576'}
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fe2af3bf8b0&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fe2af3c3dc0&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fe2af3bf820&gt;
2025-02-14 15:00:57,813 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fe2af3c6700&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fe2add02700&gt;&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fe2af3bf670&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fe2af3c68b0&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:57,814 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fe2af5358b0&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb0c1c0&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe2adca3910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb77940&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576'}
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fe2af3bf8b0&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fe2af3c3dc0&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fe2af3bf820&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fe2af3c6700&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fe2add02700&gt;&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fe2af3bf670&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fe2af3c68b0&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:57,815 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:57,816 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:57,816 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:57,816 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:57,816 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fe2af5358b0&gt;
2025-02-14 15:00:57,819 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fe2af3bfb80&gt;
2025-02-14 15:00:57,819 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fe2af3bf280&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fe2af3c6d30&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe2af3c3ee0&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'eOW7wpx8alwgZ1aZJAfJoA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb0c4f0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe2adca3a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb0c4f0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fe2aeafa790&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe2adca3a00&gt;&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fe2af3bf4c0&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fe2af3c6820&gt;
2025-02-14 15:00:57,820 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576
content-md5:eOW7wpx8alwgZ1aZJAfJoA==
host:s3g:9878
x-amz-content-sha256:4cbf7bd133f4af005bbf1effad8a6f300105135f5e2608c4ff6fc7902527e531
x-amz-date:20250214T150057Z

content-md5;host;x-amz-content-sha256;x-amz-date
4cbf7bd133f4af005bbf1effad8a6f300105135f5e2608c4ff6fc7902527e531
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150057Z
20250214/us-west-1/s3/aws4_request
a20cb3170161021680013e455d63f270cf607102f2377314ed57476c06970fc0
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
d0bf10ab5ae985d0073fada487039cc6ae68a9e478919e720442de5fd39344b6
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fe2aeafa820&gt;
2025-02-14 15:00:57,822 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fe2af3c6670&gt;
2025-02-14 15:00:57,823 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'eOW7wpx8alwgZ1aZJAfJoA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150057Z', 'X-Amz-Content-SHA256': b'4cbf7bd133f4af005bbf1effad8a6f300105135f5e2608c4ff6fc7902527e531', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=d0bf10ab5ae985d0073fada487039cc6ae68a9e478919e720442de5fd39344b6', 'amz-sdk-invocation-id': b'1df87cb0-7de9-4aff-8bdf-b3294d417904', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 15:00:57,823 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fe2af3bfb80&gt;
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fe2af3bf280&gt;
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fe2af3c6d30&gt;
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe2af3c3ee0&gt;
2025-02-14 15:00:57,832 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'bem4w3Qt3Dt3Stv0RNK6dA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb77940&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe2adca3a90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe2adb77940&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:57,833 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fe2aeafa790&gt;
2025-02-14 15:00:57,833 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe2adca3a00&gt;&gt;
2025-02-14 15:00:57,833 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fe2af3bf4c0&gt;
2025-02-14 15:00:57,833 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fe2af3c6820&gt;
2025-02-14 15:00:57,833 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:57,840 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576
content-md5:bem4w3Qt3Dt3Stv0RNK6dA==
host:s3g:9878
x-amz-content-sha256:29cdef21ab4b78b67cdac34e2d6409f84c752c1cadbad65d4736889fc2b88eb8
x-amz-date:20250214T150057Z

content-md5;host;x-amz-content-sha256;x-amz-date
29cdef21ab4b78b67cdac34e2d6409f84c752c1cadbad65d4736889fc2b88eb8
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150057Z
20250214/us-west-1/s3/aws4_request
7e6d94f53ac3ec1c5b6d242b5fde570b9dba0e7cf64dcd00b3b9a10198cd7f58
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
a4769508c9d242ca3d57e2a6ab3fc4875207f4f379ecb5692331951771218c99
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fe2aeafa820&gt;
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fe2af3c6670&gt;
2025-02-14 15:00:57,841 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'bem4w3Qt3Dt3Stv0RNK6dA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150057Z', 'X-Amz-Content-SHA256': b'29cdef21ab4b78b67cdac34e2d6409f84c752c1cadbad65d4736889fc2b88eb8', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=a4769508c9d242ca3d57e2a6ab3fc4875207f4f379ecb5692331951771218c99', 'amz-sdk-invocation-id': b'a4d7c92d-73b4-470d-a788-4878eb87f0e2', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 15:00:57,842 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-14 15:00:57,843 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:00:57,850 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (4.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (7.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (11.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (13.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (17.0 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (20.1 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:57,892 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (17.0 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (19.1 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (21.2 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (23.4 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (25.0 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (27.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (29.2 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (31.3 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (32.4 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (37.8 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (28.1 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (28.9 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (30.0 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (30.4 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (31.0 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (32.1 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (33.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (35.5 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (34.9 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (36.8 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (37.8 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (38.7 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (39.9 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (40.4 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (42.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (44.2 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:58,075 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 15:00:58,076 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fe2af3c6b80&gt;
2025-02-14 15:00:58,076 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fe2af3c69d0&gt;
2025-02-14 15:00:58,076 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '78e5bbc29c7c6a5c206756992407c9a0', 'Server': 'Ozone', 'x-amz-id-2': 'EOFBYzLeZwU', 'x-amz-request-id': 'fbbd5261-5209-423c-82c7-6255e46d5b8e', 'Content-Length': '0'}
2025-02-14 15:00:58,079 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:58,079 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fe2af3c6ca0&gt;
2025-02-14 15:00:58,079 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe2adc7d790&gt;
2025-02-14 15:00:58,080 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:58,080 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:58,082 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fe2ae851d30&gt;
Completed 9.5 MiB/9.5 MiB (32.7 MiB/s) with 1 file(s) remaining  
2025-02-14 15:00:58,083 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:58,264 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fe2af3c6b80&gt;
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fe2af3c69d0&gt;
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:57 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '6de9b8c3742ddc3b774adbf444d2ba74', 'Server': 'Ozone', 'x-amz-id-2': 'pwxOLjA7w2eZw3', 'x-amz-request-id': 'f77bff34-7edf-4a6b-b70b-2e94b30511af', 'Content-Length': '0'}
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fe2af3c6ca0&gt;
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe2adc7d790&gt;
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:58,265 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fe2ae851d30&gt;
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe2adb0c940&gt;
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe2adca3910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'parts': [{'ETag': '6de9b8c3742ddc3b774adbf444d2ba74', 'PartNumber': 1}, {'ETag': '78e5bbc29c7c6a5c206756992407c9a0', 'PartNumber': 2}]}
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7fe2af3bf8b0&gt;
2025-02-14 15:00:58,266 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fe2af3bf820&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fe2af3c6700&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fe2add02700&gt;&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fe2af3bf670&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fe2af3c68b0&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:00:58,267 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:00:58,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fe2af3bfb80&gt;
2025-02-14 15:00:58,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:58,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fe2af3bf280&gt;
2025-02-14 15:00:58,268 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fe2af3c6d30&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe2af3c3ee0&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;6de9b8c3742ddc3b774adbf444d2ba74&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;78e5bbc29c7c6a5c206756992407c9a0&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe2adca3a90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576', 'MultipartUpload': {'Parts': [{'ETag': '6de9b8c3742ddc3b774adbf444d2ba74', 'PartNumber': 1}, {'ETag': '78e5bbc29c7c6a5c206756992407c9a0', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fe2aeafa790&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe2adca3a00&gt;&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fe2af3bf4c0&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fe2af3c6820&gt;
2025-02-14 15:00:58,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe2adc7d820&gt;&gt;
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576
host:s3g:9878
x-amz-content-sha256:e699a789d0d59ce5ddfaee858a1a87daf5a39f441ed4aa963ac121a4663bdc41
x-amz-date:20250214T150058Z

host;x-amz-content-sha256;x-amz-date
e699a789d0d59ce5ddfaee858a1a87daf5a39f441ed4aa963ac121a4663bdc41
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150058Z
20250214/us-west-1/s3/aws4_request
1972a36dfbb6616c23fe80a9e26266ad25becb4eed07efbb42a6b2df90460e54
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
b8c18b2a42f4a8395faa51744e4166148389bbc7dc7795c9246d28a3e9ec56a6
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fe2aeafa820&gt;
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fe2af3c6670&gt;
2025-02-14 15:00:58,270 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150058Z', 'X-Amz-Content-SHA256': b'e699a789d0d59ce5ddfaee858a1a87daf5a39f441ed4aa963ac121a4663bdc41', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b8c18b2a42f4a8395faa51744e4166148389bbc7dc7795c9246d28a3e9ec56a6', 'amz-sdk-invocation-id': b'f5921821-ec34-4888-9d8c-71e90eb78c7c', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 15:00:58,300 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=0f592f31-9708-49e7-b6d9-0fef34cb2e02-114002838015508576 HTTP/1.1" 200 286
2025-02-14 15:00:58,301 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fe2af3c6b80&gt;
2025-02-14 15:00:58,301 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fe2af3c69d0&gt;
2025-02-14 15:00:58,301 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:00:58 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:00:58 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'cTsyagQS', 'x-amz-request-id': '0d38110b-a16d-4092-9b0f-200f1a3eb051', 'Content-Length': '286'}
2025-02-14 15:00:58,301 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"9d28efd819584bcaae415f5859c7a2d6-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 15:00:58,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7fe2af3c6ca0&gt;
2025-02-14 15:00:58,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe2adc7d790&gt;
2025-02-14 15:00:58,303 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:00:58,303 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe2adc7d850&gt;&gt;
2025-02-14 15:00:58,304 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fe2ae851d30&gt;
2025-02-14 15:00:58,304 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 15:00:58,305 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:00:58.369" endtime="20250214 15:00:58.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:58.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:58.371" endtime="20250214 15:00:58.371"/>
</kw>
<status status="PASS" starttime="20250214 15:00:57.397" endtime="20250214 15:00:58.371"/>
</kw>
<msg timestamp="20250214 15:00:58.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:57.397" endtime="20250214 15:00:58.372"/>
</kw>
<msg timestamp="20250214 15:00:58.373" level="INFO">${output} = 2025-02-14 15:00:57,699 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:57,699 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:57.396" endtime="20250214 15:00:58.373"/>
</kw>
<msg timestamp="20250214 15:00:58.373" level="INFO">${result} = 2025-02-14 15:00:57,699 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:00:57,699 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:00:57.396" endtime="20250214 15:00:58.373"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_1_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:58.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_1 --part-number 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:59.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:59.107" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 8388608,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:58.374" endtime="20250214 15:00:59.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:59.108" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 8388608,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:58 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:58 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:59.108" endtime="20250214 15:00:59.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:59.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:59.108" endtime="20250214 15:00:59.109"/>
</kw>
<status status="PASS" starttime="20250214 15:00:58.374" endtime="20250214 15:00:59.109"/>
</kw>
<msg timestamp="20250214 15:00:59.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:58.374" endtime="20250214 15:00:59.109"/>
</kw>
<msg timestamp="20250214 15:00:59.109" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 8388608,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:58.374" endtime="20250214 15:00:59.109"/>
</kw>
<msg timestamp="20250214 15:00:59.109" level="INFO">${get_part_1_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 8388608,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:58.373" endtime="20250214 15:00:59.110"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_1_size}</var>
<arg>echo '${get_part_1_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:59.112" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 8388608,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:58 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:58 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:59.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:59.118" level="INFO">${output} = 8388608</msg>
<status status="PASS" starttime="20250214 15:00:59.110" endtime="20250214 15:00:59.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:59.119" level="INFO">8388608</msg>
<status status="PASS" starttime="20250214 15:00:59.118" endtime="20250214 15:00:59.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:59.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:59.119" endtime="20250214 15:00:59.119"/>
</kw>
<msg timestamp="20250214 15:00:59.119" level="INFO">${part_1_size} = 8388608</msg>
<status status="PASS" starttime="20250214 15:00:59.110" endtime="20250214 15:00:59.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_1_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:59.119" endtime="20250214 15:00:59.120"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_2_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_2 --part-number 2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:59.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_2 --part-number 2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:59.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:59.684" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 1611392,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:59.121" endtime="20250214 15:00:59.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:59.685" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 1611392,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:59 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:59 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:00:59.684" endtime="20250214 15:00:59.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:59.685" endtime="20250214 15:00:59.685"/>
</kw>
<status status="PASS" starttime="20250214 15:00:59.121" endtime="20250214 15:00:59.686"/>
</kw>
<msg timestamp="20250214 15:00:59.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:59.121" endtime="20250214 15:00:59.686"/>
</kw>
<msg timestamp="20250214 15:00:59.686" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 1611392,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:59.120" endtime="20250214 15:00:59.686"/>
</kw>
<msg timestamp="20250214 15:00:59.686" level="INFO">${get_part_2_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 1611392,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 15:00:59.120" endtime="20250214 15:00:59.686"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_2_size}</var>
<arg>echo '${get_part_2_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:59.689" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 1611392,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:00:59 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:00:59 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:00:59.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:00:59.694" level="INFO">${output} = 1611392</msg>
<status status="PASS" starttime="20250214 15:00:59.687" endtime="20250214 15:00:59.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:00:59.695" level="INFO">1611392</msg>
<status status="PASS" starttime="20250214 15:00:59.694" endtime="20250214 15:00:59.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:59.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:59.695" endtime="20250214 15:00:59.695"/>
</kw>
<msg timestamp="20250214 15:00:59.695" level="INFO">${part_2_size} = 1611392</msg>
<status status="PASS" starttime="20250214 15:00:59.686" endtime="20250214 15:00:59.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_2_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:00:59.695" endtime="20250214 15:00:59.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>10000000</arg>
<arg>${${part_1_size} + ${part_2_size}}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:00:59.697" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250214 15:00:59.696" endtime="20250214 15:00:59.697"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_3_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_3 --part-number 3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:00:59.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_3 --part-number 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.194" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 0,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:00:59.698" endtime="20250214 15:01:00.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.195" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 0,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:00 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:00 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:01:00.194" endtime="20250214 15:01:00.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.195" endtime="20250214 15:01:00.196"/>
</kw>
<status status="PASS" starttime="20250214 15:00:59.698" endtime="20250214 15:01:00.196"/>
</kw>
<msg timestamp="20250214 15:01:00.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:00:59.698" endtime="20250214 15:01:00.196"/>
</kw>
<msg timestamp="20250214 15:01:00.196" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 0,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:00:59.698" endtime="20250214 15:01:00.196"/>
</kw>
<msg timestamp="20250214 15:01:00.196" level="INFO">${get_part_3_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:00:58 GMT",
    "ContentLength": 0,
    "ETag": "\"9d28efd819584bcaae415f5859c7a2d6-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:00:59.697" endtime="20250214 15:01:00.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:00.197" endtime="20250214 15:01:00.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:00.197" endtime="20250214 15:01:00.197"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.201" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.660" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:00.199" endtime="20250214 15:01:00.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.661" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:00.661" endtime="20250214 15:01:00.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.662" endtime="20250214 15:01:00.662"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.199" endtime="20250214 15:01:00.662"/>
</kw>
<msg timestamp="20250214 15:01:00.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.198" endtime="20250214 15:01:00.662"/>
</kw>
<msg timestamp="20250214 15:01:00.662" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:00.198" endtime="20250214 15:01:00.662"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.197" endtime="20250214 15:01:00.662"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.666" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:00.663" endtime="20250214 15:01:00.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.673" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:00.672" endtime="20250214 15:01:00.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.673" endtime="20250214 15:01:00.673"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.663" endtime="20250214 15:01:00.673"/>
</kw>
<msg timestamp="20250214 15:01:00.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.663" endtime="20250214 15:01:00.673"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.663" endtime="20250214 15:01:00.673"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.677" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:00.675" endtime="20250214 15:01:00.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.683" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:00.682" endtime="20250214 15:01:00.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.683" endtime="20250214 15:01:00.683"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.674" endtime="20250214 15:01:00.683"/>
</kw>
<msg timestamp="20250214 15:01:00.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.674" endtime="20250214 15:01:00.683"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.674" endtime="20250214 15:01:00.683"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.686" level="INFO">Running command 'rm -rf /tmp/big_file_2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:00.684" endtime="20250214 15:01:00.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.691" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:00.690" endtime="20250214 15:01:00.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.691" endtime="20250214 15:01:00.691"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.684" endtime="20250214 15:01:00.691"/>
</kw>
<msg timestamp="20250214 15:01:00.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.684" endtime="20250214 15:01:00.692"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.684" endtime="20250214 15:01:00.692"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.694" level="INFO">Running command 'rm -rf /tmp/big_file_3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:00.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:00.692" endtime="20250214 15:01:00.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.699" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:00.698" endtime="20250214 15:01:00.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.699" endtime="20250214 15:01:00.699"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.692" endtime="20250214 15:01:00.699"/>
</kw>
<msg timestamp="20250214 15:01:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.692" endtime="20250214 15:01:00.699"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.692" endtime="20250214 15:01:00.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:00:57.348" endtime="20250214 15:01:00.700"/>
</test>
<test id="s1-s1-s14-t23" name="Create&amp;Download big file by multipart upload and get file not existed part number" line="296">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.703" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 15:01:00.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:00.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:00.701" endtime="20250214 15:01:00.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:00.747" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:00.746" endtime="20250214 15:01:00.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:00.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:00.747" endtime="20250214 15:01:00.747"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.701" endtime="20250214 15:01:00.748"/>
</kw>
<msg timestamp="20250214 15:01:00.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.701" endtime="20250214 15:01:00.748"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.701" endtime="20250214 15:01:00.748"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:00.752" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:01.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:01.584" level="INFO">${output} = 2025-02-14 15:01:01,065 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:01:01,065 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:01:00.749" endtime="20250214 15:01:01.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:01.586" level="INFO">2025-02-14 15:01:01,065 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:01:01,065 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 15:01:01,065 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fb3d6e0e820&gt;
2025-02-14 15:01:01,065 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fb3d76f9c10&gt;
2025-02-14 15:01:01,065 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fb3d73ebe50&gt;
2025-02-14 15:01:01,067 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 15:01:01,069 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fb3d6e7c4c0&gt;
2025-02-14 15:01:01,069 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fb3d6dc0820&gt;
2025-02-14 15:01:01,069 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fb3d6e93310&gt;
2025-02-14 15:01:01,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,069 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fb3d6dc0820&gt;
2025-02-14 15:01:01,070 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fb3d6e93310&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,071 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,072 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,073 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb3d73baca0&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,075 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,075 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb3d6d14520&gt;
2025-02-14 15:01:01,075 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 15:01:01,075 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 15:01:01,076 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 15:01:01,098 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 15:01:01,098 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb3d892f9d0&gt;
2025-02-14 15:01:01,104 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 15:01:01,112 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 15:01:01,132 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 15:01:01,135 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 15:01:01,137 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb3d7a32a60&gt;
2025-02-14 15:01:01,137 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb3d7a32820&gt;
2025-02-14 15:01:01,137 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,140 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:01:01,142 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 15:01:01,142 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:01:01,142 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:01:01,143 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,143 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:01:01,143 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb3d892f9d0&gt;
2025-02-14 15:01:01,144 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb3d7a32a60&gt;
2025-02-14 15:01:01,144 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb3d7a32820&gt;
2025-02-14 15:01:01,144 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,146 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:01:01,147 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:01:01,147 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:01:01,148 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,148 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:01:01,148 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb3d892f9d0&gt;
2025-02-14 15:01:01,149 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb3d7a32a60&gt;
2025-02-14 15:01:01,149 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb3d7a32820&gt;
2025-02-14 15:01:01,149 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,151 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 15:01:01,152 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 15:01:01,152 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 15:01:01,153 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 15:01:01,153 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 15:01:01,153 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 15:01:01,154 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:01:01,154 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb3d6130850&gt;}) about to wait for the following futures []
2025-02-14 15:01:01,154 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb3d6130850&gt;}) done waiting for dependent futures
2025-02-14 15:01:01,154 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb3d6130850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb3d629d910&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fb3d6127df0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb3d6127e80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb3d612d100&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb3d6130850&gt;}
2025-02-14 15:01:01,155 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb3d612d100&gt; for transfer request: 0.
2025-02-14 15:01:01,155 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:01:01,155 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 15:01:01,155 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:01:01,155 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb3d629d910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fb3d797d4c0&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb3d612d100&gt; for transfer request: 0.
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fb3d797a8b0&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fb3d797a820&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fb3d7980700&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fb3d62fc700&gt;&gt;
2025-02-14 15:01:01,156 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fb3d797a670&gt;
2025-02-14 15:01:01,157 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fb3d79808b0&gt;
2025-02-14 15:01:01,157 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,157 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fb3d797ab80&gt;
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;]
2025-02-14 15:01:01,158 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fb3d797a280&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fb3d7980d30&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb3d797dee0&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb3d629da90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fb3d70b4790&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb3d629da00&gt;&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fb3d797a4c0&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fb3d7980820&gt;
2025-02-14 15:01:01,159 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb3d612d100&gt; for transfer request: 0.
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T150101Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150101Z
20250214/us-west-1/s3/aws4_request
95ea4b70d4ada0990ade2ba8e28c1e1f36b241c1ca4ab6806a01aec794723ca4
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
8511fb87904d62fd52f854a44593f7b7e4393fab8b6df2a82983ccb57b7b74b8
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fb3d70b4820&gt;
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fb3d7980670&gt;
2025-02-14 15:01:01,160 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150101Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8511fb87904d62fd52f854a44593f7b7e4393fab8b6df2a82983ccb57b7b74b8', 'amz-sdk-invocation-id': b'c336d331-dfa5-48d9-bf5f-22dd6c460366', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 15:01:01,161 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 15:01:01,159 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;
2025-02-14 15:01:01,160 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:01:01,161 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;]
2025-02-14 15:01:01,161 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;
2025-02-14 15:01:01,161 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb3d612d100&gt; for transfer request: 0.
2025-02-14 15:01:01,162 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 15:01:01,162 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c7c40&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d6089940&gt;]
2025-02-14 15:01:01,162 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c73a0&gt;
2025-02-14 15:01:01,162 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:01:01,182 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 15:01:01,182 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fb3d7980b80&gt;
2025-02-14 15:01:01,182 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fb3d79809d0&gt;
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'eLVRqYo7DeU6', 'x-amz-request-id': '1bd95edb-528d-45f6-a5c9-35cf9d0262bb', 'Content-Length': '285'}
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7fb3d7980ca0&gt;
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb3d6277790&gt;
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fb3d6e0bd30&gt;
2025-02-14 15:01:01,183 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb3d629d910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60db5b0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827'}
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fb3d797a8b0&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fb3d797ddc0&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fb3d797a820&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fb3d7980700&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fb3d62fc700&gt;&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fb3d797a670&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fb3d79808b0&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,184 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fb3d7aef8b0&gt;
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d60c7c40&gt;
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb3d629d910&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60c77f0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827'}
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fb3d797a8b0&gt;
2025-02-14 15:01:01,185 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fb3d797ddc0&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fb3d797a820&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fb3d7980700&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fb3d62fc700&gt;&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fb3d797a670&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fb3d79808b0&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:01:01,186 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fb3d7aef8b0&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fb3d797ab80&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fb3d797a280&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fb3d7980d30&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb3d797dee0&gt;
2025-02-14 15:01:01,189 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '5GiTyPmkJbq3aVLB4Xo3NQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60db5b0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb3d629da90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60db5b0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:01:01,190 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fb3d70b4790&gt;
2025-02-14 15:01:01,190 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb3d629da00&gt;&gt;
2025-02-14 15:01:01,190 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fb3d797a4c0&gt;
2025-02-14 15:01:01,190 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fb3d7980820&gt;
2025-02-14 15:01:01,190 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827
content-md5:5GiTyPmkJbq3aVLB4Xo3NQ==
host:s3g:9878
x-amz-content-sha256:aab4ff6eb4d3e79778c9ced1ef05d5572f7cdd4ffcb5dbc0fcb8d7307fe3ec19
x-amz-date:20250214T150101Z

content-md5;host;x-amz-content-sha256;x-amz-date
aab4ff6eb4d3e79778c9ced1ef05d5572f7cdd4ffcb5dbc0fcb8d7307fe3ec19
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150101Z
20250214/us-west-1/s3/aws4_request
aae1c37ecc2c681076c7ee98dd88e3da87e4d57b5b468561b810df4b9779f87b
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
219ae79b2a9c8ae737f3f985a3e401807044701d2565f3c7837ffc508a9053df
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fb3d70b4820&gt;
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fb3d7980670&gt;
2025-02-14 15:01:01,192 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'5GiTyPmkJbq3aVLB4Xo3NQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150101Z', 'X-Amz-Content-SHA256': b'aab4ff6eb4d3e79778c9ced1ef05d5572f7cdd4ffcb5dbc0fcb8d7307fe3ec19', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=219ae79b2a9c8ae737f3f985a3e401807044701d2565f3c7837ffc508a9053df', 'amz-sdk-invocation-id': b'3c5a4085-0404-4682-9641-845b03c87741', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 15:01:01,193 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:01:01,204 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fb3d797ab80&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fb3d797a280&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fb3d7980d30&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb3d797dee0&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 's27Lug8B0gxF7IyttBdbyQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60c77f0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb3d629da90&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb3d60c77f0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fb3d70b4790&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb3d629da00&gt;&gt;
2025-02-14 15:01:01,205 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fb3d797a4c0&gt;
2025-02-14 15:01:01,206 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fb3d7980820&gt;
2025-02-14 15:01:01,206 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827
content-md5:s27Lug8B0gxF7IyttBdbyQ==
host:s3g:9878
x-amz-content-sha256:e3d21aa13fa11dd56c3a523dd0ffd433843aa52ec350f53170e06b9034607f64
x-amz-date:20250214T150101Z

content-md5;host;x-amz-content-sha256;x-amz-date
e3d21aa13fa11dd56c3a523dd0ffd433843aa52ec350f53170e06b9034607f64
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150101Z
20250214/us-west-1/s3/aws4_request
13d52c53ffc1b0c2a80fe6399df62699c4097bd9eb97b6172bb69e9a073e7811
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
5ec8f7673add882562d29ab6a80a9e6cacb717bd8969c31615492ce0fec03793
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fb3d70b4820&gt;
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fb3d7980670&gt;
2025-02-14 15:01:01,214 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b's27Lug8B0gxF7IyttBdbyQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T150101Z', 'X-Amz-Content-SHA256': b'e3d21aa13fa11dd56c3a523dd0ffd433843aa52ec350f53170e06b9034607f64', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=5ec8f7673add882562d29ab6a80a9e6cacb717bd8969c31615492ce0fec03793', 'amz-sdk-invocation-id': b'f6531af5-9b65-48c6-a126-aaa05d3325ec', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 15:01:01,215 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-14 15:01:01,216 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 15:01:01,220 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (3.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (7.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (10.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (14.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (17.5 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (20.5 MiB/s) with 1 file(s) remaining  
2025-02-14 15:01:01,285 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (13.0 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (14.6 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (16.4 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (16.3 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (17.7 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (19.0 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (20.3 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (21.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (23.1 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (24.3 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (24.9 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (25.9 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (27.2 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (28.2 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (30.7 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (31.9 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (34.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (35.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (36.3 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (37.5 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (38.2 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (39.3 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (39.2 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (40.3 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (41.3 MiB/s) with 1 file(s) remaining  
2025-02-14 15:01:01,359 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 15:01:01,359 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fb3d7980b80&gt;
2025-02-14 15:01:01,361 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fb3d79809d0&gt;
2025-02-14 15:01:01,361 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'e46893c8f9a425bab76952c1e17a3735', 'Server': 'Ozone', 'x-amz-id-2': 'bxtKrgz5R', 'x-amz-request-id': 'c2b7802c-d862-49e3-b4b1-3a5c0d13832f', 'Content-Length': '0'}
2025-02-14 15:01:01,361 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:01:01,362 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fb3d7980ca0&gt;
Completed 8.5 MiB/9.5 MiB (41.1 MiB/s) with 1 file(s) remaining  
2025-02-14 15:01:01,363 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb3d6277790&gt;
2025-02-14 15:01:01,363 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:01:01,363 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,363 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fb3d6e0bd30&gt;
Completed 8.5 MiB/9.5 MiB (40.9 MiB/s) with 1 file(s) remaining  
2025-02-14 15:01:01,366 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (41.6 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (42.3 MiB/s) with 1 file(s) remaining  
Completed 9.3 MiB/9.5 MiB (42.9 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (43.4 MiB/s) with 1 file(s) remaining  
2025-02-14 15:01:01,485 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fb3d7980b80&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fb3d79809d0&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'b36ecbba0f01d20c45ec8cadb4175bc9', 'Server': 'Ozone', 'x-amz-id-2': '4gFDfyBIiBs9', 'x-amz-request-id': 'c9ed7f9d-e0db-4e68-ab48-36c9de2844a2', 'Content-Length': '0'}
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fb3d7980ca0&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb3d6277790&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fb3d6e0bd30&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fb3d6089940&gt;
2025-02-14 15:01:01,486 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb3d629d910&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'parts': [{'ETag': 'b36ecbba0f01d20c45ec8cadb4175bc9', 'PartNumber': 1}, {'ETag': 'e46893c8f9a425bab76952c1e17a3735', 'PartNumber': 2}]}
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7fb3d797a8b0&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fb3d797a820&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fb3d7980700&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fb3d62fc700&gt;&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fb3d797a670&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fb3d79808b0&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 15:01:01,487 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fb3d797ab80&gt;
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fb3d797a280&gt;
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fb3d7980d30&gt;
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb3d797dee0&gt;
2025-02-14 15:01:01,488 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;b36ecbba0f01d20c45ec8cadb4175bc9&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;e46893c8f9a425bab76952c1e17a3735&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb3d629da90&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827', 'MultipartUpload': {'Parts': [{'ETag': 'b36ecbba0f01d20c45ec8cadb4175bc9', 'PartNumber': 1}, {'ETag': 'e46893c8f9a425bab76952c1e17a3735', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fb3d70b4790&gt;
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb3d629da00&gt;&gt;
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fb3d797a4c0&gt;
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fb3d7980820&gt;
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fb3d6277820&gt;&gt;
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827
host:s3g:9878
x-amz-content-sha256:646686221e7d609306fe007311038eea3946e217c69b1c04aadd595aadca98a9
x-amz-date:20250214T150101Z

host;x-amz-content-sha256;x-amz-date
646686221e7d609306fe007311038eea3946e217c69b1c04aadd595aadca98a9
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T150101Z
20250214/us-west-1/s3/aws4_request
da9190a5ff2d8ed3e2a2c52c3f29a77a04f72ee3e19f1ea063d20b8fa1361be3
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
5032a06e85c0c1c1eaa6ded69d0cabd43abba5d54c9db6427420c6c11ea721ad
2025-02-14 15:01:01,489 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fb3d70b4820&gt;
2025-02-14 15:01:01,490 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fb3d7980670&gt;
2025-02-14 15:01:01,490 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T150101Z', 'X-Amz-Content-SHA256': b'646686221e7d609306fe007311038eea3946e217c69b1c04aadd595aadca98a9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=5032a06e85c0c1c1eaa6ded69d0cabd43abba5d54c9db6427420c6c11ea721ad', 'amz-sdk-invocation-id': b'e83ce851-3be1-4e5e-be30-5be63d6ab767', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 15:01:01,513 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=d5047434-7d63-4873-9ce3-192a4fcbc14f-114002838236233827 HTTP/1.1" 200 286
2025-02-14 15:01:01,513 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fb3d7980b80&gt;
2025-02-14 15:01:01,513 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fb3d79809d0&gt;
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 15:01:01 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'ujtPgMFGxH571gX', 'x-amz-request-id': 'ee70a353-8afb-46cd-9569-ee40f904e88e', 'Content-Length': '286'}
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"ba6a6f851cc827b46b69f9693285b642-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7fb3d7980ca0&gt;
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb3d6277790&gt;
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fb3d6277850&gt;&gt;
2025-02-14 15:01:01,514 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fb3d6e0bd30&gt;
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 15:01:01,515 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 15:01:01,515 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 15:01:01.585" endtime="20250214 15:01:01.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:01.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:01.587" endtime="20250214 15:01:01.587"/>
</kw>
<status status="PASS" starttime="20250214 15:01:00.749" endtime="20250214 15:01:01.588"/>
</kw>
<msg timestamp="20250214 15:01:01.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:00.749" endtime="20250214 15:01:01.588"/>
</kw>
<msg timestamp="20250214 15:01:01.590" level="INFO">${output} = 2025-02-14 15:01:01,065 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:01:01,065 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:01:00.748" endtime="20250214 15:01:01.590"/>
</kw>
<msg timestamp="20250214 15:01:01.591" level="INFO">${result} = 2025-02-14 15:01:01,065 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 15:01:01,065 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 15:01:00.748" endtime="20250214 15:01:01.591"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_99_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 99</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:01.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_1 --part-number 99 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:02.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:02.100" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:01 GMT",
    "ContentLength": 0,
    "ETag": "\"ba6a6f851cc827b46b69f9693285b642-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:01:01.593" endtime="20250214 15:01:02.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:02.101" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:01 GMT",
    "ContentLength": 0,
    "ETag": "\"ba6a6f851cc827b46b69f9693285b642-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:02 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:02 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:01:02.100" endtime="20250214 15:01:02.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:02.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:02.101" endtime="20250214 15:01:02.101"/>
</kw>
<status status="PASS" starttime="20250214 15:01:01.592" endtime="20250214 15:01:02.102"/>
</kw>
<msg timestamp="20250214 15:01:02.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:01.592" endtime="20250214 15:01:02.102"/>
</kw>
<msg timestamp="20250214 15:01:02.102" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:01 GMT",
    "ContentLength": 0,
    "ETag": "\"ba6a6f851cc827b46b69f9693285b642-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:01:01.592" endtime="20250214 15:01:02.102"/>
</kw>
<msg timestamp="20250214 15:01:02.102" level="INFO">${get_part_99_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:01 GMT",
    "ContentLength": 0,
    "ETag": "\"ba6a6f851cc827b46b69f9693285b642-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 15:01:01.591" endtime="20250214 15:01:02.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:02.102" endtime="20250214 15:01:02.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:02.103" endtime="20250214 15:01:02.103"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:02.106" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:02.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:02.625" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:02.104" endtime="20250214 15:01:02.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:02.626" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:02.626" endtime="20250214 15:01:02.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:02.626" endtime="20250214 15:01:02.627"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.104" endtime="20250214 15:01:02.627"/>
</kw>
<msg timestamp="20250214 15:01:02.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.104" endtime="20250214 15:01:02.627"/>
</kw>
<msg timestamp="20250214 15:01:02.627" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 15:01:02.103" endtime="20250214 15:01:02.627"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.103" endtime="20250214 15:01:02.627"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:02.631" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:02.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:02.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:02.628" endtime="20250214 15:01:02.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:02.638" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:02.638" endtime="20250214 15:01:02.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:02.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:02.639" endtime="20250214 15:01:02.639"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.628" endtime="20250214 15:01:02.639"/>
</kw>
<msg timestamp="20250214 15:01:02.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.628" endtime="20250214 15:01:02.639"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.627" endtime="20250214 15:01:02.639"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:02.643" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:02.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:02.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:02.641" endtime="20250214 15:01:02.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:02.648" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:02.647" endtime="20250214 15:01:02.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:02.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:02.648" endtime="20250214 15:01:02.648"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.640" endtime="20250214 15:01:02.649"/>
</kw>
<msg timestamp="20250214 15:01:02.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.640" endtime="20250214 15:01:02.649"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.640" endtime="20250214 15:01:02.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:00.700" endtime="20250214 15:01:02.649"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:00:31.291" endtime="20250214 15:01:02.651"/>
</suite>
<suite id="s1-s1-s15" name="Objecttagging" source="/opt/hadoop/smoketest/s3/objecttagging.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:01:02.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.662" endtime="20250214 15:01:02.662"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.662" endtime="20250214 15:01:02.662"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:01:02.663" endtime="20250214 15:01:02.663"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.662" endtime="20250214 15:01:02.663"/>
</kw>
<test id="s1-s1-s15-t1" name="Put object tagging" line="33">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:02.667" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 15:01:02.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:02.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:02.665" endtime="20250214 15:01:02.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:02.670" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:02.669" endtime="20250214 15:01:02.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:02.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:02.670" endtime="20250214 15:01:02.671"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.664" endtime="20250214 15:01:02.671"/>
</kw>
<msg timestamp="20250214 15:01:02.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.664" endtime="20250214 15:01:02.671"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.664" endtime="20250214 15:01:02.671"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:02.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:03.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:03.201" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:01:02.673" endtime="20250214 15:01:03.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:03.202" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:01:03.202" endtime="20250214 15:01:03.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:03.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:03.202" endtime="20250214 15:01:03.203"/>
</kw>
<status status="PASS" starttime="20250214 15:01:02.672" endtime="20250214 15:01:03.203"/>
</kw>
<msg timestamp="20250214 15:01:03.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:02.672" endtime="20250214 15:01:03.203"/>
</kw>
<msg timestamp="20250214 15:01:03.203" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:01:02.672" endtime="20250214 15:01:03.203"/>
</kw>
<msg timestamp="20250214 15:01:03.203" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 15:01:02.671" endtime="20250214 15:01:03.203"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:03.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-6275424850/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:03.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:03.687" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:01:03.141Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:01:03.205" endtime="20250214 15:01:03.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:03.688" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:01:03.141Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-6275424850/putobject/key=value/zerobyte",
            "LastModified": "2025-02-14T15:00:32.811Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-6275424850/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 15:01:03.687" endtime="20250214 15:01:03.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:03.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:03.688" endtime="20250214 15:01:03.688"/>
</kw>
<status status="PASS" starttime="20250214 15:01:03.205" endtime="20250214 15:01:03.689"/>
</kw>
<msg timestamp="20250214 15:01:03.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:03.204" endtime="20250214 15:01:03.689"/>
</kw>
<msg timestamp="20250214 15:01:03.689" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:01:03.141Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:01:03.204" endtime="20250214 15:01:03.689"/>
</kw>
<msg timestamp="20250214 15:01:03.689" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-6275424850/putobject/key=value/f1",
            "LastModified": "2025-02-14T15:01:03.141Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 15:01:03.204" endtime="20250214 15:01:03.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:03.689" endtime="20250214 15:01:03.689"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:03.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:04.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:04.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:03.691" endtime="20250214 15:01:04.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:04.183" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:04.182" endtime="20250214 15:01:04.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:04.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:04.183" endtime="20250214 15:01:04.183"/>
</kw>
<status status="PASS" starttime="20250214 15:01:03.690" endtime="20250214 15:01:04.183"/>
</kw>
<msg timestamp="20250214 15:01:04.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:03.690" endtime="20250214 15:01:04.183"/>
</kw>
<msg timestamp="20250214 15:01:04.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:03.690" endtime="20250214 15:01:04.184"/>
</kw>
<msg timestamp="20250214 15:01:04.184" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:01:03.689" endtime="20250214 15:01:04.184"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:04.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:04.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:04.673" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:04.185" endtime="20250214 15:01:04.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:04.674" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:04 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:04 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:01:04.673" endtime="20250214 15:01:04.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:04.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:04.674" endtime="20250214 15:01:04.675"/>
</kw>
<status status="PASS" starttime="20250214 15:01:04.185" endtime="20250214 15:01:04.675"/>
</kw>
<msg timestamp="20250214 15:01:04.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:04.185" endtime="20250214 15:01:04.675"/>
</kw>
<msg timestamp="20250214 15:01:04.675" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:04.184" endtime="20250214 15:01:04.675"/>
</kw>
<msg timestamp="20250214 15:01:04.675" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:04.184" endtime="20250214 15:01:04.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:04.675" endtime="20250214 15:01:04.675"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:04.679" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:04 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:04 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:04.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:04.684" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250214 15:01:04.676" endtime="20250214 15:01:04.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:04.685" level="INFO">1</msg>
<status status="PASS" starttime="20250214 15:01:04.684" endtime="20250214 15:01:04.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:04.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:04.685" endtime="20250214 15:01:04.685"/>
</kw>
<msg timestamp="20250214 15:01:04.685" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250214 15:01:04.676" endtime="20250214 15:01:04.685"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:01:04.685" endtime="20250214 15:01:04.686"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:04.689" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:05.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:05.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:04.687" endtime="20250214 15:01:05.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:05.169" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:05.168" endtime="20250214 15:01:05.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:05.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:05.169" endtime="20250214 15:01:05.169"/>
</kw>
<status status="PASS" starttime="20250214 15:01:04.687" endtime="20250214 15:01:05.169"/>
</kw>
<msg timestamp="20250214 15:01:05.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:04.686" endtime="20250214 15:01:05.169"/>
</kw>
<msg timestamp="20250214 15:01:05.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:04.686" endtime="20250214 15:01:05.170"/>
</kw>
<msg timestamp="20250214 15:01:05.170" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:01:04.686" endtime="20250214 15:01:05.170"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:05.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:05.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:05.654" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:05.171" endtime="20250214 15:01:05.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:05.655" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:05 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:05 GMT"
}</msg>
<status status="PASS" starttime="20250214 15:01:05.654" endtime="20250214 15:01:05.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:05.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:05.655" endtime="20250214 15:01:05.655"/>
</kw>
<status status="PASS" starttime="20250214 15:01:05.171" endtime="20250214 15:01:05.656"/>
</kw>
<msg timestamp="20250214 15:01:05.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:05.171" endtime="20250214 15:01:05.656"/>
</kw>
<msg timestamp="20250214 15:01:05.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:05.170" endtime="20250214 15:01:05.656"/>
</kw>
<msg timestamp="20250214 15:01:05.656" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 15:01:05.170" endtime="20250214 15:01:05.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:05.656" endtime="20250214 15:01:05.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:05.659" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 15:01:03 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 15:01:05 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 15:01:05 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:05.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:05.664" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 15:01:05.657" endtime="20250214 15:01:05.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:05.665" level="INFO">2</msg>
<status status="PASS" starttime="20250214 15:01:05.664" endtime="20250214 15:01:05.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:05.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:05.665" endtime="20250214 15:01:05.665"/>
</kw>
<msg timestamp="20250214 15:01:05.665" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 15:01:05.656" endtime="20250214 15:01:05.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:01:05.666" endtime="20250214 15:01:05.666"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:05.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-6275424850/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:06.151" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:06.151" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:01:05.667" endtime="20250214 15:01:06.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:06.152" level="INFO">
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:01:06.152" endtime="20250214 15:01:06.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:06.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:06.152" endtime="20250214 15:01:06.153"/>
</kw>
<msg timestamp="20250214 15:01:06.153" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:01:05.666" endtime="20250214 15:01:06.153"/>
</kw>
<msg timestamp="20250214 15:01:06.153" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 15:01:05.666" endtime="20250214 15:01:06.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:06.153" endtime="20250214 15:01:06.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:02.664" endtime="20250214 15:01:06.154"/>
</test>
<test id="s1-s1-s15-t2" name="Get object tagging" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:06.158" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:06.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:06.639" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 15:01:06.156" endtime="20250214 15:01:06.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:06.640" level="INFO">{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 15:01:06.639" endtime="20250214 15:01:06.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:06.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:06.640" endtime="20250214 15:01:06.640"/>
</kw>
<status status="PASS" starttime="20250214 15:01:06.156" endtime="20250214 15:01:06.640"/>
</kw>
<msg timestamp="20250214 15:01:06.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:06.156" endtime="20250214 15:01:06.640"/>
</kw>
<msg timestamp="20250214 15:01:06.641" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 15:01:06.155" endtime="20250214 15:01:06.641"/>
</kw>
<msg timestamp="20250214 15:01:06.641" level="INFO">${result} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 15:01:06.155" endtime="20250214 15:01:06.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:06.641" endtime="20250214 15:01:06.641"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:06.644" level="INFO">Running command 'echo '{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:06.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:06.649" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 15:01:06.642" endtime="20250214 15:01:06.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:06.650" level="INFO">2</msg>
<status status="PASS" starttime="20250214 15:01:06.650" endtime="20250214 15:01:06.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:06.650" endtime="20250214 15:01:06.651"/>
</kw>
<msg timestamp="20250214 15:01:06.651" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 15:01:06.641" endtime="20250214 15:01:06.651"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:01:06.651" endtime="20250214 15:01:06.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:06.154" endtime="20250214 15:01:06.651"/>
</test>
<test id="s1-s1-s15-t3" name="Delete object tagging" line="67">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:06.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object-tagging --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:07.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:07.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:06.653" endtime="20250214 15:01:07.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:07.150" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:07.150" endtime="20250214 15:01:07.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:07.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:07.151" endtime="20250214 15:01:07.151"/>
</kw>
<status status="PASS" starttime="20250214 15:01:06.653" endtime="20250214 15:01:07.151"/>
</kw>
<msg timestamp="20250214 15:01:07.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:06.653" endtime="20250214 15:01:07.151"/>
</kw>
<msg timestamp="20250214 15:01:07.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:06.653" endtime="20250214 15:01:07.151"/>
</kw>
<msg timestamp="20250214 15:01:07.152" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:01:06.652" endtime="20250214 15:01:07.152"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:07.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket erasure --key ozone-test-6275424850/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:07.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:07.626" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 15:01:07.153" endtime="20250214 15:01:07.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:07.627" level="INFO">{
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 15:01:07.627" endtime="20250214 15:01:07.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:07.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:07.628" endtime="20250214 15:01:07.628"/>
</kw>
<status status="PASS" starttime="20250214 15:01:07.153" endtime="20250214 15:01:07.628"/>
</kw>
<msg timestamp="20250214 15:01:07.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:07.153" endtime="20250214 15:01:07.628"/>
</kw>
<msg timestamp="20250214 15:01:07.628" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 15:01:07.152" endtime="20250214 15:01:07.628"/>
</kw>
<msg timestamp="20250214 15:01:07.629" level="INFO">${result} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 15:01:07.152" endtime="20250214 15:01:07.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:07.629" endtime="20250214 15:01:07.629"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:07.632" level="INFO">Running command 'echo '{
    "TagSet": []
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:07.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:07.637" level="INFO">${output} = 0</msg>
<status status="PASS" starttime="20250214 15:01:07.629" endtime="20250214 15:01:07.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:07.637" level="INFO">0</msg>
<status status="PASS" starttime="20250214 15:01:07.637" endtime="20250214 15:01:07.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:07.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:07.637" endtime="20250214 15:01:07.638"/>
</kw>
<msg timestamp="20250214 15:01:07.638" level="INFO">${tagCount} = 0</msg>
<status status="PASS" starttime="20250214 15:01:07.629" endtime="20250214 15:01:07.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>0</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:01:07.638" endtime="20250214 15:01:07.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:06.652" endtime="20250214 15:01:07.639"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 15:01:02.654" endtime="20250214 15:01:07.639"/>
</suite>
<suite id="s1-s1-s16" name="Rclone" source="/opt/hadoop/smoketest/s3/rclone.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:01:07.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:07.648" endtime="20250214 15:01:07.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.648" endtime="20250214 15:01:07.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.648" endtime="20250214 15:01:07.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.648" endtime="20250214 15:01:07.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.648" endtime="20250214 15:01:07.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.649" endtime="20250214 15:01:07.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.649" endtime="20250214 15:01:07.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.649" endtime="20250214 15:01:07.649"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:01:07.649" endtime="20250214 15:01:07.649"/>
</kw>
<status status="PASS" starttime="20250214 15:01:07.647" endtime="20250214 15:01:07.649"/>
</kw>
<test id="s1-s1-s16-t1" name="Rclone Client Test" line="41">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:07.653" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:07.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:07.998" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:07.650" endtime="20250214 15:01:07.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:07.999" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:07.999" endtime="20250214 15:01:07.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:08.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:07.999" endtime="20250214 15:01:08.000"/>
</kw>
<status status="PASS" starttime="20250214 15:01:07.650" endtime="20250214 15:01:08.000"/>
</kw>
<msg timestamp="20250214 15:01:08.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:07.650" endtime="20250214 15:01:08.000"/>
</kw>
<msg timestamp="20250214 15:01:08.000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:07.650" endtime="20250214 15:01:08.000"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:08.003" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:08.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:08.344" level="INFO">${output} = b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 15:01:08.001" endtime="20250214 15:01:08.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:08.345" level="INFO">b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 15:01:08.344" endtime="20250214 15:01:08.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:08.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:08.345" endtime="20250214 15:01:08.345"/>
</kw>
<status status="PASS" starttime="20250214 15:01:08.001" endtime="20250214 15:01:08.346"/>
</kw>
<msg timestamp="20250214 15:01:08.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:08.001" endtime="20250214 15:01:08.346"/>
</kw>
<msg timestamp="20250214 15:01:08.346" level="INFO">${secret} = b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185</msg>
<status status="PASS" starttime="20250214 15:01:08.000" endtime="20250214 15:01:08.346"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 15:01:08.346" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'b52d8ce16136bcdbbfb7f32265f7e46b2d5f05bda98ec40a0c21004f63336185'.</msg>
<status status="PASS" starttime="20250214 15:01:08.346" endtime="20250214 15:01:08.346"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 15:01:08.346" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250214 15:01:08.346" endtime="20250214 15:01:08.347"/>
</kw>
<status status="PASS" starttime="20250214 15:01:07.649" endtime="20250214 15:01:08.347"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_CONFIG</arg>
<arg>${RCLONE_CONFIG_PATH}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 15:01:08.347" level="INFO">Environment variable 'RCLONE_CONFIG' set to value '/tmp/rclone.conf'.</msg>
<status status="PASS" starttime="20250214 15:01:08.347" endtime="20250214 15:01:08.347"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_VERBOSE</arg>
<arg>${RCLONE_VERBOSE_LEVEL}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 15:01:08.347" level="INFO">Environment variable 'RCLONE_VERBOSE' set to value '2'.</msg>
<status status="PASS" starttime="20250214 15:01:08.347" endtime="20250214 15:01:08.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone config create ${RCLONE_CONFIG_NAME} s3 env_auth=true provider=Other endpoint=${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:08.351" level="INFO">Running command 'rclone config create ozone s3 env_auth=true provider=Other endpoint=http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:08.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:08.553" level="INFO">${output} = 2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 15:01:08...</msg>
<status status="PASS" starttime="20250214 15:01:08.348" endtime="20250214 15:01:08.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:08.554" level="INFO">2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 15:01:08 NOTICE: Config file "/tmp/rclone.conf" not found - using defaults
2025/02/14 15:01:08 DEBUG : Saving config "env_auth" in section "ozone" of the config file
2025/02/14 15:01:08 DEBUG : Using default permissions for config file: -rw-------
2025/02/14 15:01:08 DEBUG : Saving config "provider" in section "ozone" of the config file
2025/02/14 15:01:08 DEBUG : Saving config "endpoint" in section "ozone" of the config file
2025/02/14 15:01:08 DEBUG : ozone: config in: state="", result=""
2025/02/14 15:01:08 DEBUG : ozone: config out: out=&lt;nil&gt;, err=&lt;nil&gt;
[ozone]
type = s3
env_auth = true
provider = Other
endpoint = http://s3g:9878
2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" finishing with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]</msg>
<status status="PASS" starttime="20250214 15:01:08.554" endtime="20250214 15:01:08.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:08.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:08.555" endtime="20250214 15:01:08.555"/>
</kw>
<status status="PASS" starttime="20250214 15:01:08.348" endtime="20250214 15:01:08.555"/>
</kw>
<msg timestamp="20250214 15:01:08.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:08.348" endtime="20250214 15:01:08.555"/>
</kw>
<msg timestamp="20250214 15:01:08.555" level="INFO">${result} = 2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 15:01:08...</msg>
<status status="PASS" starttime="20250214 15:01:08.347" endtime="20250214 15:01:08.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone copy /opt/hadoop/smoketest ${RCLONE_CONFIG_NAME}:/${S3_VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:08.559" level="INFO">Running command 'rclone copy /opt/hadoop/smoketest ozone:/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:14.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:14.114" level="INFO">${output} = 2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 15:01:08 DEBUG : Creating backend with remote "...</msg>
<status status="PASS" starttime="20250214 15:01:08.556" endtime="20250214 15:01:14.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:14.116" level="INFO">2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 15:01:08 DEBUG : Creating backend with remote "/opt/hadoop/smoketest"
2025/02/14 15:01:08 DEBUG : Using config file from "/tmp/rclone.conf"
2025/02/14 15:01:08 DEBUG : Creating backend with remote "ozone:/s3v/erasure"
2025/02/14 15:01:08 DEBUG : fs cache: renaming cache item "ozone:/s3v/erasure" to be canonical "ozone:s3v/erasure"
2025/02/14 15:01:08 DEBUG : .env: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : README.md: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : __init__.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : commonlib.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : createbucketenv.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : createmrenv.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : csi.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : kinit-hadoop.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : kinit.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : mapreduce.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : test.sh: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : testlib.sh: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-corrupt-block.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-dead-datanode.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-ldb.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-stale-datanode.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-tests-ec3-2.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-tests-ec6-3.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug-tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : debug/ozone-debug.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ec/basic.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ec/lib.resource: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ec/read.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ec/rewrite.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ec/upgrade-ec-check.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : failing/test1.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : failing/test2.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : fcq/s3_om_fcq.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/basic.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/getconf.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/links.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/ozone-shell-lib.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/ozone-shell-single.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/ozone-shell.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : basic/single_node.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/echoRPCLoad.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : auditparser/auditparser.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/generate-chunk.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/generate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/hsync.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/metadata-generate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/read-write-key.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/remove.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/validate-chunk.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : freon/validate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : grpc/grpc-om-s3-metrics.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : hsync/upgrade-hsync-check.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : gdpr/gdpr.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : httpfs/operations.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : httpfs/operations_tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/fs.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/fs_tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/os.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/os_tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/admin.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/cert.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/container.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/datanode.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/lease-recovery.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/pipeline.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/printTopology.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/data-creation-before-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/reconfigure.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/data-validation-after-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : om-ratis/testOMAdminCmd.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-cancel-prepare.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-fetch-key.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-prepare.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-prepared.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/om-roles.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : omha/testOMHA.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : balancer/testBalancer.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozone-lib/freon.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozone-lib/shell.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozone-lib/shell_tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/replicationmanager.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/safemode.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : admincli/scmrole.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : recon/recon-api.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : recon/recon-nssummary.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : recon/recon-taskstatus.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : replication/wait.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozonefs/hadoopo3fs.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozonefs/ozonefs.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : ozonefs/setup.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : scmha/primordial-scm.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : scmha/root-ca-rotation.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : scmha/scm-decommission.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : scmha/scm-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : snapshot/snapshot-acls.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : snapshot/snapshot-fs.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/MultipartUpload.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/README.md: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/__init__.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/awss3.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/awss3virtualhost.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/boto3.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/boto_client.py: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/bucketcreate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/bucketdelete.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/buckethead.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/bucketlist.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/commonawslib.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/freon.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/mpu_lib.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objectcopy.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objectcopys3a.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : repair/bucket-encryption.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : snapshot/snapshot-setup.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : snapshot/snapshot-sh.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : snapshot/upgrade-snapshot-check.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/S3-secret.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/admin-cert.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : topology/cli.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/ozone-secure-fs.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : topology/loaddata.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/ozone-secure-owner-s3.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : topology/readdata.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/ozone-secure-s3.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/ozone-secure-tenant.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : security/ozone-secure-token.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/dn-one-rocksdb.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/dn.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/om.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/read.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/recon.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/scm.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/setup.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : compatibility/write.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : certrotation/cert-rotation.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : certrotation/root-ca-rotation-client-checks.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/string.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : lib/string_tests.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : cli/classpath.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : cli/envvars.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objectdelete.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objecthead.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objectmultidelete.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objectputget.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/objecttagging.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/rclone.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/s3_compatbility_check.sh: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : upgrade/check-finalization.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/s3_getsecret.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : upgrade/finalize.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/secretgenerate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : upgrade/generate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/secretrevoke.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : upgrade/prepare.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : s3/webui.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : upgrade/validate.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : spnego/web.robot: Need to transfer - File not found at Destination
2025/02/14 15:01:08 DEBUG : S3 bucket s3v path erasure: Waiting for checks to finish
2025/02/14 15:01:08 DEBUG : S3 bucket s3v path erasure: Waiting for transfers to finish
2025/02/14 15:01:08 INFO  : S3 bucket s3v path erasure: Bucket "s3v" created with ACL ""
2025/02/14 15:01:08 DEBUG : .env: md5 = 856bb7fb5c872feedbd56751ab2de082 OK
2025/02/14 15:01:08 INFO  : .env: Copied (new)
2025/02/14 15:01:08 DEBUG : README.md: md5 = 17df896fbc01fff5fb5b9db87fd9e014 OK
2025/02/14 15:01:08 INFO  : README.md: Copied (new)
2025/02/14 15:01:08 DEBUG : commonlib.robot: md5 = f35ee74dcb4b089c1dd2a06c8d59a7cb OK
2025/02/14 15:01:08 INFO  : commonlib.robot: Copied (new)
2025/02/14 15:01:08 DEBUG : __init__.robot: md5 = 3e4f357bbd75e1f408f5730125e3d69f OK
2025/02/14 15:01:08 INFO  : __init__.robot: Copied (new)
2025/02/14 15:01:08 DEBUG : createbucketenv.robot: md5 = c879380e6beff95ce11e3a64a51f113e OK
2025/02/14 15:01:08 INFO  : createbucketenv.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : csi.robot: md5 = b626d511d7707277a894085bf5374e83 OK
2025/02/14 15:01:09 INFO  : csi.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : createmrenv.robot: md5 = 76f31b9aa05ce60f5b2960a224ba8cfd OK
2025/02/14 15:01:09 INFO  : createmrenv.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : kinit-hadoop.robot: md5 = 8401390e0e40e74a4185c2b7f4187b01 OK
2025/02/14 15:01:09 INFO  : kinit-hadoop.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : kinit.robot: md5 = ff777fbe3aa12927c1de1e4a3d0126bf OK
2025/02/14 15:01:09 INFO  : kinit.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : testlib.sh: md5 = 854af5a9711319c1c1d472e1919f5980 OK
2025/02/14 15:01:09 INFO  : testlib.sh: Copied (new)
2025/02/14 15:01:09 DEBUG : mapreduce.robot: md5 = 0f9c6faf7612a3a08a73382cc5cc3285 OK
2025/02/14 15:01:09 INFO  : mapreduce.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : test.sh: md5 = ed5682637036980f884a70c9d898cffd OK
2025/02/14 15:01:09 INFO  : test.sh: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-corrupt-block.robot: md5 = f556fab8e3925a4fea40eb972f71bc27 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-corrupt-block.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-stale-datanode.robot: md5 = 9997cee365bb0695b2d9d37c2752b77c OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-stale-datanode.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-ldb.robot: md5 = b8ccca17d5a70220be57068aaabdf361 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-ldb.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-dead-datanode.robot: md5 = 4aef4e89c8971dfb52dfc5cbaa3478e2 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-dead-datanode.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-tests-ec3-2.robot: md5 = 0b4321adf32a1d975fde7defdd1b0688 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-tests-ec3-2.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-tests.robot: md5 = a81feeb100f6d06d2844a10a0c3cfa0e OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-tests.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug-tests-ec6-3.robot: md5 = 3261caa6be3a690633cc90c05d6e57c2 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug-tests-ec6-3.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : debug/ozone-debug.robot: md5 = 04d77beb89b0bf6d7c25ff2a81b8abe7 OK
2025/02/14 15:01:09 INFO  : debug/ozone-debug.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : ec/basic.robot: md5 = 5c31a5db433ed08496f786ee27531a8e OK
2025/02/14 15:01:09 INFO  : ec/basic.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : ec/lib.resource: md5 = 9db19e6c4eec84a56e1527a0e5c0eedb OK
2025/02/14 15:01:09 INFO  : ec/lib.resource: Copied (new)
2025/02/14 15:01:09 DEBUG : ec/read.robot: md5 = 6a1409d13888ee6c452afae4e1fa5440 OK
2025/02/14 15:01:09 INFO  : ec/read.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : ec/rewrite.robot: md5 = 58ee9e6157cf8e88593d686d55eebea5 OK
2025/02/14 15:01:09 INFO  : ec/rewrite.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : ec/upgrade-ec-check.robot: md5 = 98acf9175a001fb901e6fc90808a6c5b OK
2025/02/14 15:01:09 INFO  : ec/upgrade-ec-check.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : failing/test1.robot: md5 = 096d2965be1aba0411e6f60d8b90db60 OK
2025/02/14 15:01:09 INFO  : failing/test1.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : failing/test2.robot: md5 = 48a8a3810b50776e3c666ad8329874c4 OK
2025/02/14 15:01:09 INFO  : failing/test2.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : fcq/s3_om_fcq.robot: md5 = 09872d18952b1ed19476e9be82197d97 OK
2025/02/14 15:01:09 INFO  : fcq/s3_om_fcq.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/basic.robot: md5 = 82a250b46e17af336904e2a40ae44f7c OK
2025/02/14 15:01:09 INFO  : basic/basic.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/getconf.robot: md5 = e4b3cc6aba745ad47ae7096b96b696d7 OK
2025/02/14 15:01:09 INFO  : basic/getconf.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/links.robot: md5 = e12a2214f323103b90e5dc88e00d771a OK
2025/02/14 15:01:09 INFO  : basic/links.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/ozone-shell-lib.robot: md5 = 61d5fbea8cc2fe5b99d9b929ace79b7b OK
2025/02/14 15:01:09 INFO  : basic/ozone-shell-lib.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/ozone-shell-single.robot: md5 = 91830dc70ef59cdfc3776547feecf417 OK
2025/02/14 15:01:09 INFO  : basic/ozone-shell-single.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/ozone-shell.robot: md5 = 3afa3f07707cfbf3931b321af6db8332 OK
2025/02/14 15:01:09 INFO  : basic/ozone-shell.robot: Copied (new)
2025/02/14 15:01:09 DEBUG : basic/single_node.robot: md5 = 83014215421eac19113e5d9e73d3b5d8 OK
2025/02/14 15:01:09 INFO  : basic/single_node.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/echoRPCLoad.robot: md5 = 2fc53080896aa6c46c9065a2f95f8a06 OK
2025/02/14 15:01:10 INFO  : freon/echoRPCLoad.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : auditparser/auditparser.robot: md5 = 8ff2197aa518510361cdc3ce585b6ce2 OK
2025/02/14 15:01:10 INFO  : auditparser/auditparser.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/generate-chunk.robot: md5 = b2ea5843932f9dd4aace06b987a5a95b OK
2025/02/14 15:01:10 INFO  : freon/generate-chunk.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/generate.robot: md5 = 794114406a50ce0efa2eb018c63e3569 OK
2025/02/14 15:01:10 INFO  : freon/generate.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/metadata-generate.robot: md5 = 9212bb41f3c6725b4cfbf27563256dc1 OK
2025/02/14 15:01:10 INFO  : freon/metadata-generate.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/hsync.robot: md5 = 67303a57b73bf512cd3c115506691ab4 OK
2025/02/14 15:01:10 INFO  : freon/hsync.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/read-write-key.robot: md5 = 97b5b3757ce62078e01acb30bf857bc9 OK
2025/02/14 15:01:10 INFO  : freon/read-write-key.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/remove.robot: md5 = 069bd821affc2700b55e95e923debb40 OK
2025/02/14 15:01:10 INFO  : freon/remove.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/validate-chunk.robot: md5 = 59e91563fa0a2fb6c3c84ca4e85fa12a OK
2025/02/14 15:01:10 INFO  : freon/validate-chunk.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : freon/validate.robot: md5 = de7167e08a627d9edba48f6493b3b21d OK
2025/02/14 15:01:10 INFO  : freon/validate.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : grpc/grpc-om-s3-metrics.robot: md5 = 46e600db0f1a54a11f51e680ea737807 OK
2025/02/14 15:01:10 INFO  : grpc/grpc-om-s3-metrics.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : hsync/upgrade-hsync-check.robot: md5 = 29b422caf7a6104c83d4dd7403c43bb3 OK
2025/02/14 15:01:10 INFO  : hsync/upgrade-hsync-check.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : gdpr/gdpr.robot: md5 = 55db38304c3687e1ced9f24c5351acc3 OK
2025/02/14 15:01:10 INFO  : gdpr/gdpr.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : httpfs/operations.robot: md5 = 3abce0ef1c2d9e19c348e2eb093a0123 OK
2025/02/14 15:01:10 INFO  : httpfs/operations.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : httpfs/operations_tests.robot: md5 = b5037537a59479fa397f521858151de7 OK
2025/02/14 15:01:10 INFO  : httpfs/operations_tests.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : lib/fs.robot: md5 = 37f5052dda89a5965f9b25e32a19400f OK
2025/02/14 15:01:10 INFO  : lib/fs.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : lib/fs_tests.robot: md5 = 659a8762cd74723d9f1aa58553c56bd3 OK
2025/02/14 15:01:10 INFO  : lib/fs_tests.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : lib/os.robot: md5 = 0d5c26d90f992ec5e493fbd261b802a0 OK
2025/02/14 15:01:10 INFO  : lib/os.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : lib/os_tests.robot: md5 = 2fff5aeac04f4cd0b44ad37027aee143 OK
2025/02/14 15:01:10 INFO  : lib/os_tests.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : admincli/admin.robot: md5 = d39b70dc555c6c987f6cc5bed2811b3d OK
2025/02/14 15:01:10 INFO  : admincli/admin.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : admincli/cert.robot: md5 = 77dfdeefa42fc03d3ad817a2764b9278 OK
2025/02/14 15:01:10 INFO  : admincli/cert.robot: Copied (new)
2025/02/14 15:01:10 DEBUG : admincli/container.robot: md5 = a7eb0d23c26a124b37bf2286589a01d2 OK
2025/02/14 15:01:10 INFO  : admincli/container.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/datanode.robot: md5 = b80f648efc34bae344513a2bbf822420 OK
2025/02/14 15:01:11 INFO  : admincli/datanode.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/lease-recovery.robot: md5 = dedf24150a762af48094f7ac0fb0cf46 OK
2025/02/14 15:01:11 INFO  : admincli/lease-recovery.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/pipeline.robot: md5 = f21de9178c946f815dca4591c48b6dce OK
2025/02/14 15:01:11 INFO  : admincli/pipeline.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/data-creation-before-om-bootstrap.robot: md5 = 7ce911a55a7fb5edd84c77e3942ae57b OK
2025/02/14 15:01:11 INFO  : omha/data-creation-before-om-bootstrap.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/printTopology.robot: md5 = b13fb6db17d23a519907f231ccf56059 OK
2025/02/14 15:01:11 INFO  : admincli/printTopology.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/reconfigure.robot: md5 = 1a9e5cf67cb3472c99ca26262e522fcf OK
2025/02/14 15:01:11 INFO  : admincli/reconfigure.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/data-validation-after-om-bootstrap.robot: md5 = ebef0dcb8b6ade5f72ea7805764edd61 OK
2025/02/14 15:01:11 INFO  : omha/data-validation-after-om-bootstrap.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : om-ratis/testOMAdminCmd.robot: md5 = b3e566d742593fdcbd4b25c49c1df9b9 OK
2025/02/14 15:01:11 INFO  : om-ratis/testOMAdminCmd.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-cancel-prepare.robot: md5 = 9d970a2b8e82faa67bfb3f2559f3b2d5 OK
2025/02/14 15:01:11 INFO  : omha/om-cancel-prepare.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-fetch-key.robot: md5 = 107bc35bac744c63479a62c484173dcd OK
2025/02/14 15:01:11 INFO  : omha/om-fetch-key.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-leader-transfer.robot: md5 = 2300435cfdb5fd36295701e65c730217 OK
2025/02/14 15:01:11 INFO  : omha/om-leader-transfer.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-prepare.robot: md5 = d555d6a6176d694c0e68139157d7178f OK
2025/02/14 15:01:11 INFO  : omha/om-prepare.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-prepared.robot: md5 = cef530c89296bc0f60aa3abc750c67ae OK
2025/02/14 15:01:11 INFO  : omha/om-prepared.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/testOMHA.robot: md5 = 76420a98f0abcd940eb808e88dca8ddb OK
2025/02/14 15:01:11 INFO  : omha/testOMHA.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : omha/om-roles.robot: md5 = 72254e4c5dcce7eb25e939dd388c184e OK
2025/02/14 15:01:11 INFO  : omha/om-roles.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : balancer/testBalancer.robot: md5 = b100fea9912fc01d1e27cc1b77c83b31 OK
2025/02/14 15:01:11 INFO  : balancer/testBalancer.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozone-lib/freon.robot: md5 = 92b3859196c46cf840c46923815692a5 OK
2025/02/14 15:01:11 INFO  : ozone-lib/freon.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozone-lib/shell.robot: md5 = 31382dc80887332e0c4cd46ce5d11d18 OK
2025/02/14 15:01:11 INFO  : ozone-lib/shell.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozone-lib/shell_tests.robot: md5 = 0731e1512a9ef08685cd5f1a671a0374 OK
2025/02/14 15:01:11 INFO  : ozone-lib/shell_tests.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/replicationmanager.robot: md5 = 93b30cc65865d2d684e987c4b94610e4 OK
2025/02/14 15:01:11 INFO  : admincli/replicationmanager.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/safemode.robot: md5 = d547033e4e042a61474a44e175954b86 OK
2025/02/14 15:01:11 INFO  : admincli/safemode.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : admincli/scmrole.robot: md5 = c7a5aa9ad1e2277764da1517ff91e386 OK
2025/02/14 15:01:11 INFO  : admincli/scmrole.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : recon/recon-api.robot: md5 = f5af7d2e74c23d011027ac387f521a4b OK
2025/02/14 15:01:11 INFO  : recon/recon-api.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : recon/recon-taskstatus.robot: md5 = 103ee5fcec5f0332cb9efd35f877aabd OK
2025/02/14 15:01:11 INFO  : recon/recon-taskstatus.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : recon/recon-nssummary.robot: md5 = 6913f9075574a8ea22e660e42bda74fe OK
2025/02/14 15:01:11 INFO  : recon/recon-nssummary.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : replication/wait.robot: md5 = 6c2234cd0a195a66958f1b95e06ca22f OK
2025/02/14 15:01:11 INFO  : replication/wait.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozonefs/hadoopo3fs.robot: md5 = af6c7cdaa17e6814065c51678a719de8 OK
2025/02/14 15:01:11 INFO  : ozonefs/hadoopo3fs.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozonefs/ozonefs.robot: md5 = c065378df949a1edbd8438dc17438755 OK
2025/02/14 15:01:11 INFO  : ozonefs/ozonefs.robot: Copied (new)
2025/02/14 15:01:11 DEBUG : ozonefs/setup.robot: md5 = 654df9c1aba73bbe70615bd138bbe9ea OK
2025/02/14 15:01:11 INFO  : ozonefs/setup.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : scmha/primordial-scm.robot: md5 = c6be6e3c99778e59a6941565ea904f37 OK
2025/02/14 15:01:12 INFO  : scmha/primordial-scm.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : scmha/root-ca-rotation.robot: md5 = bcffcde9f44f71177636bd67d64cde0c OK
2025/02/14 15:01:12 INFO  : scmha/root-ca-rotation.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : scmha/scm-leader-transfer.robot: md5 = 51aaf7c7dd2e3a9ef6ce31b50e617425 OK
2025/02/14 15:01:12 INFO  : scmha/scm-leader-transfer.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : scmha/scm-decommission.robot: md5 = 4f92e183f637f288f1c09cc28e5c35f8 OK
2025/02/14 15:01:12 INFO  : scmha/scm-decommission.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : snapshot/snapshot-acls.robot: md5 = 5165ce0e5d63ddba8123fccdbc7fe74e OK
2025/02/14 15:01:12 INFO  : snapshot/snapshot-acls.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : snapshot/snapshot-fs.robot: md5 = 8303ebaf2fc12efc0eedf897a3b8388b OK
2025/02/14 15:01:12 INFO  : snapshot/snapshot-fs.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/README.md: md5 = 4967f548b5fbc96c22e590f6352de20c OK
2025/02/14 15:01:12 INFO  : s3/README.md: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/MultipartUpload.robot: md5 = 5209a614d9e0d992293d0ad44c060759 OK
2025/02/14 15:01:12 INFO  : s3/MultipartUpload.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/__init__.robot: md5 = 23063b5cc483e26c9391946748d0e9c0 OK
2025/02/14 15:01:12 INFO  : s3/__init__.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/awss3.robot: md5 = 613af88fef39a5eb7fd1ad90f655accf OK
2025/02/14 15:01:12 INFO  : s3/awss3.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/awss3virtualhost.robot: md5 = 96d3468b5d85ac399b3955acfb0f5dfb OK
2025/02/14 15:01:12 INFO  : s3/awss3virtualhost.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/boto3.robot: md5 = 57deba6f5134410aa7132bcbba35bf02 OK
2025/02/14 15:01:12 INFO  : s3/boto3.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/boto_client.py: md5 = 67191f51cc17259b5b31d0083dd1c8af OK
2025/02/14 15:01:12 INFO  : s3/boto_client.py: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/bucketcreate.robot: md5 = 62dba6ffa76fe172082a845dca604d6e OK
2025/02/14 15:01:12 INFO  : s3/bucketcreate.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/bucketdelete.robot: md5 = c1d00766ad49e0c124d009c6007d5c91 OK
2025/02/14 15:01:12 INFO  : s3/bucketdelete.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/buckethead.robot: md5 = 2bb1986d15d3ae567300b5e313e894bb OK
2025/02/14 15:01:12 INFO  : s3/buckethead.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/commonawslib.robot: md5 = 24fad4f84a921ea9819269ea5c1c1104 OK
2025/02/14 15:01:12 INFO  : s3/commonawslib.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/bucketlist.robot: md5 = fbb9afb6fa4f7f2ac2eea383f8bf319e OK
2025/02/14 15:01:12 INFO  : s3/bucketlist.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/freon.robot: md5 = a0a59d691e3baf7be0aea34198319f79 OK
2025/02/14 15:01:12 INFO  : s3/freon.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/mpu_lib.robot: md5 = 64b8fcd0c76085408602f5224a615a5d OK
2025/02/14 15:01:12 INFO  : s3/mpu_lib.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/objectcopy.robot: md5 = 30e2c16d6411104c566d3d278fe9158c OK
2025/02/14 15:01:12 INFO  : s3/objectcopy.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : s3/objectcopys3a.robot: md5 = bef140aaa9c1c502fabaf129f9ac516c OK
2025/02/14 15:01:12 INFO  : s3/objectcopys3a.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : snapshot/snapshot-setup.robot: md5 = deee56580a640f4f2a24c27e2875deef OK
2025/02/14 15:01:12 INFO  : snapshot/snapshot-setup.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : repair/bucket-encryption.robot: md5 = 85fb3e7e6bc38056a137d3b55df020da OK
2025/02/14 15:01:12 INFO  : repair/bucket-encryption.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : snapshot/snapshot-sh.robot: md5 = b7089719e57e909dc80406968156276e OK
2025/02/14 15:01:12 INFO  : snapshot/snapshot-sh.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : snapshot/upgrade-snapshot-check.robot: md5 = 94052acf25531c5779f6e67fe1a5e5d8 OK
2025/02/14 15:01:12 INFO  : snapshot/upgrade-snapshot-check.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : security/admin-cert.robot: md5 = 77c7d7f0aa43c7b81b26021bd3da0531 OK
2025/02/14 15:01:12 INFO  : security/admin-cert.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : security/S3-secret.robot: md5 = d7dcdb93c4d1410f43c692576b9a021e OK
2025/02/14 15:01:12 INFO  : security/S3-secret.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : topology/cli.robot: md5 = 1312a3e8e54ae621f71b8c579610389c OK
2025/02/14 15:01:12 INFO  : topology/cli.robot: Copied (new)
2025/02/14 15:01:12 DEBUG : security/ozone-secure-fs.robot: md5 = feac34a4a3e86b047206038a9018f31a OK
2025/02/14 15:01:12 INFO  : security/ozone-secure-fs.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : security/ozone-secure-owner-s3.robot: md5 = 3e7cfb86bcac237e0fbb8d56f0f744b0 OK
2025/02/14 15:01:13 INFO  : security/ozone-secure-owner-s3.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : topology/loaddata.robot: md5 = 6f2723e7d07650f411a67a272b33de40 OK
2025/02/14 15:01:13 INFO  : topology/loaddata.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : topology/readdata.robot: md5 = 924403a1188642f6cb1f939631d9b8fd OK
2025/02/14 15:01:13 INFO  : topology/readdata.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : security/ozone-secure-s3.robot: md5 = f2ee95c122db6a64890f21818ff5d0f5 OK
2025/02/14 15:01:13 INFO  : security/ozone-secure-s3.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : security/ozone-secure-tenant.robot: md5 = 638546f4ca6201cfc7bba27b87a2495c OK
2025/02/14 15:01:13 INFO  : security/ozone-secure-tenant.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : security/ozone-secure-token.robot: md5 = f0bc9c409bf869d559d0386a5d3bd826 OK
2025/02/14 15:01:13 INFO  : security/ozone-secure-token.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/dn.robot: md5 = 1562fd650324206ae5229fcaf4d978c3 OK
2025/02/14 15:01:13 INFO  : compatibility/dn.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/dn-one-rocksdb.robot: md5 = 88430ae0b01aad442da17efb6dceeff5 OK
2025/02/14 15:01:13 INFO  : compatibility/dn-one-rocksdb.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/om.robot: md5 = 214be7d865c25b6c8808ddae5aceea2b OK
2025/02/14 15:01:13 INFO  : compatibility/om.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/read.robot: md5 = 9efb635ef918f329d6c8e47aca554f3d OK
2025/02/14 15:01:13 INFO  : compatibility/read.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/recon.robot: md5 = 17fc42834a46180c6a0d09722792d51a OK
2025/02/14 15:01:13 INFO  : compatibility/recon.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/scm.robot: md5 = b52956a2ccb6ca2ead8138b966a3cf69 OK
2025/02/14 15:01:13 INFO  : compatibility/scm.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/setup.robot: md5 = abee4cf943dea0d9eb9404a65c62259c OK
2025/02/14 15:01:13 INFO  : compatibility/setup.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : compatibility/write.robot: md5 = 27c4325259d4b71fd120a49c8a5b6246 OK
2025/02/14 15:01:13 INFO  : compatibility/write.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : certrotation/cert-rotation.robot: md5 = c5c790317ea695e9a10056e4d3345633 OK
2025/02/14 15:01:13 INFO  : certrotation/cert-rotation.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : lib/string.robot: md5 = 3f328b056d05b4c0b1de0155300722b3 OK
2025/02/14 15:01:13 INFO  : lib/string.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : certrotation/root-ca-rotation-client-checks.robot: md5 = 753e60393a600d76facb7a02c9377546 OK
2025/02/14 15:01:13 INFO  : certrotation/root-ca-rotation-client-checks.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : lib/string_tests.robot: md5 = 6cb4abeaa32800093caab1e3ef3a6dc8 OK
2025/02/14 15:01:13 INFO  : lib/string_tests.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : cli/classpath.robot: md5 = 56071fa2cdcf819011667d597f0de700 OK
2025/02/14 15:01:13 INFO  : cli/classpath.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/objecthead.robot: md5 = 013c35538293ecef75dec800ad2052e2 OK
2025/02/14 15:01:13 INFO  : s3/objecthead.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : cli/envvars.robot: md5 = 97be7992b4b7681defe5391bbe55c75d OK
2025/02/14 15:01:13 INFO  : cli/envvars.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/objectdelete.robot: md5 = e088e8a4177b2a88978d9d7b0e0eca7c OK
2025/02/14 15:01:13 INFO  : s3/objectdelete.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/objectmultidelete.robot: md5 = df1f9f0b36f9093d141d3eee4ea1a941 OK
2025/02/14 15:01:13 INFO  : s3/objectmultidelete.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/objecttagging.robot: md5 = 91be9cf21ad20dcdec46bd5b4ee2df90 OK
2025/02/14 15:01:13 INFO  : s3/objecttagging.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/objectputget.robot: md5 = 7219881d97216436b5c6a392a958128c OK
2025/02/14 15:01:13 INFO  : s3/objectputget.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/rclone.robot: md5 = d21ab56698189510215111a278dad68e OK
2025/02/14 15:01:13 INFO  : s3/rclone.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/s3_compatbility_check.sh: md5 = 034162b7078c6076ebb59eaa4b5473cc OK
2025/02/14 15:01:13 INFO  : s3/s3_compatbility_check.sh: Copied (new)
2025/02/14 15:01:13 DEBUG : upgrade/check-finalization.robot: md5 = 2ec44c3cfb922f39cc948eee24d3ee44 OK
2025/02/14 15:01:13 INFO  : upgrade/check-finalization.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/s3_getsecret.robot: md5 = 13e88d6b5040c3bfd441335745f803bc OK
2025/02/14 15:01:13 INFO  : s3/s3_getsecret.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : upgrade/finalize.robot: md5 = 2a8a50ebe55fd6527750e3f997a3caed OK
2025/02/14 15:01:13 INFO  : upgrade/finalize.robot: Copied (new)
2025/02/14 15:01:13 DEBUG : s3/secretgenerate.robot: md5 = 6488717e37a1b9dfdcb45948caf4eaf2 OK
2025/02/14 15:01:13 INFO  : s3/secretgenerate.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : upgrade/generate.robot: md5 = 87c3babbadb7231a37035b0fb45c012d OK
2025/02/14 15:01:14 INFO  : upgrade/generate.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : s3/secretrevoke.robot: md5 = fad00ae3b97b2b3e21180a73f59f44c8 OK
2025/02/14 15:01:14 INFO  : s3/secretrevoke.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : upgrade/prepare.robot: md5 = 6b07fdc028074a0ea045f14392770610 OK
2025/02/14 15:01:14 INFO  : upgrade/prepare.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : s3/webui.robot: md5 = 9bb0ab60ddd8632befc79c71790aeaa0 OK
2025/02/14 15:01:14 INFO  : s3/webui.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : upgrade/validate.robot: md5 = 4997452324a0fd6c01066d94d2938704 OK
2025/02/14 15:01:14 INFO  : upgrade/validate.robot: Copied (new)
2025/02/14 15:01:14 DEBUG : spnego/web.robot: md5 = 6891b9a6a120773f347563f2b334730e OK
2025/02/14 15:01:14 INFO  : spnego/web.robot: Copied (new)
2025/02/14 15:01:14 INFO  : 
Transferred:   	  554.617 KiB / 554.617 KiB, 100%, 105.617 KiB/s, ETA 0s
Transferred:          153 / 153, 100%
Elapsed time:         5.4s

2025/02/14 15:01:14 DEBUG : 13 go routines active</msg>
<status status="PASS" starttime="20250214 15:01:14.115" endtime="20250214 15:01:14.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:14.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:14.116" endtime="20250214 15:01:14.116"/>
</kw>
<status status="PASS" starttime="20250214 15:01:08.556" endtime="20250214 15:01:14.117"/>
</kw>
<msg timestamp="20250214 15:01:14.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:08.556" endtime="20250214 15:01:14.117"/>
</kw>
<msg timestamp="20250214 15:01:14.118" level="INFO">${result} = 2025/02/14 15:01:08 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 15:01:08 DEBUG : Creating backend with remote "...</msg>
<status status="PASS" starttime="20250214 15:01:08.555" endtime="20250214 15:01:14.118"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250214 15:01:07.649" endtime="20250214 15:01:14.118"/>
</test>
<doc>S3 gateway test with rclone client</doc>
<status status="PASS" starttime="20250214 15:01:07.640" endtime="20250214 15:01:14.118"/>
</suite>
<suite id="s1-s1-s17" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:14.125" endtime="20250214 15:01:14.125"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:14.129" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:14.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:14.133" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:01:14.126" endtime="20250214 15:01:14.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:14.134" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:01:14.133" endtime="20250214 15:01:14.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:14.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:14.134" endtime="20250214 15:01:14.134"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.126" endtime="20250214 15:01:14.134"/>
</kw>
<msg timestamp="20250214 15:01:14.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:14.126" endtime="20250214 15:01:14.134"/>
</kw>
<msg timestamp="20250214 15:01:14.134" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:01:14.126" endtime="20250214 15:01:14.135"/>
</kw>
<msg timestamp="20250214 15:01:14.135" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:14.125" endtime="20250214 15:01:14.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:01:14.135" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:14.135" endtime="20250214 15:01:14.135"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:14.139" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:14.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:14.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:14.137" endtime="20250214 15:01:14.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:14.180" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:14.180" endtime="20250214 15:01:14.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:14.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:14.180" endtime="20250214 15:01:14.180"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.136" endtime="20250214 15:01:14.181"/>
</kw>
<msg timestamp="20250214 15:01:14.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:14.136" endtime="20250214 15:01:14.181"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.136" endtime="20250214 15:01:14.181"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.135" endtime="20250214 15:01:14.181"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.125" endtime="20250214 15:01:14.181"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.125" endtime="20250214 15:01:14.181"/>
</kw>
<test id="s1-s1-s17-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:14.182" endtime="20250214 15:01:14.182"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:14.185" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:16.992" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:16.992" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:14.183" endtime="20250214 15:01:16.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:16.993" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:16.992" endtime="20250214 15:01:16.993"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.183" endtime="20250214 15:01:16.993"/>
</kw>
<status status="PASS" starttime="20250214 15:01:14.182" endtime="20250214 15:01:16.993"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:16.996" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:19.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:19.457" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a5b69b062155dfdbff1db5c20bbbc142bbe98e7078c16f3a17f92460388bba68</msg>
<status status="PASS" starttime="20250214 15:01:16.994" endtime="20250214 15:01:19.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:19.458" level="INFO">awsAccessKey=testuser2
awsSecret=a5b69b062155dfdbff1db5c20bbbc142bbe98e7078c16f3a17f92460388bba68</msg>
<status status="PASS" starttime="20250214 15:01:19.457" endtime="20250214 15:01:19.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:19.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:19.458" endtime="20250214 15:01:19.458"/>
</kw>
<status status="PASS" starttime="20250214 15:01:16.993" endtime="20250214 15:01:19.459"/>
</kw>
<msg timestamp="20250214 15:01:19.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:16.993" endtime="20250214 15:01:19.459"/>
</kw>
<msg timestamp="20250214 15:01:19.459" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a5b69b062155dfdbff1db5c20bbbc142bbe98e7078c16f3a17f92460388bba68</msg>
<status status="PASS" starttime="20250214 15:01:16.993" endtime="20250214 15:01:19.459"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:19.459" endtime="20250214 15:01:19.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:19.460" endtime="20250214 15:01:19.460"/>
</kw>
<status status="PASS" starttime="20250214 15:01:19.459" endtime="20250214 15:01:19.460"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:19.463" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:22.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:22.126" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:19.460" endtime="20250214 15:01:22.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:22.127" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:22.127" endtime="20250214 15:01:22.127"/>
</kw>
<status status="PASS" starttime="20250214 15:01:19.460" endtime="20250214 15:01:22.127"/>
</kw>
<status status="PASS" starttime="20250214 15:01:19.460" endtime="20250214 15:01:22.127"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250214 15:01:14.181" endtime="20250214 15:01:22.128"/>
</test>
<test id="s1-s1-s17-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 15:01:22.129" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20250214 15:01:22.128" endtime="20250214 15:01:22.129"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20250214 15:01:22.129" endtime="20250214 15:01:22.129"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 15:01:22.130" endtime="20250214 15:01:22.130"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 15:01:22.130" endtime="20250214 15:01:22.130"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250214 15:01:22.130" endtime="20250214 15:01:22.130"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 15:01:22.130" endtime="20250214 15:01:22.130"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250214 15:01:22.128" endtime="20250214 15:01:22.130">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20250214 15:01:14.119" endtime="20250214 15:01:22.131"/>
</suite>
<suite id="s1-s1-s18" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s1-s18-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:22.139" endtime="20250214 15:01:22.139"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:22.143" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:22.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:22.146" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:01:22.140" endtime="20250214 15:01:22.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:22.147" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:01:22.147" endtime="20250214 15:01:22.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:22.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:22.147" endtime="20250214 15:01:22.148"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.140" endtime="20250214 15:01:22.148"/>
</kw>
<msg timestamp="20250214 15:01:22.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:22.140" endtime="20250214 15:01:22.148"/>
</kw>
<msg timestamp="20250214 15:01:22.148" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:01:22.140" endtime="20250214 15:01:22.148"/>
</kw>
<msg timestamp="20250214 15:01:22.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:22.139" endtime="20250214 15:01:22.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:01:22.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:22.148" endtime="20250214 15:01:22.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:22.152" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:22.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:22.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:22.150" endtime="20250214 15:01:22.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:22.187" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:22.186" endtime="20250214 15:01:22.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:22.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:22.187" endtime="20250214 15:01:22.187"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.149" endtime="20250214 15:01:22.187"/>
</kw>
<msg timestamp="20250214 15:01:22.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:22.149" endtime="20250214 15:01:22.187"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.149" endtime="20250214 15:01:22.188"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.149" endtime="20250214 15:01:22.188"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.139" endtime="20250214 15:01:22.188"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:22.191" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:24.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:24.675" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:22.188" endtime="20250214 15:01:24.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:24.676" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:24.675" endtime="20250214 15:01:24.676"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.188" endtime="20250214 15:01:24.676"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:24.679" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:27.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:27.138" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:24.676" endtime="20250214 15:01:27.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:27.139" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:27.138" endtime="20250214 15:01:27.139"/>
</kw>
<status status="PASS" starttime="20250214 15:01:24.676" endtime="20250214 15:01:27.139"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:27.142" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:29.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:29.982" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:27.139" endtime="20250214 15:01:29.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:29.983" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:29.982" endtime="20250214 15:01:29.983"/>
</kw>
<status status="PASS" starttime="20250214 15:01:27.139" endtime="20250214 15:01:29.983"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.188" endtime="20250214 15:01:29.983"/>
</kw>
<status status="PASS" starttime="20250214 15:01:22.139" endtime="20250214 15:01:29.983"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:29.983" endtime="20250214 15:01:29.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:29.987" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:30.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:30.127" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:01:29.985" endtime="20250214 15:01:30.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:30.128" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClgYGKwYBBQUCoIICijCCAoagDTALBgkqhkiG9xIBAgKiggJzBIICb2CCAmsGCSqGSIb3EgECAgEAboICWjCCAlagAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGasui52MJIrI0RPIIpVphAFxrPYQ32ARXtvIELzIwnfgf3hXh4ASq78aijBl0GwQdmukt9dDbPltV1oa4isYNZEmLVRbAFRSjivksg/3aW6rLgVaiCUfff87xwaq1ytsR5L4AqEU0vZeyrVLqEFdeFADTszH6RyTUQrFzMvxDtMYEKkjEvTnh3WVRKH2EkvvDgNYN5OlqA5+5bjTnC0wg2Ve191fkQAMvPxRs+aGnOebXF1p4O9VWOSoxRitaQ7YwC+R88V8zL92siz6nNFiFx/QcyDE+F8F8Dnq5dp73nIHMFjlGLg3zgGW2EllA3CPmgFWwqCyJGm945j0ZwmGb6BfAsjUcAMC86268XSNCRPlUSRwxFHBqTFYpIHVMIHSoAMCARKigcoEgcdZ+4kkiOOIA2bEcyH6kjbADDmlpLJUtJ1625xGAXhVgJXxlVutpReB71apUe6hGcvVMYoWCaVSi22b0IkrmogathXTF7IVtDi22bcGxxvc1qTZnJP+AoFrCGpo2dkyf7J2m1Ns9zadZBmERI4w90K66Vt6uP6XH9DSbLZEGrtiaGdCvK24zL8T5/cM/x/w/AUyHYNOeVpqSXJZoheedguB/SqDmi3nrU0Ca0W0QjaK1+nOxe86qfgwk4cuZHKnYse0E08E87Cv
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:01:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:01:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQYBAkQ2cx+l9XkDrFFaNIEJPu7vS7spwNUJ/zmrg4jWW3rL4DWmF3pxS4k4ua/loMzCIM2sLp+vEnjCPu0T0IguF
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581290039&amp;s=LpQzkp283f7KgmCgkqookyDrT9CEGGYFMuINq/G/Fus="; HttpOnly
&lt; Content-Length: 216
&lt; 
{ [216 bytes data]

100   216  100   216    0     0   1648      0 --:--:-- --:--:-- --:--:--  1648
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser/scm@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;93f6f7188a0ea1ea213e7db8bf6869575f2e86de7053d815f85b96f8a3ad3f64&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250214 15:01:30.127" endtime="20250214 15:01:30.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:30.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:30.128" endtime="20250214 15:01:30.129"/>
</kw>
<status status="PASS" starttime="20250214 15:01:29.984" endtime="20250214 15:01:30.129"/>
</kw>
<msg timestamp="20250214 15:01:30.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:29.984" endtime="20250214 15:01:30.129"/>
</kw>
<msg timestamp="20250214 15:01:30.129" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:01:29.984" endtime="20250214 15:01:30.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:30.130" endtime="20250214 15:01:30.130"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:01:30.130" endtime="20250214 15:01:30.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:30.135" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:32.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:32.636" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:30.132" endtime="20250214 15:01:32.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:32.636" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:32.636" endtime="20250214 15:01:32.636"/>
</kw>
<status status="PASS" starttime="20250214 15:01:30.132" endtime="20250214 15:01:32.637"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:32.639" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:35.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:35.301" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:32.637" endtime="20250214 15:01:35.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:35.302" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:35.302" endtime="20250214 15:01:35.302"/>
</kw>
<status status="PASS" starttime="20250214 15:01:32.637" endtime="20250214 15:01:35.302"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:35.305" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:38.063" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:38.063" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:35.303" endtime="20250214 15:01:38.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:38.064" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:38.063" endtime="20250214 15:01:38.064"/>
</kw>
<status status="PASS" starttime="20250214 15:01:35.302" endtime="20250214 15:01:38.064"/>
</kw>
<status status="PASS" starttime="20250214 15:01:30.131" endtime="20250214 15:01:38.064"/>
</kw>
<status status="PASS" starttime="20250214 15:01:30.131" endtime="20250214 15:01:38.064"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:22.138" endtime="20250214 15:01:38.064"/>
</test>
<test id="s1-s1-s18-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:38.066" endtime="20250214 15:01:38.066"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:38.070" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:38.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:38.073" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:01:38.067" endtime="20250214 15:01:38.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:38.074" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:01:38.074" endtime="20250214 15:01:38.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:38.074" endtime="20250214 15:01:38.075"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.067" endtime="20250214 15:01:38.075"/>
</kw>
<msg timestamp="20250214 15:01:38.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:38.066" endtime="20250214 15:01:38.075"/>
</kw>
<msg timestamp="20250214 15:01:38.075" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:01:38.066" endtime="20250214 15:01:38.075"/>
</kw>
<msg timestamp="20250214 15:01:38.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:38.066" endtime="20250214 15:01:38.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:01:38.076" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:38.076" endtime="20250214 15:01:38.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:38.079" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:38.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:38.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:38.077" endtime="20250214 15:01:38.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:38.114" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:38.113" endtime="20250214 15:01:38.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:38.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:38.114" endtime="20250214 15:01:38.114"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.077" endtime="20250214 15:01:38.114"/>
</kw>
<msg timestamp="20250214 15:01:38.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:38.077" endtime="20250214 15:01:38.115"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.076" endtime="20250214 15:01:38.115"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.076" endtime="20250214 15:01:38.115"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.065" endtime="20250214 15:01:38.115"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:38.118" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:40.942" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:40.942" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:38.116" endtime="20250214 15:01:40.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:40.942" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:40.942" endtime="20250214 15:01:40.943"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.115" endtime="20250214 15:01:40.943"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:40.945" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:43.603" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:43.603" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:40.943" endtime="20250214 15:01:43.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:43.604" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:43.604" endtime="20250214 15:01:43.604"/>
</kw>
<status status="PASS" starttime="20250214 15:01:40.943" endtime="20250214 15:01:43.604"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:43.607" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:46.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:46.301" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:43.605" endtime="20250214 15:01:46.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:46.302" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:46.302" endtime="20250214 15:01:46.302"/>
</kw>
<status status="PASS" starttime="20250214 15:01:43.604" endtime="20250214 15:01:46.303"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.115" endtime="20250214 15:01:46.303"/>
</kw>
<status status="PASS" starttime="20250214 15:01:38.065" endtime="20250214 15:01:46.303"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:46.303" endtime="20250214 15:01:46.303"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:46.306" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:48.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:48.815" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f9918ab9d16f9a9392a3a2a3d8cd211d95666b7019ec299a4b124942c2939fae</msg>
<status status="PASS" starttime="20250214 15:01:46.304" endtime="20250214 15:01:48.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:48.816" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f9918ab9d16f9a9392a3a2a3d8cd211d95666b7019ec299a4b124942c2939fae</msg>
<status status="PASS" starttime="20250214 15:01:48.816" endtime="20250214 15:01:48.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:48.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:48.816" endtime="20250214 15:01:48.817"/>
</kw>
<status status="PASS" starttime="20250214 15:01:46.304" endtime="20250214 15:01:48.817"/>
</kw>
<msg timestamp="20250214 15:01:48.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:46.304" endtime="20250214 15:01:48.817"/>
</kw>
<status status="PASS" starttime="20250214 15:01:46.303" endtime="20250214 15:01:48.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:48.821" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:48.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:48.871" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:01:48.819" endtime="20250214 15:01:48.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:48.871" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGQB4GQb+ZtEtmzyuq4RFmKyA4k8U+it9oiQhSw4ivfz5LL1UmYXp/2bFGNP74lhmsdLwNvvmFEYAhhHLOUt5pXeIB7QS+xAcBBxrZyaEFa9M/DhHG0R53NtzZqCuLfIv8NtkKvxqXCvXCl+aWhTsFfpJXbIjeFj4I6kvIzNaiYapEh/ReeHv/k10lWzoGgPJfthVi09JZW751+MvYA3FqLK0Z6Kv4g1wiX5LbGjh0vRO4au3WH+wRmMtNGSbgM4Fv9lfuSCIp1kBnzcLcfZsBsaYI3v6F9sJlpwBRwadjYc30LWtD70t5IjvawPnwMaRquylue1s31fjAdlm95Slm6YJ4YVPU9lq135BhW+imHA3B7AIxOrQ2uGdpIHWMIHToAMCARKigcsEgcjdTQqQcJ/njRpZ1hw0ODOuVlwVQa44U51kjFAA93TYpKF8o8xSkVSPMYU6XIQYquUF8G5VhWPySzgzC90zi8OqWs9qRFm0z2NH0lF3n9uBEGPLNn2J3fTOApesXuuTekoAws19L+a7/7WsYwANdRMTAWAr2+58VBd8NeG7qJ0VZUL3eLM/wn1wFZ7eCbPuq02W4KqHSrS9+uce0ffI4ZwLqJcHzkxqM86eqbt21nZ7d1Ef530+psz/0p/8kdxTPNl0+85xZgW2lg==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQmUCqhFfE+rDIckkOTG8EeGzEikIe4wTu3IIwdvRWFm3QrqHuZ4QVJ+8YPlyC4AgxZZEA7mrmCg725vcWHtBxWJ93w==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581308859&amp;s=ueGHC80IIc/IIl7lwbV3WdJzsDXunsT+MISLnllQsFo="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:01:48.871" endtime="20250214 15:01:48.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:48.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:48.872" endtime="20250214 15:01:48.872"/>
</kw>
<status status="PASS" starttime="20250214 15:01:48.818" endtime="20250214 15:01:48.872"/>
</kw>
<msg timestamp="20250214 15:01:48.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:48.818" endtime="20250214 15:01:48.872"/>
</kw>
<msg timestamp="20250214 15:01:48.873" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:01:48.817" endtime="20250214 15:01:48.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:01:48.873" endtime="20250214 15:01:48.873"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:48.876" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:51.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:51.463" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:48.874" endtime="20250214 15:01:51.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:51.464" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:01:51.463" endtime="20250214 15:01:51.464"/>
</kw>
<status status="PASS" starttime="20250214 15:01:48.874" endtime="20250214 15:01:51.464"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:51.467" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:54.024" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:54.024" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:51.464" endtime="20250214 15:01:54.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:54.025" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:54.025" endtime="20250214 15:01:54.025"/>
</kw>
<status status="PASS" starttime="20250214 15:01:51.464" endtime="20250214 15:01:54.025"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:54.028" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:56.850" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:56.850" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:54.026" endtime="20250214 15:01:56.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:56.851" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:56.850" endtime="20250214 15:01:56.851"/>
</kw>
<status status="PASS" starttime="20250214 15:01:54.025" endtime="20250214 15:01:56.851"/>
</kw>
<status status="PASS" starttime="20250214 15:01:48.873" endtime="20250214 15:01:56.851"/>
</kw>
<status status="PASS" starttime="20250214 15:01:48.873" endtime="20250214 15:01:56.851"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:38.065" endtime="20250214 15:01:56.851"/>
</test>
<test id="s1-s1-s18-t3" name="S3 Gateway Generate Secret By Username" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:01:56.853" endtime="20250214 15:01:56.853"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:56.856" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:56.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:56.860" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:01:56.854" endtime="20250214 15:01:56.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:56.861" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:01:56.860" endtime="20250214 15:01:56.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:56.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:56.861" endtime="20250214 15:01:56.861"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.854" endtime="20250214 15:01:56.861"/>
</kw>
<msg timestamp="20250214 15:01:56.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:56.854" endtime="20250214 15:01:56.862"/>
</kw>
<msg timestamp="20250214 15:01:56.862" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:01:56.853" endtime="20250214 15:01:56.862"/>
</kw>
<msg timestamp="20250214 15:01:56.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:56.853" endtime="20250214 15:01:56.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:01:56.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:01:56.862" endtime="20250214 15:01:56.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:56.866" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:56.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:01:56.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:01:56.864" endtime="20250214 15:01:56.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:56.895" level="INFO"/>
<status status="PASS" starttime="20250214 15:01:56.894" endtime="20250214 15:01:56.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:01:56.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:01:56.895" endtime="20250214 15:01:56.895"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.863" endtime="20250214 15:01:56.895"/>
</kw>
<msg timestamp="20250214 15:01:56.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:01:56.863" endtime="20250214 15:01:56.895"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.863" endtime="20250214 15:01:56.895"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.862" endtime="20250214 15:01:56.896"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.853" endtime="20250214 15:01:56.896"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:56.898" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:01:59.711" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:01:59.711" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:56.896" endtime="20250214 15:01:59.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:01:59.712" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:59.712" endtime="20250214 15:01:59.712"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.896" endtime="20250214 15:01:59.712"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:01:59.715" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:02.418" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:02.418" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:01:59.713" endtime="20250214 15:02:02.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:02.419" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:02.418" endtime="20250214 15:02:02.419"/>
</kw>
<status status="PASS" starttime="20250214 15:01:59.713" endtime="20250214 15:02:02.419"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:02.422" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:05.074" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:05.074" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:02.420" endtime="20250214 15:02:05.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:05.075" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:05.075" endtime="20250214 15:02:05.076"/>
</kw>
<status status="PASS" starttime="20250214 15:02:02.419" endtime="20250214 15:02:05.076"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.896" endtime="20250214 15:02:05.076"/>
</kw>
<status status="PASS" starttime="20250214 15:01:56.852" endtime="20250214 15:02:05.076"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:05.076" endtime="20250214 15:02:05.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:05.079" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:05.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:05.116" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:05.077" endtime="20250214 15:02:05.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:05.117" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGSBbD/x65vF3Ass8tlE9LGoJbZu9axURGLqz3/5UaIhqLfCjKNgtwpqBM34dosFBGmQtv8Zus0+KNX3nO6GOn/PQOqT0D7rwWC1v8MZA530nVmJh9rr6oQWIwGfaeQ8Uxy1lMw6xJtORkA4lNzGJpxNLKm7A7vChunW5TRGMbgqHmYL1P+7xOjT5GslVeAhTqk2QcyoZ0PhnIL3d91MOzwptTCwyrnSiYsvsxM7yMmgHSeYJhwg6y7GxVphQgy0DFCSp8OrxdxkKC5XZk+FgVsMZ2EZQTj0C5MH2RmCqkgLe9DL2xOnegfzPwnosCVNCNVkPTvHQSGtxIpdPF1EEMh9wAatf3XqO75Q15U+4av31jVvEd7j+WGBNpIHWMIHToAMCARKigcsEgcjmPmhoKa8Y2ew9XOYZiIDTV4cnDUpPqjXCVVHOvziyV5se943as1JLWkShuHOSrvTgNGaeDvmvKhvKZQiy61hf4MhnPDr380GiTHl4goHa1UCGwuhDQEnQAocOQCvTsoQ/3NAqie6L10VeA2v+3+rxNZzRoRWLyV4nf42Gf8QYHxjTGKo2OAGA+MNQu9uz0uRbRo4yio9jDRHa+mnmv+csQA5Xm/ICZ2pPPh3H4FDAVcwMhzm2XfE2LXjYgohm8vDaEeZ8d59reQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:02:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:02:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQj5V3reUqM6ENiRc+HfmbqhO0qnYyWlFAUH/i7kjc5hTE5/qjsniVHSwPwjad/54JMVjuDT/cT9si0nUegSDBAP8Pg==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581325107&amp;s=RZa4/2KES2zZqYDY6gKnq/ObAXh3OIHd0Bf1MFpPM6Y="; HttpOnly
&lt; Content-Length: 200
&lt; 
{ [200 bytes data]

100   200  100   200    0     0   7142      0 --:--:-- --:--:-- --:--:--  7142
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser&lt;/awsAccessKey&gt;&lt;awsSecret&gt;46a3635fd832d8e58cc617407f836cc0fad61e0061fd8bb701ca939cbf081314&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250214 15:02:05.116" endtime="20250214 15:02:05.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:05.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:05.117" endtime="20250214 15:02:05.118"/>
</kw>
<status status="PASS" starttime="20250214 15:02:05.077" endtime="20250214 15:02:05.118"/>
</kw>
<msg timestamp="20250214 15:02:05.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:05.077" endtime="20250214 15:02:05.118"/>
</kw>
<msg timestamp="20250214 15:02:05.118" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:05.076" endtime="20250214 15:02:05.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:02:05.118" endtime="20250214 15:02:05.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:02:05.119" endtime="20250214 15:02:05.119"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:05.124" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:07.728" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:07.728" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:05.121" endtime="20250214 15:02:07.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:07.729" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:07.728" endtime="20250214 15:02:07.729"/>
</kw>
<status status="PASS" starttime="20250214 15:02:05.120" endtime="20250214 15:02:07.729"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:07.732" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:10.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:10.360" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:02:07.729" endtime="20250214 15:02:10.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:10.361" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:02:10.360" endtime="20250214 15:02:10.361"/>
</kw>
<status status="PASS" starttime="20250214 15:02:07.729" endtime="20250214 15:02:10.361"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:10.364" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:13.108" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:13.108" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:10.361" endtime="20250214 15:02:13.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:13.108" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:13.108" endtime="20250214 15:02:13.109"/>
</kw>
<status status="PASS" starttime="20250214 15:02:10.361" endtime="20250214 15:02:13.109"/>
</kw>
<status status="PASS" starttime="20250214 15:02:05.120" endtime="20250214 15:02:13.109"/>
</kw>
<status status="PASS" starttime="20250214 15:02:05.120" endtime="20250214 15:02:13.109"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:01:56.852" endtime="20250214 15:02:13.109"/>
</test>
<test id="s1-s1-s18-t4" name="S3 Gateway Generate Secret By Username For Other User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:13.110" endtime="20250214 15:02:13.111"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:13.114" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:13.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:13.118" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:02:13.112" endtime="20250214 15:02:13.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:13.118" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:02:13.118" endtime="20250214 15:02:13.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:13.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:13.119" endtime="20250214 15:02:13.119"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.111" endtime="20250214 15:02:13.119"/>
</kw>
<msg timestamp="20250214 15:02:13.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:13.111" endtime="20250214 15:02:13.119"/>
</kw>
<msg timestamp="20250214 15:02:13.119" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:02:13.111" endtime="20250214 15:02:13.119"/>
</kw>
<msg timestamp="20250214 15:02:13.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:13.111" endtime="20250214 15:02:13.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:02:13.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:13.120" endtime="20250214 15:02:13.120"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:13.123" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:13.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:13.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:02:13.121" endtime="20250214 15:02:13.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:13.151" level="INFO"/>
<status status="PASS" starttime="20250214 15:02:13.151" endtime="20250214 15:02:13.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:13.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:13.151" endtime="20250214 15:02:13.152"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.121" endtime="20250214 15:02:13.152"/>
</kw>
<msg timestamp="20250214 15:02:13.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:13.121" endtime="20250214 15:02:13.152"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.120" endtime="20250214 15:02:13.152"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.120" endtime="20250214 15:02:13.152"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.110" endtime="20250214 15:02:13.152"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:13.155" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:15.762" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:15.762" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:13.153" endtime="20250214 15:02:15.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:15.763" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:15.763" endtime="20250214 15:02:15.763"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.153" endtime="20250214 15:02:15.763"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:15.767" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:18.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:18.449" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:15.764" endtime="20250214 15:02:18.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:18.450" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:18.449" endtime="20250214 15:02:18.450"/>
</kw>
<status status="PASS" starttime="20250214 15:02:15.764" endtime="20250214 15:02:18.450"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:18.453" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:21.175" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:21.175" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:18.450" endtime="20250214 15:02:21.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:21.176" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:21.175" endtime="20250214 15:02:21.176"/>
</kw>
<status status="PASS" starttime="20250214 15:02:18.450" endtime="20250214 15:02:21.176"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.152" endtime="20250214 15:02:21.176"/>
</kw>
<status status="PASS" starttime="20250214 15:02:13.110" endtime="20250214 15:02:21.176"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:21.176" endtime="20250214 15:02:21.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:21.179" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:21.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:21.219" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:21.177" endtime="20250214 15:02:21.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:21.220" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGS/vkOUqYZc3PfwXsgwCNURf7oaPRYW14ZJ2Y/IJQUWgrDWVpcyKnYuFR2Fbun01HpTdtf9IRVHEOIpNxO4iZqUaqWaRnt6uvnxLbbscPn1YeHg2WXJL2+g0YnWdpwQktu4kKBZhfq/ZOIYNXSIKPAm+PWh/p2P+NqxR+7eCxsamAzZhXKdNFj5LSTqa1TmKyWtYemGEHe8KaezfGN0D9+6UIZbA0mma1mey1ih7m6dxuZvJuyDPuFXFUDPvd19rp3/NZaISNOk9aO1RrflnrmraGgMpZ82eip1JTYGCueLBHnqHGRnmC/tDRFfCNBissyWG+/1+7hAPJJN1DB/j5U/uIG9iC5gd3aooIgGcCpZAoIwtDziF5S4PpIHWMIHToAMCARKigcsEgcjDFZTq2bKDhgvdom83oDEIA/rsH9/YFo3CZLNdlogOwQdA5iDxeRPeizCzK28+Z9PQcEOOpzJClWyTJSH9b3ikLKbHSj85QDDkw1cvPt8vPaFlB5xEGBWY8uYt+usJwvHzgOtob1FKn8zD1Up16YNscJYdMbV4inkfv/ggRv9UGBGKy3v2tkZs1VuQPvtvj1TQYwiQtFPEHKVnyD4ryDW+jwMeNW3OIhMSDuXxWhPyTH6apHiVbm5bG6atVq+ZryAJivRKcb6Xag==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:02:21 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:02:21 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQks7uDe5z4RlT01AVhwcGtsIUxVoxOjEQv8YFCuhyzRVUYYOvKYRZqLibw7Ia1MfVDjkobKGbcaPwkk8RZAhIeOt/Q==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581341210&amp;s=uIwMz4eNmLThj+JC5dpEp68RO/UbaxQaXmTsSqrdNhA="; HttpOnly
&lt; Content-Length: 201
&lt; 
{ [201 bytes data]

100   201  100   201    0     0   6483      0 --:--:-- --:--:-- --:--:--  6483
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser2&lt;/awsAccessKey&gt;&lt;awsSecret&gt;87cc8fd3caebb674f28b75151725b9c6219e30b8795b50e2624ef978930ae911&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250214 15:02:21.219" endtime="20250214 15:02:21.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:21.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:21.220" endtime="20250214 15:02:21.220"/>
</kw>
<status status="PASS" starttime="20250214 15:02:21.177" endtime="20250214 15:02:21.221"/>
</kw>
<msg timestamp="20250214 15:02:21.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:21.177" endtime="20250214 15:02:21.221"/>
</kw>
<msg timestamp="20250214 15:02:21.221" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:21.176" endtime="20250214 15:02:21.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:02:21.221" endtime="20250214 15:02:21.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:02:21.222" endtime="20250214 15:02:21.222"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:21.225" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:24.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:24.010" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:21.223" endtime="20250214 15:02:24.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:24.011" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:24.010" endtime="20250214 15:02:24.011"/>
</kw>
<status status="PASS" starttime="20250214 15:02:21.223" endtime="20250214 15:02:24.011"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:24.014" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:26.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:26.473" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:24.011" endtime="20250214 15:02:26.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:26.474" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:26.474" endtime="20250214 15:02:26.474"/>
</kw>
<status status="PASS" starttime="20250214 15:02:24.011" endtime="20250214 15:02:26.474"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:26.477" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:29.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:29.153" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:02:26.475" endtime="20250214 15:02:29.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:29.154" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:02:29.153" endtime="20250214 15:02:29.154"/>
</kw>
<status status="PASS" starttime="20250214 15:02:26.475" endtime="20250214 15:02:29.154"/>
</kw>
<status status="PASS" starttime="20250214 15:02:21.222" endtime="20250214 15:02:29.154"/>
</kw>
<status status="PASS" starttime="20250214 15:02:21.222" endtime="20250214 15:02:29.154"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:02:13.109" endtime="20250214 15:02:29.154"/>
</test>
<test id="s1-s1-s18-t5" name="S3 Gateway Reject Secret Generation By Non-admin User" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:29.156" endtime="20250214 15:02:29.156"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:29.160" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:29.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:29.164" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:02:29.157" endtime="20250214 15:02:29.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:29.165" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:02:29.164" endtime="20250214 15:02:29.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:29.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:29.165" endtime="20250214 15:02:29.165"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.157" endtime="20250214 15:02:29.165"/>
</kw>
<msg timestamp="20250214 15:02:29.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:29.157" endtime="20250214 15:02:29.165"/>
</kw>
<msg timestamp="20250214 15:02:29.166" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:02:29.156" endtime="20250214 15:02:29.166"/>
</kw>
<msg timestamp="20250214 15:02:29.166" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:29.156" endtime="20250214 15:02:29.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:02:29.166" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:29.166" endtime="20250214 15:02:29.166"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:29.170" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:29.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:29.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:02:29.168" endtime="20250214 15:02:29.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:29.193" level="INFO"/>
<status status="PASS" starttime="20250214 15:02:29.192" endtime="20250214 15:02:29.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:29.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:29.193" endtime="20250214 15:02:29.193"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.167" endtime="20250214 15:02:29.193"/>
</kw>
<msg timestamp="20250214 15:02:29.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:29.167" endtime="20250214 15:02:29.194"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.167" endtime="20250214 15:02:29.194"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.166" endtime="20250214 15:02:29.194"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.155" endtime="20250214 15:02:29.194"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:29.197" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:31.747" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:31.747" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:29.195" endtime="20250214 15:02:31.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:31.748" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:31.748" endtime="20250214 15:02:31.748"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.194" endtime="20250214 15:02:31.748"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:31.751" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:34.522" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:34.522" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:31.749" endtime="20250214 15:02:34.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:34.523" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:34.522" endtime="20250214 15:02:34.523"/>
</kw>
<status status="PASS" starttime="20250214 15:02:31.748" endtime="20250214 15:02:34.523"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:34.526" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:37.257" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:37.257" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:34.523" endtime="20250214 15:02:37.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:37.258" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:37.258" endtime="20250214 15:02:37.258"/>
</kw>
<status status="PASS" starttime="20250214 15:02:34.523" endtime="20250214 15:02:37.258"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.194" endtime="20250214 15:02:37.258"/>
</kw>
<status status="PASS" starttime="20250214 15:02:29.155" endtime="20250214 15:02:37.258"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:37.259" endtime="20250214 15:02:37.259"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:37.259" endtime="20250214 15:02:37.260"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:37.263" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:37.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:37.267" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:02:37.261" endtime="20250214 15:02:37.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:37.268" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:02:37.268" endtime="20250214 15:02:37.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:37.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:37.268" endtime="20250214 15:02:37.268"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.260" endtime="20250214 15:02:37.269"/>
</kw>
<msg timestamp="20250214 15:02:37.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:37.260" endtime="20250214 15:02:37.269"/>
</kw>
<msg timestamp="20250214 15:02:37.269" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:02:37.260" endtime="20250214 15:02:37.269"/>
</kw>
<msg timestamp="20250214 15:02:37.269" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:37.260" endtime="20250214 15:02:37.269"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:02:37.269" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:37.269" endtime="20250214 15:02:37.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:37.273" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:37.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:37.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:02:37.271" endtime="20250214 15:02:37.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:37.302" level="INFO"/>
<status status="PASS" starttime="20250214 15:02:37.302" endtime="20250214 15:02:37.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:37.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:37.303" endtime="20250214 15:02:37.303"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.270" endtime="20250214 15:02:37.303"/>
</kw>
<msg timestamp="20250214 15:02:37.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:37.270" endtime="20250214 15:02:37.303"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.270" endtime="20250214 15:02:37.303"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.269" endtime="20250214 15:02:37.303"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.259" endtime="20250214 15:02:37.303"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.259" endtime="20250214 15:02:37.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:37.307" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:37.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:37.355" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:37.304" endtime="20250214 15:02:37.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:37.356" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBBxTnvhN+q/YjK5Ca2pH8e5kemBrwoHgQWi7UMF+7Vr2wLUJGZDrG6pbqfeMMECkhdqYVOcbfwFeUcF6l9jLL0t17U0zdG0m0RatMyilQma0P+Sua9wsL4EiRlM932gMZY+iLE6Km+8nIVlrjjt2XJryyEvk1GZrS4/FsixtD+WkuYFVB8MFPR3N1mmOKUZ0r/qjGGUbGBknGxGhOuwaML7TEIjUf0yM61a1Vqhjhox4HN6oCGl1WuZA2xtTnOf3MyZhZR/KdwY8uxHW9ct3EF/U0bPOz8oamwflseR5tYBQDNtv+ND03DLgb6jsB12gDrNGQ3rreRNzvHJ4ZY5V+FXaM5FnStsIWpIHXMIHUoAMCARKigcwEgclyT0o/ejdLpy++ZOMRPCW7CcnnnJ+kzKEbPywCGBBM8GHcr/Da/GVOQzIgSoCuHN7D/axKpESRftVEe0YfGisK00/TCMClA3Oe/t524ME0YPlkeDkMFY6B3jWP0Y1m58BlxfFNZHfrDZxObUKBjLP424lsjSuGdfs3MM55t935yXtR93zokLH2mm2QKSDNvLRZNaFxMy25UbdHE1+4EqVYkio1Y8+Hq/9tz45aeJ9Y09gmFk5khjlzHrk7A8uQbqwwI504APu7WLI=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQp2kAkMMp2SBY2SyLh/FYFoTzlHRWsCZFgicXfUk1ZJ6MUaaQomDw1xnK+SvXqjBHYV+OnJjWphiGVdOCMfRJDkAlg==
&lt; Set-Cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581357330&amp;s=hPn0Gn9SuHj0jXaShWVTWKSxwPHIvdsm686V986vxAY="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:02:37.355" endtime="20250214 15:02:37.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:37.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:37.356" endtime="20250214 15:02:37.356"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.304" endtime="20250214 15:02:37.357"/>
</kw>
<msg timestamp="20250214 15:02:37.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:37.304" endtime="20250214 15:02:37.357"/>
</kw>
<msg timestamp="20250214 15:02:37.357" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:37.304" endtime="20250214 15:02:37.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:02:37.357" endtime="20250214 15:02:37.357"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:37.361" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:40.128" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:40.128" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:37.358" endtime="20250214 15:02:40.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:40.129" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:40.128" endtime="20250214 15:02:40.129"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.358" endtime="20250214 15:02:40.129"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:40.131" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:42.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:42.626" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250214 15:02:40.129" endtime="20250214 15:02:42.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:42.627" level="INFO">USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250214 15:02:42.626" endtime="20250214 15:02:42.627"/>
</kw>
<status status="PASS" starttime="20250214 15:02:40.129" endtime="20250214 15:02:42.627"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:42.630" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:45.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:45.209" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250214 15:02:42.627" endtime="20250214 15:02:45.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:45.209" level="INFO">USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250214 15:02:45.209" endtime="20250214 15:02:45.209"/>
</kw>
<status status="PASS" starttime="20250214 15:02:42.627" endtime="20250214 15:02:45.210"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.358" endtime="20250214 15:02:45.210"/>
</kw>
<status status="PASS" starttime="20250214 15:02:37.358" endtime="20250214 15:02:45.210"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:02:29.155" endtime="20250214 15:02:45.210"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20250214 15:01:22.131" endtime="20250214 15:02:45.211"/>
</suite>
<suite id="s1-s1-s19" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s1-s19-t1" name="S3 Gateway Revoke Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:45.221" endtime="20250214 15:02:45.221"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:45.224" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:45.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:45.228" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:02:45.222" endtime="20250214 15:02:45.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:45.229" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:02:45.228" endtime="20250214 15:02:45.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:45.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:45.229" endtime="20250214 15:02:45.229"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.222" endtime="20250214 15:02:45.230"/>
</kw>
<msg timestamp="20250214 15:02:45.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:45.222" endtime="20250214 15:02:45.230"/>
</kw>
<msg timestamp="20250214 15:02:45.230" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:02:45.221" endtime="20250214 15:02:45.230"/>
</kw>
<msg timestamp="20250214 15:02:45.230" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:45.221" endtime="20250214 15:02:45.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:02:45.230" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:45.230" endtime="20250214 15:02:45.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:45.234" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:45.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:45.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:02:45.232" endtime="20250214 15:02:45.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:45.261" level="INFO"/>
<status status="PASS" starttime="20250214 15:02:45.261" endtime="20250214 15:02:45.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:45.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:45.261" endtime="20250214 15:02:45.262"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.231" endtime="20250214 15:02:45.262"/>
</kw>
<msg timestamp="20250214 15:02:45.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:45.231" endtime="20250214 15:02:45.262"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.231" endtime="20250214 15:02:45.262"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.231" endtime="20250214 15:02:45.262"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.221" endtime="20250214 15:02:45.262"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:45.265" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:47.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:47.708" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:45.263" endtime="20250214 15:02:47.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:47.708" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:47.708" endtime="20250214 15:02:47.708"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.263" endtime="20250214 15:02:47.709"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:47.711" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:50.285" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:50.285" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:47.709" endtime="20250214 15:02:50.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:50.286" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:50.285" endtime="20250214 15:02:50.286"/>
</kw>
<status status="PASS" starttime="20250214 15:02:47.709" endtime="20250214 15:02:50.286"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:50.289" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:52.930" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:52.930" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:50.286" endtime="20250214 15:02:52.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:52.931" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:52.930" endtime="20250214 15:02:52.931"/>
</kw>
<status status="PASS" starttime="20250214 15:02:50.286" endtime="20250214 15:02:52.931"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.262" endtime="20250214 15:02:52.931"/>
</kw>
<status status="PASS" starttime="20250214 15:02:45.220" endtime="20250214 15:02:52.931"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:52.931" endtime="20250214 15:02:52.932"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:52.935" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:55.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:55.559" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=66afcbabaebdacc0df946507494d8dd9f5812609cecf761de6017878ed9f4bf2</msg>
<status status="PASS" starttime="20250214 15:02:52.933" endtime="20250214 15:02:55.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:55.560" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=66afcbabaebdacc0df946507494d8dd9f5812609cecf761de6017878ed9f4bf2</msg>
<status status="PASS" starttime="20250214 15:02:55.560" endtime="20250214 15:02:55.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:55.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:55.560" endtime="20250214 15:02:55.561"/>
</kw>
<status status="PASS" starttime="20250214 15:02:52.932" endtime="20250214 15:02:55.561"/>
</kw>
<msg timestamp="20250214 15:02:55.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:52.932" endtime="20250214 15:02:55.561"/>
</kw>
<status status="PASS" starttime="20250214 15:02:52.932" endtime="20250214 15:02:55.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:55.564" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:55.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:55.597" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:55.562" endtime="20250214 15:02:55.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:55.598" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGdJxYszSFzYstdCKPrVDhL5leXJeFx+GKb9JM8rN6WenebcaOuKBVIp7Dtoyaa8BdGDyMUvk60jOzyatjopvUmW3K7EXRUWM2CJpp7Fj4fSvEaxBNGyO55emB61/WHGmz2dj5Yy4dr2GVTEfVjOhb39gKK1b9dwnQ4ngDtX6uYSHv15/GjYDngEverDrZo2NK/F1y4f6jNzNMlfmgF2eawAX5WThnsMKByUHHXxLT6OE9L12B/iWzvNqI9Z/vjhSiTGcwYGd85D3nJZUfUSZv9IOjI09W+xtqziH2lyJksgCLGSvHvW5NlYLSZAttPqWEybN9Ouw1Rm0yaXeEUFTg5pOb+XbXgMmT9fmCBcF0RD0vU0s95gIyvGopIHWMIHToAMCARKigcsEgciYnTK+YXVW4w/XMv2Hmq7lW9CKv5JygryQWwoD9GYQUthOl1HYRdBe1S25K2vvcBw20ArYKU37Kyjpf00r++LcjU19guhld8Ak1LxYbbmZQSEeGaWPSbIB6MIwcgglEyUhse3TLoPYnAhWY3+0WiN9XRJgYqqEesl0tiqioPmHonhf7N7h4xs+HcjYZNTHSK/TfscvLrJLgNhGweoQ5LA5LWH4+LekijoUm2NzoLhzSSYMzkKc7KAvbNZH3ImQHAtxIq3rLgan/Q==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:02:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:02:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQlg3oHW6B/rAWv5uz9WsYbDwr4NgEP5J837CVYDHPZpKPB5C99rmLq5QRzRDpRGXq/gIPs81Rgx//c2B4DCZVNbu3g==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581375588&amp;s=vSCOUQ8X2S6bm7WInOg/9VKNC+STYBgWzd4ttxsqRYo="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:02:55.598" endtime="20250214 15:02:55.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:55.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:55.598" endtime="20250214 15:02:55.599"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.562" endtime="20250214 15:02:55.599"/>
</kw>
<msg timestamp="20250214 15:02:55.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:55.562" endtime="20250214 15:02:55.599"/>
</kw>
<msg timestamp="20250214 15:02:55.599" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:02:55.561" endtime="20250214 15:02:55.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:02:55.599" endtime="20250214 15:02:55.600"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:02:45.220" endtime="20250214 15:02:55.600"/>
</test>
<test id="s1-s1-s19-t2" name="S3 Gateway Revoke Secret By Username" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:02:55.602" endtime="20250214 15:02:55.602"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:55.606" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:55.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:55.610" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:02:55.603" endtime="20250214 15:02:55.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:55.611" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:02:55.611" endtime="20250214 15:02:55.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:55.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:55.611" endtime="20250214 15:02:55.611"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.603" endtime="20250214 15:02:55.612"/>
</kw>
<msg timestamp="20250214 15:02:55.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:55.602" endtime="20250214 15:02:55.612"/>
</kw>
<msg timestamp="20250214 15:02:55.612" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:02:55.602" endtime="20250214 15:02:55.612"/>
</kw>
<msg timestamp="20250214 15:02:55.612" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:55.602" endtime="20250214 15:02:55.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:02:55.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:02:55.612" endtime="20250214 15:02:55.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:55.616" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:55.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:02:55.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:02:55.614" endtime="20250214 15:02:55.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:55.638" level="INFO"/>
<status status="PASS" starttime="20250214 15:02:55.638" endtime="20250214 15:02:55.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:02:55.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:02:55.638" endtime="20250214 15:02:55.638"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.613" endtime="20250214 15:02:55.639"/>
</kw>
<msg timestamp="20250214 15:02:55.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:02:55.613" endtime="20250214 15:02:55.639"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.613" endtime="20250214 15:02:55.639"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.613" endtime="20250214 15:02:55.639"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.601" endtime="20250214 15:02:55.639"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:55.642" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:02:58.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:02:58.316" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:55.640" endtime="20250214 15:02:58.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:02:58.317" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:58.316" endtime="20250214 15:02:58.317"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.639" endtime="20250214 15:02:58.317"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:02:58.320" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:01.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:01.032" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:02:58.318" endtime="20250214 15:03:01.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:01.032" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:01.032" endtime="20250214 15:03:01.033"/>
</kw>
<status status="PASS" starttime="20250214 15:02:58.317" endtime="20250214 15:03:01.033"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:01.036" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:03.718" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:03.719" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:01.033" endtime="20250214 15:03:03.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:03.719" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:03.719" endtime="20250214 15:03:03.720"/>
</kw>
<status status="PASS" starttime="20250214 15:03:01.033" endtime="20250214 15:03:03.720"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.639" endtime="20250214 15:03:03.720"/>
</kw>
<status status="PASS" starttime="20250214 15:02:55.601" endtime="20250214 15:03:03.720"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:03.720" endtime="20250214 15:03:03.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:03.723" level="INFO">Running command 'ozone s3 getsecret -u testuser  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:06.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:06.263" level="INFO">${output} = awsAccessKey=testuser
awsSecret=ebbc9a764962b0532cf635038cc1ca201311b77d3b9c11d0a9718b03aa85f759</msg>
<status status="PASS" starttime="20250214 15:03:03.721" endtime="20250214 15:03:06.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:06.264" level="INFO">awsAccessKey=testuser
awsSecret=ebbc9a764962b0532cf635038cc1ca201311b77d3b9c11d0a9718b03aa85f759</msg>
<status status="PASS" starttime="20250214 15:03:06.263" endtime="20250214 15:03:06.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:06.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:06.264" endtime="20250214 15:03:06.265"/>
</kw>
<status status="PASS" starttime="20250214 15:03:03.721" endtime="20250214 15:03:06.265"/>
</kw>
<msg timestamp="20250214 15:03:06.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:03.721" endtime="20250214 15:03:06.265"/>
</kw>
<status status="PASS" starttime="20250214 15:03:03.720" endtime="20250214 15:03:06.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:06.269" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:06.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:06.307" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:06.266" endtime="20250214 15:03:06.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:06.308" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGV4GFuzjNyPzfcRwpaRAHYIYuEYn1SEIGTXTynqY0AhynxUDJ7K1Iwq1m0AsuR8VPMJo6uYzxWSKrmxBx6SB/RG+DHbIg4UDgGZpsdXZlEYAtYA2T1mG4Tua52qA7ZXYqc1xTUgjFTn2i3ljBAe7gI0t+rPWv0SAS+wG1D9eJooXZTRrctWb4vkkoN83/zw/6z/HDJsIczpZFyI8mRnNazzaKA7de/eJ6abrBjcPvizHcSfb1qNTg2M5MGTC7zMdg3lQmHn7d/52dMCLbu85V/ChoTo6g3cQReROnB+PgjVvOqTqLbvYIkZ6alIBTp9Pbi5LitLlNWHo8XZ93xCSg3LDakbuj9W7JkB+pvLmq9CqKXYggJ7pbROUpIHWMIHToAMCARKigcsEgcigIPIj18/0g7ExmT/yGOo+otcVgjemyKTu5GyXWy0yzyUUCjWvyd1TxQmcskYTAPvQ82Q+SFzg3HoT/CCQl7Kl8ZDKA0CpEbKCGR0vwAUwbDFmGLHrq376l/HPt5w+zlgQU/n8jxvNXNtyhBW8hqXMHdlz69nMH+lR1B1YP9wpyrWW4dHo2bEIb/6TYEEbe5URjnOFj71FESVuIfhZ4FPoA+DlzLzc9e3r96mkqvqOATBcOwEMPaywFirJFNmmFM7UyaJlsAdXiQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:03:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:03:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQoBueNRspFVuk4/EwUN0dEugNUKAZgc7NAEKUMmlqruJG+p8KGToPlYb6VmEcqB9NOboUAkNdoKoBYfZNuPRfw9GLg==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581386300&amp;s=4JeBwNr32PZ0BGzyAIZ/E7LxxXoCEtzzvODDHSJc86k="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:03:06.308" endtime="20250214 15:03:06.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:06.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:06.309" endtime="20250214 15:03:06.309"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.266" endtime="20250214 15:03:06.309"/>
</kw>
<msg timestamp="20250214 15:03:06.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:06.266" endtime="20250214 15:03:06.309"/>
</kw>
<msg timestamp="20250214 15:03:06.309" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:06.265" endtime="20250214 15:03:06.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:03:06.309" endtime="20250214 15:03:06.310"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:02:55.600" endtime="20250214 15:03:06.310"/>
</test>
<test id="s1-s1-s19-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:06.312" endtime="20250214 15:03:06.312"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:06.315" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:06.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:06.319" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:06.313" endtime="20250214 15:03:06.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:06.320" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:06.319" endtime="20250214 15:03:06.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:06.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:06.320" endtime="20250214 15:03:06.320"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.313" endtime="20250214 15:03:06.320"/>
</kw>
<msg timestamp="20250214 15:03:06.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:06.312" endtime="20250214 15:03:06.320"/>
</kw>
<msg timestamp="20250214 15:03:06.321" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:06.312" endtime="20250214 15:03:06.321"/>
</kw>
<msg timestamp="20250214 15:03:06.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:06.312" endtime="20250214 15:03:06.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:06.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:06.321" endtime="20250214 15:03:06.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:06.324" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:06.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:06.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:06.322" endtime="20250214 15:03:06.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:06.380" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:06.379" endtime="20250214 15:03:06.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:06.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:06.380" endtime="20250214 15:03:06.380"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.322" endtime="20250214 15:03:06.380"/>
</kw>
<msg timestamp="20250214 15:03:06.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:06.322" endtime="20250214 15:03:06.381"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.321" endtime="20250214 15:03:06.381"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.321" endtime="20250214 15:03:06.381"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.311" endtime="20250214 15:03:06.381"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:06.384" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:09.088" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:09.088" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:06.382" endtime="20250214 15:03:09.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:09.089" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:09.089" endtime="20250214 15:03:09.089"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.381" endtime="20250214 15:03:09.089"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:09.093" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:11.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:11.707" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:09.090" endtime="20250214 15:03:11.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:11.708" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:11.707" endtime="20250214 15:03:11.708"/>
</kw>
<status status="PASS" starttime="20250214 15:03:09.089" endtime="20250214 15:03:11.708"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:11.712" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:14.384" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:14.384" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:11.709" endtime="20250214 15:03:14.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:14.385" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:14.384" endtime="20250214 15:03:14.385"/>
</kw>
<status status="PASS" starttime="20250214 15:03:11.708" endtime="20250214 15:03:14.385"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.381" endtime="20250214 15:03:14.385"/>
</kw>
<status status="PASS" starttime="20250214 15:03:06.311" endtime="20250214 15:03:14.385"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:14.385" endtime="20250214 15:03:14.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:14.389" level="INFO">Running command 'ozone s3 getsecret -u testuser2  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:17.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:17.112" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=b469d1be4c9e93a70141c32a7fe1bc6525cced973f77e36381c1cdb18aaf70cb</msg>
<status status="PASS" starttime="20250214 15:03:14.387" endtime="20250214 15:03:17.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:17.112" level="INFO">awsAccessKey=testuser2
awsSecret=b469d1be4c9e93a70141c32a7fe1bc6525cced973f77e36381c1cdb18aaf70cb</msg>
<status status="PASS" starttime="20250214 15:03:17.112" endtime="20250214 15:03:17.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:17.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:17.113" endtime="20250214 15:03:17.113"/>
</kw>
<status status="PASS" starttime="20250214 15:03:14.386" endtime="20250214 15:03:17.113"/>
</kw>
<msg timestamp="20250214 15:03:17.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:14.386" endtime="20250214 15:03:17.113"/>
</kw>
<status status="PASS" starttime="20250214 15:03:14.386" endtime="20250214 15:03:17.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:17.117" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:17.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:17.148" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:17.114" endtime="20250214 15:03:17.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:17.149" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGTkICpevsUohGl7F2dNjQcRaH3oVuHNwGNKh7zJg3WlPx9HKrXMwslNKIN7l7lFPteI6EKdJx8U7osGqX1qNIbzvwEivqLk/lyseJpolgxDNycoZ8G58nQ/7B7jUr/pD3ghtSj3rsZl/CpnsAz6pq/Y5yR1gu8xf41borvwMx/ODkAjxkFl1TMrfgGaV3yeqXVUw6YoNsXkM5uQAoLfuTSD9I7M4addkv4+0OoiTPy/BRc6Yi5sPqpfjI/ViLd7IxYas80zFUmAi4V9ZuelnWKntbBO+Mq/gnwdxJ3N7Rp9wI3WbHNCZVpiGuUHtS+Aluzelbmd4eCr+rCLSaVCskWoHtAvmS8426cFY2O7z2//aUfOQZgty0EBkpIHWMIHToAMCARKigcsEgchNsdfpeLueIDdu2FiGmzLFRjrD2OggEG0qQxfiMBMVnGgsOYaKJ+h+gzs4snaZr6XN69nFuEIq1kakGMlRHLeZZIKX2RU5npprFmg9kkb2m/bsvchN6C9k6apfqonln95RuU51lK5BiA3G2Drg7xbp7QnRbNQTNKPGgSBsnltsG6tTC6s5ROHEVXixtsdjxPNun5fjtA92p7uFAtT+Ni17rbdJFGgq1MzcOVgFpDk/qMzoTXBX3T8+Q+fqkeE6LDutTAhM9O2qDg==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:03:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:03:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQoY5am1Y+70wTkFkDl0IKe0GQbh3SlFqPqT/TDMwjQH0R02UjaAbz4n9QUCq5EN5CLFQKz3APU9ctaV/DBydtsRZtQ==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581397140&amp;s=qnHHH1ewaRe+jNVdI0/0xWZqaxZCkotJhiFSpJvIZfk="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:03:17.149" endtime="20250214 15:03:17.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:17.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:17.149" endtime="20250214 15:03:17.150"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.114" endtime="20250214 15:03:17.150"/>
</kw>
<msg timestamp="20250214 15:03:17.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:17.114" endtime="20250214 15:03:17.150"/>
</kw>
<msg timestamp="20250214 15:03:17.151" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:17.113" endtime="20250214 15:03:17.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:03:17.151" endtime="20250214 15:03:17.151"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:03:06.310" endtime="20250214 15:03:17.151"/>
</test>
<test id="s1-s1-s19-t4" name="S3 Gateway Reject Secret Revoke By Non-admin User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:17.153" endtime="20250214 15:03:17.153"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:17.158" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:17.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:17.162" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:17.155" endtime="20250214 15:03:17.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:17.163" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:17.162" endtime="20250214 15:03:17.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:17.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:17.163" endtime="20250214 15:03:17.163"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.154" endtime="20250214 15:03:17.163"/>
</kw>
<msg timestamp="20250214 15:03:17.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:17.154" endtime="20250214 15:03:17.163"/>
</kw>
<msg timestamp="20250214 15:03:17.164" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:17.154" endtime="20250214 15:03:17.164"/>
</kw>
<msg timestamp="20250214 15:03:17.164" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:17.154" endtime="20250214 15:03:17.164"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:17.164" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:17.164" endtime="20250214 15:03:17.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:17.167" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:17.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:17.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:17.165" endtime="20250214 15:03:17.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:17.196" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:17.195" endtime="20250214 15:03:17.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:17.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:17.196" endtime="20250214 15:03:17.196"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.165" endtime="20250214 15:03:17.196"/>
</kw>
<msg timestamp="20250214 15:03:17.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:17.165" endtime="20250214 15:03:17.197"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.165" endtime="20250214 15:03:17.197"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.164" endtime="20250214 15:03:17.197"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.153" endtime="20250214 15:03:17.197"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:17.200" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:19.950" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:19.950" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:17.198" endtime="20250214 15:03:19.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:19.951" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:19.951" endtime="20250214 15:03:19.951"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.197" endtime="20250214 15:03:19.952"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:19.954" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:22.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:22.664" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:19.952" endtime="20250214 15:03:22.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:22.665" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:22.665" endtime="20250214 15:03:22.665"/>
</kw>
<status status="PASS" starttime="20250214 15:03:19.952" endtime="20250214 15:03:22.665"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:22.668" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.302" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:25.302" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:22.666" endtime="20250214 15:03:25.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.303" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250214 15:03:25.302" endtime="20250214 15:03:25.303"/>
</kw>
<status status="PASS" starttime="20250214 15:03:22.666" endtime="20250214 15:03:25.303"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.197" endtime="20250214 15:03:25.303"/>
</kw>
<status status="PASS" starttime="20250214 15:03:17.152" endtime="20250214 15:03:25.303"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:25.303" endtime="20250214 15:03:25.303"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:25.304" endtime="20250214 15:03:25.304"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.308" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:25.312" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:25.305" endtime="20250214 15:03:25.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.312" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:25.312" endtime="20250214 15:03:25.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:25.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:25.312" endtime="20250214 15:03:25.313"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.305" endtime="20250214 15:03:25.313"/>
</kw>
<msg timestamp="20250214 15:03:25.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:25.305" endtime="20250214 15:03:25.313"/>
</kw>
<msg timestamp="20250214 15:03:25.313" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:25.305" endtime="20250214 15:03:25.313"/>
</kw>
<msg timestamp="20250214 15:03:25.313" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:25.304" endtime="20250214 15:03:25.313"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:25.314" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:25.313" endtime="20250214 15:03:25.314"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.317" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:25.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:25.315" endtime="20250214 15:03:25.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.333" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:25.332" endtime="20250214 15:03:25.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:25.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:25.333" endtime="20250214 15:03:25.333"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.315" endtime="20250214 15:03:25.333"/>
</kw>
<msg timestamp="20250214 15:03:25.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:25.314" endtime="20250214 15:03:25.333"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.314" endtime="20250214 15:03:25.333"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.314" endtime="20250214 15:03:25.333"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.304" endtime="20250214 15:03:25.333"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.304" endtime="20250214 15:03:25.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.337" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:25.373" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:25.335" endtime="20250214 15:03:25.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.374" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBB+vXkuLOIyp0RjF10SrKFVR4GEEc5+AiJkofKgKyM9CnMTdYZs8cHOXZvEvI7bfdsT9gR+r8PP9ADVXD9ISbsjSqv04Vo1ISx7Mc6Wswd4CSwYDSBZwqzi+5tI9h/J56L7mamQFt6ctnByMZa73pkcETsUuv4WjYlzN/sl/8sip4BHlmaB1vTXr/m1SdEdUEQzXvMSNkFvi4zdLmXd4VqMPaxwRj+/DfQjkrzPApLDEIYKA7XOYRRYTP+sfIJs20ZDN62JdW5z40Kl7n/gnbCI4Fyu2BgOq9TDqWeeswJ6Bx5yYbU+M+cICnP3+OOh4jRED/th/6DRKzY1bx8a0Gb6JnxDj1be+HpIHXMIHUoAMCARKigcwEgcmGn+tklHmD4Q3DECNsJRflrktYIyqAwNdO/KOhSRTRNMVXrx3UJNiVMcspF08yToah7GDt+YFFfWlLqdjuUhVPWrBo1Js3lW66gLzn+MKRH7C4ziZGiBjHtV7iMc+SFgKH00cVYzmzMwT+tG4g9aaE3KLHWkBlSl7lUdR6c4Frs9yfANtA62C3JEcoL3A/jOniUDwdL4aE5lE9OHVNC/s6xUxVg+TQssmNcrDrpTB4DzQMSKnslZfEI8tdK5vB8eRlwjWyzcCJlWQ=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQl4yPV1z1VrPk6ynaM/IHxwXVVc2yoiJHjnnsoOboN2fSLNx7FWRvOe+lwyLaqkoZmWtsZEyu5djiOKYygRansZXVg==
&lt; Set-Cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581405369&amp;s=ePfiou0X73gh6noE2pqmkpzo3UZlHLs/SiUJyS2zWTQ="; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250214 15:03:25.373" endtime="20250214 15:03:25.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:25.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:25.374" endtime="20250214 15:03:25.374"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.334" endtime="20250214 15:03:25.374"/>
</kw>
<msg timestamp="20250214 15:03:25.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:25.334" endtime="20250214 15:03:25.374"/>
</kw>
<msg timestamp="20250214 15:03:25.375" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:25.334" endtime="20250214 15:03:25.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:03:25.375" endtime="20250214 15:03:25.375"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:03:17.152" endtime="20250214 15:03:25.375"/>
</test>
<kw name="Setup v4 headers" library="commonawslib" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:25.377" endtime="20250214 15:03:25.377"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.381" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:25.385" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:25.378" endtime="20250214 15:03:25.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.385" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:25.385" endtime="20250214 15:03:25.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:25.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:25.385" endtime="20250214 15:03:25.386"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.378" endtime="20250214 15:03:25.386"/>
</kw>
<msg timestamp="20250214 15:03:25.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:25.378" endtime="20250214 15:03:25.386"/>
</kw>
<msg timestamp="20250214 15:03:25.386" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:25.377" endtime="20250214 15:03:25.386"/>
</kw>
<msg timestamp="20250214 15:03:25.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:25.377" endtime="20250214 15:03:25.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:25.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:25.387" endtime="20250214 15:03:25.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.390" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:25.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:25.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:25.388" endtime="20250214 15:03:25.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:25.411" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:25.410" endtime="20250214 15:03:25.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:25.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:25.411" endtime="20250214 15:03:25.411"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.388" endtime="20250214 15:03:25.411"/>
</kw>
<msg timestamp="20250214 15:03:25.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:25.387" endtime="20250214 15:03:25.411"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.387" endtime="20250214 15:03:25.411"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.387" endtime="20250214 15:03:25.411"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.377" endtime="20250214 15:03:25.412"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.376" endtime="20250214 15:03:25.412"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:25.415" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:28.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:28.198" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973</msg>
<status status="PASS" starttime="20250214 15:03:25.412" endtime="20250214 15:03:28.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:28.199" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973</msg>
<status status="PASS" starttime="20250214 15:03:28.198" endtime="20250214 15:03:28.199"/>
</kw>
<msg timestamp="20250214 15:03:28.199" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973</msg>
<status status="PASS" starttime="20250214 15:03:25.412" endtime="20250214 15:03:28.199"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250214 15:03:28.200" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250214 15:03:28.199" endtime="20250214 15:03:28.200"/>
</kw>
<msg timestamp="20250214 15:03:28.200" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250214 15:03:28.199" endtime="20250214 15:03:28.200"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 15:03:28.200" endtime="20250214 15:03:28.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 15:03:28.200" endtime="20250214 15:03:28.200"/>
</kw>
<status status="NOT RUN" starttime="20250214 15:03:28.200" endtime="20250214 15:03:28.200"/>
</branch>
<status status="PASS" starttime="20250214 15:03:28.200" endtime="20250214 15:03:28.200"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 15:03:28.201" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 15:03:28.200" endtime="20250214 15:03:28.201"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250214 15:03:28.201" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 15:03:28.201" endtime="20250214 15:03:28.201"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 15:03:28.201" level="INFO">${secret} = ['b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973']</msg>
<status status="PASS" starttime="20250214 15:03:28.201" endtime="20250214 15:03:28.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:28.202" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:28.202" endtime="20250214 15:03:28.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:28.203" level="INFO">${secret} = b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973</msg>
<status status="PASS" starttime="20250214 15:03:28.202" endtime="20250214 15:03:28.203"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:28.206" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:28.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:28.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:28.204" endtime="20250214 15:03:28.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:28.553" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:28.552" endtime="20250214 15:03:28.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:28.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:28.553" endtime="20250214 15:03:28.553"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.204" endtime="20250214 15:03:28.553"/>
</kw>
<msg timestamp="20250214 15:03:28.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:28.203" endtime="20250214 15:03:28.553"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.203" endtime="20250214 15:03:28.553"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:28.557" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:28.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:28.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:28.555" endtime="20250214 15:03:28.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:28.910" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:28.910" endtime="20250214 15:03:28.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:28.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:28.910" endtime="20250214 15:03:28.911"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.555" endtime="20250214 15:03:28.911"/>
</kw>
<msg timestamp="20250214 15:03:28.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:28.554" endtime="20250214 15:03:28.911"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.554" endtime="20250214 15:03:28.911"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:28.914" level="INFO">Running command 'aws configure set aws_secret_access_key b3bf112b09784d7b98cbf721a8a863ba2fdd14bd6a2cb69d364c6de44ae86973 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:29.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:29.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:28.912" endtime="20250214 15:03:29.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:29.258" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:29.258" endtime="20250214 15:03:29.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:29.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:29.258" endtime="20250214 15:03:29.258"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.912" endtime="20250214 15:03:29.258"/>
</kw>
<msg timestamp="20250214 15:03:29.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:28.911" endtime="20250214 15:03:29.259"/>
</kw>
<status status="PASS" starttime="20250214 15:03:28.911" endtime="20250214 15:03:29.259"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:29.262" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:29.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:29.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:29.260" endtime="20250214 15:03:29.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:29.597" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:29.596" endtime="20250214 15:03:29.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:29.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:29.597" endtime="20250214 15:03:29.597"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.259" endtime="20250214 15:03:29.597"/>
</kw>
<msg timestamp="20250214 15:03:29.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:29.259" endtime="20250214 15:03:29.598"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.259" endtime="20250214 15:03:29.598"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:29.601" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:29.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:29.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:29.599" endtime="20250214 15:03:29.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:29.941" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:29.941" endtime="20250214 15:03:29.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:29.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:29.942" endtime="20250214 15:03:29.942"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.598" endtime="20250214 15:03:29.942"/>
</kw>
<msg timestamp="20250214 15:03:29.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:29.598" endtime="20250214 15:03:29.942"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.598" endtime="20250214 15:03:29.942"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.412" endtime="20250214 15:03:29.942"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.412" endtime="20250214 15:03:29.942"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 15:03:29.943" endtime="20250214 15:03:29.943"/>
</kw>
<status status="PASS" starttime="20250214 15:03:25.376" endtime="20250214 15:03:29.943"/>
</kw>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20250214 15:02:45.212" endtime="20250214 15:03:29.943"/>
</suite>
<suite id="s1-s1-s20" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 15:03:29.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:29.952" endtime="20250214 15:03:29.952"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.952" endtime="20250214 15:03:29.952"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.952" endtime="20250214 15:03:29.952"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.953"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.952" endtime="20250214 15:03:29.953"/>
</kw>
<test id="s1-s1-s20-t1" name="Check web UI" line="33">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${S3G_WEB_UI}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:29.957" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:19878 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:29.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:29.993" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:29.954" endtime="20250214 15:03:29.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:29.994" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.2:19878...
* Connected to s3g (172.19.0.2) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGYmHQP8BSGvHj3LXPZp1Zgy7d0UOL1NUmJQu39KsFKcgjn57bdPqQ6SyVt3UXxApoyk/hWxUuIgPTdPQPqkwXqZ04NdONptBW9mWsqK4QwiTt86VvnyBdqoyrJ5sw7qFlkUBX2FmeO9l9ttsAJ2Ka29AMCbDsOo3uvAzcD9Ob3txiN+fsZLLgApNHSilYnnbCPU13/nDhYnbmXBfGxh82Hnn0psizYQp11Tbq+XrgK9HaWJmbmXU38azIgm1l37AkIR1bssGWEuC/Y30LqoFaOwfRFmBMa0fWIXQADO01a2tF+9O5LWSp5qrxcMhdKt0czdHRi+j/lDYVNwHNEQeL5mzUWWOYa+OEvPCLGB244TbeXevFKoVmcZhpIHWMIHToAMCARKigcsEgch7FxCXywyParaN49rC99OoPAg9P/+0xZl5eBoz8pGIDv0Rxp52j9LT9RwnbyYYaCZM0UG8Es3fGAd3h4IJGS9sZBCjFQtDdGrp5kWHaayKKdqqmbjg/tJ2PL4VaR9lrqfUGrLscANPgXh6gJl/QCRSh0/tjaGaE9cSfQso6slwRjrCTUXmd7hRhbycFWyOKh8UH5pYy8tbNRJZkitdmczTL9ki1qeKIP7du8CcpbIPsha0PwoiA/lPAIuXgQQPDCDFr1MjLLl0sg==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 15:03:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 15:03:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQmdwOfPQG9FVxS0onx49u+XeTRn32Z0KBuWq6POXL4j2wtBokINzerXEsr2Bj3U1Z4HgzMUBk/q1JaXwvIEdIH/5QA==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1739581409985&amp;s=DHiAczgs/qFUcLPkCKo9K3wy8a+uyZfO8U34BhIN1Zs="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 01 Jan 2023 00:00:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2761
&lt; 
{ [2761 bytes data]

100  2761  100  2761    0     0  98607      0 --:--:-- --:--:-- --:--:-- 98607
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="static/bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="static/hadoop.css" rel="stylesheet"&gt;
    &lt;link href="static/ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="static/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;For more information, please check the &lt;a href="static/docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="static/jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="static/bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20250214 15:03:29.993" endtime="20250214 15:03:29.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:29.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:29.994" endtime="20250214 15:03:29.994"/>
</kw>
<status status="PASS" starttime="20250214 15:03:29.954" endtime="20250214 15:03:29.995"/>
</kw>
<msg timestamp="20250214 15:03:29.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:29.954" endtime="20250214 15:03:29.995"/>
</kw>
<msg timestamp="20250214 15:03:29.995" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 15:03:29.954" endtime="20250214 15:03:29.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:03:29.995" endtime="20250214 15:03:29.995"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 15:03:29.953" endtime="20250214 15:03:29.996"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20250214 15:03:29.944" endtime="20250214 15:03:29.996"/>
</suite>
<status status="PASS" starttime="20250214 14:58:01.942" endtime="20250214 15:03:30.000"/>
</suite>
<suite id="s1-s2" name="Rewrite" source="/opt/hadoop/smoketest/ec/rewrite.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:30.601" endtime="20250214 15:03:30.602"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:30.604" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:30.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:30.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:30.602" endtime="20250214 15:03:30.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:30.609" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:30.608" endtime="20250214 15:03:30.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:30.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:30.609" endtime="20250214 15:03:30.609"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.602" endtime="20250214 15:03:30.609"/>
</kw>
<msg timestamp="20250214 15:03:30.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:30.602" endtime="20250214 15:03:30.609"/>
</kw>
<msg timestamp="20250214 15:03:30.610" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:30.602" endtime="20250214 15:03:30.610"/>
</kw>
<msg timestamp="20250214 15:03:30.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:30.602" endtime="20250214 15:03:30.610"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:30.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:30.610" endtime="20250214 15:03:30.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:30.613" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:30.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:30.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:30.611" endtime="20250214 15:03:30.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:30.634" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:30.634" endtime="20250214 15:03:30.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:30.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:30.634" endtime="20250214 15:03:30.635"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.611" endtime="20250214 15:03:30.635"/>
</kw>
<msg timestamp="20250214 15:03:30.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:30.611" endtime="20250214 15:03:30.635"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.610" endtime="20250214 15:03:30.635"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.610" endtime="20250214 15:03:30.635"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.601" endtime="20250214 15:03:30.635"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.601" endtime="20250214 15:03:30.635"/>
</kw>
<test id="s1-s2-t1" name="Rewrite Multipart Key" line="33">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:03:30.636" endtime="20250214 15:03:30.636"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:30.639" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:30.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:30.643" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:03:30.638" endtime="20250214 15:03:30.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:30.644" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:03:30.643" endtime="20250214 15:03:30.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:30.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:30.644" endtime="20250214 15:03:30.644"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.637" endtime="20250214 15:03:30.644"/>
</kw>
<msg timestamp="20250214 15:03:30.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:30.637" endtime="20250214 15:03:30.644"/>
</kw>
<msg timestamp="20250214 15:03:30.644" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:03:30.637" endtime="20250214 15:03:30.644"/>
</kw>
<msg timestamp="20250214 15:03:30.644" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:30.637" endtime="20250214 15:03:30.644"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:03:30.645" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:30.645" endtime="20250214 15:03:30.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:30.648" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:30.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:30.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:30.646" endtime="20250214 15:03:30.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:30.675" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:30.674" endtime="20250214 15:03:30.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:30.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:30.675" endtime="20250214 15:03:30.675"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.646" endtime="20250214 15:03:30.675"/>
</kw>
<msg timestamp="20250214 15:03:30.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:30.646" endtime="20250214 15:03:30.675"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.645" endtime="20250214 15:03:30.675"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.645" endtime="20250214 15:03:30.676"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.636" endtime="20250214 15:03:30.676"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.636" endtime="20250214 15:03:30.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:30.679" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:33.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:03:33.376" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250214 15:03:30.677" endtime="20250214 15:03:33.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:33.377" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250214 15:03:33.377" endtime="20250214 15:03:33.377"/>
</kw>
<msg timestamp="20250214 15:03:33.377" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250214 15:03:30.676" endtime="20250214 15:03:33.377"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:03:33.378" endtime="20250214 15:03:33.378"/>
</kw>
<msg timestamp="20250214 15:03:33.378" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250214 15:03:33.377" endtime="20250214 15:03:33.378"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:33.381" level="INFO">Running command 'ozone s3 revokesecret -y  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:35.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:35.996" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:03:33.379" endtime="20250214 15:03:35.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:35.997" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250214 15:03:35.997" endtime="20250214 15:03:35.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:35.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:35.997" endtime="20250214 15:03:35.998"/>
</kw>
<status status="PASS" starttime="20250214 15:03:33.379" endtime="20250214 15:03:35.998"/>
</kw>
<msg timestamp="20250214 15:03:35.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:33.379" endtime="20250214 15:03:35.998"/>
</kw>
<status status="PASS" starttime="20250214 15:03:33.378" endtime="20250214 15:03:35.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:36.001" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:38.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:38.400" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3</msg>
<status status="PASS" starttime="20250214 15:03:35.999" endtime="20250214 15:03:38.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:38.401" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3</msg>
<status status="PASS" starttime="20250214 15:03:38.401" endtime="20250214 15:03:38.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:38.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:38.401" endtime="20250214 15:03:38.401"/>
</kw>
<status status="PASS" starttime="20250214 15:03:35.999" endtime="20250214 15:03:38.402"/>
</kw>
<msg timestamp="20250214 15:03:38.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:35.999" endtime="20250214 15:03:38.402"/>
</kw>
<msg timestamp="20250214 15:03:38.402" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3</msg>
<status status="PASS" starttime="20250214 15:03:35.998" endtime="20250214 15:03:38.402"/>
</kw>
<status status="PASS" starttime="20250214 15:03:33.378" endtime="20250214 15:03:38.402"/>
</branch>
<status status="PASS" starttime="20250214 15:03:33.378" endtime="20250214 15:03:38.402"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 15:03:38.402" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 15:03:38.402" endtime="20250214 15:03:38.402"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250214 15:03:38.403" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250214 15:03:38.403" endtime="20250214 15:03:38.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 15:03:38.403" level="INFO">${secret} = ['7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3']</msg>
<status status="PASS" starttime="20250214 15:03:38.403" endtime="20250214 15:03:38.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:38.404" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:03:38.403" endtime="20250214 15:03:38.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:38.405" level="INFO">${secret} = 7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3</msg>
<status status="PASS" starttime="20250214 15:03:38.404" endtime="20250214 15:03:38.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:38.408" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:38.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:38.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:38.406" endtime="20250214 15:03:38.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:38.755" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:38.754" endtime="20250214 15:03:38.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:38.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:38.755" endtime="20250214 15:03:38.755"/>
</kw>
<status status="PASS" starttime="20250214 15:03:38.405" endtime="20250214 15:03:38.755"/>
</kw>
<msg timestamp="20250214 15:03:38.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:38.405" endtime="20250214 15:03:38.755"/>
</kw>
<status status="PASS" starttime="20250214 15:03:38.405" endtime="20250214 15:03:38.755"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:38.759" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:39.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:39.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:38.757" endtime="20250214 15:03:39.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:39.107" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:39.106" endtime="20250214 15:03:39.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:39.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:39.107" endtime="20250214 15:03:39.107"/>
</kw>
<status status="PASS" starttime="20250214 15:03:38.756" endtime="20250214 15:03:39.107"/>
</kw>
<msg timestamp="20250214 15:03:39.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:38.756" endtime="20250214 15:03:39.107"/>
</kw>
<status status="PASS" starttime="20250214 15:03:38.755" endtime="20250214 15:03:39.107"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:39.110" level="INFO">Running command 'aws configure set aws_secret_access_key 7622a08cfacd6b98400a8a255278d131cc0a3438a1f71ebcb30461e6b52fb6a3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:39.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:39.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:39.108" endtime="20250214 15:03:39.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:39.450" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:39.450" endtime="20250214 15:03:39.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:39.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:39.450" endtime="20250214 15:03:39.451"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.108" endtime="20250214 15:03:39.451"/>
</kw>
<msg timestamp="20250214 15:03:39.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:39.108" endtime="20250214 15:03:39.451"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.108" endtime="20250214 15:03:39.451"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:39.454" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:39.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:39.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:39.452" endtime="20250214 15:03:39.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:39.798" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:39.798" endtime="20250214 15:03:39.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:39.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:39.798" endtime="20250214 15:03:39.799"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.452" endtime="20250214 15:03:39.799"/>
</kw>
<msg timestamp="20250214 15:03:39.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:39.452" endtime="20250214 15:03:39.799"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.451" endtime="20250214 15:03:39.799"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:39.802" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:40.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:40.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:39.800" endtime="20250214 15:03:40.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:40.139" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:40.138" endtime="20250214 15:03:40.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:40.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:40.139" endtime="20250214 15:03:40.139"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.800" endtime="20250214 15:03:40.139"/>
</kw>
<msg timestamp="20250214 15:03:40.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:39.799" endtime="20250214 15:03:40.139"/>
</kw>
<status status="PASS" starttime="20250214 15:03:39.799" endtime="20250214 15:03:40.139"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.676" endtime="20250214 15:03:40.139"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.676" endtime="20250214 15:03:40.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 15:03:40.140" endtime="20250214 15:03:40.140"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.636" endtime="20250214 15:03:40.140"/>
</kw>
<kw name="Create bucket with layout" library="shell">
<var>${bucket}</var>
<arg>/s3v</arg>
<arg>OBJECT_STORE</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:03:40.141" level="INFO">${postfix} = xumltjvbcf</msg>
<status status="PASS" starttime="20250214 15:03:40.140" endtime="20250214 15:03:40.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:40.141" level="INFO">${bucket} = bucket-xumltjvbcf</msg>
<status status="PASS" starttime="20250214 15:03:40.141" endtime="20250214 15:03:40.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:40.144" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE /s3v/bucket-xumltjvbcf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:43.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:43.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:40.142" endtime="20250214 15:03:43.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:43.099" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:43.099" endtime="20250214 15:03:43.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:43.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:43.100" endtime="20250214 15:03:43.100"/>
</kw>
<status status="PASS" starttime="20250214 15:03:40.141" endtime="20250214 15:03:43.100"/>
</kw>
<msg timestamp="20250214 15:03:43.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:40.141" endtime="20250214 15:03:43.100"/>
</kw>
<msg timestamp="20250214 15:03:43.100" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:03:40.141" endtime="20250214 15:03:43.100"/>
</kw>
<msg timestamp="20250214 15:03:43.100" level="INFO">${bucket} = bucket-xumltjvbcf</msg>
<status status="PASS" starttime="20250214 15:03:40.140" endtime="20250214 15:03:43.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>multipart.key</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:43.101" level="INFO">${key} = multipart.key</msg>
<status status="PASS" starttime="20250214 15:03:43.101" endtime="20250214 15:03:43.101"/>
</kw>
<kw name="Create Random File MB" library="os">
<var>${file}</var>
<arg>12</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:03:43.103" level="INFO">${postfix} = byudwyzpbf</msg>
<status status="PASS" starttime="20250214 15:03:43.103" endtime="20250214 15:03:43.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:43.103" level="INFO">${tmpfile} = /tmp/tempfile-byudwyzpbf</msg>
<status status="PASS" starttime="20250214 15:03:43.103" endtime="20250214 15:03:43.103"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250214 15:03:43.104" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-byudwyzpbf"&gt;/tmp/tempfile-byudwyzpbf&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 15:03:43.104" endtime="20250214 15:03:43.104"/>
</kw>
<status status="PASS" starttime="20250214 15:03:43.103" endtime="20250214 15:03:43.104"/>
</kw>
<msg timestamp="20250214 15:03:43.104" level="INFO">${path} = /tmp/tempfile-byudwyzpbf</msg>
<status status="PASS" starttime="20250214 15:03:43.102" endtime="20250214 15:03:43.104"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:43.107" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-byudwyzpbf bs=1048576 count=12 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:43.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:43.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:43.105" endtime="20250214 15:03:43.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:43.155" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:43.154" endtime="20250214 15:03:43.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:43.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:43.155" endtime="20250214 15:03:43.155"/>
</kw>
<status status="PASS" starttime="20250214 15:03:43.105" endtime="20250214 15:03:43.155"/>
</kw>
<msg timestamp="20250214 15:03:43.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:43.104" endtime="20250214 15:03:43.155"/>
</kw>
<status status="PASS" starttime="20250214 15:03:43.104" endtime="20250214 15:03:43.155"/>
</kw>
<msg timestamp="20250214 15:03:43.156" level="INFO">${path} = /tmp/tempfile-byudwyzpbf</msg>
<status status="PASS" starttime="20250214 15:03:43.102" endtime="20250214 15:03:43.156"/>
</kw>
<msg timestamp="20250214 15:03:43.156" level="INFO">${file} = /tmp/tempfile-byudwyzpbf</msg>
<status status="PASS" starttime="20250214 15:03:43.101" endtime="20250214 15:03:43.156"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${file} s3://${bucket}/${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:43.159" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/tempfile-byudwyzpbf s3://bucket-xumltjvbcf/multipart.key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:44.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:44.072" level="INFO">${output} = Completed 256.0 KiB/12.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 15:03:43.157" endtime="20250214 15:03:44.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:44.073" level="INFO">Completed 256.0 KiB/12.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/12.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/12.0 MiB (10.8 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/12.0 MiB (12.6 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/12.0 MiB (14.6 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/12.0 MiB (16.4 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/12.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/12.0 MiB (20.2 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/12.0 MiB (22.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/12.0 MiB (23.7 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/12.0 MiB (25.1 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/12.0 MiB (27.0 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/12.0 MiB (28.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/12.0 MiB (30.1 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/12.0 MiB (31.6 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/12.0 MiB (33.0 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/12.0 MiB (34.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/12.0 MiB (36.2 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/12.0 MiB (37.6 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/12.0 MiB (39.2 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/12.0 MiB (40.4 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/12.0 MiB (42.1 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/12.0 MiB (43.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/12.0 MiB (44.9 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/12.0 MiB (46.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/12.0 MiB (47.7 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/12.0 MiB (48.8 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/12.0 MiB (50.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/12.0 MiB (51.4 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/12.0 MiB (52.9 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/12.0 MiB (54.1 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/12.0 MiB (54.9 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/12.0 MiB (56.3 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/12.0 MiB (57.4 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/12.0 MiB (58.7 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/12.0 MiB (59.9 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/12.0 MiB (61.1 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/12.0 MiB (62.2 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/12.0 MiB (63.3 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/12.0 MiB (64.4 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/12.0 MiB (65.4 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/12.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/12.0 MiB (67.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/12.0 MiB (68.4 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/12.0 MiB (69.3 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/12.0 MiB (70.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/tempfile-byudwyzpbf to s3://bucket-xumltjvbcf/multipart.key</msg>
<status status="PASS" starttime="20250214 15:03:44.072" endtime="20250214 15:03:44.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:44.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:44.073" endtime="20250214 15:03:44.073"/>
</kw>
<status status="PASS" starttime="20250214 15:03:43.157" endtime="20250214 15:03:44.073"/>
</kw>
<msg timestamp="20250214 15:03:44.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:43.157" endtime="20250214 15:03:44.074"/>
</kw>
<msg timestamp="20250214 15:03:44.074" level="INFO">${output} = Completed 256.0 KiB/12.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (6.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 15:03:43.156" endtime="20250214 15:03:44.074"/>
</kw>
<status status="PASS" starttime="20250214 15:03:43.156" endtime="20250214 15:03:44.074"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:03:44.075" level="INFO">${postfix} = 08626</msg>
<status status="PASS" starttime="20250214 15:03:44.075" endtime="20250214 15:03:44.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:44.075" level="INFO">${tmpfile} = /tmp/tempkey-08626</msg>
<status status="PASS" starttime="20250214 15:03:44.075" endtime="20250214 15:03:44.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:44.079" level="INFO">Running command 'ozone sh key get /s3v/bucket-xumltjvbcf/multipart.key /tmp/tempkey-08626 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:48.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:48.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:44.076" endtime="20250214 15:03:48.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:48.783" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:48.782" endtime="20250214 15:03:48.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:48.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:48.783" endtime="20250214 15:03:48.783"/>
</kw>
<status status="PASS" starttime="20250214 15:03:44.076" endtime="20250214 15:03:48.783"/>
</kw>
<msg timestamp="20250214 15:03:48.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:44.076" endtime="20250214 15:03:48.784"/>
</kw>
<status status="PASS" starttime="20250214 15:03:44.075" endtime="20250214 15:03:48.784"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:03:48.786" level="INFO">Running command 'diff -q /tmp/tempfile-byudwyzpbf /tmp/tempkey-08626 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:48.798" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:03:48.784" endtime="20250214 15:03:48.798"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:48.801" level="INFO">Running command 'rm -f /tmp/tempkey-08626 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:48.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:48.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:48.799" endtime="20250214 15:03:48.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:48.807" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:48.807" endtime="20250214 15:03:48.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:48.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:48.808" endtime="20250214 15:03:48.808"/>
</kw>
<status status="PASS" starttime="20250214 15:03:48.799" endtime="20250214 15:03:48.808"/>
</kw>
<msg timestamp="20250214 15:03:48.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:48.798" endtime="20250214 15:03:48.808"/>
</kw>
<status status="PASS" starttime="20250214 15:03:48.798" endtime="20250214 15:03:48.808"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:03:48.809" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:03:48.808" endtime="20250214 15:03:48.809"/>
</kw>
<msg timestamp="20250214 15:03:48.809" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:03:44.074" endtime="20250214 15:03:48.809"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:03:48.809" endtime="20250214 15:03:48.809"/>
</kw>
<status status="PASS" starttime="20250214 15:03:44.074" endtime="20250214 15:03:48.809"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:48.812" level="INFO">Running command 'ozone sh key info /s3v/bucket-xumltjvbcf/multipart.key | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:51.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:51.834" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:03:48.810" endtime="20250214 15:03:51.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:51.834" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:03:51.834" endtime="20250214 15:03:51.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:51.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:51.834" endtime="20250214 15:03:51.835"/>
</kw>
<status status="PASS" starttime="20250214 15:03:48.810" endtime="20250214 15:03:51.835"/>
</kw>
<msg timestamp="20250214 15:03:51.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:48.810" endtime="20250214 15:03:51.835"/>
</kw>
<msg timestamp="20250214 15:03:51.835" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:03:48.810" endtime="20250214 15:03:51.835"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:03:51.836" endtime="20250214 15:03:51.836"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:03:51.836" endtime="20250214 15:03:51.836"/>
</kw>
<status status="PASS" starttime="20250214 15:03:51.835" endtime="20250214 15:03:51.836"/>
</kw>
<status status="PASS" starttime="20250214 15:03:48.809" endtime="20250214 15:03:51.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rewrite -t EC -r rs-3-2-1024k /s3v/${bucket}/${key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:51.840" level="INFO">Running command 'ozone sh key rewrite -t EC -r rs-3-2-1024k /s3v/bucket-xumltjvbcf/multipart.key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:03:57.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:03:57.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:51.837" endtime="20250214 15:03:57.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:03:57.179" level="INFO"/>
<status status="PASS" starttime="20250214 15:03:57.179" endtime="20250214 15:03:57.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:03:57.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:03:57.180" endtime="20250214 15:03:57.180"/>
</kw>
<status status="PASS" starttime="20250214 15:03:51.837" endtime="20250214 15:03:57.180"/>
</kw>
<msg timestamp="20250214 15:03:57.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:51.837" endtime="20250214 15:03:57.180"/>
</kw>
<status status="PASS" starttime="20250214 15:03:51.837" endtime="20250214 15:03:57.180"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:03:57.181" level="INFO">${postfix} = 35299</msg>
<status status="PASS" starttime="20250214 15:03:57.181" endtime="20250214 15:03:57.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:03:57.182" level="INFO">${tmpfile} = /tmp/tempkey-35299</msg>
<status status="PASS" starttime="20250214 15:03:57.182" endtime="20250214 15:03:57.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:03:57.185" level="INFO">Running command 'ozone sh key get /s3v/bucket-xumltjvbcf/multipart.key /tmp/tempkey-35299 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:02.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:02.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:03:57.183" endtime="20250214 15:04:02.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:02.047" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:02.047" endtime="20250214 15:04:02.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:02.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:02.047" endtime="20250214 15:04:02.048"/>
</kw>
<status status="PASS" starttime="20250214 15:03:57.182" endtime="20250214 15:04:02.048"/>
</kw>
<msg timestamp="20250214 15:04:02.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:03:57.182" endtime="20250214 15:04:02.048"/>
</kw>
<status status="PASS" starttime="20250214 15:03:57.182" endtime="20250214 15:04:02.048"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:04:02.050" level="INFO">Running command 'diff -q /tmp/tempfile-byudwyzpbf /tmp/tempkey-35299 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:02.062" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:04:02.048" endtime="20250214 15:04:02.062"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:02.065" level="INFO">Running command 'rm -f /tmp/tempkey-35299 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:02.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:02.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:02.063" endtime="20250214 15:04:02.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:02.072" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:02.072" endtime="20250214 15:04:02.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:02.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:02.072" endtime="20250214 15:04:02.073"/>
</kw>
<status status="PASS" starttime="20250214 15:04:02.063" endtime="20250214 15:04:02.073"/>
</kw>
<msg timestamp="20250214 15:04:02.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:02.063" endtime="20250214 15:04:02.073"/>
</kw>
<status status="PASS" starttime="20250214 15:04:02.062" endtime="20250214 15:04:02.073"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:04:02.073" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:04:02.073" endtime="20250214 15:04:02.073"/>
</kw>
<msg timestamp="20250214 15:04:02.074" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:03:57.181" endtime="20250214 15:04:02.074"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:04:02.074" endtime="20250214 15:04:02.074"/>
</kw>
<status status="PASS" starttime="20250214 15:03:57.180" endtime="20250214 15:04:02.074"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:02.077" level="INFO">Running command 'ozone sh key info /s3v/bucket-xumltjvbcf/multipart.key | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:05.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:05.274" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:02.075" endtime="20250214 15:04:05.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:05.275" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:05.274" endtime="20250214 15:04:05.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:05.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:05.275" endtime="20250214 15:04:05.275"/>
</kw>
<status status="PASS" starttime="20250214 15:04:02.075" endtime="20250214 15:04:05.275"/>
</kw>
<msg timestamp="20250214 15:04:05.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:02.075" endtime="20250214 15:04:05.275"/>
</kw>
<msg timestamp="20250214 15:04:05.276" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:02.074" endtime="20250214 15:04:05.276"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:05.276" endtime="20250214 15:04:05.276"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:05.277" endtime="20250214 15:04:05.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:05.277" endtime="20250214 15:04:05.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:05.277" endtime="20250214 15:04:05.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:05.278" endtime="20250214 15:04:05.278"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.276" endtime="20250214 15:04:05.278"/>
</kw>
<status status="PASS" starttime="20250214 15:04:02.074" endtime="20250214 15:04:05.278"/>
</kw>
<status status="PASS" starttime="20250214 15:03:30.635" endtime="20250214 15:04:05.278"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20250214 15:03:30.547" endtime="20250214 15:04:05.279"/>
</suite>
<suite id="s1-s3" name="Basic" source="/opt/hadoop/smoketest/ec/basic.robot">
<kw name="Prepare For Tests" library="lib" type="SETUP">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:05.848" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:05.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:05.856" level="INFO">${output} = 1+0 records in
1+0 records out
1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00410736 s, 255 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.846" endtime="20250214 15:04:05.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:05.857" level="INFO">1+0 records in
1+0 records out
1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00410736 s, 255 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.856" endtime="20250214 15:04:05.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:05.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:05.857" endtime="20250214 15:04:05.857"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.845" endtime="20250214 15:04:05.857"/>
</kw>
<msg timestamp="20250214 15:04:05.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:05.845" endtime="20250214 15:04:05.857"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.845" endtime="20250214 15:04:05.857"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:05.860" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:05.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:05.871" level="INFO">${output} = 2+0 records in
2+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.00748741 s, 280 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.858" endtime="20250214 15:04:05.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:05.871" level="INFO">2+0 records in
2+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.00748741 s, 280 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.871" endtime="20250214 15:04:05.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:05.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:05.872" endtime="20250214 15:04:05.872"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.858" endtime="20250214 15:04:05.872"/>
</kw>
<msg timestamp="20250214 15:04:05.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:05.858" endtime="20250214 15:04:05.872"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.857" endtime="20250214 15:04:05.872"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:05.875" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:05.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:05.889" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0111527 s, 282 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.873" endtime="20250214 15:04:05.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:05.890" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0111527 s, 282 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.890" endtime="20250214 15:04:05.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:05.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:05.890" endtime="20250214 15:04:05.890"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.873" endtime="20250214 15:04:05.891"/>
</kw>
<msg timestamp="20250214 15:04:05.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:05.873" endtime="20250214 15:04:05.891"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.872" endtime="20250214 15:04:05.891"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:05.894" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:06.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:06.247" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.349518 s, 300 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:05.892" endtime="20250214 15:04:06.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:06.248" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.349518 s, 300 MB/s</msg>
<status status="PASS" starttime="20250214 15:04:06.247" endtime="20250214 15:04:06.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:06.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:06.248" endtime="20250214 15:04:06.248"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.891" endtime="20250214 15:04:06.248"/>
</kw>
<msg timestamp="20250214 15:04:06.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:05.891" endtime="20250214 15:04:06.248"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.891" endtime="20250214 15:04:06.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 15:04:06.249" endtime="20250214 15:04:06.249"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:06.252" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:06.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:06.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250214 15:04:06.250" endtime="20250214 15:04:06.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:06.257" level="INFO">scm</msg>
<status status="PASS" starttime="20250214 15:04:06.256" endtime="20250214 15:04:06.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:06.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:06.257" endtime="20250214 15:04:06.257"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.250" endtime="20250214 15:04:06.257"/>
</kw>
<msg timestamp="20250214 15:04:06.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:06.250" endtime="20250214 15:04:06.257"/>
</kw>
<msg timestamp="20250214 15:04:06.257" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250214 15:04:06.250" endtime="20250214 15:04:06.257"/>
</kw>
<msg timestamp="20250214 15:04:06.258" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:04:06.249" endtime="20250214 15:04:06.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 15:04:06.258" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250214 15:04:06.258" endtime="20250214 15:04:06.258"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:06.261" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:06.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:06.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:06.259" endtime="20250214 15:04:06.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:06.287" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:06.287" endtime="20250214 15:04:06.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:06.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:06.287" endtime="20250214 15:04:06.287"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.259" endtime="20250214 15:04:06.287"/>
</kw>
<msg timestamp="20250214 15:04:06.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:06.259" endtime="20250214 15:04:06.288"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.258" endtime="20250214 15:04:06.288"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.258" endtime="20250214 15:04:06.288"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.249" endtime="20250214 15:04:06.288"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.248" endtime="20250214 15:04:06.288"/>
</kw>
<status status="PASS" starttime="20250214 15:04:05.844" endtime="20250214 15:04:06.288"/>
</kw>
<test id="s1-s3-t1" name="Test Bucket Creation" line="62">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:06.292" level="INFO">Running command 'ozone sh volume create /vol5609 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:09.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:09.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:06.289" endtime="20250214 15:04:09.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:09.251" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:09.250" endtime="20250214 15:04:09.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:09.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:09.251" endtime="20250214 15:04:09.251"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.289" endtime="20250214 15:04:09.251"/>
</kw>
<msg timestamp="20250214 15:04:09.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:06.289" endtime="20250214 15:04:09.251"/>
</kw>
<msg timestamp="20250214 15:04:09.251" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:04:06.288" endtime="20250214 15:04:09.251"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:09.252" endtime="20250214 15:04:09.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/default</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:09.255" level="INFO">Running command 'ozone sh bucket create /vol5609/default 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:12.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:12.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:09.253" endtime="20250214 15:04:12.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:12.170" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:12.170" endtime="20250214 15:04:12.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:12.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:12.170" endtime="20250214 15:04:12.171"/>
</kw>
<status status="PASS" starttime="20250214 15:04:09.252" endtime="20250214 15:04:12.171"/>
</kw>
<msg timestamp="20250214 15:04:12.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:09.252" endtime="20250214 15:04:12.171"/>
</kw>
<msg timestamp="20250214 15:04:12.171" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:04:09.252" endtime="20250214 15:04:12.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:12.171" endtime="20250214 15:04:12.171"/>
</kw>
<kw name="Verify Bucket Empty Replication Config" library="shell">
<arg>/${VOLUME}/default</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:12.175" level="INFO">Running command 'ozone sh bucket info /vol5609/default | jq -r '.replicationConfig' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:15.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:15.183" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250214 15:04:12.173" endtime="20250214 15:04:15.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:15.183" level="INFO">null</msg>
<status status="PASS" starttime="20250214 15:04:15.183" endtime="20250214 15:04:15.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:15.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:15.184" endtime="20250214 15:04:15.184"/>
</kw>
<status status="PASS" starttime="20250214 15:04:12.172" endtime="20250214 15:04:15.184"/>
</kw>
<msg timestamp="20250214 15:04:15.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:12.172" endtime="20250214 15:04:15.184"/>
</kw>
<msg timestamp="20250214 15:04:15.184" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250214 15:04:12.172" endtime="20250214 15:04:15.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:04:15.184" endtime="20250214 15:04:15.185"/>
</kw>
<status status="PASS" starttime="20250214 15:04:12.172" endtime="20250214 15:04:15.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication 3 --type RATIS /${VOLUME}/ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:15.188" level="INFO">Running command 'ozone sh bucket create --replication 3 --type RATIS /vol5609/ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:18.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:18.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:15.186" endtime="20250214 15:04:18.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:18.195" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:18.194" endtime="20250214 15:04:18.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:18.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:18.195" endtime="20250214 15:04:18.195"/>
</kw>
<status status="PASS" starttime="20250214 15:04:15.185" endtime="20250214 15:04:18.195"/>
</kw>
<msg timestamp="20250214 15:04:18.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:15.185" endtime="20250214 15:04:18.195"/>
</kw>
<msg timestamp="20250214 15:04:18.196" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:04:15.185" endtime="20250214 15:04:18.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:18.196" endtime="20250214 15:04:18.196"/>
</kw>
<kw name="Verify Bucket Replica Replication Config" library="shell">
<arg>/${VOLUME}/ratis</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:18.200" level="INFO">Running command 'ozone sh bucket info /vol5609/ratis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:21.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:21.325" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:04:18.197" endtime="20250214 15:04:21.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:21.326" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:04:21.325" endtime="20250214 15:04:21.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:21.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:21.326" endtime="20250214 15:04:21.326"/>
</kw>
<status status="PASS" starttime="20250214 15:04:18.197" endtime="20250214 15:04:21.326"/>
</kw>
<msg timestamp="20250214 15:04:21.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:18.197" endtime="20250214 15:04:21.326"/>
</kw>
<msg timestamp="20250214 15:04:21.327" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:04:18.196" endtime="20250214 15:04:21.327"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:21.327" endtime="20250214 15:04:21.327"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:21.328" endtime="20250214 15:04:21.328"/>
</kw>
<status status="PASS" starttime="20250214 15:04:21.327" endtime="20250214 15:04:21.328"/>
</kw>
<status status="PASS" starttime="20250214 15:04:18.196" endtime="20250214 15:04:21.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /${VOLUME}/ecbucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:21.331" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /vol5609/ecbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:24.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:24.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:21.329" endtime="20250214 15:04:24.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:24.274" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:24.274" endtime="20250214 15:04:24.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:24.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:24.274" endtime="20250214 15:04:24.275"/>
</kw>
<status status="PASS" starttime="20250214 15:04:21.328" endtime="20250214 15:04:24.275"/>
</kw>
<msg timestamp="20250214 15:04:24.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:21.328" endtime="20250214 15:04:24.275"/>
</kw>
<msg timestamp="20250214 15:04:24.275" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 15:04:21.328" endtime="20250214 15:04:24.275"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:24.275" endtime="20250214 15:04:24.275"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/${VOLUME}/ecbucket</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:24.279" level="INFO">Running command 'ozone sh bucket info /vol5609/ecbucket | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:27.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:27.219" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:24.277" endtime="20250214 15:04:27.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:27.219" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:27.219" endtime="20250214 15:04:27.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:27.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:27.220" endtime="20250214 15:04:27.220"/>
</kw>
<status status="PASS" starttime="20250214 15:04:24.276" endtime="20250214 15:04:27.220"/>
</kw>
<msg timestamp="20250214 15:04:27.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:24.276" endtime="20250214 15:04:27.220"/>
</kw>
<msg timestamp="20250214 15:04:27.220" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:24.276" endtime="20250214 15:04:27.220"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:27.221" endtime="20250214 15:04:27.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:27.221" endtime="20250214 15:04:27.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:27.222" endtime="20250214 15:04:27.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:27.222" endtime="20250214 15:04:27.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:27.222" endtime="20250214 15:04:27.223"/>
</kw>
<status status="PASS" starttime="20250214 15:04:27.220" endtime="20250214 15:04:27.223"/>
</kw>
<status status="PASS" starttime="20250214 15:04:24.275" endtime="20250214 15:04:27.223"/>
</kw>
<status status="PASS" starttime="20250214 15:04:06.288" endtime="20250214 15:04:27.223"/>
</test>
<test id="s1-s3-t2" name="Create 1MB Key In EC Bucket" line="75">
<kw name="Create Key In EC Bucket">
<arg>1mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:27.224" level="INFO">${dir} = /vol5609/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 15:04:27.224" endtime="20250214 15:04:27.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:27.225" level="INFO">${key} = /vol5609/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:04:27.224" endtime="20250214 15:04:27.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:27.225" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 15:04:27.225" endtime="20250214 15:04:27.225"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:27.229" level="INFO">Running command 'ozone sh key put  /vol5609/ecbucket/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:31.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:31.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:27.227" endtime="20250214 15:04:31.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:31.905" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:31.904" endtime="20250214 15:04:31.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:31.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:31.905" endtime="20250214 15:04:31.905"/>
</kw>
<status status="PASS" starttime="20250214 15:04:27.226" endtime="20250214 15:04:31.905"/>
</kw>
<msg timestamp="20250214 15:04:31.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:27.226" endtime="20250214 15:04:31.906"/>
</kw>
<msg timestamp="20250214 15:04:31.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:27.226" endtime="20250214 15:04:31.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:31.906" endtime="20250214 15:04:31.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:31.906" level="INFO">Uploaded /tmp/1mb to /vol5609/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:04:31.906" endtime="20250214 15:04:31.906"/>
</kw>
<status status="PASS" starttime="20250214 15:04:27.225" endtime="20250214 15:04:31.906"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:04:31.907" level="INFO">${postfix} = 73540</msg>
<status status="PASS" starttime="20250214 15:04:31.907" endtime="20250214 15:04:31.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:31.908" level="INFO">${tmpfile} = /tmp/tempkey-73540</msg>
<status status="PASS" starttime="20250214 15:04:31.907" endtime="20250214 15:04:31.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:31.911" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/1mb /tmp/tempkey-73540 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:36.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:36.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:31.909" endtime="20250214 15:04:36.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:36.134" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:36.133" endtime="20250214 15:04:36.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:36.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:36.134" endtime="20250214 15:04:36.134"/>
</kw>
<status status="PASS" starttime="20250214 15:04:31.908" endtime="20250214 15:04:36.134"/>
</kw>
<msg timestamp="20250214 15:04:36.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:31.908" endtime="20250214 15:04:36.134"/>
</kw>
<status status="PASS" starttime="20250214 15:04:31.908" endtime="20250214 15:04:36.134"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:04:36.137" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-73540 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:36.140" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:04:36.135" endtime="20250214 15:04:36.140"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:36.143" level="INFO">Running command 'rm -f /tmp/tempkey-73540 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:36.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:36.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:36.142" endtime="20250214 15:04:36.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:36.148" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:36.147" endtime="20250214 15:04:36.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:36.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:36.148" endtime="20250214 15:04:36.148"/>
</kw>
<status status="PASS" starttime="20250214 15:04:36.141" endtime="20250214 15:04:36.148"/>
</kw>
<msg timestamp="20250214 15:04:36.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:36.141" endtime="20250214 15:04:36.148"/>
</kw>
<status status="PASS" starttime="20250214 15:04:36.140" endtime="20250214 15:04:36.148"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:04:36.149" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:04:36.148" endtime="20250214 15:04:36.149"/>
</kw>
<msg timestamp="20250214 15:04:36.149" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:04:31.907" endtime="20250214 15:04:36.149"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:04:36.149" endtime="20250214 15:04:36.149"/>
</kw>
<status status="PASS" starttime="20250214 15:04:31.906" endtime="20250214 15:04:36.149"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:36.152" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:39.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:39.264" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:36.150" endtime="20250214 15:04:39.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:39.265" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:39.265" endtime="20250214 15:04:39.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:39.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:39.265" endtime="20250214 15:04:39.266"/>
</kw>
<status status="PASS" starttime="20250214 15:04:36.150" endtime="20250214 15:04:39.266"/>
</kw>
<msg timestamp="20250214 15:04:39.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:36.150" endtime="20250214 15:04:39.266"/>
</kw>
<msg timestamp="20250214 15:04:39.266" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:36.150" endtime="20250214 15:04:39.266"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:39.267" endtime="20250214 15:04:39.267"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:39.267" endtime="20250214 15:04:39.267"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:39.267" endtime="20250214 15:04:39.267"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:39.267" endtime="20250214 15:04:39.268"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:39.268" endtime="20250214 15:04:39.268"/>
</kw>
<status status="PASS" starttime="20250214 15:04:39.266" endtime="20250214 15:04:39.268"/>
</kw>
<status status="PASS" starttime="20250214 15:04:36.149" endtime="20250214 15:04:39.268"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:39.271" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:42.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:42.162" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:39.269" endtime="20250214 15:04:42.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:42.163" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:42.162" endtime="20250214 15:04:42.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:42.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:42.163" endtime="20250214 15:04:42.163"/>
</kw>
<status status="PASS" starttime="20250214 15:04:39.269" endtime="20250214 15:04:42.163"/>
</kw>
<msg timestamp="20250214 15:04:42.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:39.269" endtime="20250214 15:04:42.163"/>
</kw>
<msg timestamp="20250214 15:04:42.164" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:39.268" endtime="20250214 15:04:42.164"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:42.164" endtime="20250214 15:04:42.164"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:42.164" endtime="20250214 15:04:42.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:42.165" endtime="20250214 15:04:42.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:42.165" endtime="20250214 15:04:42.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:42.165" endtime="20250214 15:04:42.166"/>
</kw>
<status status="PASS" starttime="20250214 15:04:42.164" endtime="20250214 15:04:42.166"/>
</kw>
<status status="PASS" starttime="20250214 15:04:39.268" endtime="20250214 15:04:42.166"/>
</kw>
<status status="PASS" starttime="20250214 15:04:27.224" endtime="20250214 15:04:42.166"/>
</kw>
<status status="PASS" starttime="20250214 15:04:27.223" endtime="20250214 15:04:42.166"/>
</test>
<test id="s1-s3-t3" name="Create 2MB Key In EC Bucket" line="78">
<kw name="Create Key In EC Bucket">
<arg>2mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:42.167" level="INFO">${dir} = /vol5609/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 15:04:42.167" endtime="20250214 15:04:42.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:42.167" level="INFO">${key} = /vol5609/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20250214 15:04:42.167" endtime="20250214 15:04:42.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:42.168" level="INFO">${file} = /tmp/2mb</msg>
<status status="PASS" starttime="20250214 15:04:42.168" endtime="20250214 15:04:42.168"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:42.171" level="INFO">Running command 'ozone sh key put  /vol5609/ecbucket/dir/2mb /tmp/2mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:46.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:46.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:42.169" endtime="20250214 15:04:46.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:46.569" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:46.569" endtime="20250214 15:04:46.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:46.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:46.570" endtime="20250214 15:04:46.570"/>
</kw>
<status status="PASS" starttime="20250214 15:04:42.169" endtime="20250214 15:04:46.570"/>
</kw>
<msg timestamp="20250214 15:04:46.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:42.169" endtime="20250214 15:04:46.570"/>
</kw>
<msg timestamp="20250214 15:04:46.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:42.169" endtime="20250214 15:04:46.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:04:46.570" endtime="20250214 15:04:46.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:46.571" level="INFO">Uploaded /tmp/2mb to /vol5609/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20250214 15:04:46.571" endtime="20250214 15:04:46.571"/>
</kw>
<status status="PASS" starttime="20250214 15:04:42.168" endtime="20250214 15:04:46.571"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:04:46.572" level="INFO">${postfix} = 34690</msg>
<status status="PASS" starttime="20250214 15:04:46.572" endtime="20250214 15:04:46.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:46.572" level="INFO">${tmpfile} = /tmp/tempkey-34690</msg>
<status status="PASS" starttime="20250214 15:04:46.572" endtime="20250214 15:04:46.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:46.575" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/2mb /tmp/tempkey-34690 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:50.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:50.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:46.573" endtime="20250214 15:04:50.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:50.730" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:50.729" endtime="20250214 15:04:50.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:50.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:50.730" endtime="20250214 15:04:50.730"/>
</kw>
<status status="PASS" starttime="20250214 15:04:46.573" endtime="20250214 15:04:50.730"/>
</kw>
<msg timestamp="20250214 15:04:50.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:46.573" endtime="20250214 15:04:50.730"/>
</kw>
<status status="PASS" starttime="20250214 15:04:46.572" endtime="20250214 15:04:50.731"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:04:50.733" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-34690 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:50.737" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:04:50.731" endtime="20250214 15:04:50.737"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:50.740" level="INFO">Running command 'rm -f /tmp/tempkey-34690 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:50.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:50.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:50.738" endtime="20250214 15:04:50.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:50.745" level="INFO"/>
<status status="PASS" starttime="20250214 15:04:50.745" endtime="20250214 15:04:50.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:50.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:50.745" endtime="20250214 15:04:50.745"/>
</kw>
<status status="PASS" starttime="20250214 15:04:50.738" endtime="20250214 15:04:50.745"/>
</kw>
<msg timestamp="20250214 15:04:50.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:50.738" endtime="20250214 15:04:50.746"/>
</kw>
<status status="PASS" starttime="20250214 15:04:50.737" endtime="20250214 15:04:50.746"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:04:50.746" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:04:50.746" endtime="20250214 15:04:50.746"/>
</kw>
<msg timestamp="20250214 15:04:50.746" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:04:46.571" endtime="20250214 15:04:50.746"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:04:50.746" endtime="20250214 15:04:50.747"/>
</kw>
<status status="PASS" starttime="20250214 15:04:46.571" endtime="20250214 15:04:50.747"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:50.750" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir/2mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:53.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:53.993" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:50.748" endtime="20250214 15:04:53.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:53.994" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:53.994" endtime="20250214 15:04:53.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:53.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:53.994" endtime="20250214 15:04:53.995"/>
</kw>
<status status="PASS" starttime="20250214 15:04:50.748" endtime="20250214 15:04:53.995"/>
</kw>
<msg timestamp="20250214 15:04:53.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:50.747" endtime="20250214 15:04:53.995"/>
</kw>
<msg timestamp="20250214 15:04:53.995" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:50.747" endtime="20250214 15:04:53.995"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:53.996" endtime="20250214 15:04:53.996"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:53.996" endtime="20250214 15:04:53.996"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:53.996" endtime="20250214 15:04:53.997"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:53.997" endtime="20250214 15:04:53.997"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:53.997" endtime="20250214 15:04:53.997"/>
</kw>
<status status="PASS" starttime="20250214 15:04:53.995" endtime="20250214 15:04:53.997"/>
</kw>
<status status="PASS" starttime="20250214 15:04:50.747" endtime="20250214 15:04:53.997"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:54.001" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:04:56.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:04:56.977" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:53.999" endtime="20250214 15:04:56.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:04:56.978" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:56.978" endtime="20250214 15:04:56.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:04:56.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:04:56.978" endtime="20250214 15:04:56.978"/>
</kw>
<status status="PASS" starttime="20250214 15:04:53.998" endtime="20250214 15:04:56.979"/>
</kw>
<msg timestamp="20250214 15:04:56.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:53.998" endtime="20250214 15:04:56.979"/>
</kw>
<msg timestamp="20250214 15:04:56.979" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:04:53.998" endtime="20250214 15:04:56.979"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:56.980" endtime="20250214 15:04:56.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:56.980" endtime="20250214 15:04:56.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:56.980" endtime="20250214 15:04:56.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:56.980" endtime="20250214 15:04:56.981"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:04:56.981" endtime="20250214 15:04:56.981"/>
</kw>
<status status="PASS" starttime="20250214 15:04:56.979" endtime="20250214 15:04:56.981"/>
</kw>
<status status="PASS" starttime="20250214 15:04:53.997" endtime="20250214 15:04:56.981"/>
</kw>
<status status="PASS" starttime="20250214 15:04:42.167" endtime="20250214 15:04:56.981"/>
</kw>
<status status="PASS" starttime="20250214 15:04:42.166" endtime="20250214 15:04:56.981"/>
</test>
<test id="s1-s3-t4" name="Create 3MB Key In EC Bucket" line="81">
<kw name="Create Key In EC Bucket">
<arg>3mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:56.982" level="INFO">${dir} = /vol5609/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 15:04:56.982" endtime="20250214 15:04:56.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:56.983" level="INFO">${key} = /vol5609/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20250214 15:04:56.983" endtime="20250214 15:04:56.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:04:56.983" level="INFO">${file} = /tmp/3mb</msg>
<status status="PASS" starttime="20250214 15:04:56.983" endtime="20250214 15:04:56.983"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:04:56.987" level="INFO">Running command 'ozone sh key put  /vol5609/ecbucket/dir/3mb /tmp/3mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:01.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:01.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:56.985" endtime="20250214 15:05:01.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:01.723" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:01.722" endtime="20250214 15:05:01.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:01.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:01.723" endtime="20250214 15:05:01.723"/>
</kw>
<status status="PASS" starttime="20250214 15:04:56.984" endtime="20250214 15:05:01.723"/>
</kw>
<msg timestamp="20250214 15:05:01.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:04:56.984" endtime="20250214 15:05:01.724"/>
</kw>
<msg timestamp="20250214 15:05:01.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:04:56.984" endtime="20250214 15:05:01.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:05:01.724" endtime="20250214 15:05:01.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:01.724" level="INFO">Uploaded /tmp/3mb to /vol5609/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20250214 15:05:01.724" endtime="20250214 15:05:01.724"/>
</kw>
<status status="PASS" starttime="20250214 15:04:56.983" endtime="20250214 15:05:01.724"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:05:01.725" level="INFO">${postfix} = 55484</msg>
<status status="PASS" starttime="20250214 15:05:01.725" endtime="20250214 15:05:01.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:01.726" level="INFO">${tmpfile} = /tmp/tempkey-55484</msg>
<status status="PASS" starttime="20250214 15:05:01.726" endtime="20250214 15:05:01.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:01.730" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/3mb /tmp/tempkey-55484 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:06.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:06.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:01.727" endtime="20250214 15:05:06.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:06.014" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:06.014" endtime="20250214 15:05:06.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:06.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:06.014" endtime="20250214 15:05:06.015"/>
</kw>
<status status="PASS" starttime="20250214 15:05:01.726" endtime="20250214 15:05:06.015"/>
</kw>
<msg timestamp="20250214 15:05:06.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:01.726" endtime="20250214 15:05:06.015"/>
</kw>
<status status="PASS" starttime="20250214 15:05:01.726" endtime="20250214 15:05:06.015"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:05:06.017" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-55484 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:06.022" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:05:06.015" endtime="20250214 15:05:06.022"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:06.025" level="INFO">Running command 'rm -f /tmp/tempkey-55484 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:06.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:06.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:06.024" endtime="20250214 15:05:06.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:06.030" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:06.030" endtime="20250214 15:05:06.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:06.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:06.030" endtime="20250214 15:05:06.031"/>
</kw>
<status status="PASS" starttime="20250214 15:05:06.023" endtime="20250214 15:05:06.031"/>
</kw>
<msg timestamp="20250214 15:05:06.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:06.023" endtime="20250214 15:05:06.031"/>
</kw>
<status status="PASS" starttime="20250214 15:05:06.023" endtime="20250214 15:05:06.031"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:05:06.031" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:05:06.031" endtime="20250214 15:05:06.031"/>
</kw>
<msg timestamp="20250214 15:05:06.032" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:05:01.725" endtime="20250214 15:05:06.032"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:05:06.032" endtime="20250214 15:05:06.032"/>
</kw>
<status status="PASS" starttime="20250214 15:05:01.724" endtime="20250214 15:05:06.032"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:06.035" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir/3mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:09.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:09.210" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:06.033" endtime="20250214 15:05:09.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:09.211" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:09.211" endtime="20250214 15:05:09.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:09.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:09.211" endtime="20250214 15:05:09.211"/>
</kw>
<status status="PASS" starttime="20250214 15:05:06.033" endtime="20250214 15:05:09.212"/>
</kw>
<msg timestamp="20250214 15:05:09.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:06.033" endtime="20250214 15:05:09.212"/>
</kw>
<msg timestamp="20250214 15:05:09.212" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:06.032" endtime="20250214 15:05:09.212"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:09.212" endtime="20250214 15:05:09.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:09.213" endtime="20250214 15:05:09.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:09.213" endtime="20250214 15:05:09.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:09.213" endtime="20250214 15:05:09.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:09.213" endtime="20250214 15:05:09.214"/>
</kw>
<status status="PASS" starttime="20250214 15:05:09.212" endtime="20250214 15:05:09.214"/>
</kw>
<status status="PASS" starttime="20250214 15:05:06.032" endtime="20250214 15:05:09.214"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:09.217" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:12.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:12.514" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:09.215" endtime="20250214 15:05:12.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:12.514" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:12.514" endtime="20250214 15:05:12.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:12.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:12.514" endtime="20250214 15:05:12.515"/>
</kw>
<status status="PASS" starttime="20250214 15:05:09.215" endtime="20250214 15:05:12.515"/>
</kw>
<msg timestamp="20250214 15:05:12.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:09.215" endtime="20250214 15:05:12.515"/>
</kw>
<msg timestamp="20250214 15:05:12.515" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:09.214" endtime="20250214 15:05:12.515"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:12.516" endtime="20250214 15:05:12.516"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:12.516" endtime="20250214 15:05:12.516"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:12.516" endtime="20250214 15:05:12.517"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:12.517" endtime="20250214 15:05:12.517"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:12.517" endtime="20250214 15:05:12.517"/>
</kw>
<status status="PASS" starttime="20250214 15:05:12.515" endtime="20250214 15:05:12.517"/>
</kw>
<status status="PASS" starttime="20250214 15:05:09.214" endtime="20250214 15:05:12.517"/>
</kw>
<status status="PASS" starttime="20250214 15:04:56.982" endtime="20250214 15:05:12.517"/>
</kw>
<status status="PASS" starttime="20250214 15:04:56.981" endtime="20250214 15:05:12.517"/>
</test>
<test id="s1-s3-t5" name="Create 100MB Key In EC Bucket" line="84">
<kw name="Create Key In EC Bucket">
<arg>100mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:12.519" level="INFO">${dir} = /vol5609/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 15:05:12.518" endtime="20250214 15:05:12.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:12.519" level="INFO">${key} = /vol5609/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20250214 15:05:12.519" endtime="20250214 15:05:12.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:12.519" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20250214 15:05:12.519" endtime="20250214 15:05:12.519"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:12.523" level="INFO">Running command 'ozone sh key put  /vol5609/ecbucket/dir/100mb /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:19.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:19.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:12.521" endtime="20250214 15:05:19.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:19.612" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:19.612" endtime="20250214 15:05:19.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:19.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:19.612" endtime="20250214 15:05:19.613"/>
</kw>
<status status="PASS" starttime="20250214 15:05:12.520" endtime="20250214 15:05:19.613"/>
</kw>
<msg timestamp="20250214 15:05:19.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:12.520" endtime="20250214 15:05:19.613"/>
</kw>
<msg timestamp="20250214 15:05:19.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:12.520" endtime="20250214 15:05:19.613"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:05:19.613" endtime="20250214 15:05:19.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:19.614" level="INFO">Uploaded /tmp/100mb to /vol5609/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20250214 15:05:19.613" endtime="20250214 15:05:19.614"/>
</kw>
<status status="PASS" starttime="20250214 15:05:12.519" endtime="20250214 15:05:19.614"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:05:19.615" level="INFO">${postfix} = 06632</msg>
<status status="PASS" starttime="20250214 15:05:19.614" endtime="20250214 15:05:19.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:19.615" level="INFO">${tmpfile} = /tmp/tempkey-06632</msg>
<status status="PASS" starttime="20250214 15:05:19.615" endtime="20250214 15:05:19.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:19.618" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/100mb /tmp/tempkey-06632 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:25.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:25.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:19.616" endtime="20250214 15:05:25.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:25.292" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:25.291" endtime="20250214 15:05:25.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:25.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:25.292" endtime="20250214 15:05:25.292"/>
</kw>
<status status="PASS" starttime="20250214 15:05:19.616" endtime="20250214 15:05:25.292"/>
</kw>
<msg timestamp="20250214 15:05:25.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:19.615" endtime="20250214 15:05:25.292"/>
</kw>
<status status="PASS" starttime="20250214 15:05:19.615" endtime="20250214 15:05:25.292"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:05:25.295" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-06632 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:25.362" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:05:25.292" endtime="20250214 15:05:25.362"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:25.366" level="INFO">Running command 'rm -f /tmp/tempkey-06632 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:25.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:25.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:25.364" endtime="20250214 15:05:25.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:25.393" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:25.393" endtime="20250214 15:05:25.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:25.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:25.393" endtime="20250214 15:05:25.393"/>
</kw>
<status status="PASS" starttime="20250214 15:05:25.363" endtime="20250214 15:05:25.394"/>
</kw>
<msg timestamp="20250214 15:05:25.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:25.363" endtime="20250214 15:05:25.394"/>
</kw>
<status status="PASS" starttime="20250214 15:05:25.363" endtime="20250214 15:05:25.394"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:05:25.394" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:05:25.394" endtime="20250214 15:05:25.394"/>
</kw>
<msg timestamp="20250214 15:05:25.394" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:05:19.614" endtime="20250214 15:05:25.394"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:05:25.394" endtime="20250214 15:05:25.395"/>
</kw>
<status status="PASS" starttime="20250214 15:05:19.614" endtime="20250214 15:05:25.395"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:25.398" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir/100mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:28.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:28.755" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:25.396" endtime="20250214 15:05:28.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:28.756" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:28.756" endtime="20250214 15:05:28.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:28.756" endtime="20250214 15:05:28.756"/>
</kw>
<status status="PASS" starttime="20250214 15:05:25.396" endtime="20250214 15:05:28.757"/>
</kw>
<msg timestamp="20250214 15:05:28.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:25.395" endtime="20250214 15:05:28.757"/>
</kw>
<msg timestamp="20250214 15:05:28.757" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:25.395" endtime="20250214 15:05:28.757"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:28.757" endtime="20250214 15:05:28.758"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:28.758" endtime="20250214 15:05:28.758"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:28.758" endtime="20250214 15:05:28.758"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:28.758" endtime="20250214 15:05:28.759"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:28.759" endtime="20250214 15:05:28.759"/>
</kw>
<status status="PASS" starttime="20250214 15:05:28.757" endtime="20250214 15:05:28.759"/>
</kw>
<status status="PASS" starttime="20250214 15:05:25.395" endtime="20250214 15:05:28.759"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:28.762" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:31.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:31.906" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:28.760" endtime="20250214 15:05:31.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:31.907" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:31.906" endtime="20250214 15:05:31.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:31.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:31.907" endtime="20250214 15:05:31.907"/>
</kw>
<status status="PASS" starttime="20250214 15:05:28.760" endtime="20250214 15:05:31.907"/>
</kw>
<msg timestamp="20250214 15:05:31.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:28.760" endtime="20250214 15:05:31.907"/>
</kw>
<msg timestamp="20250214 15:05:31.907" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:05:28.759" endtime="20250214 15:05:31.907"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:31.908" endtime="20250214 15:05:31.908"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:31.908" endtime="20250214 15:05:31.909"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:31.909" endtime="20250214 15:05:31.909"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:31.909" endtime="20250214 15:05:31.909"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:31.909" endtime="20250214 15:05:31.909"/>
</kw>
<status status="PASS" starttime="20250214 15:05:31.908" endtime="20250214 15:05:31.909"/>
</kw>
<status status="PASS" starttime="20250214 15:05:28.759" endtime="20250214 15:05:31.909"/>
</kw>
<status status="PASS" starttime="20250214 15:05:12.518" endtime="20250214 15:05:31.910"/>
</kw>
<status status="PASS" starttime="20250214 15:05:12.518" endtime="20250214 15:05:31.910"/>
</test>
<test id="s1-s3-t6" name="Create Key in Default Bucket" line="87">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:31.911" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 15:05:31.910" endtime="20250214 15:05:31.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/default/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:31.911" level="INFO">${dir} = /vol5609/default/dir</msg>
<status status="PASS" starttime="20250214 15:05:31.911" endtime="20250214 15:05:31.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:31.911" level="INFO">${key} = /vol5609/default/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:05:31.911" endtime="20250214 15:05:31.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:31.911" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 15:05:31.911" endtime="20250214 15:05:31.911"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:31.915" level="INFO">Running command 'ozone sh key put  /vol5609/default/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:36.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:36.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:31.913" endtime="20250214 15:05:36.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:36.470" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:36.470" endtime="20250214 15:05:36.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:36.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:36.470" endtime="20250214 15:05:36.470"/>
</kw>
<status status="PASS" starttime="20250214 15:05:31.913" endtime="20250214 15:05:36.471"/>
</kw>
<msg timestamp="20250214 15:05:36.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:31.913" endtime="20250214 15:05:36.471"/>
</kw>
<msg timestamp="20250214 15:05:36.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:31.912" endtime="20250214 15:05:36.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:05:36.471" endtime="20250214 15:05:36.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:36.472" level="INFO">Uploaded /tmp/1mb to /vol5609/default/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:05:36.471" endtime="20250214 15:05:36.472"/>
</kw>
<status status="PASS" starttime="20250214 15:05:31.912" endtime="20250214 15:05:36.472"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:05:36.473" level="INFO">${postfix} = 47888</msg>
<status status="PASS" starttime="20250214 15:05:36.473" endtime="20250214 15:05:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:36.473" level="INFO">${tmpfile} = /tmp/tempkey-47888</msg>
<status status="PASS" starttime="20250214 15:05:36.473" endtime="20250214 15:05:36.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:36.476" level="INFO">Running command 'ozone sh key get /vol5609/default/dir/1mb /tmp/tempkey-47888 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:40.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:40.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:36.474" endtime="20250214 15:05:40.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:40.932" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:40.931" endtime="20250214 15:05:40.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:40.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:40.932" endtime="20250214 15:05:40.932"/>
</kw>
<status status="PASS" starttime="20250214 15:05:36.474" endtime="20250214 15:05:40.932"/>
</kw>
<msg timestamp="20250214 15:05:40.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:36.473" endtime="20250214 15:05:40.933"/>
</kw>
<status status="PASS" starttime="20250214 15:05:36.473" endtime="20250214 15:05:40.933"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:05:40.935" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-47888 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:40.939" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:05:40.933" endtime="20250214 15:05:40.939"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:40.942" level="INFO">Running command 'rm -f /tmp/tempkey-47888 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:40.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:40.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:40.940" endtime="20250214 15:05:40.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:40.946" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:40.946" endtime="20250214 15:05:40.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:40.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:40.946" endtime="20250214 15:05:40.947"/>
</kw>
<status status="PASS" starttime="20250214 15:05:40.940" endtime="20250214 15:05:40.947"/>
</kw>
<msg timestamp="20250214 15:05:40.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:40.940" endtime="20250214 15:05:40.947"/>
</kw>
<status status="PASS" starttime="20250214 15:05:40.939" endtime="20250214 15:05:40.947"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:05:40.947" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:05:40.947" endtime="20250214 15:05:40.947"/>
</kw>
<msg timestamp="20250214 15:05:40.948" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:05:36.472" endtime="20250214 15:05:40.948"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:05:40.948" endtime="20250214 15:05:40.948"/>
</kw>
<status status="PASS" starttime="20250214 15:05:36.472" endtime="20250214 15:05:40.948"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:40.951" level="INFO">Running command 'ozone sh key info /vol5609/default/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:44.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:44.171" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:40.949" endtime="20250214 15:05:44.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:44.172" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:44.172" endtime="20250214 15:05:44.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:44.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:44.172" endtime="20250214 15:05:44.172"/>
</kw>
<status status="PASS" starttime="20250214 15:05:40.949" endtime="20250214 15:05:44.173"/>
</kw>
<msg timestamp="20250214 15:05:44.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:40.949" endtime="20250214 15:05:44.173"/>
</kw>
<msg timestamp="20250214 15:05:44.173" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:40.948" endtime="20250214 15:05:44.173"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:44.173" endtime="20250214 15:05:44.174"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:44.174" endtime="20250214 15:05:44.174"/>
</kw>
<status status="PASS" starttime="20250214 15:05:44.173" endtime="20250214 15:05:44.174"/>
</kw>
<status status="PASS" starttime="20250214 15:05:40.948" endtime="20250214 15:05:44.174"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:44.177" level="INFO">Running command 'ozone sh key info /vol5609/default/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:47.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:47.287" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:44.175" endtime="20250214 15:05:47.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:47.287" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:47.287" endtime="20250214 15:05:47.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:47.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:47.288" endtime="20250214 15:05:47.288"/>
</kw>
<status status="PASS" starttime="20250214 15:05:44.175" endtime="20250214 15:05:47.288"/>
</kw>
<msg timestamp="20250214 15:05:47.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:44.175" endtime="20250214 15:05:47.288"/>
</kw>
<msg timestamp="20250214 15:05:47.288" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:44.174" endtime="20250214 15:05:47.288"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:47.289" endtime="20250214 15:05:47.289"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:47.289" endtime="20250214 15:05:47.290"/>
</kw>
<status status="PASS" starttime="20250214 15:05:47.288" endtime="20250214 15:05:47.290"/>
</kw>
<status status="PASS" starttime="20250214 15:05:44.174" endtime="20250214 15:05:47.290"/>
</kw>
<status status="PASS" starttime="20250214 15:05:31.910" endtime="20250214 15:05:47.290"/>
</test>
<test id="s1-s3-t7" name="Create Key in Ratis Bucket" line="97">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:47.291" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 15:05:47.291" endtime="20250214 15:05:47.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:47.291" level="INFO">${dir} = /vol5609/ratis/dir</msg>
<status status="PASS" starttime="20250214 15:05:47.291" endtime="20250214 15:05:47.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:47.291" level="INFO">${key} = /vol5609/ratis/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:05:47.291" endtime="20250214 15:05:47.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:47.292" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 15:05:47.291" endtime="20250214 15:05:47.292"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:47.295" level="INFO">Running command 'ozone sh key put  /vol5609/ratis/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:51.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:51.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:47.293" endtime="20250214 15:05:51.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:51.664" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:51.663" endtime="20250214 15:05:51.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:51.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:51.664" endtime="20250214 15:05:51.664"/>
</kw>
<status status="PASS" starttime="20250214 15:05:47.293" endtime="20250214 15:05:51.664"/>
</kw>
<msg timestamp="20250214 15:05:51.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:47.293" endtime="20250214 15:05:51.664"/>
</kw>
<msg timestamp="20250214 15:05:51.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:47.292" endtime="20250214 15:05:51.664"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:05:51.665" endtime="20250214 15:05:51.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:51.665" level="INFO">Uploaded /tmp/1mb to /vol5609/ratis/dir/1mb</msg>
<status status="PASS" starttime="20250214 15:05:51.665" endtime="20250214 15:05:51.665"/>
</kw>
<status status="PASS" starttime="20250214 15:05:47.292" endtime="20250214 15:05:51.665"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:05:51.666" level="INFO">${postfix} = 31783</msg>
<status status="PASS" starttime="20250214 15:05:51.666" endtime="20250214 15:05:51.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:05:51.666" level="INFO">${tmpfile} = /tmp/tempkey-31783</msg>
<status status="PASS" starttime="20250214 15:05:51.666" endtime="20250214 15:05:51.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:51.669" level="INFO">Running command 'ozone sh key get /vol5609/ratis/dir/1mb /tmp/tempkey-31783 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:56.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:56.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:51.667" endtime="20250214 15:05:56.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:56.065" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:56.065" endtime="20250214 15:05:56.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:56.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:56.065" endtime="20250214 15:05:56.065"/>
</kw>
<status status="PASS" starttime="20250214 15:05:51.667" endtime="20250214 15:05:56.065"/>
</kw>
<msg timestamp="20250214 15:05:56.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:51.667" endtime="20250214 15:05:56.066"/>
</kw>
<status status="PASS" starttime="20250214 15:05:51.666" endtime="20250214 15:05:56.066"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:05:56.068" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-31783 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:56.071" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:05:56.066" endtime="20250214 15:05:56.071"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:56.075" level="INFO">Running command 'rm -f /tmp/tempkey-31783 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:56.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:56.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:05:56.073" endtime="20250214 15:05:56.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:56.079" level="INFO"/>
<status status="PASS" starttime="20250214 15:05:56.079" endtime="20250214 15:05:56.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:56.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:56.079" endtime="20250214 15:05:56.079"/>
</kw>
<status status="PASS" starttime="20250214 15:05:56.073" endtime="20250214 15:05:56.079"/>
</kw>
<msg timestamp="20250214 15:05:56.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:56.072" endtime="20250214 15:05:56.080"/>
</kw>
<status status="PASS" starttime="20250214 15:05:56.072" endtime="20250214 15:05:56.080"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:05:56.080" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:05:56.080" endtime="20250214 15:05:56.080"/>
</kw>
<msg timestamp="20250214 15:05:56.080" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:05:51.666" endtime="20250214 15:05:56.080"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:05:56.080" endtime="20250214 15:05:56.081"/>
</kw>
<status status="PASS" starttime="20250214 15:05:51.665" endtime="20250214 15:05:56.081"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:56.084" level="INFO">Running command 'ozone sh key info /vol5609/ratis/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:05:59.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:05:59.348" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:56.082" endtime="20250214 15:05:59.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:05:59.349" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:59.349" endtime="20250214 15:05:59.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:05:59.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:05:59.349" endtime="20250214 15:05:59.350"/>
</kw>
<status status="PASS" starttime="20250214 15:05:56.081" endtime="20250214 15:05:59.350"/>
</kw>
<msg timestamp="20250214 15:05:59.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:56.081" endtime="20250214 15:05:59.350"/>
</kw>
<msg timestamp="20250214 15:05:59.350" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:56.081" endtime="20250214 15:05:59.350"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:59.351" endtime="20250214 15:05:59.351"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:05:59.351" endtime="20250214 15:05:59.351"/>
</kw>
<status status="PASS" starttime="20250214 15:05:59.350" endtime="20250214 15:05:59.351"/>
</kw>
<status status="PASS" starttime="20250214 15:05:56.081" endtime="20250214 15:05:59.351"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:05:59.355" level="INFO">Running command 'ozone sh key info /vol5609/ratis/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:02.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:02.551" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:59.353" endtime="20250214 15:06:02.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:02.552" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:02.552" endtime="20250214 15:06:02.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:02.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:02.552" endtime="20250214 15:06:02.553"/>
</kw>
<status status="PASS" starttime="20250214 15:05:59.352" endtime="20250214 15:06:02.553"/>
</kw>
<msg timestamp="20250214 15:06:02.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:05:59.352" endtime="20250214 15:06:02.553"/>
</kw>
<msg timestamp="20250214 15:06:02.553" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:05:59.352" endtime="20250214 15:06:02.553"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:02.554" endtime="20250214 15:06:02.554"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:02.554" endtime="20250214 15:06:02.554"/>
</kw>
<status status="PASS" starttime="20250214 15:06:02.553" endtime="20250214 15:06:02.554"/>
</kw>
<status status="PASS" starttime="20250214 15:05:59.351" endtime="20250214 15:06:02.554"/>
</kw>
<status status="PASS" starttime="20250214 15:05:47.290" endtime="20250214 15:06:02.554"/>
</test>
<test id="s1-s3-t8" name="Create Ratis Key In EC Bucket" line="107">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:02.555" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 15:06:02.555" endtime="20250214 15:06:02.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:02.556" level="INFO">${dir} = /vol5609/ecbucket/dir2</msg>
<status status="PASS" starttime="20250214 15:06:02.555" endtime="20250214 15:06:02.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}Ratis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:02.556" level="INFO">${key} = /vol5609/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20250214 15:06:02.556" endtime="20250214 15:06:02.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:02.556" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 15:06:02.556" endtime="20250214 15:06:02.556"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=THREE --type=RATIS</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:02.560" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /vol5609/ecbucket/dir2/1mbRatis /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:07.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:07.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:02.558" endtime="20250214 15:06:07.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:07.138" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:07.138" endtime="20250214 15:06:07.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:07.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:07.139" endtime="20250214 15:06:07.139"/>
</kw>
<status status="PASS" starttime="20250214 15:06:02.557" endtime="20250214 15:06:07.139"/>
</kw>
<msg timestamp="20250214 15:06:07.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:02.557" endtime="20250214 15:06:07.139"/>
</kw>
<msg timestamp="20250214 15:06:07.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:02.557" endtime="20250214 15:06:07.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:07.139" endtime="20250214 15:06:07.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:07.140" level="INFO">Uploaded /tmp/1mb to /vol5609/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20250214 15:06:07.140" endtime="20250214 15:06:07.140"/>
</kw>
<status status="PASS" starttime="20250214 15:06:02.556" endtime="20250214 15:06:07.140"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:06:07.141" level="INFO">${postfix} = 27744</msg>
<status status="PASS" starttime="20250214 15:06:07.141" endtime="20250214 15:06:07.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:07.141" level="INFO">${tmpfile} = /tmp/tempkey-27744</msg>
<status status="PASS" starttime="20250214 15:06:07.141" endtime="20250214 15:06:07.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:07.144" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir2/1mbRatis /tmp/tempkey-27744 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:11.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:11.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:07.142" endtime="20250214 15:06:11.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:11.633" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:11.632" endtime="20250214 15:06:11.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:11.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:11.633" endtime="20250214 15:06:11.633"/>
</kw>
<status status="PASS" starttime="20250214 15:06:07.142" endtime="20250214 15:06:11.633"/>
</kw>
<msg timestamp="20250214 15:06:11.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:07.142" endtime="20250214 15:06:11.633"/>
</kw>
<status status="PASS" starttime="20250214 15:06:07.141" endtime="20250214 15:06:11.633"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:06:11.636" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-27744 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:11.639" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:06:11.633" endtime="20250214 15:06:11.640"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:11.643" level="INFO">Running command 'rm -f /tmp/tempkey-27744 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:11.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:11.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:11.641" endtime="20250214 15:06:11.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:11.647" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:11.647" endtime="20250214 15:06:11.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:11.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:11.648" endtime="20250214 15:06:11.649"/>
</kw>
<status status="PASS" starttime="20250214 15:06:11.641" endtime="20250214 15:06:11.649"/>
</kw>
<msg timestamp="20250214 15:06:11.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:11.640" endtime="20250214 15:06:11.649"/>
</kw>
<status status="PASS" starttime="20250214 15:06:11.640" endtime="20250214 15:06:11.649"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:06:11.649" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:06:11.649" endtime="20250214 15:06:11.650"/>
</kw>
<msg timestamp="20250214 15:06:11.650" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:06:07.140" endtime="20250214 15:06:11.650"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:06:11.650" endtime="20250214 15:06:11.650"/>
</kw>
<status status="PASS" starttime="20250214 15:06:07.140" endtime="20250214 15:06:11.650"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:11.654" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir2/1mbRatis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:14.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:14.875" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:11.651" endtime="20250214 15:06:14.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:14.876" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:14.876" endtime="20250214 15:06:14.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:14.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:14.876" endtime="20250214 15:06:14.876"/>
</kw>
<status status="PASS" starttime="20250214 15:06:11.651" endtime="20250214 15:06:14.877"/>
</kw>
<msg timestamp="20250214 15:06:14.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:11.651" endtime="20250214 15:06:14.877"/>
</kw>
<msg timestamp="20250214 15:06:14.877" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:11.650" endtime="20250214 15:06:14.877"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:14.877" endtime="20250214 15:06:14.878"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:14.878" endtime="20250214 15:06:14.878"/>
</kw>
<status status="PASS" starttime="20250214 15:06:14.877" endtime="20250214 15:06:14.878"/>
</kw>
<status status="PASS" starttime="20250214 15:06:11.650" endtime="20250214 15:06:14.878"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:14.881" level="INFO">Running command 'ozone sh key info /vol5609/ecbucket/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:18.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:18.088" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:14.879" endtime="20250214 15:06:18.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:18.089" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:18.089" endtime="20250214 15:06:18.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:18.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:18.089" endtime="20250214 15:06:18.090"/>
</kw>
<status status="PASS" starttime="20250214 15:06:14.879" endtime="20250214 15:06:18.090"/>
</kw>
<msg timestamp="20250214 15:06:18.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:14.879" endtime="20250214 15:06:18.090"/>
</kw>
<msg timestamp="20250214 15:06:18.090" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:14.878" endtime="20250214 15:06:18.090"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:18.091" endtime="20250214 15:06:18.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:18.091" endtime="20250214 15:06:18.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:18.091" endtime="20250214 15:06:18.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:18.091" endtime="20250214 15:06:18.092"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:18.092" endtime="20250214 15:06:18.092"/>
</kw>
<status status="PASS" starttime="20250214 15:06:18.090" endtime="20250214 15:06:18.092"/>
</kw>
<status status="PASS" starttime="20250214 15:06:14.878" endtime="20250214 15:06:18.092"/>
</kw>
<status status="PASS" starttime="20250214 15:06:02.555" endtime="20250214 15:06:18.092"/>
</test>
<test id="s1-s3-t9" name="Create EC Key In Ratis Bucket" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:18.093" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 15:06:18.093" endtime="20250214 15:06:18.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:18.093" level="INFO">${dir} = /vol5609/ratis/dir2</msg>
<status status="PASS" starttime="20250214 15:06:18.093" endtime="20250214 15:06:18.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}EC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:18.094" level="INFO">${key} = /vol5609/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20250214 15:06:18.094" endtime="20250214 15:06:18.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:18.094" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 15:06:18.094" endtime="20250214 15:06:18.094"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=rs-3-2-1024k --type=EC</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:18.098" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /vol5609/ratis/dir2/1mbEC /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:22.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:22.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:18.096" endtime="20250214 15:06:22.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:22.716" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:22.716" endtime="20250214 15:06:22.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:22.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:22.716" endtime="20250214 15:06:22.717"/>
</kw>
<status status="PASS" starttime="20250214 15:06:18.095" endtime="20250214 15:06:22.717"/>
</kw>
<msg timestamp="20250214 15:06:22.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:18.095" endtime="20250214 15:06:22.717"/>
</kw>
<msg timestamp="20250214 15:06:22.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:18.095" endtime="20250214 15:06:22.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:22.717" endtime="20250214 15:06:22.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:22.718" level="INFO">Uploaded /tmp/1mb to /vol5609/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20250214 15:06:22.717" endtime="20250214 15:06:22.718"/>
</kw>
<status status="PASS" starttime="20250214 15:06:18.094" endtime="20250214 15:06:22.718"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:06:22.719" level="INFO">${postfix} = 73338</msg>
<status status="PASS" starttime="20250214 15:06:22.719" endtime="20250214 15:06:22.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:06:22.719" level="INFO">${tmpfile} = /tmp/tempkey-73338</msg>
<status status="PASS" starttime="20250214 15:06:22.719" endtime="20250214 15:06:22.719"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:22.722" level="INFO">Running command 'ozone sh key get /vol5609/ratis/dir2/1mbEC /tmp/tempkey-73338 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:27.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:27.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:22.720" endtime="20250214 15:06:27.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:27.035" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:27.035" endtime="20250214 15:06:27.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:27.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:27.035" endtime="20250214 15:06:27.036"/>
</kw>
<status status="PASS" starttime="20250214 15:06:22.720" endtime="20250214 15:06:27.036"/>
</kw>
<msg timestamp="20250214 15:06:27.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:22.720" endtime="20250214 15:06:27.036"/>
</kw>
<status status="PASS" starttime="20250214 15:06:22.719" endtime="20250214 15:06:27.036"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:06:27.038" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-73338 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:27.042" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:06:27.036" endtime="20250214 15:06:27.042"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:27.045" level="INFO">Running command 'rm -f /tmp/tempkey-73338 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:27.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:27.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:27.043" endtime="20250214 15:06:27.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:27.049" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:27.049" endtime="20250214 15:06:27.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:27.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:27.049" endtime="20250214 15:06:27.049"/>
</kw>
<status status="PASS" starttime="20250214 15:06:27.043" endtime="20250214 15:06:27.049"/>
</kw>
<msg timestamp="20250214 15:06:27.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:27.042" endtime="20250214 15:06:27.050"/>
</kw>
<status status="PASS" starttime="20250214 15:06:27.042" endtime="20250214 15:06:27.050"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:06:27.050" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:06:27.050" endtime="20250214 15:06:27.050"/>
</kw>
<msg timestamp="20250214 15:06:27.050" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:06:22.718" endtime="20250214 15:06:27.050"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:06:27.050" endtime="20250214 15:06:27.050"/>
</kw>
<status status="PASS" starttime="20250214 15:06:22.718" endtime="20250214 15:06:27.051"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:27.054" level="INFO">Running command 'ozone sh key info /vol5609/ratis/dir2/1mbEC | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:30.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:30.367" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:27.052" endtime="20250214 15:06:30.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:30.367" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:30.367" endtime="20250214 15:06:30.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:30.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:30.368" endtime="20250214 15:06:30.368"/>
</kw>
<status status="PASS" starttime="20250214 15:06:27.052" endtime="20250214 15:06:30.368"/>
</kw>
<msg timestamp="20250214 15:06:30.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:27.051" endtime="20250214 15:06:30.368"/>
</kw>
<msg timestamp="20250214 15:06:30.368" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 15:06:27.051" endtime="20250214 15:06:30.368"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:30.369" endtime="20250214 15:06:30.369"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:30.369" endtime="20250214 15:06:30.369"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:30.370" endtime="20250214 15:06:30.370"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:30.370" endtime="20250214 15:06:30.370"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:30.370" endtime="20250214 15:06:30.370"/>
</kw>
<status status="PASS" starttime="20250214 15:06:30.368" endtime="20250214 15:06:30.370"/>
</kw>
<status status="PASS" starttime="20250214 15:06:27.051" endtime="20250214 15:06:30.370"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:30.374" level="INFO">Running command 'ozone sh key info /vol5609/ratis/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:33.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:33.514" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:30.372" endtime="20250214 15:06:33.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:33.515" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:33.515" endtime="20250214 15:06:33.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:33.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:33.515" endtime="20250214 15:06:33.516"/>
</kw>
<status status="PASS" starttime="20250214 15:06:30.371" endtime="20250214 15:06:33.516"/>
</kw>
<msg timestamp="20250214 15:06:33.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:30.371" endtime="20250214 15:06:33.516"/>
</kw>
<msg timestamp="20250214 15:06:33.516" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 15:06:30.371" endtime="20250214 15:06:33.516"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:33.517" endtime="20250214 15:06:33.517"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 15:06:33.517" endtime="20250214 15:06:33.517"/>
</kw>
<status status="PASS" starttime="20250214 15:06:33.516" endtime="20250214 15:06:33.517"/>
</kw>
<status status="PASS" starttime="20250214 15:06:30.371" endtime="20250214 15:06:33.517"/>
</kw>
<status status="PASS" starttime="20250214 15:06:18.093" endtime="20250214 15:06:33.517"/>
</test>
<test id="s1-s3-t10" name="Test Invalid Replication Parameters" line="127">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:33.520" level="INFO">Running command 'ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /vol5609/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:36.363" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:06:36.363" level="INFO">${output} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:33.518" endtime="20250214 15:06:36.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:36.364" level="INFO">rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:36.364" endtime="20250214 15:06:36.364"/>
</kw>
<msg timestamp="20250214 15:06:36.364" level="INFO">${message} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:33.518" endtime="20250214 15:06:36.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:36.365" endtime="20250214 15:06:36.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-3-2-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:36.365" endtime="20250214 15:06:36.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:36.365" endtime="20250214 15:06:36.365"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-6-3-1024k --type=RATIS /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:36.368" level="INFO">Running command 'ozone sh key put --replication=rs-6-3-1024k --type=RATIS /vol5609/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:39.030" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:06:39.030" level="INFO">${output} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:36.366" endtime="20250214 15:06:39.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:39.031" level="INFO">rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:39.030" endtime="20250214 15:06:39.031"/>
</kw>
<msg timestamp="20250214 15:06:39.031" level="INFO">${message} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 15:06:36.365" endtime="20250214 15:06:39.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:39.031" endtime="20250214 15:06:39.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-6-3-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:39.031" endtime="20250214 15:06:39.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:39.032" endtime="20250214 15:06:39.032"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:39.035" level="INFO">Running command 'ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /vol5609/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:40.147" level="INFO">${rc} = 2</msg>
<msg timestamp="20250214 15:06:40.147" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 15:06:39.032" endtime="20250214 15:06:40.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:40.148" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: fso (for file system
                             optimized buckets FILE_SYSTEM_OPTIMIZED), obs (for
                             object store optimized OBJECT_STORE) and legacy
                             (LEGACY is Deprecated)
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20250214 15:06:40.148" endtime="20250214 15:06:40.148"/>
</kw>
<msg timestamp="20250214 15:06:40.148" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 15:06:39.032" endtime="20250214 15:06:40.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:40.148" endtime="20250214 15:06:40.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:40.149" endtime="20250214 15:06:40.149"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:40.152" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /vol5609/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:41.259" level="INFO">${rc} = 2</msg>
<msg timestamp="20250214 15:06:41.259" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 15:06:40.149" endtime="20250214 15:06:41.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:41.260" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20250214 15:06:41.260" endtime="20250214 15:06:41.260"/>
</kw>
<msg timestamp="20250214 15:06:41.260" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 15:06:40.149" endtime="20250214 15:06:41.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:41.261" endtime="20250214 15:06:41.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:41.261" endtime="20250214 15:06:41.261"/>
</kw>
<status status="PASS" starttime="20250214 15:06:33.518" endtime="20250214 15:06:41.261"/>
</test>
<test id="s1-s3-t11" name="Invalid Replication With Misconfigured Client" line="143">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /${VOLUME}/invalid</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:41.265" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /vol5609/invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:44.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:06:44.121" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 15:06:41.263" endtime="20250214 15:06:44.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:44.121" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 15:06:44.121" endtime="20250214 15:06:44.121"/>
</kw>
<msg timestamp="20250214 15:06:44.122" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 15:06:41.262" endtime="20250214 15:06:44.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:44.122" endtime="20250214 15:06:44.122"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /${VOLUME}/ecbucket/invalid /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:44.124" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /vol5609/ecbucket/invalid /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:47.075" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 15:06:47.075" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 15:06:44.122" endtime="20250214 15:06:47.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:47.076" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 15:06:47.076" endtime="20250214 15:06:47.076"/>
</kw>
<msg timestamp="20250214 15:06:47.076" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 15:06:44.122" endtime="20250214 15:06:47.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:06:47.077" endtime="20250214 15:06:47.077"/>
</kw>
<status status="PASS" starttime="20250214 15:06:41.262" endtime="20250214 15:06:47.077"/>
</test>
<test id="s1-s3-t12" name="Check disk usage after create a file which uses EC replication type" line="152">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:06:47.078" level="INFO">${vol} = hfibugur</msg>
<status status="PASS" starttime="20250214 15:06:47.078" endtime="20250214 15:06:47.078"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:06:47.078" level="INFO">${bucket} = yfkhibrh</msg>
<status status="PASS" starttime="20250214 15:06:47.078" endtime="20250214 15:06:47.079"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:47.082" level="INFO">Running command 'ozone sh volume create /hfibugur 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:49.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:49.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:47.080" endtime="20250214 15:06:49.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:49.845" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:49.844" endtime="20250214 15:06:49.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:49.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:49.845" endtime="20250214 15:06:49.845"/>
</kw>
<status status="PASS" starttime="20250214 15:06:47.079" endtime="20250214 15:06:49.845"/>
</kw>
<msg timestamp="20250214 15:06:49.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:47.079" endtime="20250214 15:06:49.845"/>
</kw>
<status status="PASS" starttime="20250214 15:06:47.079" endtime="20250214 15:06:49.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type EC --replication rs-3-2-1024k</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:49.849" level="INFO">Running command 'ozone sh bucket create /hfibugur/yfkhibrh --type EC --replication rs-3-2-1024k 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:52.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:52.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:49.847" endtime="20250214 15:06:52.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:52.730" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:52.729" endtime="20250214 15:06:52.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:52.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:52.730" endtime="20250214 15:06:52.730"/>
</kw>
<status status="PASS" starttime="20250214 15:06:49.847" endtime="20250214 15:06:52.730"/>
</kw>
<msg timestamp="20250214 15:06:52.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:49.846" endtime="20250214 15:06:52.730"/>
</kw>
<status status="PASS" starttime="20250214 15:06:49.846" endtime="20250214 15:06:52.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE2.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:52.734" level="INFO">Running command 'ozone fs -put NOTICE.txt /hfibugur/yfkhibrh/PUTFILE2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:57.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:57.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:06:52.731" endtime="20250214 15:06:57.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:57.245" level="INFO"/>
<status status="PASS" starttime="20250214 15:06:57.244" endtime="20250214 15:06:57.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:57.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:57.245" endtime="20250214 15:06:57.245"/>
</kw>
<status status="PASS" starttime="20250214 15:06:52.731" endtime="20250214 15:06:57.245"/>
</kw>
<msg timestamp="20250214 15:06:57.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:52.731" endtime="20250214 15:06:57.245"/>
</kw>
<status status="PASS" starttime="20250214 15:06:52.731" endtime="20250214 15:06:57.245"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:57.249" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:06:57.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:06:57.253" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20250214 15:06:57.246" endtime="20250214 15:06:57.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:06:57.253" level="INFO">17289</msg>
<status status="PASS" starttime="20250214 15:06:57.253" endtime="20250214 15:06:57.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:06:57.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:06:57.253" endtime="20250214 15:06:57.254"/>
</kw>
<status status="PASS" starttime="20250214 15:06:57.246" endtime="20250214 15:06:57.254"/>
</kw>
<msg timestamp="20250214 15:06:57.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:57.246" endtime="20250214 15:06:57.254"/>
</kw>
<msg timestamp="20250214 15:06:57.254" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20250214 15:06:57.246" endtime="20250214 15:06:57.254"/>
</kw>
<kw name="Get Disk Usage of File with EC RS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1024</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.255" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20250214 15:06:57.255" endtime="20250214 15:06:57.255"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${dataStripeSize}</var>
<arg>${dataChunkCount} * ${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.255" level="INFO">${dataStripeSize} = 3221225472</msg>
<status status="PASS" starttime="20250214 15:06:57.255" endtime="20250214 15:06:57.255"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fileLength}/${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.255" level="INFO">${fullStripes} = 5.367211997509003e-06</msg>
<status status="PASS" starttime="20250214 15:06:57.255" endtime="20250214 15:06:57.255"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 15:06:57.256" level="INFO">${fullStripes} = 0</msg>
<status status="PASS" starttime="20250214 15:06:57.256" endtime="20250214 15:06:57.256"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:06:57.256" level="INFO">${fullStripes} = 0.0</msg>
<status status="PASS" starttime="20250214 15:06:57.256" endtime="20250214 15:06:57.256"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${fileLength} % ${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.256" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 15:06:57.256" endtime="20250214 15:06:57.256"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 15:06:57.257" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20250214 15:06:57.257" endtime="20250214 15:06:57.257"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${partialFirstChunk}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 15:06:57.257" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 15:06:57.257" endtime="20250214 15:06:57.257"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${partialFirstChunkOptions}</var>
<arg>${ecChunkSize}</arg>
<arg>${partialFirstChunk}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 15:06:57.257" level="INFO">${partialFirstChunkOptions} = [1048576, 17289]</msg>
<status status="PASS" starttime="20250214 15:06:57.257" endtime="20250214 15:06:57.257"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>min(${partialFirstChunkOptions})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.258" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 15:06:57.258" endtime="20250214 15:06:57.258"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${replicationOverhead}</var>
<arg>${fullStripes} * 2 * 1024 * 1024 + ${partialFirstChunk} * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.258" level="INFO">${replicationOverhead} = 34578.0</msg>
<status status="PASS" starttime="20250214 15:06:57.258" endtime="20250214 15:06:57.258"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} + ${replicationOverhead}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 15:06:57.258" level="INFO">${expectedDiskUsage} = 51867.0</msg>
<status status="PASS" starttime="20250214 15:06:57.258" endtime="20250214 15:06:57.258"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 15:06:57.259" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 15:06:57.259" endtime="20250214 15:06:57.259"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250214 15:06:57.259" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 15:06:57.259" endtime="20250214 15:06:57.259"/>
</kw>
<msg timestamp="20250214 15:06:57.259" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 15:06:57.254" endtime="20250214 15:06:57.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:06:57.262" level="INFO">Running command 'ozone fs -du /hfibugur/yfkhibrh 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:07:00.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:07:00.414" level="INFO">${output} = 17289  51867  /hfibugur/yfkhibrh/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 15:06:57.260" endtime="20250214 15:07:00.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:07:00.415" level="INFO">17289  51867  /hfibugur/yfkhibrh/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 15:07:00.415" endtime="20250214 15:07:00.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:07:00.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:07:00.415" endtime="20250214 15:07:00.416"/>
</kw>
<status status="PASS" starttime="20250214 15:06:57.260" endtime="20250214 15:07:00.416"/>
</kw>
<msg timestamp="20250214 15:07:00.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:06:57.260" endtime="20250214 15:07:00.416"/>
</kw>
<msg timestamp="20250214 15:07:00.416" level="INFO">${result} = 17289  51867  /hfibugur/yfkhibrh/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 15:06:57.259" endtime="20250214 15:07:00.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE2.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:07:00.416" endtime="20250214 15:07:00.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:07:00.416" endtime="20250214 15:07:00.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 15:07:00.417" endtime="20250214 15:07:00.417"/>
</kw>
<status status="PASS" starttime="20250214 15:06:47.077" endtime="20250214 15:07:00.417"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20250214 15:04:05.803" endtime="20250214 15:07:00.418"/>
</suite>
<suite id="s1-s4" name="read-4-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s4-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:07:04.356" level="INFO">${postfix} = 72381</msg>
<status status="PASS" starttime="20250214 15:07:04.356" endtime="20250214 15:07:04.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:07:04.357" level="INFO">${tmpfile} = /tmp/tempkey-72381</msg>
<status status="PASS" starttime="20250214 15:07:04.357" endtime="20250214 15:07:04.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:07:04.360" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/1mb /tmp/tempkey-72381 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:07:57.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:07:57.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:07:04.358" endtime="20250214 15:07:57.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:07:57.217" level="INFO"/>
<status status="PASS" starttime="20250214 15:07:57.216" endtime="20250214 15:07:57.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:07:57.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:07:57.217" endtime="20250214 15:07:57.217"/>
</kw>
<status status="PASS" starttime="20250214 15:07:04.357" endtime="20250214 15:07:57.217"/>
</kw>
<msg timestamp="20250214 15:07:57.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:07:04.357" endtime="20250214 15:07:57.218"/>
</kw>
<status status="PASS" starttime="20250214 15:07:04.357" endtime="20250214 15:07:57.218"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:07:57.220" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-72381 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:07:57.223" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:07:57.218" endtime="20250214 15:07:57.223"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:07:57.226" level="INFO">Running command 'rm -f /tmp/tempkey-72381 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:07:57.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:07:57.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:07:57.225" endtime="20250214 15:07:57.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:07:57.230" level="INFO"/>
<status status="PASS" starttime="20250214 15:07:57.230" endtime="20250214 15:07:57.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:07:57.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:07:57.231" endtime="20250214 15:07:57.231"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.224" endtime="20250214 15:07:57.231"/>
</kw>
<msg timestamp="20250214 15:07:57.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:07:57.224" endtime="20250214 15:07:57.231"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.224" endtime="20250214 15:07:57.231"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:07:57.232" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:07:57.231" endtime="20250214 15:07:57.232"/>
</kw>
<msg timestamp="20250214 15:07:57.232" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:07:04.356" endtime="20250214 15:07:57.232"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:07:57.232" endtime="20250214 15:07:57.232"/>
</kw>
<status status="PASS" starttime="20250214 15:07:04.356" endtime="20250214 15:07:57.232"/>
</kw>
<status status="PASS" starttime="20250214 15:07:04.355" endtime="20250214 15:07:57.232"/>
</test>
<test id="s1-s4-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:07:57.234" level="INFO">${postfix} = 91273</msg>
<status status="PASS" starttime="20250214 15:07:57.234" endtime="20250214 15:07:57.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:07:57.234" level="INFO">${tmpfile} = /tmp/tempkey-91273</msg>
<status status="PASS" starttime="20250214 15:07:57.234" endtime="20250214 15:07:57.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:07:57.237" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/2mb /tmp/tempkey-91273 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:01.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:01.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:07:57.235" endtime="20250214 15:08:01.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:01.748" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:01.748" endtime="20250214 15:08:01.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:01.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:01.748" endtime="20250214 15:08:01.749"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.235" endtime="20250214 15:08:01.749"/>
</kw>
<msg timestamp="20250214 15:08:01.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:07:57.235" endtime="20250214 15:08:01.749"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.234" endtime="20250214 15:08:01.749"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:01.751" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-91273 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:01.756" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:01.749" endtime="20250214 15:08:01.756"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:01.759" level="INFO">Running command 'rm -f /tmp/tempkey-91273 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:01.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:01.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:01.757" endtime="20250214 15:08:01.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:01.763" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:01.763" endtime="20250214 15:08:01.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:01.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:01.763" endtime="20250214 15:08:01.764"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.757" endtime="20250214 15:08:01.764"/>
</kw>
<msg timestamp="20250214 15:08:01.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:01.756" endtime="20250214 15:08:01.764"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.756" endtime="20250214 15:08:01.764"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:01.764" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:01.764" endtime="20250214 15:08:01.764"/>
</kw>
<msg timestamp="20250214 15:08:01.764" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:07:57.233" endtime="20250214 15:08:01.764"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:01.764" endtime="20250214 15:08:01.765"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.233" endtime="20250214 15:08:01.765"/>
</kw>
<status status="PASS" starttime="20250214 15:07:57.233" endtime="20250214 15:08:01.765"/>
</test>
<test id="s1-s4-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:01.766" level="INFO">${postfix} = 88372</msg>
<status status="PASS" starttime="20250214 15:08:01.766" endtime="20250214 15:08:01.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:01.767" level="INFO">${tmpfile} = /tmp/tempkey-88372</msg>
<status status="PASS" starttime="20250214 15:08:01.767" endtime="20250214 15:08:01.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:01.770" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/3mb /tmp/tempkey-88372 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:15.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:15.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:01.768" endtime="20250214 15:08:15.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:15.872" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:15.871" endtime="20250214 15:08:15.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:15.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:15.872" endtime="20250214 15:08:15.872"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.767" endtime="20250214 15:08:15.872"/>
</kw>
<msg timestamp="20250214 15:08:15.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:01.767" endtime="20250214 15:08:15.873"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.767" endtime="20250214 15:08:15.873"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:15.875" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-88372 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:15.880" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:15.873" endtime="20250214 15:08:15.880"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:15.883" level="INFO">Running command 'rm -f /tmp/tempkey-88372 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:15.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:15.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:15.881" endtime="20250214 15:08:15.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:15.888" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:15.888" endtime="20250214 15:08:15.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:15.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:15.888" endtime="20250214 15:08:15.888"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.881" endtime="20250214 15:08:15.889"/>
</kw>
<msg timestamp="20250214 15:08:15.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:15.881" endtime="20250214 15:08:15.889"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.880" endtime="20250214 15:08:15.889"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:15.889" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:15.889" endtime="20250214 15:08:15.889"/>
</kw>
<msg timestamp="20250214 15:08:15.889" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:01.766" endtime="20250214 15:08:15.889"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:15.890" endtime="20250214 15:08:15.890"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.766" endtime="20250214 15:08:15.890"/>
</kw>
<status status="PASS" starttime="20250214 15:08:01.765" endtime="20250214 15:08:15.890"/>
</test>
<test id="s1-s4-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:15.891" level="INFO">${postfix} = 43007</msg>
<status status="PASS" starttime="20250214 15:08:15.891" endtime="20250214 15:08:15.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:15.892" level="INFO">${tmpfile} = /tmp/tempkey-43007</msg>
<status status="PASS" starttime="20250214 15:08:15.892" endtime="20250214 15:08:15.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:15.894" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/100mb /tmp/tempkey-43007 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:31.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:31.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:15.893" endtime="20250214 15:08:31.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:31.247" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:31.247" endtime="20250214 15:08:31.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:31.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:31.247" endtime="20250214 15:08:31.248"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.892" endtime="20250214 15:08:31.248"/>
</kw>
<msg timestamp="20250214 15:08:31.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:15.892" endtime="20250214 15:08:31.248"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.892" endtime="20250214 15:08:31.248"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:31.250" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-43007 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:31.320" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:31.248" endtime="20250214 15:08:31.320"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:31.324" level="INFO">Running command 'rm -f /tmp/tempkey-43007 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:31.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:31.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:31.321" endtime="20250214 15:08:31.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:31.353" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:31.352" endtime="20250214 15:08:31.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:31.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:31.353" endtime="20250214 15:08:31.353"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.321" endtime="20250214 15:08:31.353"/>
</kw>
<msg timestamp="20250214 15:08:31.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:31.321" endtime="20250214 15:08:31.353"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.320" endtime="20250214 15:08:31.353"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:31.354" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:31.353" endtime="20250214 15:08:31.354"/>
</kw>
<msg timestamp="20250214 15:08:31.354" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:15.891" endtime="20250214 15:08:31.354"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:31.354" endtime="20250214 15:08:31.354"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.891" endtime="20250214 15:08:31.354"/>
</kw>
<status status="PASS" starttime="20250214 15:08:15.890" endtime="20250214 15:08:31.354"/>
</test>
<test id="s1-s4-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:31.356" level="INFO">${postfix} = 49168</msg>
<status status="PASS" starttime="20250214 15:08:31.356" endtime="20250214 15:08:31.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:31.356" level="INFO">${tmpfile} = /tmp/tempkey-49168</msg>
<status status="PASS" starttime="20250214 15:08:31.356" endtime="20250214 15:08:31.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:31.359" level="INFO">Running command 'ozone sh key get /vol5609/ratis/dir2/1mbEC /tmp/tempkey-49168 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:36.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:36.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:31.357" endtime="20250214 15:08:36.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:36.146" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:36.145" endtime="20250214 15:08:36.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:36.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:36.146" endtime="20250214 15:08:36.146"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.357" endtime="20250214 15:08:36.146"/>
</kw>
<msg timestamp="20250214 15:08:36.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:31.357" endtime="20250214 15:08:36.146"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.356" endtime="20250214 15:08:36.146"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:36.149" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-49168 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:36.152" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:36.146" endtime="20250214 15:08:36.152"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:36.155" level="INFO">Running command 'rm -f /tmp/tempkey-49168 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:36.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:36.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:36.153" endtime="20250214 15:08:36.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:36.159" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:36.159" endtime="20250214 15:08:36.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:36.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:36.160" endtime="20250214 15:08:36.160"/>
</kw>
<status status="PASS" starttime="20250214 15:08:36.153" endtime="20250214 15:08:36.160"/>
</kw>
<msg timestamp="20250214 15:08:36.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:36.153" endtime="20250214 15:08:36.160"/>
</kw>
<status status="PASS" starttime="20250214 15:08:36.152" endtime="20250214 15:08:36.160"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:36.161" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:36.160" endtime="20250214 15:08:36.161"/>
</kw>
<msg timestamp="20250214 15:08:36.161" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:31.355" endtime="20250214 15:08:36.161"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:36.161" endtime="20250214 15:08:36.161"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.355" endtime="20250214 15:08:36.161"/>
</kw>
<status status="PASS" starttime="20250214 15:08:31.355" endtime="20250214 15:08:36.161"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20250214 15:07:04.318" endtime="20250214 15:08:36.162"/>
</suite>
<suite id="s1-s5" name="read-3-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s5-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:39.333" level="INFO">${postfix} = 73661</msg>
<status status="PASS" starttime="20250214 15:08:39.332" endtime="20250214 15:08:39.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:39.333" level="INFO">${tmpfile} = /tmp/tempkey-73661</msg>
<status status="PASS" starttime="20250214 15:08:39.333" endtime="20250214 15:08:39.333"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:39.336" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/1mb /tmp/tempkey-73661 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:53.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:53.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:39.334" endtime="20250214 15:08:53.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:53.345" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:53.344" endtime="20250214 15:08:53.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:53.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:53.345" endtime="20250214 15:08:53.345"/>
</kw>
<status status="PASS" starttime="20250214 15:08:39.334" endtime="20250214 15:08:53.345"/>
</kw>
<msg timestamp="20250214 15:08:53.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:39.333" endtime="20250214 15:08:53.345"/>
</kw>
<status status="PASS" starttime="20250214 15:08:39.333" endtime="20250214 15:08:53.345"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:53.348" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-73661 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:53.351" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:53.346" endtime="20250214 15:08:53.351"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:53.354" level="INFO">Running command 'rm -f /tmp/tempkey-73661 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:53.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:53.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:53.353" endtime="20250214 15:08:53.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:53.358" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:53.358" endtime="20250214 15:08:53.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:53.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:53.359" endtime="20250214 15:08:53.359"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.352" endtime="20250214 15:08:53.359"/>
</kw>
<msg timestamp="20250214 15:08:53.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:53.352" endtime="20250214 15:08:53.359"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.352" endtime="20250214 15:08:53.359"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:53.360" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:53.359" endtime="20250214 15:08:53.360"/>
</kw>
<msg timestamp="20250214 15:08:53.360" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:39.332" endtime="20250214 15:08:53.360"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:53.360" endtime="20250214 15:08:53.360"/>
</kw>
<status status="PASS" starttime="20250214 15:08:39.332" endtime="20250214 15:08:53.360"/>
</kw>
<status status="PASS" starttime="20250214 15:08:39.331" endtime="20250214 15:08:53.360"/>
</test>
<test id="s1-s5-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:53.362" level="INFO">${postfix} = 89816</msg>
<status status="PASS" starttime="20250214 15:08:53.362" endtime="20250214 15:08:53.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:53.362" level="INFO">${tmpfile} = /tmp/tempkey-89816</msg>
<status status="PASS" starttime="20250214 15:08:53.362" endtime="20250214 15:08:53.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:53.365" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/2mb /tmp/tempkey-89816 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:58.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:58.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:53.363" endtime="20250214 15:08:58.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:58.018" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:58.018" endtime="20250214 15:08:58.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:58.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:58.018" endtime="20250214 15:08:58.018"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.363" endtime="20250214 15:08:58.019"/>
</kw>
<msg timestamp="20250214 15:08:58.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:53.363" endtime="20250214 15:08:58.019"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.362" endtime="20250214 15:08:58.019"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:08:58.021" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-89816 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:58.025" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:08:58.019" endtime="20250214 15:08:58.025"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:58.029" level="INFO">Running command 'rm -f /tmp/tempkey-89816 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:08:58.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:08:58.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:58.027" endtime="20250214 15:08:58.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:08:58.033" level="INFO"/>
<status status="PASS" starttime="20250214 15:08:58.033" endtime="20250214 15:08:58.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:08:58.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:08:58.033" endtime="20250214 15:08:58.034"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.027" endtime="20250214 15:08:58.034"/>
</kw>
<msg timestamp="20250214 15:08:58.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:58.026" endtime="20250214 15:08:58.034"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.026" endtime="20250214 15:08:58.034"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:08:58.034" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:08:58.034" endtime="20250214 15:08:58.034"/>
</kw>
<msg timestamp="20250214 15:08:58.035" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:53.361" endtime="20250214 15:08:58.035"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:08:58.035" endtime="20250214 15:08:58.035"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.361" endtime="20250214 15:08:58.035"/>
</kw>
<status status="PASS" starttime="20250214 15:08:53.361" endtime="20250214 15:08:58.035"/>
</test>
<test id="s1-s5-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:08:58.037" level="INFO">${postfix} = 23778</msg>
<status status="PASS" starttime="20250214 15:08:58.036" endtime="20250214 15:08:58.037"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:08:58.037" level="INFO">${tmpfile} = /tmp/tempkey-23778</msg>
<status status="PASS" starttime="20250214 15:08:58.037" endtime="20250214 15:08:58.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:08:58.040" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/3mb /tmp/tempkey-23778 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:32.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:32.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:08:58.038" endtime="20250214 15:09:32.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:32.444" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:32.443" endtime="20250214 15:09:32.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:32.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:32.444" endtime="20250214 15:09:32.444"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.037" endtime="20250214 15:09:32.444"/>
</kw>
<msg timestamp="20250214 15:09:32.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:08:58.037" endtime="20250214 15:09:32.444"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.037" endtime="20250214 15:09:32.444"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:09:32.447" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-23778 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:32.452" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:09:32.445" endtime="20250214 15:09:32.452"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:32.456" level="INFO">Running command 'rm -f /tmp/tempkey-23778 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:32.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:32.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:09:32.453" endtime="20250214 15:09:32.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:32.460" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:32.460" endtime="20250214 15:09:32.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:32.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:32.461" endtime="20250214 15:09:32.461"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.453" endtime="20250214 15:09:32.461"/>
</kw>
<msg timestamp="20250214 15:09:32.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:32.453" endtime="20250214 15:09:32.461"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.452" endtime="20250214 15:09:32.461"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:09:32.462" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:09:32.461" endtime="20250214 15:09:32.462"/>
</kw>
<msg timestamp="20250214 15:09:32.462" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:08:58.036" endtime="20250214 15:09:32.462"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:09:32.462" endtime="20250214 15:09:32.462"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.036" endtime="20250214 15:09:32.462"/>
</kw>
<status status="PASS" starttime="20250214 15:08:58.035" endtime="20250214 15:09:32.462"/>
</test>
<test id="s1-s5-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:09:32.464" level="INFO">${postfix} = 07471</msg>
<status status="PASS" starttime="20250214 15:09:32.464" endtime="20250214 15:09:32.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:09:32.464" level="INFO">${tmpfile} = /tmp/tempkey-07471</msg>
<status status="PASS" starttime="20250214 15:09:32.464" endtime="20250214 15:09:32.464"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:32.467" level="INFO">Running command 'ozone sh key get /vol5609/ecbucket/dir/100mb /tmp/tempkey-07471 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:43.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:43.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:09:32.465" endtime="20250214 15:09:43.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:43.654" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:43.653" endtime="20250214 15:09:43.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:43.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:43.654" endtime="20250214 15:09:43.654"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.465" endtime="20250214 15:09:43.654"/>
</kw>
<msg timestamp="20250214 15:09:43.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:32.465" endtime="20250214 15:09:43.654"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.464" endtime="20250214 15:09:43.654"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:09:43.657" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-07471 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:43.727" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:09:43.654" endtime="20250214 15:09:43.727"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:43.730" level="INFO">Running command 'rm -f /tmp/tempkey-07471 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:43.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:43.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:09:43.728" endtime="20250214 15:09:43.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:43.758" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:43.758" endtime="20250214 15:09:43.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:43.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:43.758" endtime="20250214 15:09:43.759"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.728" endtime="20250214 15:09:43.759"/>
</kw>
<msg timestamp="20250214 15:09:43.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:43.728" endtime="20250214 15:09:43.759"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.727" endtime="20250214 15:09:43.759"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:09:43.759" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:09:43.759" endtime="20250214 15:09:43.759"/>
</kw>
<msg timestamp="20250214 15:09:43.760" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:09:32.463" endtime="20250214 15:09:43.760"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:09:43.760" endtime="20250214 15:09:43.760"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.463" endtime="20250214 15:09:43.760"/>
</kw>
<status status="PASS" starttime="20250214 15:09:32.462" endtime="20250214 15:09:43.760"/>
</test>
<test id="s1-s5-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 15:09:43.762" level="INFO">${postfix} = 11203</msg>
<status status="PASS" starttime="20250214 15:09:43.761" endtime="20250214 15:09:43.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:09:43.762" level="INFO">${tmpfile} = /tmp/tempkey-11203</msg>
<status status="PASS" starttime="20250214 15:09:43.762" endtime="20250214 15:09:43.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:43.765" level="INFO">Running command 'ozone sh key get /vol5609/ratis/dir2/1mbEC /tmp/tempkey-11203 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:48.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:48.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:09:43.763" endtime="20250214 15:09:48.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:48.063" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:48.063" endtime="20250214 15:09:48.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:48.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:48.063" endtime="20250214 15:09:48.063"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.763" endtime="20250214 15:09:48.064"/>
</kw>
<msg timestamp="20250214 15:09:48.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:43.763" endtime="20250214 15:09:48.064"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.762" endtime="20250214 15:09:48.064"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 15:09:48.066" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-11203 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:48.070" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 15:09:48.064" endtime="20250214 15:09:48.070"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:48.073" level="INFO">Running command 'rm -f /tmp/tempkey-11203 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:48.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:48.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 15:09:48.071" endtime="20250214 15:09:48.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:48.077" level="INFO"/>
<status status="PASS" starttime="20250214 15:09:48.076" endtime="20250214 15:09:48.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:48.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:48.077" endtime="20250214 15:09:48.077"/>
</kw>
<status status="PASS" starttime="20250214 15:09:48.071" endtime="20250214 15:09:48.077"/>
</kw>
<msg timestamp="20250214 15:09:48.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:48.070" endtime="20250214 15:09:48.077"/>
</kw>
<status status="PASS" starttime="20250214 15:09:48.070" endtime="20250214 15:09:48.078"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 15:09:48.078" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 15:09:48.078" endtime="20250214 15:09:48.078"/>
</kw>
<msg timestamp="20250214 15:09:48.078" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 15:09:43.761" endtime="20250214 15:09:48.078"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 15:09:48.078" endtime="20250214 15:09:48.078"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.761" endtime="20250214 15:09:48.078"/>
</kw>
<status status="PASS" starttime="20250214 15:09:43.760" endtime="20250214 15:09:48.079"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20250214 15:08:39.294" endtime="20250214 15:09:48.079"/>
</suite>
<suite id="s1-s6" name="EC-recovery" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s6-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:09:49.519" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:09:57.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:09:57.077" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:09:49.515" endtime="20250214 15:09:57.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:09:57.080" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:09:57.078" endtime="20250214 15:09:57.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:09:57.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:09:57.080" endtime="20250214 15:09:57.081"/>
</kw>
<status status="PASS" starttime="20250214 15:09:49.515" endtime="20250214 15:09:57.081"/>
</kw>
<msg timestamp="20250214 15:09:57.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:09:49.515" endtime="20250214 15:09:57.082"/>
</kw>
<msg timestamp="20250214 15:09:57.083" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:09:49.514" endtime="20250214 15:09:57.083"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:09:57.085" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:09:57.083" endtime="20250214 15:09:57.085"/>
</kw>
<status status="FAIL" starttime="20250214 15:09:49.513" endtime="20250214 15:09:57.085"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:10:07.094" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:10:10.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:10:10.373" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:07.087" endtime="20250214 15:10:10.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:10:10.374" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:10:10.373" endtime="20250214 15:10:10.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:10:10.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:10:10.374" endtime="20250214 15:10:10.374"/>
</kw>
<status status="PASS" starttime="20250214 15:10:07.087" endtime="20250214 15:10:10.375"/>
</kw>
<msg timestamp="20250214 15:10:10.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:10:07.087" endtime="20250214 15:10:10.375"/>
</kw>
<msg timestamp="20250214 15:10:10.375" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:07.086" endtime="20250214 15:10:10.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:10:10.375" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:10:10.375" endtime="20250214 15:10:10.375"/>
</kw>
<status status="FAIL" starttime="20250214 15:10:07.086" endtime="20250214 15:10:10.375"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:10:20.380" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:10:22.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:10:22.914" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:20.377" endtime="20250214 15:10:22.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:10:22.915" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:10:22.914" endtime="20250214 15:10:22.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:10:22.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:10:22.915" endtime="20250214 15:10:22.915"/>
</kw>
<status status="PASS" starttime="20250214 15:10:20.377" endtime="20250214 15:10:22.915"/>
</kw>
<msg timestamp="20250214 15:10:22.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:10:20.377" endtime="20250214 15:10:22.916"/>
</kw>
<msg timestamp="20250214 15:10:22.916" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:20.376" endtime="20250214 15:10:22.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:10:22.916" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:10:22.916" endtime="20250214 15:10:22.916"/>
</kw>
<status status="FAIL" starttime="20250214 15:10:20.376" endtime="20250214 15:10:22.916"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:10:32.921" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:10:35.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:10:35.332" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:32.918" endtime="20250214 15:10:35.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:10:35.332" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:10:35.332" endtime="20250214 15:10:35.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:10:35.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:10:35.333" endtime="20250214 15:10:35.333"/>
</kw>
<status status="PASS" starttime="20250214 15:10:32.918" endtime="20250214 15:10:35.333"/>
</kw>
<msg timestamp="20250214 15:10:35.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:10:32.918" endtime="20250214 15:10:35.333"/>
</kw>
<msg timestamp="20250214 15:10:35.333" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:32.917" endtime="20250214 15:10:35.333"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:10:35.334" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:10:35.333" endtime="20250214 15:10:35.334"/>
</kw>
<status status="FAIL" starttime="20250214 15:10:32.917" endtime="20250214 15:10:35.334"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:10:45.338" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:10:47.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:10:47.789" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:45.336" endtime="20250214 15:10:47.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:10:47.790" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:10:47.789" endtime="20250214 15:10:47.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:10:47.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:10:47.790" endtime="20250214 15:10:47.790"/>
</kw>
<status status="PASS" starttime="20250214 15:10:45.335" endtime="20250214 15:10:47.791"/>
</kw>
<msg timestamp="20250214 15:10:47.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:10:45.335" endtime="20250214 15:10:47.791"/>
</kw>
<msg timestamp="20250214 15:10:47.791" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:45.335" endtime="20250214 15:10:47.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:10:47.791" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:10:47.791" endtime="20250214 15:10:47.791"/>
</kw>
<status status="FAIL" starttime="20250214 15:10:45.334" endtime="20250214 15:10:47.791"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:10:57.796" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:11:00.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:11:00.297" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:57.793" endtime="20250214 15:11:00.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:11:00.298" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:11:00.298" endtime="20250214 15:11:00.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:11:00.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:11:00.298" endtime="20250214 15:11:00.299"/>
</kw>
<status status="PASS" starttime="20250214 15:10:57.793" endtime="20250214 15:11:00.299"/>
</kw>
<msg timestamp="20250214 15:11:00.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:10:57.793" endtime="20250214 15:11:00.299"/>
</kw>
<msg timestamp="20250214 15:11:00.299" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:10:57.792" endtime="20250214 15:11:00.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:11:00.299" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:11:00.299" endtime="20250214 15:11:00.299"/>
</kw>
<status status="FAIL" starttime="20250214 15:10:57.792" endtime="20250214 15:11:00.300"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:11:10.304" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:11:12.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:11:12.782" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:11:10.302" endtime="20250214 15:11:12.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:11:12.783" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:11:12.783" endtime="20250214 15:11:12.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:11:12.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:11:12.783" endtime="20250214 15:11:12.784"/>
</kw>
<status status="PASS" starttime="20250214 15:11:10.301" endtime="20250214 15:11:12.784"/>
</kw>
<msg timestamp="20250214 15:11:12.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:11:10.301" endtime="20250214 15:11:12.784"/>
</kw>
<msg timestamp="20250214 15:11:12.784" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:11:10.301" endtime="20250214 15:11:12.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:11:12.784" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:11:12.784" endtime="20250214 15:11:12.784"/>
</kw>
<status status="FAIL" starttime="20250214 15:11:10.300" endtime="20250214 15:11:12.785"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:11:22.789" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:11:25.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:11:25.199" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:11:22.786" endtime="20250214 15:11:25.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:11:25.200" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:11:25.199" endtime="20250214 15:11:25.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:11:25.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:11:25.200" endtime="20250214 15:11:25.200"/>
</kw>
<status status="PASS" starttime="20250214 15:11:22.786" endtime="20250214 15:11:25.200"/>
</kw>
<msg timestamp="20250214 15:11:25.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:11:22.786" endtime="20250214 15:11:25.201"/>
</kw>
<msg timestamp="20250214 15:11:25.201" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:11:22.785" endtime="20250214 15:11:25.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:11:25.201" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:11:25.201" endtime="20250214 15:11:25.201"/>
</kw>
<status status="FAIL" starttime="20250214 15:11:22.785" endtime="20250214 15:11:25.201"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:11:35.206" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:11:37.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:11:37.700" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:11:35.203" endtime="20250214 15:11:37.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:11:37.701" level="INFO">3</msg>
<status status="PASS" starttime="20250214 15:11:37.700" endtime="20250214 15:11:37.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:11:37.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:11:37.701" endtime="20250214 15:11:37.702"/>
</kw>
<status status="PASS" starttime="20250214 15:11:35.203" endtime="20250214 15:11:37.702"/>
</kw>
<msg timestamp="20250214 15:11:37.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:11:35.203" endtime="20250214 15:11:37.702"/>
</kw>
<msg timestamp="20250214 15:11:37.702" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:11:35.202" endtime="20250214 15:11:37.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:11:37.702" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20250214 15:11:37.702" endtime="20250214 15:11:37.703"/>
</kw>
<status status="FAIL" starttime="20250214 15:11:35.202" endtime="20250214 15:11:37.703"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:11:47.707" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:11:50.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:11:50.270" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:11:47.704" endtime="20250214 15:11:50.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:11:50.270" level="INFO">3</msg>
<status status="PASS" starttime="20250214 15:11:50.270" endtime="20250214 15:11:50.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:11:50.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:11:50.271" endtime="20250214 15:11:50.271"/>
</kw>
<status status="PASS" starttime="20250214 15:11:47.704" endtime="20250214 15:11:50.271"/>
</kw>
<msg timestamp="20250214 15:11:50.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:11:47.704" endtime="20250214 15:11:50.271"/>
</kw>
<msg timestamp="20250214 15:11:50.271" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:11:47.703" endtime="20250214 15:11:50.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:11:50.272" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20250214 15:11:50.272" endtime="20250214 15:11:50.272"/>
</kw>
<status status="FAIL" starttime="20250214 15:11:47.703" endtime="20250214 15:11:50.272"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:12:00.276" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:12:02.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:12:02.774" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:12:00.274" endtime="20250214 15:12:02.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:12:02.775" level="INFO">3</msg>
<status status="PASS" starttime="20250214 15:12:02.775" endtime="20250214 15:12:02.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:12:02.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:12:02.776" endtime="20250214 15:12:02.776"/>
</kw>
<status status="PASS" starttime="20250214 15:12:00.273" endtime="20250214 15:12:02.776"/>
</kw>
<msg timestamp="20250214 15:12:02.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:12:00.273" endtime="20250214 15:12:02.776"/>
</kw>
<msg timestamp="20250214 15:12:02.776" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 15:12:00.273" endtime="20250214 15:12:02.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:12:02.777" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20250214 15:12:02.776" endtime="20250214 15:12:02.777"/>
</kw>
<status status="FAIL" starttime="20250214 15:12:00.272" endtime="20250214 15:12:02.777"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:12:12.782" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:12:20.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:12:20.470" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:12.779" endtime="20250214 15:12:20.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:12:20.471" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:12:20.471" endtime="20250214 15:12:20.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:12:20.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:12:20.471" endtime="20250214 15:12:20.472"/>
</kw>
<status status="PASS" starttime="20250214 15:12:12.779" endtime="20250214 15:12:20.472"/>
</kw>
<msg timestamp="20250214 15:12:20.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:12:12.779" endtime="20250214 15:12:20.472"/>
</kw>
<msg timestamp="20250214 15:12:20.472" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:12.778" endtime="20250214 15:12:20.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:12:20.473" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:12:20.472" endtime="20250214 15:12:20.473"/>
</kw>
<status status="FAIL" starttime="20250214 15:12:12.777" endtime="20250214 15:12:20.473"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:12:30.477" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:12:32.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:12:32.786" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:30.475" endtime="20250214 15:12:32.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:12:32.787" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:12:32.786" endtime="20250214 15:12:32.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:12:32.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:12:32.787" endtime="20250214 15:12:32.787"/>
</kw>
<status status="PASS" starttime="20250214 15:12:30.474" endtime="20250214 15:12:32.787"/>
</kw>
<msg timestamp="20250214 15:12:32.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:12:30.474" endtime="20250214 15:12:32.788"/>
</kw>
<msg timestamp="20250214 15:12:32.788" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:30.474" endtime="20250214 15:12:32.788"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:12:32.788" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:12:32.788" endtime="20250214 15:12:32.788"/>
</kw>
<status status="FAIL" starttime="20250214 15:12:30.473" endtime="20250214 15:12:32.788"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:12:42.792" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:12:45.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:12:45.278" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:42.790" endtime="20250214 15:12:45.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:12:45.279" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:12:45.278" endtime="20250214 15:12:45.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:12:45.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:12:45.279" endtime="20250214 15:12:45.280"/>
</kw>
<status status="PASS" starttime="20250214 15:12:42.790" endtime="20250214 15:12:45.280"/>
</kw>
<msg timestamp="20250214 15:12:45.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:12:42.789" endtime="20250214 15:12:45.280"/>
</kw>
<msg timestamp="20250214 15:12:45.280" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:42.789" endtime="20250214 15:12:45.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:12:45.280" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:12:45.280" endtime="20250214 15:12:45.281"/>
</kw>
<status status="FAIL" starttime="20250214 15:12:42.789" endtime="20250214 15:12:45.281"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:12:55.285" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:12:57.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:12:57.723" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:55.282" endtime="20250214 15:12:57.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:12:57.724" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:12:57.724" endtime="20250214 15:12:57.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:12:57.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:12:57.725" endtime="20250214 15:12:57.725"/>
</kw>
<status status="PASS" starttime="20250214 15:12:55.282" endtime="20250214 15:12:57.725"/>
</kw>
<msg timestamp="20250214 15:12:57.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:12:55.282" endtime="20250214 15:12:57.725"/>
</kw>
<msg timestamp="20250214 15:12:57.725" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:12:55.281" endtime="20250214 15:12:57.725"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:12:57.726" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:12:57.725" endtime="20250214 15:12:57.726"/>
</kw>
<status status="FAIL" starttime="20250214 15:12:55.281" endtime="20250214 15:12:57.726"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:13:07.730" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:13:10.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:13:10.260" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:07.728" endtime="20250214 15:13:10.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:13:10.261" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:13:10.261" endtime="20250214 15:13:10.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:13:10.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:13:10.261" endtime="20250214 15:13:10.262"/>
</kw>
<status status="PASS" starttime="20250214 15:13:07.727" endtime="20250214 15:13:10.262"/>
</kw>
<msg timestamp="20250214 15:13:10.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:13:07.727" endtime="20250214 15:13:10.262"/>
</kw>
<msg timestamp="20250214 15:13:10.262" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:07.727" endtime="20250214 15:13:10.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:13:10.263" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:13:10.262" endtime="20250214 15:13:10.263"/>
</kw>
<status status="FAIL" starttime="20250214 15:13:07.726" endtime="20250214 15:13:10.263"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:13:20.267" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:13:22.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:13:22.710" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:20.265" endtime="20250214 15:13:22.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:13:22.711" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:13:22.710" endtime="20250214 15:13:22.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:13:22.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:13:22.711" endtime="20250214 15:13:22.711"/>
</kw>
<status status="PASS" starttime="20250214 15:13:20.264" endtime="20250214 15:13:22.711"/>
</kw>
<msg timestamp="20250214 15:13:22.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:13:20.264" endtime="20250214 15:13:22.711"/>
</kw>
<msg timestamp="20250214 15:13:22.711" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:20.264" endtime="20250214 15:13:22.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:13:22.712" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:13:22.712" endtime="20250214 15:13:22.712"/>
</kw>
<status status="FAIL" starttime="20250214 15:13:20.263" endtime="20250214 15:13:22.712"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:13:32.716" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:13:35.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:13:35.167" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:32.714" endtime="20250214 15:13:35.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:13:35.168" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:13:35.167" endtime="20250214 15:13:35.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:13:35.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:13:35.168" endtime="20250214 15:13:35.169"/>
</kw>
<status status="PASS" starttime="20250214 15:13:32.713" endtime="20250214 15:13:35.169"/>
</kw>
<msg timestamp="20250214 15:13:35.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:13:32.713" endtime="20250214 15:13:35.169"/>
</kw>
<msg timestamp="20250214 15:13:35.169" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:32.713" endtime="20250214 15:13:35.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:13:35.169" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:13:35.169" endtime="20250214 15:13:35.169"/>
</kw>
<status status="FAIL" starttime="20250214 15:13:32.712" endtime="20250214 15:13:35.170"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:13:45.174" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:13:47.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:13:47.683" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:45.171" endtime="20250214 15:13:47.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:13:47.685" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:13:47.684" endtime="20250214 15:13:47.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:13:47.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:13:47.685" endtime="20250214 15:13:47.685"/>
</kw>
<status status="PASS" starttime="20250214 15:13:45.171" endtime="20250214 15:13:47.685"/>
</kw>
<msg timestamp="20250214 15:13:47.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:13:45.171" endtime="20250214 15:13:47.685"/>
</kw>
<msg timestamp="20250214 15:13:47.685" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:45.170" endtime="20250214 15:13:47.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:13:47.686" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:13:47.686" endtime="20250214 15:13:47.686"/>
</kw>
<status status="FAIL" starttime="20250214 15:13:45.170" endtime="20250214 15:13:47.686"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:13:57.690" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:14:00.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:14:00.160" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:57.688" endtime="20250214 15:14:00.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:14:00.161" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:14:00.161" endtime="20250214 15:14:00.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:14:00.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:14:00.161" endtime="20250214 15:14:00.162"/>
</kw>
<status status="PASS" starttime="20250214 15:13:57.687" endtime="20250214 15:14:00.162"/>
</kw>
<msg timestamp="20250214 15:14:00.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:13:57.687" endtime="20250214 15:14:00.162"/>
</kw>
<msg timestamp="20250214 15:14:00.162" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:13:57.687" endtime="20250214 15:14:00.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:14:00.162" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:14:00.162" endtime="20250214 15:14:00.163"/>
</kw>
<status status="FAIL" starttime="20250214 15:13:57.687" endtime="20250214 15:14:00.163"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:14:10.167" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:14:12.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:14:12.687" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:10.164" endtime="20250214 15:14:12.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:14:12.688" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:14:12.688" endtime="20250214 15:14:12.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:14:12.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:14:12.688" endtime="20250214 15:14:12.689"/>
</kw>
<status status="PASS" starttime="20250214 15:14:10.164" endtime="20250214 15:14:12.689"/>
</kw>
<msg timestamp="20250214 15:14:12.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:14:10.164" endtime="20250214 15:14:12.689"/>
</kw>
<msg timestamp="20250214 15:14:12.689" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:10.163" endtime="20250214 15:14:12.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:14:12.690" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:14:12.689" endtime="20250214 15:14:12.690"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:10.163" endtime="20250214 15:14:12.690"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:14:22.694" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:14:25.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:14:25.164" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:22.692" endtime="20250214 15:14:25.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:14:25.166" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:14:25.165" endtime="20250214 15:14:25.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:14:25.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:14:25.166" endtime="20250214 15:14:25.166"/>
</kw>
<status status="PASS" starttime="20250214 15:14:22.691" endtime="20250214 15:14:25.166"/>
</kw>
<msg timestamp="20250214 15:14:25.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:14:22.691" endtime="20250214 15:14:25.166"/>
</kw>
<msg timestamp="20250214 15:14:25.166" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:22.691" endtime="20250214 15:14:25.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:14:25.167" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:14:25.167" endtime="20250214 15:14:25.167"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:22.690" endtime="20250214 15:14:25.167"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:14:35.171" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:14:37.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 15:14:37.639" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:35.169" endtime="20250214 15:14:37.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 15:14:37.640" level="INFO">4</msg>
<status status="PASS" starttime="20250214 15:14:37.639" endtime="20250214 15:14:37.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 15:14:37.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 15:14:37.640" endtime="20250214 15:14:37.641"/>
</kw>
<status status="PASS" starttime="20250214 15:14:35.169" endtime="20250214 15:14:37.641"/>
</kw>
<msg timestamp="20250214 15:14:37.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 15:14:35.168" endtime="20250214 15:14:37.641"/>
</kw>
<msg timestamp="20250214 15:14:37.641" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250214 15:14:35.168" endtime="20250214 15:14:37.641"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:14:37.641" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20250214 15:14:37.641" endtime="20250214 15:14:37.641"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:35.168" endtime="20250214 15:14:37.642"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 15:14:47.646" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 15:14:49.518" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20250214 15:14:47.643" endtime="20250214 15:14:49.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250214 15:14:49.520" endtime="20250214 15:14:49.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250214 15:14:49.521" endtime="20250214 15:14:49.521"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:47.643" endtime="20250214 15:14:49.522"/>
</kw>
<msg timestamp="20250214 15:14:49.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250214 15:14:47.643" endtime="20250214 15:14:49.522"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:47.642" endtime="20250214 15:14:49.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250214 15:14:49.522" endtime="20250214 15:14:49.522"/>
</kw>
<status status="FAIL" starttime="20250214 15:14:47.642" endtime="20250214 15:14:49.525"/>
</kw>
<status status="FAIL" starttime="20250214 15:09:49.513" endtime="20250214 15:14:49.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250214 15:09:49.512" endtime="20250214 15:14:49.525">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Wait for replication to succeed</doc>
<status status="FAIL" starttime="20250214 15:09:49.452" endtime="20250214 15:14:49.527"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="998109"/>
</suite>
<statistics>
<total>
<stat pass="113" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">aws-skip</stat>
<stat pass="19" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="113" fail="1" skip="0" id="s1" name="ozonesecure-ec">ozonesecure-ec</stat>
<stat pass="90" fail="0" skip="0" id="s1-s1" name="S3">ozonesecure-ec.S3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Awss3">ozonesecure-ec.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Boto3">ozonesecure-ec.S3.Boto3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s3" name="Bucketcreate">ozonesecure-ec.S3.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Bucketdelete">ozonesecure-ec.S3.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Buckethead">ozonesecure-ec.S3.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s6" name="Bucketlist">ozonesecure-ec.S3.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Freon">ozonesecure-ec.S3.Freon</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s8" name="MultipartUpload">ozonesecure-ec.S3.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s9" name="Objectcopy">ozonesecure-ec.S3.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s10" name="Objectcopys3A">ozonesecure-ec.S3.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s11" name="Objectdelete">ozonesecure-ec.S3.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s12" name="Objecthead">ozonesecure-ec.S3.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s13" name="Objectmultidelete">ozonesecure-ec.S3.Objectmultidelete</stat>
<stat pass="23" fail="0" skip="0" id="s1-s1-s14" name="Objectputget">ozonesecure-ec.S3.Objectputget</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s15" name="Objecttagging">ozonesecure-ec.S3.Objecttagging</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s16" name="Rclone">ozonesecure-ec.S3.Rclone</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s17" name="S3 Getsecret">ozonesecure-ec.S3.S3 Getsecret</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s18" name="Secretgenerate">ozonesecure-ec.S3.Secretgenerate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s19" name="Secretrevoke">ozonesecure-ec.S3.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s20" name="Webui">ozonesecure-ec.S3.Webui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Rewrite">ozonesecure-ec.Rewrite</stat>
<stat pass="12" fail="0" skip="0" id="s1-s3" name="Basic">ozonesecure-ec.Basic</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="read-4-datanodes">ozonesecure-ec.read-4-datanodes</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="read-3-datanodes">ozonesecure-ec.read-3-datanodes</stat>
<stat pass="0" fail="1" skip="0" id="s1-s6" name="EC-recovery">ozonesecure-ec.EC-recovery</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
