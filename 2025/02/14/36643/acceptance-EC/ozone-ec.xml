<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250214 14:56:27.503" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-ec">
<suite id="s1-s1" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:34.455" endtime="20250214 14:45:34.455"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:45:34.457" level="INFO">${randStr} = 1477240088</msg>
<status status="PASS" starttime="20250214 14:45:34.457" endtime="20250214 14:45:34.457"/>
</kw>
<msg timestamp="20250214 14:45:34.457" level="INFO">${random} = ozone-test-1477240088</msg>
<status status="PASS" starttime="20250214 14:45:34.456" endtime="20250214 14:45:34.457"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:45:34.460" level="INFO">${PREFIX} = ozone-test-1477240088</msg>
<status status="PASS" starttime="20250214 14:45:34.458" endtime="20250214 14:45:34.460"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.456" endtime="20250214 14:45:34.460"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.455" endtime="20250214 14:45:34.460"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:34.465" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:34.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:34.471" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250214 14:45:34.462" endtime="20250214 14:45:34.471"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:45:34.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:34.472" endtime="20250214 14:45:34.472"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250214 14:45:34.473" endtime="20250214 14:45:34.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:34.473" endtime="20250214 14:45:34.473"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250214 14:45:34.473" endtime="20250214 14:45:34.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:34.473" endtime="20250214 14:45:34.473"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.460" endtime="20250214 14:45:34.473"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.460" endtime="20250214 14:45:34.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:34.474" endtime="20250214 14:45:34.475"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:34.475" endtime="20250214 14:45:34.475"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:34.480" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:35.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:35.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:34.477" endtime="20250214 14:45:35.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:35.037" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:35.037" endtime="20250214 14:45:35.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:35.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:35.037" endtime="20250214 14:45:35.038"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.477" endtime="20250214 14:45:35.038"/>
</kw>
<msg timestamp="20250214 14:45:35.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:34.476" endtime="20250214 14:45:35.038"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.476" endtime="20250214 14:45:35.038"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:35.043" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:35.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:35.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:35.039" endtime="20250214 14:45:35.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:35.522" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:35.522" endtime="20250214 14:45:35.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:35.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:35.522" endtime="20250214 14:45:35.523"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.039" endtime="20250214 14:45:35.523"/>
</kw>
<msg timestamp="20250214 14:45:35.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:35.038" endtime="20250214 14:45:35.523"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.038" endtime="20250214 14:45:35.523"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:35.526" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:35.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:35.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:35.524" endtime="20250214 14:45:35.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:35.875" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:35.875" endtime="20250214 14:45:35.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:35.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:35.875" endtime="20250214 14:45:35.876"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.523" endtime="20250214 14:45:35.876"/>
</kw>
<msg timestamp="20250214 14:45:35.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:35.523" endtime="20250214 14:45:35.876"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.523" endtime="20250214 14:45:35.876"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:35.879" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:36.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:36.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:35.877" endtime="20250214 14:45:36.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:36.229" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:36.229" endtime="20250214 14:45:36.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:36.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:36.229" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.877" endtime="20250214 14:45:36.230"/>
</kw>
<msg timestamp="20250214 14:45:36.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:35.876" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:35.876" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.476" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.475" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.474" endtime="20250214 14:45:36.230"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.474" endtime="20250214 14:45:36.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:36.230" endtime="20250214 14:45:36.231"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:36.231" endtime="20250214 14:45:36.231"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:36.231" endtime="20250214 14:45:36.231"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create EC bucket" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:36.234" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:41.149" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:45:41.149" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: s3v/erasure</msg>
<status status="PASS" starttime="20250214 14:45:36.232" endtime="20250214 14:45:41.149"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:45:41.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:41.150" endtime="20250214 14:45:41.150"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:41.151" endtime="20250214 14:45:41.151"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:41.151" endtime="20250214 14:45:41.151"/>
</kw>
<msg timestamp="20250214 14:45:41.151" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250214 14:45:36.232" endtime="20250214 14:45:41.151"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:45:41.151" endtime="20250214 14:45:41.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:41.154" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC --layout OBJECT_STORE o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:44.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:44.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:41.152" endtime="20250214 14:45:44.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:44.213" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:44.213" endtime="20250214 14:45:44.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:44.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:44.214" endtime="20250214 14:45:44.214"/>
</kw>
<status status="PASS" starttime="20250214 14:45:41.152" endtime="20250214 14:45:44.214"/>
</kw>
<msg timestamp="20250214 14:45:44.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:41.152" endtime="20250214 14:45:44.214"/>
</kw>
<status status="PASS" starttime="20250214 14:45:41.151" endtime="20250214 14:45:44.215"/>
</kw>
<status status="PASS" starttime="20250214 14:45:36.232" endtime="20250214 14:45:44.215"/>
</kw>
<status status="PASS" starttime="20250214 14:45:36.231" endtime="20250214 14:45:44.215"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:45:44.215" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250214 14:45:44.215" endtime="20250214 14:45:44.215"/>
</kw>
<status status="PASS" starttime="20250214 14:45:34.454" endtime="20250214 14:45:44.215"/>
</kw>
<suite id="s1-s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:45:44.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:44.226" endtime="20250214 14:45:44.227"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.227" endtime="20250214 14:45:44.227"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.227" endtime="20250214 14:45:44.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.227" endtime="20250214 14:45:44.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.227" endtime="20250214 14:45:44.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.228" endtime="20250214 14:45:44.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.228" endtime="20250214 14:45:44.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.228" endtime="20250214 14:45:44.228"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:45:44.228" endtime="20250214 14:45:44.228"/>
</kw>
<status status="PASS" starttime="20250214 14:45:44.226" endtime="20250214 14:45:44.228"/>
</kw>
<test id="s1-s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:44.235" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:45:44.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:44.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:44.230" endtime="20250214 14:45:44.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:44.242" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:44.242" endtime="20250214 14:45:44.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:44.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:44.242" endtime="20250214 14:45:44.243"/>
</kw>
<status status="PASS" starttime="20250214 14:45:44.230" endtime="20250214 14:45:44.243"/>
</kw>
<msg timestamp="20250214 14:45:44.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:44.229" endtime="20250214 14:45:44.243"/>
</kw>
<status status="PASS" starttime="20250214 14:45:44.229" endtime="20250214 14:45:44.243"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:44.249" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:47.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:47.801" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:45:44.246" endtime="20250214 14:45:47.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:47.802" level="INFO">Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:45:47.801" endtime="20250214 14:45:47.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:47.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:47.802" endtime="20250214 14:45:47.802"/>
</kw>
<status status="PASS" starttime="20250214 14:45:44.245" endtime="20250214 14:45:47.803"/>
</kw>
<msg timestamp="20250214 14:45:47.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:44.245" endtime="20250214 14:45:47.803"/>
</kw>
<msg timestamp="20250214 14:45:47.803" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:45:44.244" endtime="20250214 14:45:47.803"/>
</kw>
<msg timestamp="20250214 14:45:47.803" level="INFO">${result} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20250214 14:45:44.244" endtime="20250214 14:45:47.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:47.803" endtime="20250214 14:45:47.803"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:47.807" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:48.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:48.455" level="INFO">${output} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:45:47.805" endtime="20250214 14:45:48.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:48.456" level="INFO">Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:45:48.456" endtime="20250214 14:45:48.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:48.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:48.456" endtime="20250214 14:45:48.457"/>
</kw>
<status status="PASS" starttime="20250214 14:45:47.804" endtime="20250214 14:45:48.457"/>
</kw>
<msg timestamp="20250214 14:45:48.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:47.804" endtime="20250214 14:45:48.457"/>
</kw>
<msg timestamp="20250214 14:45:48.457" level="INFO">${output} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:45:47.804" endtime="20250214 14:45:48.457"/>
</kw>
<msg timestamp="20250214 14:45:48.457" level="INFO">${result} = Completed 29 Bytes/29 Bytes (162 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20250214 14:45:47.803" endtime="20250214 14:45:48.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:48.458" endtime="20250214 14:45:48.458"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:48.461" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:49.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:49.210" level="INFO">${output} =                            PRE dir1/
2025-02-14 14:45:47         29 testfile</msg>
<status status="PASS" starttime="20250214 14:45:48.459" endtime="20250214 14:45:49.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:49.211" level="INFO">                           PRE dir1/
2025-02-14 14:45:47         29 testfile</msg>
<status status="PASS" starttime="20250214 14:45:49.210" endtime="20250214 14:45:49.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:49.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:49.211" endtime="20250214 14:45:49.212"/>
</kw>
<status status="PASS" starttime="20250214 14:45:48.459" endtime="20250214 14:45:49.212"/>
</kw>
<msg timestamp="20250214 14:45:49.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:48.459" endtime="20250214 14:45:49.212"/>
</kw>
<msg timestamp="20250214 14:45:49.212" level="INFO">${output} =                            PRE dir1/
2025-02-14 14:45:47         29 testfile</msg>
<status status="PASS" starttime="20250214 14:45:48.458" endtime="20250214 14:45:49.212"/>
</kw>
<msg timestamp="20250214 14:45:49.212" level="INFO">${result} =                            PRE dir1/
2025-02-14 14:45:47         29 testfile</msg>
<status status="PASS" starttime="20250214 14:45:48.458" endtime="20250214 14:45:49.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.212" endtime="20250214 14:45:49.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.213" endtime="20250214 14:45:49.213"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.213" endtime="20250214 14:45:49.213"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:49.217" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:49.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:49.701" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:45:49.215" endtime="20250214 14:45:49.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:49.702" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:45:49.701" endtime="20250214 14:45:49.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:49.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:49.702" endtime="20250214 14:45:49.702"/>
</kw>
<status status="PASS" starttime="20250214 14:45:49.214" endtime="20250214 14:45:49.702"/>
</kw>
<msg timestamp="20250214 14:45:49.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:49.214" endtime="20250214 14:45:49.703"/>
</kw>
<msg timestamp="20250214 14:45:49.703" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:45:49.214" endtime="20250214 14:45:49.703"/>
</kw>
<msg timestamp="20250214 14:45:49.703" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250214 14:45:49.213" endtime="20250214 14:45:49.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.703" endtime="20250214 14:45:49.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.703" endtime="20250214 14:45:49.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:49.704" endtime="20250214 14:45:49.704"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:49.707" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:50.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:50.178" level="INFO">${output} = 2025-02-14 14:45:48         29 file</msg>
<status status="PASS" starttime="20250214 14:45:49.705" endtime="20250214 14:45:50.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:50.179" level="INFO">2025-02-14 14:45:48         29 file</msg>
<status status="PASS" starttime="20250214 14:45:50.179" endtime="20250214 14:45:50.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:50.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:50.179" endtime="20250214 14:45:50.180"/>
</kw>
<status status="PASS" starttime="20250214 14:45:49.705" endtime="20250214 14:45:50.180"/>
</kw>
<msg timestamp="20250214 14:45:50.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:49.705" endtime="20250214 14:45:50.180"/>
</kw>
<msg timestamp="20250214 14:45:50.180" level="INFO">${output} = 2025-02-14 14:45:48         29 file</msg>
<status status="PASS" starttime="20250214 14:45:49.704" endtime="20250214 14:45:50.180"/>
</kw>
<msg timestamp="20250214 14:45:50.180" level="INFO">${result} = 2025-02-14 14:45:48         29 file</msg>
<status status="PASS" starttime="20250214 14:45:49.704" endtime="20250214 14:45:50.180"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:50.180" endtime="20250214 14:45:50.181"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:50.181" endtime="20250214 14:45:50.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:50.181" endtime="20250214 14:45:50.181"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:44.229" endtime="20250214 14:45:50.181"/>
</test>
<test id="s1-s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:50.185" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:45:50.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:50.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:45:50.183" endtime="20250214 14:45:50.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:50.189" level="INFO"/>
<status status="PASS" starttime="20250214 14:45:50.189" endtime="20250214 14:45:50.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:50.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:50.190" endtime="20250214 14:45:50.190"/>
</kw>
<status status="PASS" starttime="20250214 14:45:50.183" endtime="20250214 14:45:50.190"/>
</kw>
<msg timestamp="20250214 14:45:50.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:50.183" endtime="20250214 14:45:50.190"/>
</kw>
<status status="PASS" starttime="20250214 14:45:50.182" endtime="20250214 14:45:50.190"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:50.194" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:50.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:50.857" level="INFO">${output} = Completed 29 Bytes/29 Bytes (157 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:45:50.192" endtime="20250214 14:45:50.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:50.858" level="INFO">Completed 29 Bytes/29 Bytes (157 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:45:50.857" endtime="20250214 14:45:50.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:50.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:50.858" endtime="20250214 14:45:50.859"/>
</kw>
<status status="PASS" starttime="20250214 14:45:50.191" endtime="20250214 14:45:50.859"/>
</kw>
<msg timestamp="20250214 14:45:50.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:50.191" endtime="20250214 14:45:50.859"/>
</kw>
<msg timestamp="20250214 14:45:50.859" level="INFO">${output} = Completed 29 Bytes/29 Bytes (157 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:45:50.191" endtime="20250214 14:45:50.859"/>
</kw>
<msg timestamp="20250214 14:45:50.860" level="INFO">${result} = Completed 29 Bytes/29 Bytes (157 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20250214 14:45:50.190" endtime="20250214 14:45:50.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:50.860" endtime="20250214 14:45:50.860"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:50.865" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:51.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:51.386" level="INFO">${output} = 2025-02-14 14:45:50         29 a+b</msg>
<status status="PASS" starttime="20250214 14:45:50.862" endtime="20250214 14:45:51.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:51.387" level="INFO">2025-02-14 14:45:50         29 a+b</msg>
<status status="PASS" starttime="20250214 14:45:51.387" endtime="20250214 14:45:51.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:51.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:51.387" endtime="20250214 14:45:51.388"/>
</kw>
<status status="PASS" starttime="20250214 14:45:50.862" endtime="20250214 14:45:51.388"/>
</kw>
<msg timestamp="20250214 14:45:51.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:50.861" endtime="20250214 14:45:51.388"/>
</kw>
<msg timestamp="20250214 14:45:51.388" level="INFO">${output} = 2025-02-14 14:45:50         29 a+b</msg>
<status status="PASS" starttime="20250214 14:45:50.861" endtime="20250214 14:45:51.388"/>
</kw>
<msg timestamp="20250214 14:45:51.388" level="INFO">${result} = 2025-02-14 14:45:50         29 a+b</msg>
<status status="PASS" starttime="20250214 14:45:50.860" endtime="20250214 14:45:51.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:51.389" endtime="20250214 14:45:51.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:51.389" endtime="20250214 14:45:51.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:50.182" endtime="20250214 14:45:51.389"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:45:44.215" endtime="20250214 14:45:51.390"/>
</suite>
<suite id="s1-s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:45:51.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.402"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.402"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.402" endtime="20250214 14:45:51.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.403" endtime="20250214 14:45:51.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.403" endtime="20250214 14:45:51.403"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:45:51.403" endtime="20250214 14:45:51.403"/>
</kw>
<status status="PASS" starttime="20250214 14:45:51.401" endtime="20250214 14:45:51.403"/>
</kw>
<test id="s1-s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:51.406" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:55.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:55.111" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250214 14:45:51.404" endtime="20250214 14:45:55.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:55.112" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 3.485s

OK
{'ResponseMetadata': {'RequestId': 'ffb35070-44ad-4c2b-a921-21cba86802e0', 'HostId': 'D5l6EWSf', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:51 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:51 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-ttdpyautuf', 'server': 'Ozone', 'x-amz-id-2': 'D5l6EWSf', 'x-amz-request-id': 'ffb35070-44ad-4c2b-a921-21cba86802e0', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-ttdpyautuf'}
None
None
None
{'ResponseMetadata': {'RequestId': '8d734628-d314-481f-8a94-24f362fe7fbb', 'HostId': 'B4IKSIDUe21sAY', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-cktulggefa', 'server': 'Ozone', 'x-amz-id-2': 'B4IKSIDUe21sAY', 'x-amz-request-id': '8d734628-d314-481f-8a94-24f362fe7fbb', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-cktulggefa'}
{'ResponseMetadata': {'RequestId': '87b942df-a712-4499-897b-c506766a78e3', 'HostId': 'nAoVrRcmq9Dj', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'nAoVrRcmq9Dj', 'x-amz-request-id': '87b942df-a712-4499-897b-c506766a78e3', 'content-length': '465'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-cktulggefa', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 45, 53, 427000, tzinfo=tzlocal())}, {'Name': 'erasure', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 45, 44, 48000, tzinfo=tzlocal())}, {'Name': 'ozone-test-ttdpyautuf', 'CreationDate': datetime.datetime(2025, 2, 14, 14, 45, 51, 804000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'e5c58ab7-f7ca-4914-a8d8-5f47a74d7bed', 'HostId': 'YDvqIaWc5rwHd', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'YDvqIaWc5rwHd', 'x-amz-request-id': 'e5c58ab7-f7ca-4914-a8d8-5f47a74d7bed', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'b2887ff0-18c9-4618-9dab-3d25c4fa4eea', 'HostId': 'pHIgP5FAW7fRRX', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'pHIgP5FAW7fRRX', 'x-amz-request-id': 'b2887ff0-18c9-4618-9dab-3d25c4fa4eea'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'ddbeb8f0-b5c9-4dc6-bba0-34691f65efa8', 'HostId': 'OHMJoMlviuv6', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Fri, 14 Feb 2025 14:45:53 GMT', 'server': 'Ozone', 'x-amz-id-2': 'OHMJoMlviuv6', 'x-amz-request-id': 'ddbeb8f0-b5c9-4dc6-bba0-34691f65efa8', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 14, 14, 45, 53, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 14, 14, 45, 53, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Fri, 14 Feb 2025 14:45:53 GMT'}
{'ResponseMetadata': {'RequestId': 'a3353d48-3ff9-4216-ac8c-d04bccdcc08f', 'HostId': 'bRPhp7BJehQPxx', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'bRPhp7BJehQPxx', 'x-amz-request-id': 'a3353d48-3ff9-4216-ac8c-d04bccdcc08f', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '3ca8a99a-a0ee-4c05-b97a-b82681c29e7a', 'HostId': 'mSxMtMPuYi', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Fri, 14 Feb 2025 14:45:52 GMT', 'server': 'Ozone', 'x-amz-id-2': 'mSxMtMPuYi', 'x-amz-request-id': '3ca8a99a-a0ee-4c05-b97a-b82681c29e7a', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 2, 14, 14, 45, 52, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 2, 14, 14, 45, 53, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Fri, 14 Feb 2025 14:45:53 GMT'}
{'ResponseMetadata': {'RequestId': '539e2909-1cb2-4013-a744-99fd6c96e012', 'HostId': '1ot5dAvsrwsHQH', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:53 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '1ot5dAvsrwsHQH', 'x-amz-request-id': '539e2909-1cb2-4013-a744-99fd6c96e012', 'content-length': '287'}, 'RetryAttempts': 0}, 'Bucket': 'erasure', 'Key': 'yuyujkdymh', 'UploadId': 'ee71ae5d-01ea-49ca-a4fe-27a6bdaf6737-114002778770112525'}
{'ResponseMetadata': {'RequestId': '1f47d419-5861-47f7-80f8-1baab5c8856c', 'HostId': 'bHPfASx9EpiNB', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Fri, 14 Feb 2025 14:45:55 GMT', 'cache-control': 'no-cache', 'expires': 'Fri, 14 Feb 2025 14:45:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'bHPfASx9EpiNB', 'x-amz-request-id': '1f47d419-5861-47f7-80f8-1baab5c8856c', 'content-length': '288'}, 'RetryAttempts': 0}, 'Location': 'erasure', 'Bucket': 'erasure', 'Key': 'yuyujkdymh', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20250214 14:45:55.111" endtime="20250214 14:45:55.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:55.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:55.112" endtime="20250214 14:45:55.113"/>
</kw>
<status status="PASS" starttime="20250214 14:45:51.404" endtime="20250214 14:45:55.113"/>
</kw>
<msg timestamp="20250214 14:45:55.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:51.404" endtime="20250214 14:45:55.113"/>
</kw>
<msg timestamp="20250214 14:45:55.113" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250214 14:45:51.403" endtime="20250214 14:45:55.113"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250214 14:45:51.403" endtime="20250214 14:45:55.113"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20250214 14:45:51.391" endtime="20250214 14:45:55.114"/>
</suite>
<suite id="s1-s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:45:55.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.123" endtime="20250214 14:45:55.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.124" endtime="20250214 14:45:55.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.124" endtime="20250214 14:45:55.124"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:45:55.124" endtime="20250214 14:45:55.124"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.122" endtime="20250214 14:45:55.124"/>
</kw>
<test id="s1-s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:45:55.125" level="INFO">${randStr} = 6424306438</msg>
<status status="PASS" starttime="20250214 14:45:55.125" endtime="20250214 14:45:55.125"/>
</kw>
<msg timestamp="20250214 14:45:55.125" level="INFO">${postfix} = ozone-test-6424306438</msg>
<status status="PASS" starttime="20250214 14:45:55.125" endtime="20250214 14:45:55.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:45:55.126" level="INFO">${bucket} = bucket-ozone-test-6424306438</msg>
<status status="PASS" starttime="20250214 14:45:55.125" endtime="20250214 14:45:55.126"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:55.129" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6424306438 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:55.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:55.608" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6424306438"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.127" endtime="20250214 14:45:55.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:55.608" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-6424306438"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.608" endtime="20250214 14:45:55.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:55.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:55.609" endtime="20250214 14:45:55.609"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.127" endtime="20250214 14:45:55.609"/>
</kw>
<msg timestamp="20250214 14:45:55.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:55.127" endtime="20250214 14:45:55.609"/>
</kw>
<msg timestamp="20250214 14:45:55.609" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6424306438"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.126" endtime="20250214 14:45:55.609"/>
</kw>
<msg timestamp="20250214 14:45:55.609" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6424306438"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.126" endtime="20250214 14:45:55.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:55.610" endtime="20250214 14:45:55.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:55.610" endtime="20250214 14:45:55.610"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.126" endtime="20250214 14:45:55.610"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.124" endtime="20250214 14:45:55.610"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:55.124" endtime="20250214 14:45:55.611"/>
</test>
<test id="s1-s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:45:55.612" level="INFO">${randStr} = 9688524771</msg>
<status status="PASS" starttime="20250214 14:45:55.612" endtime="20250214 14:45:55.613"/>
</kw>
<msg timestamp="20250214 14:45:55.613" level="INFO">${postfix} = ozone-test-9688524771</msg>
<status status="PASS" starttime="20250214 14:45:55.612" endtime="20250214 14:45:55.613"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:45:55.613" level="INFO">${bucket} = bucket-ozone-test-9688524771</msg>
<status status="PASS" starttime="20250214 14:45:55.613" endtime="20250214 14:45:55.613"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:55.617" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9688524771 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:56.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:56.100" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9688524771"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.614" endtime="20250214 14:45:56.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:56.100" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9688524771"
}</msg>
<status status="PASS" starttime="20250214 14:45:56.100" endtime="20250214 14:45:56.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:56.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:56.101" endtime="20250214 14:45:56.101"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.614" endtime="20250214 14:45:56.101"/>
</kw>
<msg timestamp="20250214 14:45:56.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:55.614" endtime="20250214 14:45:56.101"/>
</kw>
<msg timestamp="20250214 14:45:56.101" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9688524771"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.614" endtime="20250214 14:45:56.101"/>
</kw>
<msg timestamp="20250214 14:45:56.101" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9688524771"
}</msg>
<status status="PASS" starttime="20250214 14:45:55.613" endtime="20250214 14:45:56.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:56.102" endtime="20250214 14:45:56.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:56.102" endtime="20250214 14:45:56.102"/>
</kw>
<status status="PASS" starttime="20250214 14:45:55.613" endtime="20250214 14:45:56.102"/>
</kw>
<msg timestamp="20250214 14:45:56.102" level="INFO">${bucket} = bucket-ozone-test-9688524771</msg>
<status status="PASS" starttime="20250214 14:45:55.612" endtime="20250214 14:45:56.102"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:56.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9688524771 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:56.701" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:45:56.701" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:45:56.103" endtime="20250214 14:45:56.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:56.702" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:45:56.702" endtime="20250214 14:45:56.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:56.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:56.703" endtime="20250214 14:45:56.703"/>
</kw>
<msg timestamp="20250214 14:45:56.703" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:45:56.103" endtime="20250214 14:45:56.703"/>
</kw>
<msg timestamp="20250214 14:45:56.703" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250214 14:45:56.102" endtime="20250214 14:45:56.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:56.703" endtime="20250214 14:45:56.704"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:55.611" endtime="20250214 14:45:56.704"/>
</test>
<test id="s1-s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:45:56.705" level="INFO">${randStr} = 3198565080</msg>
<status status="PASS" starttime="20250214 14:45:56.705" endtime="20250214 14:45:56.705"/>
</kw>
<msg timestamp="20250214 14:45:56.706" level="INFO">${randStr} = ozone-test-3198565080</msg>
<status status="PASS" starttime="20250214 14:45:56.705" endtime="20250214 14:45:56.706"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:56.708" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-3198565080 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:57.193" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:45:57.193" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:45:56.706" endtime="20250214 14:45:57.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:57.194" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:45:57.194" endtime="20250214 14:45:57.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:57.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:57.194" endtime="20250214 14:45:57.195"/>
</kw>
<msg timestamp="20250214 14:45:57.195" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:45:56.706" endtime="20250214 14:45:57.195"/>
</kw>
<msg timestamp="20250214 14:45:57.195" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250214 14:45:56.706" endtime="20250214 14:45:57.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:57.195" endtime="20250214 14:45:57.195"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:56.704" endtime="20250214 14:45:57.196"/>
</test>
<test id="s1-s1-s3-t4" name="Create new bucket and check default group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:45:57.198" level="INFO">${randStr} = 3609214781</msg>
<status status="PASS" starttime="20250214 14:45:57.197" endtime="20250214 14:45:57.198"/>
</kw>
<msg timestamp="20250214 14:45:57.198" level="INFO">${postfix} = ozone-test-3609214781</msg>
<status status="PASS" starttime="20250214 14:45:57.197" endtime="20250214 14:45:57.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:45:57.198" level="INFO">${bucket} = bucket-ozone-test-3609214781</msg>
<status status="PASS" starttime="20250214 14:45:57.198" endtime="20250214 14:45:57.198"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:57.202" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3609214781 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:45:57.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:45:57.680" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3609214781"
}</msg>
<status status="PASS" starttime="20250214 14:45:57.199" endtime="20250214 14:45:57.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:45:57.681" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3609214781"
}</msg>
<status status="PASS" starttime="20250214 14:45:57.680" endtime="20250214 14:45:57.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:45:57.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:45:57.681" endtime="20250214 14:45:57.681"/>
</kw>
<status status="PASS" starttime="20250214 14:45:57.199" endtime="20250214 14:45:57.681"/>
</kw>
<msg timestamp="20250214 14:45:57.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:57.199" endtime="20250214 14:45:57.681"/>
</kw>
<msg timestamp="20250214 14:45:57.682" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3609214781"
}</msg>
<status status="PASS" starttime="20250214 14:45:57.199" endtime="20250214 14:45:57.682"/>
</kw>
<msg timestamp="20250214 14:45:57.682" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3609214781"
}</msg>
<status status="PASS" starttime="20250214 14:45:57.198" endtime="20250214 14:45:57.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:57.682" endtime="20250214 14:45:57.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:45:57.682" endtime="20250214 14:45:57.683"/>
</kw>
<status status="PASS" starttime="20250214 14:45:57.198" endtime="20250214 14:45:57.683"/>
</kw>
<msg timestamp="20250214 14:45:57.683" level="INFO">${bucket} = bucket-ozone-test-3609214781</msg>
<status status="PASS" starttime="20250214 14:45:57.197" endtime="20250214 14:45:57.683"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:45:57.686" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-3609214781 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:00.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:00.670" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250214 14:45:57.684" endtime="20250214 14:46:00.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:00.671" level="INFO">[ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250214 14:46:00.670" endtime="20250214 14:46:00.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:00.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:00.671" endtime="20250214 14:46:00.671"/>
</kw>
<status status="PASS" starttime="20250214 14:45:57.684" endtime="20250214 14:46:00.672"/>
</kw>
<msg timestamp="20250214 14:46:00.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:45:57.683" endtime="20250214 14:46:00.672"/>
</kw>
<msg timestamp="20250214 14:46:00.672" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250214 14:45:57.683" endtime="20250214 14:46:00.672"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250214 14:46:00.672" level="INFO">${group} = []</msg>
<status status="PASS" starttime="20250214 14:46:00.672" endtime="20250214 14:46:00.672"/>
</kw>
<if>
<branch type="IF" condition="'${group}' != '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>READ</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>LIST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</kw>
<status status="NOT RUN" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</branch>
<status status="PASS" starttime="20250214 14:46:00.673" endtime="20250214 14:46:00.673"/>
</if>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:45:57.196" endtime="20250214 14:46:00.673"/>
</test>
<test id="s1-s1-s3-t5" name="Test buckets named like web endpoints" line="58">
<kw name="Create Random File KB" library="os">
<var>${path}</var>
<arg>64</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:00.677" level="INFO">${postfix} = stkzxjctnp</msg>
<status status="PASS" starttime="20250214 14:46:00.677" endtime="20250214 14:46:00.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:46:00.678" level="INFO">${tmpfile} = /tmp/tempfile-stkzxjctnp</msg>
<status status="PASS" starttime="20250214 14:46:00.677" endtime="20250214 14:46:00.678"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250214 14:46:00.678" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-stkzxjctnp"&gt;/tmp/tempfile-stkzxjctnp&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 14:46:00.678" endtime="20250214 14:46:00.678"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.677" endtime="20250214 14:46:00.678"/>
</kw>
<msg timestamp="20250214 14:46:00.678" level="INFO">${path} = /tmp/tempfile-stkzxjctnp</msg>
<status status="PASS" starttime="20250214 14:46:00.675" endtime="20250214 14:46:00.678"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:00.681" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-stkzxjctnp bs=1024 count=64 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:00.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:00.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:00.679" endtime="20250214 14:46:00.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:00.686" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:00.685" endtime="20250214 14:46:00.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:00.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:00.686" endtime="20250214 14:46:00.686"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.679" endtime="20250214 14:46:00.686"/>
</kw>
<msg timestamp="20250214 14:46:00.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:00.679" endtime="20250214 14:46:00.687"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.678" endtime="20250214 14:46:00.687"/>
</kw>
<msg timestamp="20250214 14:46:00.687" level="INFO">${path} = /tmp/tempfile-stkzxjctnp</msg>
<status status="PASS" starttime="20250214 14:46:00.675" endtime="20250214 14:46:00.687"/>
</kw>
<msg timestamp="20250214 14:46:00.687" level="INFO">${path} = /tmp/tempfile-stkzxjctnp</msg>
<status status="PASS" starttime="20250214 14:46:00.674" endtime="20250214 14:46:00.687"/>
</kw>
<for flavor="IN">
<var>${name}</var>
<value>conf</value>
<value>jmx</value>
<value>logs</value>
<value>logstream</value>
<value>prof</value>
<value>prom</value>
<value>secret</value>
<value>stacks</value>
<value>static</value>
<iter>
<var name="${name}">conf</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:00.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:01.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:01.182" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:46:00.689" endtime="20250214 14:46:01.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:01.183" level="INFO">{
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:46:01.182" endtime="20250214 14:46:01.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:01.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:01.183" endtime="20250214 14:46:01.183"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.689" endtime="20250214 14:46:01.183"/>
</kw>
<msg timestamp="20250214 14:46:01.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:00.688" endtime="20250214 14:46:01.184"/>
</kw>
<msg timestamp="20250214 14:46:01.184" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:46:00.688" endtime="20250214 14:46:01.184"/>
</kw>
<msg timestamp="20250214 14:46:01.184" level="INFO">${result} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250214 14:46:00.688" endtime="20250214 14:46:01.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:01.184" endtime="20250214 14:46:01.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:01.184" endtime="20250214 14:46:01.185"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.687" endtime="20250214 14:46:01.185"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:01.189" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket conf --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:01.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:01.973" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:01.187" endtime="20250214 14:46:01.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:01.974" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:01.974" endtime="20250214 14:46:01.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:01.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:01.974" endtime="20250214 14:46:01.975"/>
</kw>
<status status="PASS" starttime="20250214 14:46:01.186" endtime="20250214 14:46:01.975"/>
</kw>
<msg timestamp="20250214 14:46:01.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:01.186" endtime="20250214 14:46:01.975"/>
</kw>
<msg timestamp="20250214 14:46:01.975" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:01.186" endtime="20250214 14:46:01.975"/>
</kw>
<status status="PASS" starttime="20250214 14:46:01.185" endtime="20250214 14:46:01.975"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:01.979" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:02.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:02.482" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:01.902Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:01.977" endtime="20250214 14:46:02.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:02.483" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:01.902Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:02.482" endtime="20250214 14:46:02.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:02.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:02.483" endtime="20250214 14:46:02.483"/>
</kw>
<status status="PASS" starttime="20250214 14:46:01.976" endtime="20250214 14:46:02.483"/>
</kw>
<msg timestamp="20250214 14:46:02.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:01.976" endtime="20250214 14:46:02.484"/>
</kw>
<msg timestamp="20250214 14:46:02.484" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:01.902Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:01.976" endtime="20250214 14:46:02.484"/>
</kw>
<msg timestamp="20250214 14:46:02.484" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:01.902Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:01.975" endtime="20250214 14:46:02.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:02.484" endtime="20250214 14:46:02.484"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:02.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket conf --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:03.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:03.008" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:01 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:02.485" endtime="20250214 14:46:03.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:03.009" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:01 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:02 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:02 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:03.008" endtime="20250214 14:46:03.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:03.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:03.009" endtime="20250214 14:46:03.009"/>
</kw>
<status status="PASS" starttime="20250214 14:46:02.485" endtime="20250214 14:46:03.009"/>
</kw>
<msg timestamp="20250214 14:46:03.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:02.485" endtime="20250214 14:46:03.009"/>
</kw>
<msg timestamp="20250214 14:46:03.010" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:01 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:02.485" endtime="20250214 14:46:03.010"/>
</kw>
<status status="PASS" starttime="20250214 14:46:02.484" endtime="20250214 14:46:03.010"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:03.014" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:03.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:03.018" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.011" endtime="20250214 14:46:03.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:03.019" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.018" endtime="20250214 14:46:03.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:03.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:03.019" endtime="20250214 14:46:03.019"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.011" endtime="20250214 14:46:03.019"/>
</kw>
<msg timestamp="20250214 14:46:03.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:03.011" endtime="20250214 14:46:03.020"/>
</kw>
<msg timestamp="20250214 14:46:03.020" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.010" endtime="20250214 14:46:03.020"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:03.023" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:03.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:03.027" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.021" endtime="20250214 14:46:03.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:03.028" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.027" endtime="20250214 14:46:03.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:03.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:03.028" endtime="20250214 14:46:03.028"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.020" endtime="20250214 14:46:03.028"/>
</kw>
<msg timestamp="20250214 14:46:03.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:03.020" endtime="20250214 14:46:03.028"/>
</kw>
<msg timestamp="20250214 14:46:03.029" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:03.020" endtime="20250214 14:46:03.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:03.029" endtime="20250214 14:46:03.029"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.010" endtime="20250214 14:46:03.029"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:03.030" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:03.029" endtime="20250214 14:46:03.030"/>
</kw>
<status status="PASS" starttime="20250214 14:46:01.185" endtime="20250214 14:46:03.030"/>
</kw>
<status status="PASS" starttime="20250214 14:46:00.687" endtime="20250214 14:46:03.030"/>
</iter>
<iter>
<var name="${name}">jmx</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:03.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:03.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:03.536" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:46:03.031" endtime="20250214 14:46:03.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:03.537" level="INFO">{
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:46:03.536" endtime="20250214 14:46:03.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:03.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:03.537" endtime="20250214 14:46:03.537"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.031" endtime="20250214 14:46:03.537"/>
</kw>
<msg timestamp="20250214 14:46:03.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:03.031" endtime="20250214 14:46:03.538"/>
</kw>
<msg timestamp="20250214 14:46:03.538" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:46:03.031" endtime="20250214 14:46:03.538"/>
</kw>
<msg timestamp="20250214 14:46:03.538" level="INFO">${result} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250214 14:46:03.030" endtime="20250214 14:46:03.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:03.538" endtime="20250214 14:46:03.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:03.538" endtime="20250214 14:46:03.538"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.030" endtime="20250214 14:46:03.539"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:03.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket jmx --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:04.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:04.092" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:03.540" endtime="20250214 14:46:04.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:04.093" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:04.093" endtime="20250214 14:46:04.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:04.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:04.094" endtime="20250214 14:46:04.094"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.540" endtime="20250214 14:46:04.094"/>
</kw>
<msg timestamp="20250214 14:46:04.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:03.540" endtime="20250214 14:46:04.094"/>
</kw>
<msg timestamp="20250214 14:46:04.094" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:03.539" endtime="20250214 14:46:04.094"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.539" endtime="20250214 14:46:04.094"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:04.098" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:04.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:04.617" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:04.028Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:04.096" endtime="20250214 14:46:04.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:04.618" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:04.028Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:04.618" endtime="20250214 14:46:04.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:04.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:04.618" endtime="20250214 14:46:04.619"/>
</kw>
<status status="PASS" starttime="20250214 14:46:04.095" endtime="20250214 14:46:04.619"/>
</kw>
<msg timestamp="20250214 14:46:04.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:04.095" endtime="20250214 14:46:04.619"/>
</kw>
<msg timestamp="20250214 14:46:04.619" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:04.028Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:04.095" endtime="20250214 14:46:04.620"/>
</kw>
<msg timestamp="20250214 14:46:04.620" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:04.028Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:04.095" endtime="20250214 14:46:04.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:04.620" endtime="20250214 14:46:04.620"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:04.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket jmx --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:05.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:05.146" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:04.622" endtime="20250214 14:46:05.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:05.147" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:05 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:05 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:05.147" endtime="20250214 14:46:05.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:05.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:05.148" endtime="20250214 14:46:05.148"/>
</kw>
<status status="PASS" starttime="20250214 14:46:04.622" endtime="20250214 14:46:05.148"/>
</kw>
<msg timestamp="20250214 14:46:05.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:04.622" endtime="20250214 14:46:05.148"/>
</kw>
<msg timestamp="20250214 14:46:05.148" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:04 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:04.621" endtime="20250214 14:46:05.148"/>
</kw>
<status status="PASS" starttime="20250214 14:46:04.620" endtime="20250214 14:46:05.149"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:05.152" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:05.157" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.150" endtime="20250214 14:46:05.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:05.157" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.157" endtime="20250214 14:46:05.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:05.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:05.157" endtime="20250214 14:46:05.158"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.150" endtime="20250214 14:46:05.158"/>
</kw>
<msg timestamp="20250214 14:46:05.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:05.149" endtime="20250214 14:46:05.158"/>
</kw>
<msg timestamp="20250214 14:46:05.158" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.149" endtime="20250214 14:46:05.158"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:05.162" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:05.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:05.166" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.160" endtime="20250214 14:46:05.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:05.167" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.166" endtime="20250214 14:46:05.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:05.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:05.167" endtime="20250214 14:46:05.167"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.159" endtime="20250214 14:46:05.167"/>
</kw>
<msg timestamp="20250214 14:46:05.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:05.159" endtime="20250214 14:46:05.168"/>
</kw>
<msg timestamp="20250214 14:46:05.168" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:05.158" endtime="20250214 14:46:05.168"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:05.168" endtime="20250214 14:46:05.168"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.149" endtime="20250214 14:46:05.168"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:05.169" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:05.169" endtime="20250214 14:46:05.169"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.539" endtime="20250214 14:46:05.169"/>
</kw>
<status status="PASS" starttime="20250214 14:46:03.030" endtime="20250214 14:46:05.169"/>
</iter>
<iter>
<var name="${name}">logs</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:05.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:05.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:05.653" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:46:05.171" endtime="20250214 14:46:05.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:05.654" level="INFO">{
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:46:05.653" endtime="20250214 14:46:05.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:05.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:05.654" endtime="20250214 14:46:05.654"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.170" endtime="20250214 14:46:05.655"/>
</kw>
<msg timestamp="20250214 14:46:05.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:05.170" endtime="20250214 14:46:05.655"/>
</kw>
<msg timestamp="20250214 14:46:05.655" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:46:05.170" endtime="20250214 14:46:05.655"/>
</kw>
<msg timestamp="20250214 14:46:05.655" level="INFO">${result} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250214 14:46:05.170" endtime="20250214 14:46:05.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:05.655" endtime="20250214 14:46:05.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:05.655" endtime="20250214 14:46:05.656"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.169" endtime="20250214 14:46:05.656"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:05.659" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logs --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:06.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:06.193" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:05.657" endtime="20250214 14:46:06.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:06.194" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:06.193" endtime="20250214 14:46:06.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:06.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:06.194" endtime="20250214 14:46:06.194"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.657" endtime="20250214 14:46:06.195"/>
</kw>
<msg timestamp="20250214 14:46:06.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:05.657" endtime="20250214 14:46:06.195"/>
</kw>
<msg timestamp="20250214 14:46:06.195" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:05.657" endtime="20250214 14:46:06.195"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.656" endtime="20250214 14:46:06.195"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:06.208" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:06.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:06.696" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:06.134Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:06.206" endtime="20250214 14:46:06.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:06.697" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:06.134Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:06.696" endtime="20250214 14:46:06.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:06.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:06.697" endtime="20250214 14:46:06.697"/>
</kw>
<status status="PASS" starttime="20250214 14:46:06.196" endtime="20250214 14:46:06.697"/>
</kw>
<msg timestamp="20250214 14:46:06.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:06.196" endtime="20250214 14:46:06.697"/>
</kw>
<msg timestamp="20250214 14:46:06.697" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:06.134Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:06.196" endtime="20250214 14:46:06.697"/>
</kw>
<msg timestamp="20250214 14:46:06.698" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:06.134Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:06.195" endtime="20250214 14:46:06.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:06.698" endtime="20250214 14:46:06.698"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:06.701" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logs --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:07.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:07.210" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:06.699" endtime="20250214 14:46:07.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:07.211" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:07 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:07 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:07.210" endtime="20250214 14:46:07.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:07.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:07.211" endtime="20250214 14:46:07.211"/>
</kw>
<status status="PASS" starttime="20250214 14:46:06.699" endtime="20250214 14:46:07.212"/>
</kw>
<msg timestamp="20250214 14:46:07.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:06.699" endtime="20250214 14:46:07.212"/>
</kw>
<msg timestamp="20250214 14:46:07.212" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:06 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:06.699" endtime="20250214 14:46:07.212"/>
</kw>
<status status="PASS" starttime="20250214 14:46:06.698" endtime="20250214 14:46:07.212"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:07.215" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:07.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:07.220" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.213" endtime="20250214 14:46:07.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:07.221" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.220" endtime="20250214 14:46:07.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:07.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:07.221" endtime="20250214 14:46:07.221"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.213" endtime="20250214 14:46:07.221"/>
</kw>
<msg timestamp="20250214 14:46:07.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:07.213" endtime="20250214 14:46:07.222"/>
</kw>
<msg timestamp="20250214 14:46:07.222" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.212" endtime="20250214 14:46:07.222"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:07.225" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:07.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:07.229" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.223" endtime="20250214 14:46:07.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:07.230" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.229" endtime="20250214 14:46:07.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:07.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:07.230" endtime="20250214 14:46:07.230"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.222" endtime="20250214 14:46:07.230"/>
</kw>
<msg timestamp="20250214 14:46:07.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:07.222" endtime="20250214 14:46:07.230"/>
</kw>
<msg timestamp="20250214 14:46:07.231" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:07.222" endtime="20250214 14:46:07.231"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:07.231" endtime="20250214 14:46:07.231"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.212" endtime="20250214 14:46:07.231"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:07.232" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:07.231" endtime="20250214 14:46:07.232"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.656" endtime="20250214 14:46:07.232"/>
</kw>
<status status="PASS" starttime="20250214 14:46:05.169" endtime="20250214 14:46:07.232"/>
</iter>
<iter>
<var name="${name}">logstream</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:07.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:07.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:07.718" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:46:07.233" endtime="20250214 14:46:07.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:07.719" level="INFO">{
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:46:07.718" endtime="20250214 14:46:07.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:07.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:07.719" endtime="20250214 14:46:07.719"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.233" endtime="20250214 14:46:07.719"/>
</kw>
<msg timestamp="20250214 14:46:07.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:07.233" endtime="20250214 14:46:07.720"/>
</kw>
<msg timestamp="20250214 14:46:07.720" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:46:07.233" endtime="20250214 14:46:07.720"/>
</kw>
<msg timestamp="20250214 14:46:07.720" level="INFO">${result} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250214 14:46:07.232" endtime="20250214 14:46:07.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:07.720" endtime="20250214 14:46:07.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:07.720" endtime="20250214 14:46:07.720"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.232" endtime="20250214 14:46:07.721"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:07.725" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logstream --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:08.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:08.287" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:07.723" endtime="20250214 14:46:08.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:08.288" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:08.287" endtime="20250214 14:46:08.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:08.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:08.288" endtime="20250214 14:46:08.289"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.722" endtime="20250214 14:46:08.289"/>
</kw>
<msg timestamp="20250214 14:46:08.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:07.722" endtime="20250214 14:46:08.289"/>
</kw>
<msg timestamp="20250214 14:46:08.289" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:07.722" endtime="20250214 14:46:08.289"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.721" endtime="20250214 14:46:08.289"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:08.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:08.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:08.804" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:08.218Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:08.290" endtime="20250214 14:46:08.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:08.805" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:08.218Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:08.804" endtime="20250214 14:46:08.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:08.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:08.805" endtime="20250214 14:46:08.805"/>
</kw>
<status status="PASS" starttime="20250214 14:46:08.290" endtime="20250214 14:46:08.805"/>
</kw>
<msg timestamp="20250214 14:46:08.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:08.290" endtime="20250214 14:46:08.805"/>
</kw>
<msg timestamp="20250214 14:46:08.805" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:08.218Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:08.290" endtime="20250214 14:46:08.806"/>
</kw>
<msg timestamp="20250214 14:46:08.806" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:08.218Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:08.289" endtime="20250214 14:46:08.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:08.806" endtime="20250214 14:46:08.806"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:08.810" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logstream --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:09.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:09.306" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:08.808" endtime="20250214 14:46:09.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:09.307" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:09 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:09 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:09.306" endtime="20250214 14:46:09.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:09.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:09.307" endtime="20250214 14:46:09.307"/>
</kw>
<status status="PASS" starttime="20250214 14:46:08.807" endtime="20250214 14:46:09.307"/>
</kw>
<msg timestamp="20250214 14:46:09.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:08.807" endtime="20250214 14:46:09.308"/>
</kw>
<msg timestamp="20250214 14:46:09.308" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:08 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:08.807" endtime="20250214 14:46:09.308"/>
</kw>
<status status="PASS" starttime="20250214 14:46:08.806" endtime="20250214 14:46:09.308"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:09.311" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:09.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:09.316" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.309" endtime="20250214 14:46:09.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:09.316" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.316" endtime="20250214 14:46:09.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:09.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:09.317" endtime="20250214 14:46:09.317"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.309" endtime="20250214 14:46:09.317"/>
</kw>
<msg timestamp="20250214 14:46:09.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:09.309" endtime="20250214 14:46:09.317"/>
</kw>
<msg timestamp="20250214 14:46:09.317" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.308" endtime="20250214 14:46:09.317"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:09.320" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:09.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:09.325" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.319" endtime="20250214 14:46:09.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:09.325" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.325" endtime="20250214 14:46:09.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:09.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:09.325" endtime="20250214 14:46:09.326"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.318" endtime="20250214 14:46:09.326"/>
</kw>
<msg timestamp="20250214 14:46:09.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:09.318" endtime="20250214 14:46:09.326"/>
</kw>
<msg timestamp="20250214 14:46:09.326" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:09.317" endtime="20250214 14:46:09.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:09.326" endtime="20250214 14:46:09.327"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.308" endtime="20250214 14:46:09.327"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:09.327" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:09.327" endtime="20250214 14:46:09.327"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.721" endtime="20250214 14:46:09.327"/>
</kw>
<status status="PASS" starttime="20250214 14:46:07.232" endtime="20250214 14:46:09.327"/>
</iter>
<iter>
<var name="${name}">prof</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:09.331" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:09.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:09.832" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:46:09.329" endtime="20250214 14:46:09.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:09.833" level="INFO">{
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:46:09.833" endtime="20250214 14:46:09.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:09.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:09.833" endtime="20250214 14:46:09.834"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.329" endtime="20250214 14:46:09.834"/>
</kw>
<msg timestamp="20250214 14:46:09.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:09.328" endtime="20250214 14:46:09.834"/>
</kw>
<msg timestamp="20250214 14:46:09.834" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:46:09.328" endtime="20250214 14:46:09.834"/>
</kw>
<msg timestamp="20250214 14:46:09.834" level="INFO">${result} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250214 14:46:09.328" endtime="20250214 14:46:09.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:09.834" endtime="20250214 14:46:09.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:09.835" endtime="20250214 14:46:09.835"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.328" endtime="20250214 14:46:09.835"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:09.839" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prof --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:10.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:10.372" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:09.837" endtime="20250214 14:46:10.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:10.373" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:10.373" endtime="20250214 14:46:10.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:10.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:10.373" endtime="20250214 14:46:10.374"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.836" endtime="20250214 14:46:10.374"/>
</kw>
<msg timestamp="20250214 14:46:10.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:09.836" endtime="20250214 14:46:10.374"/>
</kw>
<msg timestamp="20250214 14:46:10.374" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:09.836" endtime="20250214 14:46:10.374"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.836" endtime="20250214 14:46:10.374"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:10.378" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:10.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:10.899" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:10.313Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:10.376" endtime="20250214 14:46:10.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:10.900" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:10.313Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:10.900" endtime="20250214 14:46:10.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:10.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:10.901" endtime="20250214 14:46:10.901"/>
</kw>
<status status="PASS" starttime="20250214 14:46:10.376" endtime="20250214 14:46:10.901"/>
</kw>
<msg timestamp="20250214 14:46:10.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:10.375" endtime="20250214 14:46:10.901"/>
</kw>
<msg timestamp="20250214 14:46:10.901" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:10.313Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:10.375" endtime="20250214 14:46:10.901"/>
</kw>
<msg timestamp="20250214 14:46:10.902" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:10.313Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:10.374" endtime="20250214 14:46:10.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:10.902" endtime="20250214 14:46:10.902"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:10.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prof --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:11.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:11.393" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:10.903" endtime="20250214 14:46:11.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:11.394" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:11 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:11 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:11.393" endtime="20250214 14:46:11.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:11.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:11.394" endtime="20250214 14:46:11.394"/>
</kw>
<status status="PASS" starttime="20250214 14:46:10.903" endtime="20250214 14:46:11.395"/>
</kw>
<msg timestamp="20250214 14:46:11.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:10.903" endtime="20250214 14:46:11.395"/>
</kw>
<msg timestamp="20250214 14:46:11.395" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:10 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:10.902" endtime="20250214 14:46:11.395"/>
</kw>
<status status="PASS" starttime="20250214 14:46:10.902" endtime="20250214 14:46:11.395"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:11.398" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:11.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:11.403" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.396" endtime="20250214 14:46:11.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:11.404" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.403" endtime="20250214 14:46:11.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:11.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:11.404" endtime="20250214 14:46:11.404"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.396" endtime="20250214 14:46:11.404"/>
</kw>
<msg timestamp="20250214 14:46:11.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:11.396" endtime="20250214 14:46:11.404"/>
</kw>
<msg timestamp="20250214 14:46:11.404" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.396" endtime="20250214 14:46:11.404"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:11.407" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:11.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:11.412" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.405" endtime="20250214 14:46:11.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:11.413" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.412" endtime="20250214 14:46:11.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:11.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:11.413" endtime="20250214 14:46:11.413"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.405" endtime="20250214 14:46:11.413"/>
</kw>
<msg timestamp="20250214 14:46:11.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:11.405" endtime="20250214 14:46:11.413"/>
</kw>
<msg timestamp="20250214 14:46:11.414" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:11.405" endtime="20250214 14:46:11.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:11.414" endtime="20250214 14:46:11.414"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.395" endtime="20250214 14:46:11.414"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:11.415" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:11.414" endtime="20250214 14:46:11.415"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.835" endtime="20250214 14:46:11.415"/>
</kw>
<status status="PASS" starttime="20250214 14:46:09.327" endtime="20250214 14:46:11.415"/>
</iter>
<iter>
<var name="${name}">prom</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:11.419" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:11.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:11.905" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:46:11.417" endtime="20250214 14:46:11.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:11.905" level="INFO">{
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:46:11.905" endtime="20250214 14:46:11.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:11.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:11.906" endtime="20250214 14:46:11.906"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.416" endtime="20250214 14:46:11.906"/>
</kw>
<msg timestamp="20250214 14:46:11.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:11.416" endtime="20250214 14:46:11.906"/>
</kw>
<msg timestamp="20250214 14:46:11.906" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:46:11.416" endtime="20250214 14:46:11.906"/>
</kw>
<msg timestamp="20250214 14:46:11.907" level="INFO">${result} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250214 14:46:11.415" endtime="20250214 14:46:11.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:11.907" endtime="20250214 14:46:11.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:11.907" endtime="20250214 14:46:11.907"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.415" endtime="20250214 14:46:11.907"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:11.911" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prom --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:12.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:12.461" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:11.909" endtime="20250214 14:46:12.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:12.462" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:12.462" endtime="20250214 14:46:12.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:12.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:12.462" endtime="20250214 14:46:12.463"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.909" endtime="20250214 14:46:12.463"/>
</kw>
<msg timestamp="20250214 14:46:12.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:11.909" endtime="20250214 14:46:12.463"/>
</kw>
<msg timestamp="20250214 14:46:12.463" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:11.908" endtime="20250214 14:46:12.463"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.908" endtime="20250214 14:46:12.463"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:12.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:12.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:12.946" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:12.403Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:12.465" endtime="20250214 14:46:12.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:12.947" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:12.403Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:12.946" endtime="20250214 14:46:12.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:12.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:12.947" endtime="20250214 14:46:12.947"/>
</kw>
<status status="PASS" starttime="20250214 14:46:12.464" endtime="20250214 14:46:12.947"/>
</kw>
<msg timestamp="20250214 14:46:12.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:12.464" endtime="20250214 14:46:12.947"/>
</kw>
<msg timestamp="20250214 14:46:12.948" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:12.403Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:12.464" endtime="20250214 14:46:12.948"/>
</kw>
<msg timestamp="20250214 14:46:12.948" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:12.403Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:12.464" endtime="20250214 14:46:12.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:12.948" endtime="20250214 14:46:12.948"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:12.952" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prom --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:13.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:13.440" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:12.950" endtime="20250214 14:46:13.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:13.441" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:13 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:13 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:13.441" endtime="20250214 14:46:13.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:13.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:13.441" endtime="20250214 14:46:13.442"/>
</kw>
<status status="PASS" starttime="20250214 14:46:12.949" endtime="20250214 14:46:13.442"/>
</kw>
<msg timestamp="20250214 14:46:13.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:12.949" endtime="20250214 14:46:13.442"/>
</kw>
<msg timestamp="20250214 14:46:13.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:12 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:12.949" endtime="20250214 14:46:13.442"/>
</kw>
<status status="PASS" starttime="20250214 14:46:12.948" endtime="20250214 14:46:13.442"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:13.446" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:13.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:13.450" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.444" endtime="20250214 14:46:13.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:13.451" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.450" endtime="20250214 14:46:13.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:13.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:13.451" endtime="20250214 14:46:13.451"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.443" endtime="20250214 14:46:13.452"/>
</kw>
<msg timestamp="20250214 14:46:13.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:13.443" endtime="20250214 14:46:13.452"/>
</kw>
<msg timestamp="20250214 14:46:13.452" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.443" endtime="20250214 14:46:13.452"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:13.455" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:13.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:13.459" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.453" endtime="20250214 14:46:13.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:13.459" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.459" endtime="20250214 14:46:13.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:13.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:13.460" endtime="20250214 14:46:13.460"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.452" endtime="20250214 14:46:13.460"/>
</kw>
<msg timestamp="20250214 14:46:13.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:13.452" endtime="20250214 14:46:13.460"/>
</kw>
<msg timestamp="20250214 14:46:13.460" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:13.452" endtime="20250214 14:46:13.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:13.460" endtime="20250214 14:46:13.461"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.442" endtime="20250214 14:46:13.461"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:13.461" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:13.461" endtime="20250214 14:46:13.461"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.907" endtime="20250214 14:46:13.461"/>
</kw>
<status status="PASS" starttime="20250214 14:46:11.415" endtime="20250214 14:46:13.462"/>
</iter>
<iter>
<var name="${name}">secret</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:13.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:13.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:13.965" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:46:13.463" endtime="20250214 14:46:13.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:13.966" level="INFO">{
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:46:13.965" endtime="20250214 14:46:13.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:13.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:13.966" endtime="20250214 14:46:13.966"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.463" endtime="20250214 14:46:13.966"/>
</kw>
<msg timestamp="20250214 14:46:13.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:13.463" endtime="20250214 14:46:13.966"/>
</kw>
<msg timestamp="20250214 14:46:13.967" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:46:13.462" endtime="20250214 14:46:13.967"/>
</kw>
<msg timestamp="20250214 14:46:13.967" level="INFO">${result} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250214 14:46:13.462" endtime="20250214 14:46:13.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:13.967" endtime="20250214 14:46:13.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:13.967" endtime="20250214 14:46:13.967"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.462" endtime="20250214 14:46:13.968"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:13.971" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket secret --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:14.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:14.517" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:13.969" endtime="20250214 14:46:14.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:14.518" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:14.518" endtime="20250214 14:46:14.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:14.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:14.518" endtime="20250214 14:46:14.519"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.969" endtime="20250214 14:46:14.519"/>
</kw>
<msg timestamp="20250214 14:46:14.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:13.969" endtime="20250214 14:46:14.519"/>
</kw>
<msg timestamp="20250214 14:46:14.519" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:13.968" endtime="20250214 14:46:14.519"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.968" endtime="20250214 14:46:14.519"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:14.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:15.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:15.010" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:14.458Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:14.520" endtime="20250214 14:46:15.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:15.011" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:14.458Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:15.011" endtime="20250214 14:46:15.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:15.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:15.011" endtime="20250214 14:46:15.012"/>
</kw>
<status status="PASS" starttime="20250214 14:46:14.520" endtime="20250214 14:46:15.012"/>
</kw>
<msg timestamp="20250214 14:46:15.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:14.520" endtime="20250214 14:46:15.012"/>
</kw>
<msg timestamp="20250214 14:46:15.012" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:14.458Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:14.519" endtime="20250214 14:46:15.012"/>
</kw>
<msg timestamp="20250214 14:46:15.012" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:14.458Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:14.519" endtime="20250214 14:46:15.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:15.012" endtime="20250214 14:46:15.013"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:15.016" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket secret --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:15.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:15.510" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:14 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:15.014" endtime="20250214 14:46:15.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:15.511" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:14 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:15 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:15 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:15.511" endtime="20250214 14:46:15.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:15.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:15.511" endtime="20250214 14:46:15.512"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.014" endtime="20250214 14:46:15.512"/>
</kw>
<msg timestamp="20250214 14:46:15.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:15.013" endtime="20250214 14:46:15.512"/>
</kw>
<msg timestamp="20250214 14:46:15.512" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:14 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:15.013" endtime="20250214 14:46:15.512"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.013" endtime="20250214 14:46:15.512"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:15.516" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:15.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:15.520" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.513" endtime="20250214 14:46:15.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:15.521" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.520" endtime="20250214 14:46:15.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:15.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:15.521" endtime="20250214 14:46:15.521"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.513" endtime="20250214 14:46:15.521"/>
</kw>
<msg timestamp="20250214 14:46:15.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:15.513" endtime="20250214 14:46:15.521"/>
</kw>
<msg timestamp="20250214 14:46:15.521" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.513" endtime="20250214 14:46:15.521"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:15.524" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:15.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:15.528" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.522" endtime="20250214 14:46:15.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:15.529" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.528" endtime="20250214 14:46:15.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:15.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:15.529" endtime="20250214 14:46:15.529"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.522" endtime="20250214 14:46:15.529"/>
</kw>
<msg timestamp="20250214 14:46:15.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:15.522" endtime="20250214 14:46:15.530"/>
</kw>
<msg timestamp="20250214 14:46:15.530" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:15.522" endtime="20250214 14:46:15.530"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:15.530" endtime="20250214 14:46:15.530"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.512" endtime="20250214 14:46:15.530"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:15.531" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:15.530" endtime="20250214 14:46:15.531"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.968" endtime="20250214 14:46:15.531"/>
</kw>
<status status="PASS" starttime="20250214 14:46:13.462" endtime="20250214 14:46:15.531"/>
</iter>
<iter>
<var name="${name}">stacks</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:15.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:16.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:16.032" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:46:15.532" endtime="20250214 14:46:16.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:16.033" level="INFO">{
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:46:16.033" endtime="20250214 14:46:16.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:16.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:16.034" endtime="20250214 14:46:16.034"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.532" endtime="20250214 14:46:16.034"/>
</kw>
<msg timestamp="20250214 14:46:16.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:15.532" endtime="20250214 14:46:16.035"/>
</kw>
<msg timestamp="20250214 14:46:16.035" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:46:15.532" endtime="20250214 14:46:16.035"/>
</kw>
<msg timestamp="20250214 14:46:16.035" level="INFO">${result} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250214 14:46:15.531" endtime="20250214 14:46:16.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:16.035" endtime="20250214 14:46:16.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:16.035" endtime="20250214 14:46:16.036"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.531" endtime="20250214 14:46:16.036"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:16.039" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket stacks --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:16.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:16.683" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:16.037" endtime="20250214 14:46:16.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:16.684" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:16.683" endtime="20250214 14:46:16.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:16.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:16.684" endtime="20250214 14:46:16.684"/>
</kw>
<status status="PASS" starttime="20250214 14:46:16.037" endtime="20250214 14:46:16.684"/>
</kw>
<msg timestamp="20250214 14:46:16.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:16.037" endtime="20250214 14:46:16.685"/>
</kw>
<msg timestamp="20250214 14:46:16.685" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:16.037" endtime="20250214 14:46:16.685"/>
</kw>
<status status="PASS" starttime="20250214 14:46:16.036" endtime="20250214 14:46:16.685"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:16.689" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:17.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:17.213" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:16.599Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:16.686" endtime="20250214 14:46:17.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:17.214" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:16.599Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:17.213" endtime="20250214 14:46:17.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:17.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:17.214" endtime="20250214 14:46:17.214"/>
</kw>
<status status="PASS" starttime="20250214 14:46:16.686" endtime="20250214 14:46:17.215"/>
</kw>
<msg timestamp="20250214 14:46:17.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:16.686" endtime="20250214 14:46:17.215"/>
</kw>
<msg timestamp="20250214 14:46:17.215" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:16.599Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:16.685" endtime="20250214 14:46:17.215"/>
</kw>
<msg timestamp="20250214 14:46:17.215" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:16.599Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:16.685" endtime="20250214 14:46:17.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:17.215" endtime="20250214 14:46:17.216"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:17.220" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket stacks --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:17.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:17.744" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:16 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:17.217" endtime="20250214 14:46:17.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:17.745" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:16 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:17 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:17 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:17.745" endtime="20250214 14:46:17.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:17.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:17.746" endtime="20250214 14:46:17.746"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.217" endtime="20250214 14:46:17.746"/>
</kw>
<msg timestamp="20250214 14:46:17.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:17.216" endtime="20250214 14:46:17.746"/>
</kw>
<msg timestamp="20250214 14:46:17.746" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:16 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:17.216" endtime="20250214 14:46:17.746"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.216" endtime="20250214 14:46:17.747"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:17.753" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:17.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:17.758" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.748" endtime="20250214 14:46:17.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:17.759" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.759" endtime="20250214 14:46:17.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:17.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:17.759" endtime="20250214 14:46:17.760"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.748" endtime="20250214 14:46:17.760"/>
</kw>
<msg timestamp="20250214 14:46:17.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:17.748" endtime="20250214 14:46:17.760"/>
</kw>
<msg timestamp="20250214 14:46:17.761" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.747" endtime="20250214 14:46:17.761"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:17.767" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:17.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:17.772" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.762" endtime="20250214 14:46:17.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:17.774" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.773" endtime="20250214 14:46:17.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:17.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:17.774" endtime="20250214 14:46:17.775"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.762" endtime="20250214 14:46:17.775"/>
</kw>
<msg timestamp="20250214 14:46:17.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:17.761" endtime="20250214 14:46:17.775"/>
</kw>
<msg timestamp="20250214 14:46:17.775" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:17.761" endtime="20250214 14:46:17.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:17.776" endtime="20250214 14:46:17.776"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.747" endtime="20250214 14:46:17.776"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:17.777" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:17.776" endtime="20250214 14:46:17.777"/>
</kw>
<status status="PASS" starttime="20250214 14:46:16.036" endtime="20250214 14:46:17.777"/>
</kw>
<status status="PASS" starttime="20250214 14:46:15.531" endtime="20250214 14:46:17.777"/>
</iter>
<iter>
<var name="${name}">static</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:17.782" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:18.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:18.415" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:46:17.779" endtime="20250214 14:46:18.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:18.416" level="INFO">{
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:46:18.416" endtime="20250214 14:46:18.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:18.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:18.416" endtime="20250214 14:46:18.417"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.779" endtime="20250214 14:46:18.418"/>
</kw>
<msg timestamp="20250214 14:46:18.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:17.779" endtime="20250214 14:46:18.418"/>
</kw>
<msg timestamp="20250214 14:46:18.418" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:46:17.778" endtime="20250214 14:46:18.418"/>
</kw>
<msg timestamp="20250214 14:46:18.418" level="INFO">${result} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250214 14:46:17.778" endtime="20250214 14:46:18.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:18.418" endtime="20250214 14:46:18.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:18.418" endtime="20250214 14:46:18.419"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.777" endtime="20250214 14:46:18.419"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:18.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket static --key testkey --body /tmp/tempfile-stkzxjctnp 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:18.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:18.969" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:18.420" endtime="20250214 14:46:18.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:18.970" level="INFO">{
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:18.970" endtime="20250214 14:46:18.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:18.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:18.970" endtime="20250214 14:46:18.971"/>
</kw>
<status status="PASS" starttime="20250214 14:46:18.420" endtime="20250214 14:46:18.971"/>
</kw>
<msg timestamp="20250214 14:46:18.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:18.420" endtime="20250214 14:46:18.971"/>
</kw>
<msg timestamp="20250214 14:46:18.971" level="INFO">${output} = {
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\""
}</msg>
<status status="PASS" starttime="20250214 14:46:18.420" endtime="20250214 14:46:18.971"/>
</kw>
<status status="PASS" starttime="20250214 14:46:18.419" endtime="20250214 14:46:18.971"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:18.975" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:19.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:19.476" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:18.905Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:18.972" endtime="20250214 14:46:19.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:19.477" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:18.905Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:46:19.477" endtime="20250214 14:46:19.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:19.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:19.478" endtime="20250214 14:46:19.478"/>
</kw>
<status status="PASS" starttime="20250214 14:46:18.972" endtime="20250214 14:46:19.478"/>
</kw>
<msg timestamp="20250214 14:46:19.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:18.972" endtime="20250214 14:46:19.478"/>
</kw>
<msg timestamp="20250214 14:46:19.478" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:18.905Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:18.972" endtime="20250214 14:46:19.478"/>
</kw>
<msg timestamp="20250214 14:46:19.479" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-02-14T14:46:18.905Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250214 14:46:18.971" endtime="20250214 14:46:19.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:19.479" endtime="20250214 14:46:19.479"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:19.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket static --key testkey /tmp/tempfile-stkzxjctnp.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:19.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:19.965" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:18 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:19.480" endtime="20250214 14:46:19.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:19.966" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:18 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:19 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:46:19 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:19.965" endtime="20250214 14:46:19.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:19.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:19.966" endtime="20250214 14:46:19.966"/>
</kw>
<status status="PASS" starttime="20250214 14:46:19.480" endtime="20250214 14:46:19.966"/>
</kw>
<msg timestamp="20250214 14:46:19.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:19.480" endtime="20250214 14:46:19.967"/>
</kw>
<msg timestamp="20250214 14:46:19.967" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:18 GMT",
    "ContentLength": 65536,
    "ETag": "\"10d56fdd42ad562c2f9373772d5574f9\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250214 14:46:19.479" endtime="20250214 14:46:19.967"/>
</kw>
<status status="PASS" starttime="20250214 14:46:19.479" endtime="20250214 14:46:19.967"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:19.970" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:19.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:19.975" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.968" endtime="20250214 14:46:19.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:19.975" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.975" endtime="20250214 14:46:19.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:19.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:19.976" endtime="20250214 14:46:19.976"/>
</kw>
<status status="PASS" starttime="20250214 14:46:19.968" endtime="20250214 14:46:19.976"/>
</kw>
<msg timestamp="20250214 14:46:19.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:19.968" endtime="20250214 14:46:19.976"/>
</kw>
<msg timestamp="20250214 14:46:19.976" level="INFO">${checksumbefore} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.967" endtime="20250214 14:46:19.976"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:19.979" level="INFO">Running command 'md5sum /tmp/tempfile-stkzxjctnp.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:19.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:19.983" level="INFO">${output} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.977" endtime="20250214 14:46:19.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:19.984" level="INFO">10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.983" endtime="20250214 14:46:19.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:19.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:19.984" endtime="20250214 14:46:19.984"/>
</kw>
<status status="PASS" starttime="20250214 14:46:19.977" endtime="20250214 14:46:19.984"/>
</kw>
<msg timestamp="20250214 14:46:19.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:19.977" endtime="20250214 14:46:19.984"/>
</kw>
<msg timestamp="20250214 14:46:19.985" level="INFO">${checksumafter} = 10d56fdd42ad562c2f9373772d5574f9</msg>
<status status="PASS" starttime="20250214 14:46:19.976" endtime="20250214 14:46:19.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:19.985" endtime="20250214 14:46:19.985"/>
</kw>
<status status="PASS" starttime="20250214 14:46:19.967" endtime="20250214 14:46:19.985"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250214 14:46:19.986" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-stkzxjctnp.verify"&gt;/tmp/tempfile-stkzxjctnp.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250214 14:46:19.985" endtime="20250214 14:46:19.986"/>
</kw>
<status status="PASS" starttime="20250214 14:46:18.419" endtime="20250214 14:46:19.986"/>
</kw>
<status status="PASS" starttime="20250214 14:46:17.777" endtime="20250214 14:46:19.986"/>
</iter>
<status status="PASS" starttime="20250214 14:46:00.687" endtime="20250214 14:46:19.986"/>
</for>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:00.674" endtime="20250214 14:46:19.986"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:45:55.115" endtime="20250214 14:46:19.987"/>
</suite>
<suite id="s1-s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:46:20.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.002" endtime="20250214 14:46:20.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.003" endtime="20250214 14:46:20.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.003" endtime="20250214 14:46:20.003"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:46:20.003" endtime="20250214 14:46:20.003"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.001" endtime="20250214 14:46:20.003"/>
</kw>
<test id="s1-s1-s4-t1" name="Delete existing bucket" line="38">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:20.005" level="INFO">${randStr} = 7837117565</msg>
<status status="PASS" starttime="20250214 14:46:20.004" endtime="20250214 14:46:20.005"/>
</kw>
<msg timestamp="20250214 14:46:20.005" level="INFO">${postfix} = ozone-test-7837117565</msg>
<status status="PASS" starttime="20250214 14:46:20.004" endtime="20250214 14:46:20.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:46:20.005" level="INFO">${bucket} = bucket-ozone-test-7837117565</msg>
<status status="PASS" starttime="20250214 14:46:20.005" endtime="20250214 14:46:20.005"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:20.009" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7837117565 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:20.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:20.475" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7837117565"
}</msg>
<status status="PASS" starttime="20250214 14:46:20.007" endtime="20250214 14:46:20.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:20.476" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7837117565"
}</msg>
<status status="PASS" starttime="20250214 14:46:20.475" endtime="20250214 14:46:20.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:20.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:20.476" endtime="20250214 14:46:20.476"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.006" endtime="20250214 14:46:20.476"/>
</kw>
<msg timestamp="20250214 14:46:20.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:20.006" endtime="20250214 14:46:20.476"/>
</kw>
<msg timestamp="20250214 14:46:20.476" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7837117565"
}</msg>
<status status="PASS" starttime="20250214 14:46:20.006" endtime="20250214 14:46:20.476"/>
</kw>
<msg timestamp="20250214 14:46:20.477" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7837117565"
}</msg>
<status status="PASS" starttime="20250214 14:46:20.005" endtime="20250214 14:46:20.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:20.477" endtime="20250214 14:46:20.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:20.477" endtime="20250214 14:46:20.477"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.005" endtime="20250214 14:46:20.477"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.004" endtime="20250214 14:46:20.477"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.004" endtime="20250214 14:46:20.477"/>
</kw>
<msg timestamp="20250214 14:46:20.478" level="INFO">${bucket} = bucket-ozone-test-7837117565</msg>
<status status="PASS" starttime="20250214 14:46:20.004" endtime="20250214 14:46:20.478"/>
</kw>
<msg timestamp="20250214 14:46:20.478" level="INFO">${bucket} = bucket-ozone-test-7837117565</msg>
<status status="PASS" starttime="20250214 14:46:20.003" endtime="20250214 14:46:20.478"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:20.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-7837117565 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:20.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:20.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:20.479" endtime="20250214 14:46:20.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:20.978" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:20.978" endtime="20250214 14:46:20.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:20.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:20.978" endtime="20250214 14:46:20.979"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.479" endtime="20250214 14:46:20.979"/>
</kw>
<msg timestamp="20250214 14:46:20.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:20.478" endtime="20250214 14:46:20.979"/>
</kw>
<msg timestamp="20250214 14:46:20.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:20.478" endtime="20250214 14:46:20.979"/>
</kw>
<status status="PASS" starttime="20250214 14:46:20.478" endtime="20250214 14:46:20.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:20.003" endtime="20250214 14:46:20.979"/>
</test>
<test id="s1-s1-s4-t2" name="Delete non-existent bucket" line="42">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:20.981" level="INFO">${randStr} = 0082739778</msg>
<status status="PASS" starttime="20250214 14:46:20.981" endtime="20250214 14:46:20.981"/>
</kw>
<msg timestamp="20250214 14:46:20.981" level="INFO">${randStr} = ozone-test-0082739778</msg>
<status status="PASS" starttime="20250214 14:46:20.980" endtime="20250214 14:46:20.981"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:20.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-0082739778 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:21.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:21.474" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:46:20.982" endtime="20250214 14:46:21.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:21.475" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:46:21.475" endtime="20250214 14:46:21.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:21.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:21.475" endtime="20250214 14:46:21.476"/>
</kw>
<msg timestamp="20250214 14:46:21.476" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:46:20.982" endtime="20250214 14:46:21.476"/>
</kw>
<msg timestamp="20250214 14:46:21.476" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:46:20.981" endtime="20250214 14:46:21.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:21.476" endtime="20250214 14:46:21.477"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:20.980" endtime="20250214 14:46:21.477"/>
</test>
<test id="s1-s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="48">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:21.479" level="INFO">${randStr} = 6992142262</msg>
<status status="PASS" starttime="20250214 14:46:21.478" endtime="20250214 14:46:21.479"/>
</kw>
<msg timestamp="20250214 14:46:21.479" level="INFO">${postfix} = ozone-test-6992142262</msg>
<status status="PASS" starttime="20250214 14:46:21.478" endtime="20250214 14:46:21.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:46:21.479" level="INFO">${bucket} = bucket-ozone-test-6992142262</msg>
<status status="PASS" starttime="20250214 14:46:21.479" endtime="20250214 14:46:21.479"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:21.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6992142262 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:21.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:21.988" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6992142262"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.481" endtime="20250214 14:46:21.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:21.989" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-6992142262"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.988" endtime="20250214 14:46:21.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:21.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:21.989" endtime="20250214 14:46:21.989"/>
</kw>
<status status="PASS" starttime="20250214 14:46:21.480" endtime="20250214 14:46:21.989"/>
</kw>
<msg timestamp="20250214 14:46:21.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:21.480" endtime="20250214 14:46:21.989"/>
</kw>
<msg timestamp="20250214 14:46:21.990" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6992142262"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.480" endtime="20250214 14:46:21.990"/>
</kw>
<msg timestamp="20250214 14:46:21.990" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6992142262"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.480" endtime="20250214 14:46:21.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:21.990" endtime="20250214 14:46:21.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:21.990" endtime="20250214 14:46:21.990"/>
</kw>
<status status="PASS" starttime="20250214 14:46:21.479" endtime="20250214 14:46:21.990"/>
</kw>
<msg timestamp="20250214 14:46:21.991" level="INFO">${bucket} = bucket-ozone-test-6992142262</msg>
<status status="PASS" starttime="20250214 14:46:21.478" endtime="20250214 14:46:21.991"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:21.994" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-6992142262 --key incomplete-multipartkey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:22.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:22.485" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-6992142262",
    "Key": "incomplete-multipartkey",
    "UploadId": "d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.992" endtime="20250214 14:46:22.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:22.486" level="INFO">{
    "Bucket": "bucket-ozone-test-6992142262",
    "Key": "incomplete-multipartkey",
    "UploadId": "d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897"
}</msg>
<status status="PASS" starttime="20250214 14:46:22.485" endtime="20250214 14:46:22.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:22.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:22.486" endtime="20250214 14:46:22.486"/>
</kw>
<msg timestamp="20250214 14:46:22.486" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-6992142262",
    "Key": "incomplete-multipartkey",
    "UploadId": "d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.992" endtime="20250214 14:46:22.487"/>
</kw>
<msg timestamp="20250214 14:46:22.487" level="INFO">${result} = {
    "Bucket": "bucket-ozone-test-6992142262",
    "Key": "incomplete-multipartkey",
    "UploadId": "d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897"
}</msg>
<status status="PASS" starttime="20250214 14:46:21.992" endtime="20250214 14:46:22.487"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:22.487" endtime="20250214 14:46:22.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:22.487" endtime="20250214 14:46:22.488"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:22.490" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-6992142262",
    "Key": "incomplete-multipartkey",
    "UploadId": "d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:22.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:22.495" level="INFO">${output} = d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897</msg>
<status status="PASS" starttime="20250214 14:46:22.488" endtime="20250214 14:46:22.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:22.496" level="INFO">d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897</msg>
<status status="PASS" starttime="20250214 14:46:22.495" endtime="20250214 14:46:22.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:22.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:22.496" endtime="20250214 14:46:22.496"/>
</kw>
<msg timestamp="20250214 14:46:22.497" level="INFO">${upload_id} = d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897</msg>
<status status="PASS" starttime="20250214 14:46:22.488" endtime="20250214 14:46:22.497"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:22.497" endtime="20250214 14:46:22.497"/>
</return>
<status status="PASS" starttime="20250214 14:46:22.487" endtime="20250214 14:46:22.497"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:22.497" endtime="20250214 14:46:22.497"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:22.497" endtime="20250214 14:46:22.497"/>
</branch>
<status status="PASS" starttime="20250214 14:46:22.487" endtime="20250214 14:46:22.497"/>
</if>
<msg timestamp="20250214 14:46:22.497" level="INFO">${uploadID} = d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897</msg>
<status status="PASS" starttime="20250214 14:46:21.991" endtime="20250214 14:46:22.497"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:22.500" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-6992142262 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:22.988" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:22.988" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:46:22.498" endtime="20250214 14:46:22.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:22.989" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20250214 14:46:22.988" endtime="20250214 14:46:22.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:22.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:22.989" endtime="20250214 14:46:22.989"/>
</kw>
<msg timestamp="20250214 14:46:22.990" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:46:22.498" endtime="20250214 14:46:22.990"/>
</kw>
<msg timestamp="20250214 14:46:22.990" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250214 14:46:22.497" endtime="20250214 14:46:22.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:22.990" endtime="20250214 14:46:22.990"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${abort_result}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<arg>${uploadID}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:22.994" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-6992142262 --key incomplete-multipartkey --upload-id d2cf71d4-9761-4928-8fcc-48a69c6c26ea-114002780646735897 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:23.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:23.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:22.991" endtime="20250214 14:46:23.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:23.479" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:23.479" endtime="20250214 14:46:23.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:23.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:23.480" endtime="20250214 14:46:23.480"/>
</kw>
<msg timestamp="20250214 14:46:23.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:22.991" endtime="20250214 14:46:23.480"/>
</kw>
<msg timestamp="20250214 14:46:23.480" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:46:22.991" endtime="20250214 14:46:23.480"/>
</kw>
<msg timestamp="20250214 14:46:23.480" level="INFO">${abort_result} = None</msg>
<status status="PASS" starttime="20250214 14:46:22.990" endtime="20250214 14:46:23.480"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:23.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-6992142262 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:23.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:23.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:23.481" endtime="20250214 14:46:23.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:23.964" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:23.964" endtime="20250214 14:46:23.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:23.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:23.965" endtime="20250214 14:46:23.965"/>
</kw>
<msg timestamp="20250214 14:46:23.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:23.481" endtime="20250214 14:46:23.965"/>
</kw>
<msg timestamp="20250214 14:46:23.965" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20250214 14:46:23.481" endtime="20250214 14:46:23.965"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:21.477" endtime="20250214 14:46:23.966"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:46:19.988" endtime="20250214 14:46:23.966"/>
</suite>
<suite id="s1-s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:46:23.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:23.975" endtime="20250214 14:46:23.975"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.975" endtime="20250214 14:46:23.975"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.975" endtime="20250214 14:46:23.975"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:46:23.976" endtime="20250214 14:46:23.976"/>
</kw>
<status status="PASS" starttime="20250214 14:46:23.975" endtime="20250214 14:46:23.976"/>
</kw>
<test id="s1-s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:23.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:24.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:24.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:23.978" endtime="20250214 14:46:24.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:24.486" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:24.485" endtime="20250214 14:46:24.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:24.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:24.486" endtime="20250214 14:46:24.486"/>
</kw>
<status status="PASS" starttime="20250214 14:46:23.977" endtime="20250214 14:46:24.486"/>
</kw>
<msg timestamp="20250214 14:46:24.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:23.977" endtime="20250214 14:46:24.487"/>
</kw>
<msg timestamp="20250214 14:46:24.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:23.977" endtime="20250214 14:46:24.487"/>
</kw>
<msg timestamp="20250214 14:46:24.487" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:46:23.977" endtime="20250214 14:46:24.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:23.976" endtime="20250214 14:46:24.487"/>
</test>
<test id="s1-s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:24.489" level="INFO">${randStr} = 6967930296</msg>
<status status="PASS" starttime="20250214 14:46:24.488" endtime="20250214 14:46:24.489"/>
</kw>
<msg timestamp="20250214 14:46:24.489" level="INFO">${randStr} = ozone-test-6967930296</msg>
<status status="PASS" starttime="20250214 14:46:24.488" endtime="20250214 14:46:24.489"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:24.492" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-6967930296 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:24.952" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:24.952" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:46:24.490" endtime="20250214 14:46:24.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:24.953" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:46:24.952" endtime="20250214 14:46:24.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:24.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:24.953" endtime="20250214 14:46:24.953"/>
</kw>
<msg timestamp="20250214 14:46:24.954" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:46:24.489" endtime="20250214 14:46:24.954"/>
</kw>
<msg timestamp="20250214 14:46:24.954" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:46:24.489" endtime="20250214 14:46:24.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:24.954" endtime="20250214 14:46:24.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:24.954" endtime="20250214 14:46:24.954"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:24.488" endtime="20250214 14:46:24.955"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:46:23.967" endtime="20250214 14:46:24.955"/>
</suite>
<suite id="s1-s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:46:24.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:24.963" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.964"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:46:24.964" endtime="20250214 14:46:24.965"/>
</kw>
<status status="PASS" starttime="20250214 14:46:24.963" endtime="20250214 14:46:24.965"/>
</kw>
<test id="s1-s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:24.968" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:25.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:25.452" level="INFO">${output} = bucket-cktulggefa
bucket-ozone-test-3609214781
bucket-ozone-test-6424306438
bucket-ozone-test-9688524771
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:46:24.966" endtime="20250214 14:46:25.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:25.453" level="INFO">bucket-cktulggefa
bucket-ozone-test-3609214781
bucket-ozone-test-6424306438
bucket-ozone-test-9688524771
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:46:25.452" endtime="20250214 14:46:25.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:25.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:25.453" endtime="20250214 14:46:25.453"/>
</kw>
<status status="PASS" starttime="20250214 14:46:24.966" endtime="20250214 14:46:25.453"/>
</kw>
<msg timestamp="20250214 14:46:25.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:24.965" endtime="20250214 14:46:25.453"/>
</kw>
<msg timestamp="20250214 14:46:25.454" level="INFO">${output} = bucket-cktulggefa
bucket-ozone-test-3609214781
bucket-ozone-test-6424306438
bucket-ozone-test-9688524771
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:46:24.965" endtime="20250214 14:46:25.454"/>
</kw>
<msg timestamp="20250214 14:46:25.454" level="INFO">${result} = bucket-cktulggefa
bucket-ozone-test-3609214781
bucket-ozone-test-6424306438
bucket-ozone-test-9688524771
conf
erasure
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250214 14:46:24.965" endtime="20250214 14:46:25.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:25.454" endtime="20250214 14:46:25.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:24.965" endtime="20250214 14:46:25.454"/>
</test>
<test id="s1-s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:46:25.456" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:46:25.455" endtime="20250214 14:46:25.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<status status="NOT RUN" starttime="20250214 14:46:25.456" endtime="20250214 14:46:25.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250214 14:46:25.456" endtime="20250214 14:46:25.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:25.455" endtime="20250214 14:46:25.456">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:25.460" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:25.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:25.797" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:25.458" endtime="20250214 14:46:25.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:25.798" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:25.798" endtime="20250214 14:46:25.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:25.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:25.798" endtime="20250214 14:46:25.799"/>
</kw>
<status status="PASS" starttime="20250214 14:46:25.458" endtime="20250214 14:46:25.799"/>
</kw>
<msg timestamp="20250214 14:46:25.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:25.457" endtime="20250214 14:46:25.799"/>
</kw>
<msg timestamp="20250214 14:46:25.799" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:25.457" endtime="20250214 14:46:25.799"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 14:46:25.800" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:25.799" endtime="20250214 14:46:25.800"/>
</kw>
<status status="PASS" starttime="20250214 14:46:25.457" endtime="20250214 14:46:25.800"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:25.803" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:26.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:26.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:25.801" endtime="20250214 14:46:26.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:26.146" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:26.145" endtime="20250214 14:46:26.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:26.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:26.146" endtime="20250214 14:46:26.146"/>
</kw>
<status status="PASS" starttime="20250214 14:46:25.800" endtime="20250214 14:46:26.146"/>
</kw>
<msg timestamp="20250214 14:46:26.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:25.800" endtime="20250214 14:46:26.147"/>
</kw>
<status status="PASS" starttime="20250214 14:46:25.800" endtime="20250214 14:46:26.147"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:26.150" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:26.623" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:26.623" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:46:26.147" endtime="20250214 14:46:26.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:26.624" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:46:26.623" endtime="20250214 14:46:26.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:26.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:26.624" endtime="20250214 14:46:26.624"/>
</kw>
<msg timestamp="20250214 14:46:26.625" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:46:26.147" endtime="20250214 14:46:26.625"/>
</kw>
<msg timestamp="20250214 14:46:26.625" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250214 14:46:26.147" endtime="20250214 14:46:26.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:26.625" endtime="20250214 14:46:26.625"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:26.629" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:26.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:26.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:26.627" endtime="20250214 14:46:26.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:26.980" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:26.979" endtime="20250214 14:46:26.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:26.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:26.980" endtime="20250214 14:46:26.980"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.626" endtime="20250214 14:46:26.980"/>
</kw>
<msg timestamp="20250214 14:46:26.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:26.626" endtime="20250214 14:46:26.980"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.626" endtime="20250214 14:46:26.981"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.625" endtime="20250214 14:46:26.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:25.456" endtime="20250214 14:46:26.981"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:46:24.956" endtime="20250214 14:46:26.981"/>
</suite>
<suite id="s1-s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:46:26.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.991" endtime="20250214 14:46:26.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.992" endtime="20250214 14:46:26.992"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.992" endtime="20250214 14:46:26.992"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:46:26.992" endtime="20250214 14:46:26.992"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.990" endtime="20250214 14:46:26.992"/>
</kw>
<test id="s1-s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:26.996" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:27.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:27.348" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:26.993" endtime="20250214 14:46:27.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:27.349" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:27.349" endtime="20250214 14:46:27.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:27.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:27.349" endtime="20250214 14:46:27.350"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.993" endtime="20250214 14:46:27.350"/>
</kw>
<msg timestamp="20250214 14:46:27.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:26.993" endtime="20250214 14:46:27.350"/>
</kw>
<msg timestamp="20250214 14:46:27.351" level="INFO">${accessKey} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:26.993" endtime="20250214 14:46:27.351"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:27.353" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:27.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:27.706" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:27.351" endtime="20250214 14:46:27.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:27.707" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:27.706" endtime="20250214 14:46:27.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:27.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:27.707" endtime="20250214 14:46:27.707"/>
</kw>
<status status="PASS" starttime="20250214 14:46:27.351" endtime="20250214 14:46:27.708"/>
</kw>
<msg timestamp="20250214 14:46:27.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:27.351" endtime="20250214 14:46:27.708"/>
</kw>
<msg timestamp="20250214 14:46:27.708" level="INFO">${secret} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:46:27.351" endtime="20250214 14:46:27.708"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:46:27.708" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20250214 14:46:27.708" endtime="20250214 14:46:27.708"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:46:27.709" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20250214 14:46:27.708" endtime="20250214 14:46:27.709"/>
</kw>
<status status="PASS" starttime="20250214 14:46:26.992" endtime="20250214 14:46:27.709"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:27.713" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-erasure  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.636" level="INFO">${output} = 2025-02-14 14:46:29,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:46:29,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250214 14:46:27.711" endtime="20250214 14:46:31.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.637" level="INFO">2025-02-14 14:46:29,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:46:29,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-14 14:46:29,323 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-14 14:46:29,497 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-erasure and number-of-tests 100
2025-02-14 14:46:29,587 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-14 14:46:30,589 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2025-02-14 14:46:31,592 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-14 14:46:31,606 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=36.453091, max=192.190661, mean=86.81633036285915, stddev=40.03780514043565, median=77.252981, p75=97.235021, p95=190.421226, p98=190.782254, p99=191.491538, p999=192.190661, mean_rate=70.0496204331896, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-14 14:46:31,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-14 14:46:31,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-14 14:46:31,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250214 14:46:31.636" endtime="20250214 14:46:31.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.637" endtime="20250214 14:46:31.637"/>
</kw>
<status status="PASS" starttime="20250214 14:46:27.710" endtime="20250214 14:46:31.637"/>
</kw>
<msg timestamp="20250214 14:46:31.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:27.710" endtime="20250214 14:46:31.638"/>
</kw>
<msg timestamp="20250214 14:46:31.638" level="INFO">${result} = 2025-02-14 14:46:29,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-14 14:46:29,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250214 14:46:27.710" endtime="20250214 14:46:31.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:31.638" endtime="20250214 14:46:31.638"/>
</kw>
<status status="PASS" starttime="20250214 14:46:27.709" endtime="20250214 14:46:31.638"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20250214 14:46:26.992" endtime="20250214 14:46:31.638"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:46:26.982" endtime="20250214 14:46:31.639"/>
</suite>
<suite id="s1-s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:46:31.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.650" endtime="20250214 14:46:31.650"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:46:31.651" endtime="20250214 14:46:31.651"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.650" endtime="20250214 14:46:31.651"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:46:31.653" endtime="20250214 14:46:31.653"/>
</kw>
<msg timestamp="20250214 14:46:31.653" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250214 14:46:31.652" endtime="20250214 14:46:31.653"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.657" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:31.654" endtime="20250214 14:46:31.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.692" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:31.692" endtime="20250214 14:46:31.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.693" endtime="20250214 14:46:31.693"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.653" endtime="20250214 14:46:31.693"/>
</kw>
<msg timestamp="20250214 14:46:31.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.653" endtime="20250214 14:46:31.693"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.653" endtime="20250214 14:46:31.693"/>
</kw>
<msg timestamp="20250214 14:46:31.694" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250214 14:46:31.652" endtime="20250214 14:46:31.694"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.652" endtime="20250214 14:46:31.694"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:46:31.695" endtime="20250214 14:46:31.695"/>
</kw>
<msg timestamp="20250214 14:46:31.695" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:46:31.694" endtime="20250214 14:46:31.695"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.698" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:31.696" endtime="20250214 14:46:31.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.708" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:31.708" endtime="20250214 14:46:31.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.709" endtime="20250214 14:46:31.709"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.696" endtime="20250214 14:46:31.709"/>
</kw>
<msg timestamp="20250214 14:46:31.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.696" endtime="20250214 14:46:31.709"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.695" endtime="20250214 14:46:31.709"/>
</kw>
<msg timestamp="20250214 14:46:31.709" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:46:31.694" endtime="20250214 14:46:31.709"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.694" endtime="20250214 14:46:31.710"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:46:31.711" endtime="20250214 14:46:31.711"/>
</kw>
<msg timestamp="20250214 14:46:31.711" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250214 14:46:31.710" endtime="20250214 14:46:31.711"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.714" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:31.712" endtime="20250214 14:46:31.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.755" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:31.754" endtime="20250214 14:46:31.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.755" endtime="20250214 14:46:31.755"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.712" endtime="20250214 14:46:31.755"/>
</kw>
<msg timestamp="20250214 14:46:31.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.712" endtime="20250214 14:46:31.755"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.711" endtime="20250214 14:46:31.756"/>
</kw>
<msg timestamp="20250214 14:46:31.756" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250214 14:46:31.710" endtime="20250214 14:46:31.756"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.710" endtime="20250214 14:46:31.756"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:46:31.757" endtime="20250214 14:46:31.757"/>
</kw>
<msg timestamp="20250214 14:46:31.758" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250214 14:46:31.757" endtime="20250214 14:46:31.758"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.761" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:31.759" endtime="20250214 14:46:31.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.846" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:31.845" endtime="20250214 14:46:31.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.846" endtime="20250214 14:46:31.846"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.758" endtime="20250214 14:46:31.846"/>
</kw>
<msg timestamp="20250214 14:46:31.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.758" endtime="20250214 14:46:31.846"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.758" endtime="20250214 14:46:31.846"/>
</kw>
<msg timestamp="20250214 14:46:31.846" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250214 14:46:31.756" endtime="20250214 14:46:31.847"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.756" endtime="20250214 14:46:31.847"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250214 14:46:31.849" endtime="20250214 14:46:31.849"/>
</kw>
<msg timestamp="20250214 14:46:31.849" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250214 14:46:31.848" endtime="20250214 14:46:31.849"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.857" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:31.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:31.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:31.853" endtime="20250214 14:46:31.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:31.862" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:31.862" endtime="20250214 14:46:31.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:31.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:31.863" endtime="20250214 14:46:31.863"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.851" endtime="20250214 14:46:31.863"/>
</kw>
<msg timestamp="20250214 14:46:31.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:31.851" endtime="20250214 14:46:31.863"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.849" endtime="20250214 14:46:31.863"/>
</kw>
<msg timestamp="20250214 14:46:31.864" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250214 14:46:31.847" endtime="20250214 14:46:31.864"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.847" endtime="20250214 14:46:31.864"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.650" endtime="20250214 14:46:31.864"/>
</kw>
<test id="s1-s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="60">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:31.866" level="INFO">${randStr} = 4664364222</msg>
<status status="PASS" starttime="20250214 14:46:31.865" endtime="20250214 14:46:31.866"/>
</kw>
<msg timestamp="20250214 14:46:31.866" level="INFO">${random} = ozone-test-4664364222</msg>
<status status="PASS" starttime="20250214 14:46:31.865" endtime="20250214 14:46:31.866"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:31.867" level="INFO">${PREFIX} = ozone-test-4664364222</msg>
<status status="PASS" starttime="20250214 14:46:31.866" endtime="20250214 14:46:31.867"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.865" endtime="20250214 14:46:31.867"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:31.871" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-4664364222  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:32.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:32.391" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "UploadId": "dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722"
}</msg>
<status status="PASS" starttime="20250214 14:46:31.869" endtime="20250214 14:46:32.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:32.392" level="INFO">{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "UploadId": "dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722"
}</msg>
<status status="PASS" starttime="20250214 14:46:32.392" endtime="20250214 14:46:32.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:32.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:32.392" endtime="20250214 14:46:32.393"/>
</kw>
<msg timestamp="20250214 14:46:32.393" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "UploadId": "dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722"
}</msg>
<status status="PASS" starttime="20250214 14:46:31.868" endtime="20250214 14:46:32.393"/>
</kw>
<msg timestamp="20250214 14:46:32.393" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "UploadId": "dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722"
}</msg>
<status status="PASS" starttime="20250214 14:46:31.868" endtime="20250214 14:46:32.393"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:32.393" endtime="20250214 14:46:32.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:32.394" endtime="20250214 14:46:32.394"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:32.397" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "UploadId": "dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:32.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:32.403" level="INFO">${output} = dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722</msg>
<status status="PASS" starttime="20250214 14:46:32.395" endtime="20250214 14:46:32.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:32.404" level="INFO">dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722</msg>
<status status="PASS" starttime="20250214 14:46:32.403" endtime="20250214 14:46:32.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:32.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:32.404" endtime="20250214 14:46:32.404"/>
</kw>
<msg timestamp="20250214 14:46:32.404" level="INFO">${upload_id} = dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722</msg>
<status status="PASS" starttime="20250214 14:46:32.394" endtime="20250214 14:46:32.404"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:32.404" endtime="20250214 14:46:32.404"/>
</return>
<status status="PASS" starttime="20250214 14:46:32.393" endtime="20250214 14:46:32.404"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:32.405" endtime="20250214 14:46:32.405"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:32.404" endtime="20250214 14:46:32.405"/>
</branch>
<status status="PASS" starttime="20250214 14:46:32.393" endtime="20250214 14:46:32.405"/>
</if>
<msg timestamp="20250214 14:46:32.405" level="INFO">${upload_id} = dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722</msg>
<status status="PASS" starttime="20250214 14:46:31.867" endtime="20250214 14:46:32.405"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:46:32.406" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:46:32.405" endtime="20250214 14:46:32.406"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:32.406" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:46:32.406" endtime="20250214 14:46:32.406"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:32.410" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-4664364222 --part-number 1 --body /tmp/part1 --upload-id dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.144" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:32.408" endtime="20250214 14:46:33.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.145" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:33.144" endtime="20250214 14:46:33.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.145" endtime="20250214 14:46:33.145"/>
</kw>
<msg timestamp="20250214 14:46:33.145" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:32.407" endtime="20250214 14:46:33.145"/>
</kw>
<msg timestamp="20250214 14:46:33.146" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:32.407" endtime="20250214 14:46:33.146"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:33.146" endtime="20250214 14:46:33.146"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.150" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.156" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.147" endtime="20250214 14:46:33.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.157" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.156" endtime="20250214 14:46:33.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.157" endtime="20250214 14:46:33.157"/>
</kw>
<status status="PASS" starttime="20250214 14:46:33.147" endtime="20250214 14:46:33.158"/>
</kw>
<msg timestamp="20250214 14:46:33.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:33.147" endtime="20250214 14:46:33.158"/>
</kw>
<msg timestamp="20250214 14:46:33.158" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.146" endtime="20250214 14:46:33.158"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.161" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.175" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.159" endtime="20250214 14:46:33.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.176" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.175" endtime="20250214 14:46:33.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.176" endtime="20250214 14:46:33.177"/>
</kw>
<status status="PASS" starttime="20250214 14:46:33.159" endtime="20250214 14:46:33.177"/>
</kw>
<msg timestamp="20250214 14:46:33.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:33.158" endtime="20250214 14:46:33.177"/>
</kw>
<msg timestamp="20250214 14:46:33.177" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:33.158" endtime="20250214 14:46:33.177"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:33.177" endtime="20250214 14:46:33.178"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:33.178" endtime="20250214 14:46:33.178"/>
</return>
<status status="PASS" starttime="20250214 14:46:33.146" endtime="20250214 14:46:33.178"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:33.178" endtime="20250214 14:46:33.178"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:33.178" endtime="20250214 14:46:33.178"/>
</branch>
<status status="PASS" starttime="20250214 14:46:33.146" endtime="20250214 14:46:33.178"/>
</if>
<msg timestamp="20250214 14:46:33.178" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:32.406" endtime="20250214 14:46:33.178"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:33.178" endtime="20250214 14:46:33.178"/>
</kw>
<status status="PASS" starttime="20250214 14:46:32.406" endtime="20250214 14:46:33.179"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:33.179" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:46:33.179" endtime="20250214 14:46:33.179"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.183" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-4664364222 --part-number 2 --body /tmp/part2 --upload-id dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.767" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:33.181" endtime="20250214 14:46:33.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.768" level="INFO">{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:33.768" endtime="20250214 14:46:33.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.769" endtime="20250214 14:46:33.769"/>
</kw>
<msg timestamp="20250214 14:46:33.769" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:33.180" endtime="20250214 14:46:33.769"/>
</kw>
<msg timestamp="20250214 14:46:33.769" level="INFO">${result} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:33.180" endtime="20250214 14:46:33.769"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:33.770" endtime="20250214 14:46:33.770"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.774" level="INFO">Running command 'echo '{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.781" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.771" endtime="20250214 14:46:33.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.782" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.781" endtime="20250214 14:46:33.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.782" endtime="20250214 14:46:33.782"/>
</kw>
<status status="PASS" starttime="20250214 14:46:33.771" endtime="20250214 14:46:33.783"/>
</kw>
<msg timestamp="20250214 14:46:33.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:33.771" endtime="20250214 14:46:33.783"/>
</kw>
<msg timestamp="20250214 14:46:33.783" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.770" endtime="20250214 14:46:33.783"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.786" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:33.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:33.792" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.784" endtime="20250214 14:46:33.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:33.792" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.792" endtime="20250214 14:46:33.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:33.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:33.793" endtime="20250214 14:46:33.793"/>
</kw>
<status status="PASS" starttime="20250214 14:46:33.784" endtime="20250214 14:46:33.793"/>
</kw>
<msg timestamp="20250214 14:46:33.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:33.783" endtime="20250214 14:46:33.793"/>
</kw>
<msg timestamp="20250214 14:46:33.793" level="INFO">${md5sum} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.783" endtime="20250214 14:46:33.793"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:33.793" endtime="20250214 14:46:33.794"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:33.794" endtime="20250214 14:46:33.794"/>
</return>
<status status="PASS" starttime="20250214 14:46:33.770" endtime="20250214 14:46:33.794"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:33.794" endtime="20250214 14:46:33.794"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:33.794" endtime="20250214 14:46:33.794"/>
</branch>
<status status="PASS" starttime="20250214 14:46:33.769" endtime="20250214 14:46:33.794"/>
</if>
<msg timestamp="20250214 14:46:33.794" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:33.179" endtime="20250214 14:46:33.794"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:33.794" endtime="20250214 14:46:33.795"/>
</kw>
<status status="PASS" starttime="20250214 14:46:33.179" endtime="20250214 14:46:33.795"/>
</iter>
<status status="PASS" starttime="20250214 14:46:32.406" endtime="20250214 14:46:33.795"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:46:33.795" level="INFO">${parts} = {ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:33.795" endtime="20250214 14:46:33.795"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:46:33.795" endtime="20250214 14:46:33.795"/>
</return>
<msg timestamp="20250214 14:46:33.795" level="INFO">${parts} = {ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:32.405" endtime="20250214 14:46:33.796"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:33.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-4664364222 --upload-id dceee218-542e-445c-be9c-0e50bcddc25f-114002781294493722 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:34.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:34.335" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:33.797" endtime="20250214 14:46:34.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:34.336" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:34.336" endtime="20250214 14:46:34.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:34.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:34.336" endtime="20250214 14:46:34.337"/>
</kw>
<msg timestamp="20250214 14:46:34.337" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:33.797" endtime="20250214 14:46:34.337"/>
</kw>
<msg timestamp="20250214 14:46:34.337" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:33.796" endtime="20250214 14:46:34.337"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:34.337" endtime="20250214 14:46:34.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:34.338" endtime="20250214 14:46:34.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:34.338" endtime="20250214 14:46:34.338"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:34.342" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-4664364222",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:34.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:34.347" level="INFO">${output} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:34.339" endtime="20250214 14:46:34.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:34.348" level="INFO">"ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:34.347" endtime="20250214 14:46:34.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:34.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:34.348" endtime="20250214 14:46:34.348"/>
</kw>
<status status="PASS" starttime="20250214 14:46:34.339" endtime="20250214 14:46:34.348"/>
</kw>
<msg timestamp="20250214 14:46:34.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:34.339" endtime="20250214 14:46:34.349"/>
</kw>
<msg timestamp="20250214 14:46:34.349" level="INFO">${etag} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:34.338" endtime="20250214 14:46:34.349"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:34.349" endtime="20250214 14:46:34.349"/>
</return>
<status status="PASS" starttime="20250214 14:46:34.337" endtime="20250214 14:46:34.349"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:34.349" endtime="20250214 14:46:34.349"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:34.349" endtime="20250214 14:46:34.349"/>
</branch>
<status status="PASS" starttime="20250214 14:46:34.337" endtime="20250214 14:46:34.349"/>
</if>
<status status="PASS" starttime="20250214 14:46:33.796" endtime="20250214 14:46:34.349"/>
</kw>
<status status="PASS" starttime="20250214 14:46:31.867" endtime="20250214 14:46:34.349"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:34.350" level="INFO">${randStr} = 3596599875</msg>
<status status="PASS" starttime="20250214 14:46:34.350" endtime="20250214 14:46:34.350"/>
</kw>
<msg timestamp="20250214 14:46:34.351" level="INFO">${random} = ozone-test-3596599875</msg>
<status status="PASS" starttime="20250214 14:46:34.350" endtime="20250214 14:46:34.351"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:34.357" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key multipart/adjusted_length_ozone-test-4664364222 /tmp/verifyozone-test-3596599875 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:35.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.055" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:34 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:34.352" endtime="20250214 14:46:35.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.056" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:34 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:34 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:34 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:35.055" endtime="20250214 14:46:35.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.056" endtime="20250214 14:46:35.056"/>
</kw>
<status status="PASS" starttime="20250214 14:46:34.352" endtime="20250214 14:46:35.056"/>
</kw>
<msg timestamp="20250214 14:46:35.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:34.352" endtime="20250214 14:46:35.056"/>
</kw>
<msg timestamp="20250214 14:46:35.057" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:34 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:34.351" endtime="20250214 14:46:35.057"/>
</kw>
<status status="PASS" starttime="20250214 14:46:34.351" endtime="20250214 14:46:35.057"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:46:35.057" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:46:35.057" endtime="20250214 14:46:35.057"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.061" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-3596599875'.</msg>
<msg timestamp="20250214 14:46:35.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:35.058" endtime="20250214 14:46:35.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.071" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:35.070" endtime="20250214 14:46:35.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.071" endtime="20250214 14:46:35.071"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.058" endtime="20250214 14:46:35.071"/>
</kw>
<msg timestamp="20250214 14:46:35.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:35.058" endtime="20250214 14:46:35.071"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.057" endtime="20250214 14:46:35.071"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.075" level="INFO">Running command 'md5sum /tmp/originalozone-test-3596599875 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:35.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.089" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.073" endtime="20250214 14:46:35.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.090" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.090" endtime="20250214 14:46:35.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.090" endtime="20250214 14:46:35.090"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.072" endtime="20250214 14:46:35.091"/>
</kw>
<msg timestamp="20250214 14:46:35.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:35.072" endtime="20250214 14:46:35.091"/>
</kw>
<msg timestamp="20250214 14:46:35.091" level="INFO">${checksumbefore} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.072" endtime="20250214 14:46:35.091"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.094" level="INFO">Running command 'md5sum /tmp/verifyozone-test-3596599875 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:35.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.109" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.092" endtime="20250214 14:46:35.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.110" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.109" endtime="20250214 14:46:35.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.110" endtime="20250214 14:46:35.110"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.092" endtime="20250214 14:46:35.110"/>
</kw>
<msg timestamp="20250214 14:46:35.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:35.091" endtime="20250214 14:46:35.110"/>
</kw>
<msg timestamp="20250214 14:46:35.111" level="INFO">${checksumafter} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:35.091" endtime="20250214 14:46:35.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:35.111" endtime="20250214 14:46:35.111"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.071" endtime="20250214 14:46:35.111"/>
</kw>
<status status="PASS" starttime="20250214 14:46:34.349" endtime="20250214 14:46:35.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:31.864" endtime="20250214 14:46:35.111"/>
</test>
<test id="s1-s1-s8-t2" name="Overwrite Empty File" line="64">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:35.113" level="INFO">${randStr} = 8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.113" endtime="20250214 14:46:35.113"/>
</kw>
<msg timestamp="20250214 14:46:35.113" level="INFO">${random} = ozone-test-8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.112" endtime="20250214 14:46:35.113"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:35.114" level="INFO">${PREFIX} = ozone-test-8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.113" endtime="20250214 14:46:35.114"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.112" endtime="20250214 14:46:35.114"/>
</kw>
<kw name="Execute" library="os">
<arg>touch ${TEMP_DIR}/empty</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.117" level="INFO">Running command 'touch /tmp/empty 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:35.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:35.115" endtime="20250214 14:46:35.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.121" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:35.121" endtime="20250214 14:46:35.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.121" endtime="20250214 14:46:35.122"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.114" endtime="20250214 14:46:35.122"/>
</kw>
<msg timestamp="20250214 14:46:35.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:35.114" endtime="20250214 14:46:35.122"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.114" endtime="20250214 14:46:35.122"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${TEMP_DIR}/empty s3://${BUCKET}/empty_file_${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.126" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/empty s3://erasure/empty_file_ozone-test-8337848884 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:35.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:35.621" level="INFO">${output} = upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.124" endtime="20250214 14:46:35.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:35.622" level="INFO">upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.621" endtime="20250214 14:46:35.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:35.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:35.622" endtime="20250214 14:46:35.622"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.123" endtime="20250214 14:46:35.622"/>
</kw>
<msg timestamp="20250214 14:46:35.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:35.123" endtime="20250214 14:46:35.622"/>
</kw>
<msg timestamp="20250214 14:46:35.623" level="INFO">${output} = upload: ../../tmp/empty to s3://erasure/empty_file_ozone-test-8337848884</msg>
<status status="PASS" starttime="20250214 14:46:35.122" endtime="20250214 14:46:35.623"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.122" endtime="20250214 14:46:35.623"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:35.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key empty_file_ozone-test-8337848884  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:36.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:36.127" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "UploadId": "3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334"
}</msg>
<status status="PASS" starttime="20250214 14:46:35.625" endtime="20250214 14:46:36.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:36.128" level="INFO">{
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "UploadId": "3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.128" endtime="20250214 14:46:36.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:36.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:36.129" endtime="20250214 14:46:36.129"/>
</kw>
<msg timestamp="20250214 14:46:36.129" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "UploadId": "3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334"
}</msg>
<status status="PASS" starttime="20250214 14:46:35.625" endtime="20250214 14:46:36.129"/>
</kw>
<msg timestamp="20250214 14:46:36.129" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "UploadId": "3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334"
}</msg>
<status status="PASS" starttime="20250214 14:46:35.624" endtime="20250214 14:46:36.129"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:36.130" endtime="20250214 14:46:36.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:36.130" endtime="20250214 14:46:36.130"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:36.133" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "UploadId": "3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:36.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:36.138" level="INFO">${output} = 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334</msg>
<status status="PASS" starttime="20250214 14:46:36.131" endtime="20250214 14:46:36.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:36.139" level="INFO">3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334</msg>
<status status="PASS" starttime="20250214 14:46:36.138" endtime="20250214 14:46:36.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:36.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:36.139" endtime="20250214 14:46:36.139"/>
</kw>
<msg timestamp="20250214 14:46:36.140" level="INFO">${upload_id} = 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334</msg>
<status status="PASS" starttime="20250214 14:46:36.130" endtime="20250214 14:46:36.140"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:36.140" endtime="20250214 14:46:36.140"/>
</return>
<status status="PASS" starttime="20250214 14:46:36.129" endtime="20250214 14:46:36.140"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:36.140" endtime="20250214 14:46:36.140"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:36.140" endtime="20250214 14:46:36.140"/>
</branch>
<status status="PASS" starttime="20250214 14:46:36.129" endtime="20250214 14:46:36.140"/>
</if>
<msg timestamp="20250214 14:46:36.140" level="INFO">${upload_id} = 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334</msg>
<status status="PASS" starttime="20250214 14:46:35.623" endtime="20250214 14:46:36.140"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:46:36.141" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:46:36.141" endtime="20250214 14:46:36.141"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:36.142" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:46:36.141" endtime="20250214 14:46:36.142"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:36.146" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key empty_file_ozone-test-8337848884 --part-number 1 --body /tmp/part1 --upload-id 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:36.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:36.849" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.143" endtime="20250214 14:46:36.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:36.850" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.850" endtime="20250214 14:46:36.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:36.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:36.851" endtime="20250214 14:46:36.852"/>
</kw>
<msg timestamp="20250214 14:46:36.852" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.143" endtime="20250214 14:46:36.852"/>
</kw>
<msg timestamp="20250214 14:46:36.852" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.142" endtime="20250214 14:46:36.852"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:36.853" endtime="20250214 14:46:36.853"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:36.857" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:36.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:36.862" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.855" endtime="20250214 14:46:36.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:36.863" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.863" endtime="20250214 14:46:36.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:36.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:36.863" endtime="20250214 14:46:36.864"/>
</kw>
<status status="PASS" starttime="20250214 14:46:36.854" endtime="20250214 14:46:36.864"/>
</kw>
<msg timestamp="20250214 14:46:36.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:36.854" endtime="20250214 14:46:36.864"/>
</kw>
<msg timestamp="20250214 14:46:36.864" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.854" endtime="20250214 14:46:36.864"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:36.867" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:36.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:36.880" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.865" endtime="20250214 14:46:36.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:36.881" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.880" endtime="20250214 14:46:36.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:36.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:36.881" endtime="20250214 14:46:36.881"/>
</kw>
<status status="PASS" starttime="20250214 14:46:36.865" endtime="20250214 14:46:36.881"/>
</kw>
<msg timestamp="20250214 14:46:36.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:36.865" endtime="20250214 14:46:36.881"/>
</kw>
<msg timestamp="20250214 14:46:36.882" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.864" endtime="20250214 14:46:36.882"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:36.882" endtime="20250214 14:46:36.882"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:36.882" endtime="20250214 14:46:36.882"/>
</return>
<status status="PASS" starttime="20250214 14:46:36.852" endtime="20250214 14:46:36.882"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:36.882" endtime="20250214 14:46:36.882"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:36.882" endtime="20250214 14:46:36.882"/>
</branch>
<status status="PASS" starttime="20250214 14:46:36.852" endtime="20250214 14:46:36.882"/>
</if>
<msg timestamp="20250214 14:46:36.883" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:36.142" endtime="20250214 14:46:36.883"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:36.883" endtime="20250214 14:46:36.883"/>
</kw>
<status status="PASS" starttime="20250214 14:46:36.141" endtime="20250214 14:46:36.883"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:36.884" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:46:36.883" endtime="20250214 14:46:36.884"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:36.887" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key empty_file_ozone-test-8337848884 --part-number 2 --body /tmp/part2 --upload-id 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:37.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:37.444" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.885" endtime="20250214 14:46:37.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:37.445" level="INFO">{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:37.445" endtime="20250214 14:46:37.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:37.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:37.445" endtime="20250214 14:46:37.446"/>
</kw>
<msg timestamp="20250214 14:46:37.446" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.885" endtime="20250214 14:46:37.446"/>
</kw>
<msg timestamp="20250214 14:46:37.446" level="INFO">${result} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:36.884" endtime="20250214 14:46:37.446"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:37.446" endtime="20250214 14:46:37.447"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:37.450" level="INFO">Running command 'echo '{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:37.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:37.455" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.448" endtime="20250214 14:46:37.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:37.456" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.455" endtime="20250214 14:46:37.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:37.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:37.456" endtime="20250214 14:46:37.456"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.447" endtime="20250214 14:46:37.456"/>
</kw>
<msg timestamp="20250214 14:46:37.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:37.447" endtime="20250214 14:46:37.456"/>
</kw>
<msg timestamp="20250214 14:46:37.457" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.447" endtime="20250214 14:46:37.457"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:37.460" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:37.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:37.465" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.458" endtime="20250214 14:46:37.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:37.466" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.465" endtime="20250214 14:46:37.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:37.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:37.466" endtime="20250214 14:46:37.466"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.457" endtime="20250214 14:46:37.466"/>
</kw>
<msg timestamp="20250214 14:46:37.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:37.457" endtime="20250214 14:46:37.466"/>
</kw>
<msg timestamp="20250214 14:46:37.467" level="INFO">${md5sum} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:37.457" endtime="20250214 14:46:37.467"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:37.467" endtime="20250214 14:46:37.467"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:37.467" endtime="20250214 14:46:37.467"/>
</return>
<status status="PASS" starttime="20250214 14:46:37.446" endtime="20250214 14:46:37.467"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:37.467" endtime="20250214 14:46:37.467"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:37.467" endtime="20250214 14:46:37.467"/>
</branch>
<status status="PASS" starttime="20250214 14:46:37.446" endtime="20250214 14:46:37.467"/>
</if>
<msg timestamp="20250214 14:46:37.467" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:36.884" endtime="20250214 14:46:37.467"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:37.468" endtime="20250214 14:46:37.468"/>
</kw>
<status status="PASS" starttime="20250214 14:46:36.883" endtime="20250214 14:46:37.468"/>
</iter>
<status status="PASS" starttime="20250214 14:46:36.141" endtime="20250214 14:46:37.468"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:46:37.468" level="INFO">${parts} = {ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:37.468" endtime="20250214 14:46:37.468"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:46:37.468" endtime="20250214 14:46:37.468"/>
</return>
<msg timestamp="20250214 14:46:37.469" level="INFO">${parts} = {ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:36.140" endtime="20250214 14:46:37.469"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:37.472" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key empty_file_ozone-test-8337848884 --upload-id 3401fbee-5e0c-478a-8d8f-76b99cc056bc-114002781540450334 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:37.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:37.969" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:37.470" endtime="20250214 14:46:37.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:37.970" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:37.969" endtime="20250214 14:46:37.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:37.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:37.970" endtime="20250214 14:46:37.970"/>
</kw>
<msg timestamp="20250214 14:46:37.970" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:37.470" endtime="20250214 14:46:37.970"/>
</kw>
<msg timestamp="20250214 14:46:37.971" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:37.469" endtime="20250214 14:46:37.971"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:37.971" endtime="20250214 14:46:37.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:37.971" endtime="20250214 14:46:37.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:37.972" endtime="20250214 14:46:37.972"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:37.975" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "empty_file_ozone-test-8337848884",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:37.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:37.980" level="INFO">${output} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:37.973" endtime="20250214 14:46:37.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:37.981" level="INFO">"ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:37.981" endtime="20250214 14:46:37.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:37.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:37.981" endtime="20250214 14:46:37.982"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.973" endtime="20250214 14:46:37.982"/>
</kw>
<msg timestamp="20250214 14:46:37.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:37.973" endtime="20250214 14:46:37.982"/>
</kw>
<msg timestamp="20250214 14:46:37.982" level="INFO">${etag} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:37.972" endtime="20250214 14:46:37.982"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:37.982" endtime="20250214 14:46:37.982"/>
</return>
<status status="PASS" starttime="20250214 14:46:37.971" endtime="20250214 14:46:37.982"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:37.982" endtime="20250214 14:46:37.982"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:37.982" endtime="20250214 14:46:37.982"/>
</branch>
<status status="PASS" starttime="20250214 14:46:37.971" endtime="20250214 14:46:37.983"/>
</if>
<status status="PASS" starttime="20250214 14:46:37.469" endtime="20250214 14:46:37.983"/>
</kw>
<status status="PASS" starttime="20250214 14:46:35.623" endtime="20250214 14:46:37.983"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:37.985" level="INFO">${randStr} = 7538358638</msg>
<status status="PASS" starttime="20250214 14:46:37.984" endtime="20250214 14:46:37.985"/>
</kw>
<msg timestamp="20250214 14:46:37.985" level="INFO">${random} = ozone-test-7538358638</msg>
<status status="PASS" starttime="20250214 14:46:37.983" endtime="20250214 14:46:37.985"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:37.988" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key empty_file_ozone-test-8337848884 /tmp/verifyozone-test-7538358638 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:38.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:38.620" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:37 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:37.986" endtime="20250214 14:46:38.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:38.621" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:37 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:38 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:38 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:38.621" endtime="20250214 14:46:38.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:38.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:38.621" endtime="20250214 14:46:38.622"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.986" endtime="20250214 14:46:38.622"/>
</kw>
<msg timestamp="20250214 14:46:38.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:37.986" endtime="20250214 14:46:38.622"/>
</kw>
<msg timestamp="20250214 14:46:38.622" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:37 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:37.985" endtime="20250214 14:46:38.622"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.985" endtime="20250214 14:46:38.622"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:46:38.623" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250214 14:46:38.622" endtime="20250214 14:46:38.623"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:38.626" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-7538358638'.</msg>
<msg timestamp="20250214 14:46:38.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:38.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:38.624" endtime="20250214 14:46:38.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:38.636" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:38.636" endtime="20250214 14:46:38.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:38.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:38.636" endtime="20250214 14:46:38.637"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.623" endtime="20250214 14:46:38.637"/>
</kw>
<msg timestamp="20250214 14:46:38.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:38.623" endtime="20250214 14:46:38.637"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.623" endtime="20250214 14:46:38.637"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:38.640" level="INFO">Running command 'md5sum /tmp/originalozone-test-7538358638 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:38.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:38.655" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.638" endtime="20250214 14:46:38.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:38.656" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.655" endtime="20250214 14:46:38.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:38.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:38.656" endtime="20250214 14:46:38.656"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.638" endtime="20250214 14:46:38.656"/>
</kw>
<msg timestamp="20250214 14:46:38.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:38.638" endtime="20250214 14:46:38.657"/>
</kw>
<msg timestamp="20250214 14:46:38.657" level="INFO">${checksumbefore} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.638" endtime="20250214 14:46:38.657"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:38.660" level="INFO">Running command 'md5sum /tmp/verifyozone-test-7538358638 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:38.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:38.674" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.658" endtime="20250214 14:46:38.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:38.675" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.675" endtime="20250214 14:46:38.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:38.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:38.675" endtime="20250214 14:46:38.675"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.657" endtime="20250214 14:46:38.676"/>
</kw>
<msg timestamp="20250214 14:46:38.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:38.657" endtime="20250214 14:46:38.676"/>
</kw>
<msg timestamp="20250214 14:46:38.676" level="INFO">${checksumafter} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:38.657" endtime="20250214 14:46:38.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:38.676" endtime="20250214 14:46:38.676"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.637" endtime="20250214 14:46:38.676"/>
</kw>
<status status="PASS" starttime="20250214 14:46:37.983" endtime="20250214 14:46:38.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:35.112" endtime="20250214 14:46:38.676"/>
</test>
<test id="s1-s1-s8-t3" name="Test Multipart Upload" line="70">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:38.678" level="INFO">${randStr} = 4479844917</msg>
<status status="PASS" starttime="20250214 14:46:38.678" endtime="20250214 14:46:38.678"/>
</kw>
<msg timestamp="20250214 14:46:38.678" level="INFO">${random} = ozone-test-4479844917</msg>
<status status="PASS" starttime="20250214 14:46:38.678" endtime="20250214 14:46:38.678"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:38.679" level="INFO">${PREFIX} = ozone-test-4479844917</msg>
<status status="PASS" starttime="20250214 14:46:38.678" endtime="20250214 14:46:38.679"/>
</kw>
<status status="PASS" starttime="20250214 14:46:38.677" endtime="20250214 14:46:38.679"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:38.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4479844917/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:39.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:39.173" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209"
}</msg>
<status status="PASS" starttime="20250214 14:46:38.680" endtime="20250214 14:46:39.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:39.173" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.173" endtime="20250214 14:46:39.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:39.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:39.174" endtime="20250214 14:46:39.174"/>
</kw>
<msg timestamp="20250214 14:46:39.174" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209"
}</msg>
<status status="PASS" starttime="20250214 14:46:38.680" endtime="20250214 14:46:39.174"/>
</kw>
<msg timestamp="20250214 14:46:39.174" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209"
}</msg>
<status status="PASS" starttime="20250214 14:46:38.680" endtime="20250214 14:46:39.174"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:39.175" endtime="20250214 14:46:39.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:39.175" endtime="20250214 14:46:39.175"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:39.178" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:39.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:39.183" level="INFO">${output} = 757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209</msg>
<status status="PASS" starttime="20250214 14:46:39.176" endtime="20250214 14:46:39.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:39.184" level="INFO">757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209</msg>
<status status="PASS" starttime="20250214 14:46:39.183" endtime="20250214 14:46:39.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:39.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:39.184" endtime="20250214 14:46:39.184"/>
</kw>
<msg timestamp="20250214 14:46:39.184" level="INFO">${upload_id} = 757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209</msg>
<status status="PASS" starttime="20250214 14:46:39.175" endtime="20250214 14:46:39.184"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:39.185" endtime="20250214 14:46:39.185"/>
</return>
<status status="PASS" starttime="20250214 14:46:39.174" endtime="20250214 14:46:39.185"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:39.185" endtime="20250214 14:46:39.185"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:39.185" endtime="20250214 14:46:39.185"/>
</branch>
<status status="PASS" starttime="20250214 14:46:39.174" endtime="20250214 14:46:39.185"/>
</if>
<msg timestamp="20250214 14:46:39.185" level="INFO">${uploadID} = 757fdb5f-b791-447b-adc5-03ac9453e7d3-114002781740466209</msg>
<status status="PASS" starttime="20250214 14:46:38.679" endtime="20250214 14:46:39.185"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${nextUploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:39.189" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4479844917/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:39.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:39.680" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.187" endtime="20250214 14:46:39.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:39.681" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.680" endtime="20250214 14:46:39.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:39.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:39.681" endtime="20250214 14:46:39.681"/>
</kw>
<msg timestamp="20250214 14:46:39.681" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.186" endtime="20250214 14:46:39.681"/>
</kw>
<msg timestamp="20250214 14:46:39.682" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.186" endtime="20250214 14:46:39.682"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:39.682" endtime="20250214 14:46:39.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:39.682" endtime="20250214 14:46:39.683"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:39.686" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4479844917/multipartKey",
    "UploadId": "d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:39.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:39.691" level="INFO">${output} = d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106</msg>
<status status="PASS" starttime="20250214 14:46:39.683" endtime="20250214 14:46:39.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:39.691" level="INFO">d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106</msg>
<status status="PASS" starttime="20250214 14:46:39.691" endtime="20250214 14:46:39.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:39.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:39.692" endtime="20250214 14:46:39.692"/>
</kw>
<msg timestamp="20250214 14:46:39.692" level="INFO">${upload_id} = d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106</msg>
<status status="PASS" starttime="20250214 14:46:39.683" endtime="20250214 14:46:39.692"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:39.692" endtime="20250214 14:46:39.692"/>
</return>
<status status="PASS" starttime="20250214 14:46:39.682" endtime="20250214 14:46:39.692"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:39.692" endtime="20250214 14:46:39.692"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:39.692" endtime="20250214 14:46:39.692"/>
</branch>
<status status="PASS" starttime="20250214 14:46:39.682" endtime="20250214 14:46:39.692"/>
</if>
<msg timestamp="20250214 14:46:39.693" level="INFO">${nextUploadID} = d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106</msg>
<status status="PASS" starttime="20250214 14:46:39.185" endtime="20250214 14:46:39.693"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250214 14:46:39.693" endtime="20250214 14:46:39.693"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:39.696" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4479844917/multipartKey --part-number 1 --body /tmp/part1 --upload-id d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:40.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:40.404" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.694" endtime="20250214 14:46:40.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:40.405" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:40.404" endtime="20250214 14:46:40.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:40.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:40.405" endtime="20250214 14:46:40.406"/>
</kw>
<msg timestamp="20250214 14:46:40.406" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.694" endtime="20250214 14:46:40.406"/>
</kw>
<msg timestamp="20250214 14:46:40.406" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:39.694" endtime="20250214 14:46:40.406"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:40.406" endtime="20250214 14:46:40.407"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:40.411" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:40.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:40.416" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.408" endtime="20250214 14:46:40.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:40.417" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.416" endtime="20250214 14:46:40.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:40.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:40.417" endtime="20250214 14:46:40.417"/>
</kw>
<status status="PASS" starttime="20250214 14:46:40.408" endtime="20250214 14:46:40.417"/>
</kw>
<msg timestamp="20250214 14:46:40.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:40.407" endtime="20250214 14:46:40.417"/>
</kw>
<msg timestamp="20250214 14:46:40.418" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.407" endtime="20250214 14:46:40.418"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:40.421" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:40.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:40.434" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.419" endtime="20250214 14:46:40.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:40.435" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.434" endtime="20250214 14:46:40.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:40.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:40.435" endtime="20250214 14:46:40.435"/>
</kw>
<status status="PASS" starttime="20250214 14:46:40.418" endtime="20250214 14:46:40.436"/>
</kw>
<msg timestamp="20250214 14:46:40.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:40.418" endtime="20250214 14:46:40.436"/>
</kw>
<msg timestamp="20250214 14:46:40.436" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:40.418" endtime="20250214 14:46:40.436"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:40.436" endtime="20250214 14:46:40.436"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:40.436" endtime="20250214 14:46:40.436"/>
</return>
<status status="PASS" starttime="20250214 14:46:40.406" endtime="20250214 14:46:40.436"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:40.436" endtime="20250214 14:46:40.437"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:40.436" endtime="20250214 14:46:40.437"/>
</branch>
<status status="PASS" starttime="20250214 14:46:40.406" endtime="20250214 14:46:40.437"/>
</if>
<status status="PASS" starttime="20250214 14:46:39.693" endtime="20250214 14:46:40.437"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:40.441" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4479844917/multipartKey --part-number 1 --body /tmp/part1 --upload-id d2a5313c-c9cd-45c3-8a13-4cc05538da04-114002781773955106 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:41.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:41.189" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:40.438" endtime="20250214 14:46:41.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:41.190" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.189" endtime="20250214 14:46:41.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:41.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:41.190" endtime="20250214 14:46:41.190"/>
</kw>
<msg timestamp="20250214 14:46:41.190" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:40.438" endtime="20250214 14:46:41.190"/>
</kw>
<msg timestamp="20250214 14:46:41.191" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:40.437" endtime="20250214 14:46:41.191"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:41.191" endtime="20250214 14:46:41.191"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:41.194" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:41.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:41.199" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.192" endtime="20250214 14:46:41.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:41.200" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.200" endtime="20250214 14:46:41.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:41.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:41.200" endtime="20250214 14:46:41.201"/>
</kw>
<status status="PASS" starttime="20250214 14:46:41.192" endtime="20250214 14:46:41.201"/>
</kw>
<msg timestamp="20250214 14:46:41.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:41.192" endtime="20250214 14:46:41.201"/>
</kw>
<msg timestamp="20250214 14:46:41.201" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.191" endtime="20250214 14:46:41.201"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:41.204" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:41.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:41.217" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.202" endtime="20250214 14:46:41.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:41.218" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.217" endtime="20250214 14:46:41.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:41.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:41.218" endtime="20250214 14:46:41.218"/>
</kw>
<status status="PASS" starttime="20250214 14:46:41.202" endtime="20250214 14:46:41.219"/>
</kw>
<msg timestamp="20250214 14:46:41.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:41.201" endtime="20250214 14:46:41.219"/>
</kw>
<msg timestamp="20250214 14:46:41.219" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.201" endtime="20250214 14:46:41.219"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:41.219" endtime="20250214 14:46:41.219"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:41.219" endtime="20250214 14:46:41.219"/>
</return>
<status status="PASS" starttime="20250214 14:46:41.191" endtime="20250214 14:46:41.219"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:41.220" endtime="20250214 14:46:41.220"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:41.219" endtime="20250214 14:46:41.220"/>
</branch>
<status status="PASS" starttime="20250214 14:46:41.191" endtime="20250214 14:46:41.220"/>
</if>
<status status="PASS" starttime="20250214 14:46:40.437" endtime="20250214 14:46:41.220"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:38.677" endtime="20250214 14:46:41.220"/>
</test>
<test id="s1-s1-s8-t4" name="Test Multipart Upload Complete" line="84">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:41.222" level="INFO">${randStr} = 2349054235</msg>
<status status="PASS" starttime="20250214 14:46:41.221" endtime="20250214 14:46:41.222"/>
</kw>
<msg timestamp="20250214 14:46:41.222" level="INFO">${random} = ozone-test-2349054235</msg>
<status status="PASS" starttime="20250214 14:46:41.221" endtime="20250214 14:46:41.222"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:41.222" level="INFO">${PREFIX} = ozone-test-2349054235</msg>
<status status="PASS" starttime="20250214 14:46:41.222" endtime="20250214 14:46:41.222"/>
</kw>
<status status="PASS" starttime="20250214 14:46:41.221" endtime="20250214 14:46:41.222"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>0</arg>
<arg>--metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:41.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2349054235/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:41.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:41.759" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "UploadId": "bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.223" endtime="20250214 14:46:41.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:41.760" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "UploadId": "bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.759" endtime="20250214 14:46:41.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:41.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:41.760" endtime="20250214 14:46:41.761"/>
</kw>
<msg timestamp="20250214 14:46:41.761" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "UploadId": "bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.223" endtime="20250214 14:46:41.761"/>
</kw>
<msg timestamp="20250214 14:46:41.761" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "UploadId": "bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.223" endtime="20250214 14:46:41.761"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:41.761" endtime="20250214 14:46:41.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:41.762" endtime="20250214 14:46:41.762"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:41.765" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "UploadId": "bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:41.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:41.770" level="INFO">${output} = bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373</msg>
<status status="PASS" starttime="20250214 14:46:41.762" endtime="20250214 14:46:41.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:41.771" level="INFO">bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373</msg>
<status status="PASS" starttime="20250214 14:46:41.770" endtime="20250214 14:46:41.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:41.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:41.771" endtime="20250214 14:46:41.771"/>
</kw>
<msg timestamp="20250214 14:46:41.772" level="INFO">${upload_id} = bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373</msg>
<status status="PASS" starttime="20250214 14:46:41.762" endtime="20250214 14:46:41.772"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:41.772" endtime="20250214 14:46:41.772"/>
</return>
<status status="PASS" starttime="20250214 14:46:41.761" endtime="20250214 14:46:41.772"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:41.772" endtime="20250214 14:46:41.772"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:41.772" endtime="20250214 14:46:41.772"/>
</branch>
<status status="PASS" starttime="20250214 14:46:41.761" endtime="20250214 14:46:41.772"/>
</if>
<msg timestamp="20250214 14:46:41.772" level="INFO">${uploadID} = bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373</msg>
<status status="PASS" starttime="20250214 14:46:41.222" endtime="20250214 14:46:41.772"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:41.776" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2349054235/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:42.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:42.429" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.774" endtime="20250214 14:46:42.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:42.430" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:42.429" endtime="20250214 14:46:42.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:42.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:42.430" endtime="20250214 14:46:42.430"/>
</kw>
<msg timestamp="20250214 14:46:42.431" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.773" endtime="20250214 14:46:42.431"/>
</kw>
<msg timestamp="20250214 14:46:42.431" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:41.773" endtime="20250214 14:46:42.431"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:42.431" endtime="20250214 14:46:42.431"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:42.434" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:42.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:42.439" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.432" endtime="20250214 14:46:42.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:42.440" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.440" endtime="20250214 14:46:42.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:42.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:42.440" endtime="20250214 14:46:42.441"/>
</kw>
<status status="PASS" starttime="20250214 14:46:42.432" endtime="20250214 14:46:42.441"/>
</kw>
<msg timestamp="20250214 14:46:42.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:42.432" endtime="20250214 14:46:42.441"/>
</kw>
<msg timestamp="20250214 14:46:42.441" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.431" endtime="20250214 14:46:42.441"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:42.445" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:42.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:42.458" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.443" endtime="20250214 14:46:42.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:42.459" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.459" endtime="20250214 14:46:42.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:42.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:42.459" endtime="20250214 14:46:42.460"/>
</kw>
<status status="PASS" starttime="20250214 14:46:42.442" endtime="20250214 14:46:42.460"/>
</kw>
<msg timestamp="20250214 14:46:42.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:42.442" endtime="20250214 14:46:42.460"/>
</kw>
<msg timestamp="20250214 14:46:42.460" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:42.441" endtime="20250214 14:46:42.460"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:42.460" endtime="20250214 14:46:42.460"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:42.461" endtime="20250214 14:46:42.461"/>
</return>
<status status="PASS" starttime="20250214 14:46:42.431" endtime="20250214 14:46:42.461"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:42.461" endtime="20250214 14:46:42.461"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:42.461" endtime="20250214 14:46:42.461"/>
</branch>
<status status="PASS" starttime="20250214 14:46:42.431" endtime="20250214 14:46:42.461"/>
</if>
<msg timestamp="20250214 14:46:42.461" level="INFO">${eTag1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:41.772" endtime="20250214 14:46:42.461"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:42.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2349054235/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:43.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:43.037" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:42.463" endtime="20250214 14:46:43.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:43.038" level="INFO">{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:43.037" endtime="20250214 14:46:43.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:43.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:43.038" endtime="20250214 14:46:43.038"/>
</kw>
<msg timestamp="20250214 14:46:43.038" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:42.462" endtime="20250214 14:46:43.038"/>
</kw>
<msg timestamp="20250214 14:46:43.038" level="INFO">${result} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:42.462" endtime="20250214 14:46:43.038"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:43.039" endtime="20250214 14:46:43.039"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:43.043" level="INFO">Running command 'echo '{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:43.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:43.048" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.040" endtime="20250214 14:46:43.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:43.049" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.048" endtime="20250214 14:46:43.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:43.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:43.049" endtime="20250214 14:46:43.050"/>
</kw>
<status status="PASS" starttime="20250214 14:46:43.040" endtime="20250214 14:46:43.050"/>
</kw>
<msg timestamp="20250214 14:46:43.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:43.040" endtime="20250214 14:46:43.050"/>
</kw>
<msg timestamp="20250214 14:46:43.050" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.039" endtime="20250214 14:46:43.050"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:43.054" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:43.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:43.060" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.052" endtime="20250214 14:46:43.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:43.061" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.061" endtime="20250214 14:46:43.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:43.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:43.062" endtime="20250214 14:46:43.062"/>
</kw>
<status status="PASS" starttime="20250214 14:46:43.051" endtime="20250214 14:46:43.062"/>
</kw>
<msg timestamp="20250214 14:46:43.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:43.051" endtime="20250214 14:46:43.063"/>
</kw>
<msg timestamp="20250214 14:46:43.063" level="INFO">${md5sum} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:43.051" endtime="20250214 14:46:43.063"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:43.063" endtime="20250214 14:46:43.063"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:43.063" endtime="20250214 14:46:43.063"/>
</return>
<status status="PASS" starttime="20250214 14:46:43.039" endtime="20250214 14:46:43.063"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:43.064" endtime="20250214 14:46:43.064"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:43.064" endtime="20250214 14:46:43.064"/>
</branch>
<status status="PASS" starttime="20250214 14:46:43.039" endtime="20250214 14:46:43.064"/>
</if>
<msg timestamp="20250214 14:46:43.064" level="INFO">${eTag2} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:42.461" endtime="20250214 14:46:43.064"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:43.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373 --bucket erasure --key ozone-test-2349054235/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:43.553" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:43.553" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:46:43.065" endtime="20250214 14:46:43.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:43.554" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:46:43.554" endtime="20250214 14:46:43.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:43.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:43.554" endtime="20250214 14:46:43.555"/>
</kw>
<msg timestamp="20250214 14:46:43.555" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:46:43.065" endtime="20250214 14:46:43.555"/>
</kw>
<msg timestamp="20250214 14:46:43.555" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250214 14:46:43.064" endtime="20250214 14:46:43.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:43.555" endtime="20250214 14:46:43.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:43.556" endtime="20250214 14:46:43.556"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${resultETag}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:43.560" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-2349054235/multipartKey1 --upload-id bd3c0e3e-58c3-4359-a874-e395aa0e7ff1-114002781908238373 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:44.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:44.052" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:43.558" endtime="20250214 14:46:44.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:44.053" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:44.053" endtime="20250214 14:46:44.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:44.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:44.053" endtime="20250214 14:46:44.054"/>
</kw>
<msg timestamp="20250214 14:46:44.054" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:43.557" endtime="20250214 14:46:44.054"/>
</kw>
<msg timestamp="20250214 14:46:44.054" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}</msg>
<status status="PASS" starttime="20250214 14:46:43.557" endtime="20250214 14:46:44.054"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:44.054" endtime="20250214 14:46:44.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:44.055" endtime="20250214 14:46:44.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:44.055" endtime="20250214 14:46:44.055"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:44.058" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2349054235/multipartKey1",
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:44.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:44.065" level="INFO">${output} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:44.056" endtime="20250214 14:46:44.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:44.066" level="INFO">"ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:44.065" endtime="20250214 14:46:44.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:44.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:44.066" endtime="20250214 14:46:44.066"/>
</kw>
<status status="PASS" starttime="20250214 14:46:44.056" endtime="20250214 14:46:44.066"/>
</kw>
<msg timestamp="20250214 14:46:44.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:44.056" endtime="20250214 14:46:44.066"/>
</kw>
<msg timestamp="20250214 14:46:44.067" level="INFO">${etag} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:44.055" endtime="20250214 14:46:44.067"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:44.067" endtime="20250214 14:46:44.067"/>
</return>
<status status="PASS" starttime="20250214 14:46:44.054" endtime="20250214 14:46:44.067"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:44.067" endtime="20250214 14:46:44.067"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:44.067" endtime="20250214 14:46:44.067"/>
</branch>
<status status="PASS" starttime="20250214 14:46:44.054" endtime="20250214 14:46:44.067"/>
</if>
<msg timestamp="20250214 14:46:44.067" level="INFO">${resultETag} = "ff13de2867c11a5852434ccd6aed521c-2"</msg>
<status status="PASS" starttime="20250214 14:46:43.556" endtime="20250214 14:46:44.067"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:44.070" level="INFO">Running command 'echo -n 9a46e413ef3ac309963875c3b65791d0933af24d95637a3502e60ff5d73a0030 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:44.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:44.075" level="INFO">${output} = ff13de2867c11a5852434ccd6aed521c</msg>
<status status="PASS" starttime="20250214 14:46:44.068" endtime="20250214 14:46:44.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:44.076" level="INFO">ff13de2867c11a5852434ccd6aed521c</msg>
<status status="PASS" starttime="20250214 14:46:44.075" endtime="20250214 14:46:44.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:44.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:44.076" endtime="20250214 14:46:44.076"/>
</kw>
<status status="PASS" starttime="20250214 14:46:44.068" endtime="20250214 14:46:44.077"/>
</kw>
<msg timestamp="20250214 14:46:44.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:44.068" endtime="20250214 14:46:44.077"/>
</kw>
<msg timestamp="20250214 14:46:44.077" level="INFO">${expectedResultETag} = ff13de2867c11a5852434ccd6aed521c</msg>
<status status="PASS" starttime="20250214 14:46:44.067" endtime="20250214 14:46:44.077"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:44.077" endtime="20250214 14:46:44.077"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:44.081" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-2349054235/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:44.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:44.589" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:46:44.079" endtime="20250214 14:46:44.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:44.590" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:44 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:44 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:44.590" endtime="20250214 14:46:44.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:44.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:44.591" endtime="20250214 14:46:44.591"/>
</kw>
<status status="PASS" starttime="20250214 14:46:44.078" endtime="20250214 14:46:44.591"/>
</kw>
<msg timestamp="20250214 14:46:44.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:44.078" endtime="20250214 14:46:44.591"/>
</kw>
<msg timestamp="20250214 14:46:44.591" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:46:44.078" endtime="20250214 14:46:44.592"/>
</kw>
<msg timestamp="20250214 14:46:44.592" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250214 14:46:44.077" endtime="20250214 14:46:44.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:44.592" endtime="20250214 14:46:44.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:44.592" endtime="20250214 14:46:44.593"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:44.596" level="INFO">Running command 'echo '{
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:44 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:44 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:44.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:44.601" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:46:44.593" endtime="20250214 14:46:44.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:44.602" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:46:44.602" endtime="20250214 14:46:44.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:44.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:44.603" endtime="20250214 14:46:44.603"/>
</kw>
<msg timestamp="20250214 14:46:44.603" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:46:44.593" endtime="20250214 14:46:44.603"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:44.603" endtime="20250214 14:46:44.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:44.607" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-2349054235/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:47.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:47.595" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-2349054235/multipartKey1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:46:43.993Z...</msg>
<status status="PASS" starttime="20250214 14:46:44.605" endtime="20250214 14:46:47.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:47.596" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-2349054235/multipartKey1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:46:43.993Z",
  "modificationTime" : "2025-02-14T14:46:43.993Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5,
    "minimumNodes" : 3
  },
  "metadata" : {
    "ETag" : "ff13de2867c11a5852434ccd6aed521c-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600044,
    "length" : 3145728,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 2,
    "localID" : 115816896921600045,
    "length" : 2098176,
    "offset" : 0,
    "keyOffset" : 3145728
  }, {
    "containerID" : 2,
    "localID" : 115816896921600046,
    "length" : 1047552,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 444,
  "file" : true
}</msg>
<status status="PASS" starttime="20250214 14:46:47.596" endtime="20250214 14:46:47.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:47.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:47.596" endtime="20250214 14:46:47.597"/>
</kw>
<status status="PASS" starttime="20250214 14:46:44.605" endtime="20250214 14:46:47.597"/>
</kw>
<msg timestamp="20250214 14:46:47.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:44.604" endtime="20250214 14:46:47.597"/>
</kw>
<msg timestamp="20250214 14:46:47.597" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-2349054235/multipartKey1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 6291456,
  "creationTime" : "2025-02-14T14:46:43.993Z...</msg>
<status status="PASS" starttime="20250214 14:46:44.604" endtime="20250214 14:46:47.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:47.597" endtime="20250214 14:46:47.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:47.598" endtime="20250214 14:46:47.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:47.598" endtime="20250214 14:46:47.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:47.598" endtime="20250214 14:46:47.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:47.599" endtime="20250214 14:46:47.599"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:47.603" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-2349054235/multipartKey1 /tmp/ozone-test-2349054235-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.208" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:47.600" endtime="20250214 14:46:48.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.209" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:48.209" endtime="20250214 14:46:48.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.210" endtime="20250214 14:46:48.210"/>
</kw>
<status status="PASS" starttime="20250214 14:46:47.600" endtime="20250214 14:46:48.210"/>
</kw>
<msg timestamp="20250214 14:46:48.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:47.600" endtime="20250214 14:46:48.210"/>
</kw>
<msg timestamp="20250214 14:46:48.210" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:47.599" endtime="20250214 14:46:48.210"/>
</kw>
<msg timestamp="20250214 14:46:48.211" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:47.599" endtime="20250214 14:46:48.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:48.211" endtime="20250214 14:46:48.211"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.214" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.219" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.211" endtime="20250214 14:46:48.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.219" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:46:48.219" endtime="20250214 14:46:48.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.219" endtime="20250214 14:46:48.220"/>
</kw>
<msg timestamp="20250214 14:46:48.220" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.211" endtime="20250214 14:46:48.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.220" endtime="20250214 14:46:48.220"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.223" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 6291456,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.228" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.221" endtime="20250214 14:46:48.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.228" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:46:48.228" endtime="20250214 14:46:48.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.228" endtime="20250214 14:46:48.229"/>
</kw>
<msg timestamp="20250214 14:46:48.229" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.220" endtime="20250214 14:46:48.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.229" endtime="20250214 14:46:48.229"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.233" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-2349054235-multipartKey1'.</msg>
<msg timestamp="20250214 14:46:48.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:48.231" endtime="20250214 14:46:48.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.242" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:48.242" endtime="20250214 14:46:48.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.242" endtime="20250214 14:46:48.243"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.230" endtime="20250214 14:46:48.243"/>
</kw>
<msg timestamp="20250214 14:46:48.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.230" endtime="20250214 14:46:48.243"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.229" endtime="20250214 14:46:48.243"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.246" level="INFO">Running command 'md5sum /tmp/ozone-test-2349054235-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.261" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.244" endtime="20250214 14:46:48.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.261" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.261" endtime="20250214 14:46:48.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.262" endtime="20250214 14:46:48.262"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.244" endtime="20250214 14:46:48.262"/>
</kw>
<msg timestamp="20250214 14:46:48.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.244" endtime="20250214 14:46:48.262"/>
</kw>
<msg timestamp="20250214 14:46:48.262" level="INFO">${checksumbefore} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.243" endtime="20250214 14:46:48.262"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.265" level="INFO">Running command 'md5sum /tmp/ozone-test-2349054235-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.280" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.263" endtime="20250214 14:46:48.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.280" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.280" endtime="20250214 14:46:48.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.281" endtime="20250214 14:46:48.281"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.263" endtime="20250214 14:46:48.281"/>
</kw>
<msg timestamp="20250214 14:46:48.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.263" endtime="20250214 14:46:48.281"/>
</kw>
<msg timestamp="20250214 14:46:48.281" level="INFO">${checksumafter} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:48.262" endtime="20250214 14:46:48.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.282" endtime="20250214 14:46:48.282"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.243" endtime="20250214 14:46:48.282"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-2349054235/multipartKey1 --part-number 1 /tmp/ozone-test-2349054235-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.884" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.283" endtime="20250214 14:46:48.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.885" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:48.884" endtime="20250214 14:46:48.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.885" endtime="20250214 14:46:48.885"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.283" endtime="20250214 14:46:48.885"/>
</kw>
<msg timestamp="20250214 14:46:48.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.283" endtime="20250214 14:46:48.886"/>
</kw>
<msg timestamp="20250214 14:46:48.886" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.282" endtime="20250214 14:46:48.886"/>
</kw>
<msg timestamp="20250214 14:46:48.886" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.282" endtime="20250214 14:46:48.886"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.889" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.902" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.887" endtime="20250214 14:46:48.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.903" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.903" endtime="20250214 14:46:48.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.903" endtime="20250214 14:46:48.904"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.887" endtime="20250214 14:46:48.904"/>
</kw>
<msg timestamp="20250214 14:46:48.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.887" endtime="20250214 14:46:48.904"/>
</kw>
<msg timestamp="20250214 14:46:48.904" level="INFO">${checksumbefore} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.886" endtime="20250214 14:46:48.904"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.907" level="INFO">Running command 'md5sum /tmp/ozone-test-2349054235-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.920" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.905" endtime="20250214 14:46:48.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.921" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.920" endtime="20250214 14:46:48.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.921" endtime="20250214 14:46:48.921"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.905" endtime="20250214 14:46:48.921"/>
</kw>
<msg timestamp="20250214 14:46:48.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.905" endtime="20250214 14:46:48.921"/>
</kw>
<msg timestamp="20250214 14:46:48.921" level="INFO">${checksumafter} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:48.904" endtime="20250214 14:46:48.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.922" endtime="20250214 14:46:48.922"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.886" endtime="20250214 14:46:48.922"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.924" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.929" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.922" endtime="20250214 14:46:48.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.930" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:46:48.929" endtime="20250214 14:46:48.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.930" endtime="20250214 14:46:48.930"/>
</kw>
<msg timestamp="20250214 14:46:48.930" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.922" endtime="20250214 14:46:48.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.931" endtime="20250214 14:46:48.931"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.933" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:48 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:48 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:48.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:48.938" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.931" endtime="20250214 14:46:48.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:48.938" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:46:48.938" endtime="20250214 14:46:48.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:48.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:48.939" endtime="20250214 14:46:48.939"/>
</kw>
<msg timestamp="20250214 14:46:48.939" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250214 14:46:48.931" endtime="20250214 14:46:48.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:48.939" endtime="20250214 14:46:48.939"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:48.943" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-2349054235/multipartKey1 --part-number 2 /tmp/ozone-test-2349054235-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:49.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:49.441" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 1047552,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.941" endtime="20250214 14:46:49.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:49.442" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 1047552,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:49 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:49 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:49.441" endtime="20250214 14:46:49.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:49.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:49.442" endtime="20250214 14:46:49.442"/>
</kw>
<status status="PASS" starttime="20250214 14:46:48.941" endtime="20250214 14:46:49.443"/>
</kw>
<msg timestamp="20250214 14:46:49.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:48.940" endtime="20250214 14:46:49.443"/>
</kw>
<msg timestamp="20250214 14:46:49.443" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 1047552,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.940" endtime="20250214 14:46:49.443"/>
</kw>
<msg timestamp="20250214 14:46:49.443" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:43 GMT",
    "ContentLength": 1047552,
    "ETag": "\"ff13de2867c11a5852434ccd6aed521c-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:48.940" endtime="20250214 14:46:49.443"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:49.447" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:49.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:49.452" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.444" endtime="20250214 14:46:49.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:49.453" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.452" endtime="20250214 14:46:49.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:49.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:49.453" endtime="20250214 14:46:49.453"/>
</kw>
<status status="PASS" starttime="20250214 14:46:49.444" endtime="20250214 14:46:49.453"/>
</kw>
<msg timestamp="20250214 14:46:49.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:49.444" endtime="20250214 14:46:49.454"/>
</kw>
<msg timestamp="20250214 14:46:49.454" level="INFO">${checksumbefore} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.444" endtime="20250214 14:46:49.454"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:49.457" level="INFO">Running command 'md5sum /tmp/ozone-test-2349054235-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:49.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:49.462" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.455" endtime="20250214 14:46:49.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:49.463" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.462" endtime="20250214 14:46:49.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:49.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:49.463" endtime="20250214 14:46:49.463"/>
</kw>
<status status="PASS" starttime="20250214 14:46:49.454" endtime="20250214 14:46:49.463"/>
</kw>
<msg timestamp="20250214 14:46:49.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:49.454" endtime="20250214 14:46:49.464"/>
</kw>
<msg timestamp="20250214 14:46:49.464" level="INFO">${checksumafter} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:49.454" endtime="20250214 14:46:49.464"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:49.464" endtime="20250214 14:46:49.464"/>
</kw>
<status status="PASS" starttime="20250214 14:46:49.443" endtime="20250214 14:46:49.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:41.220" endtime="20250214 14:46:49.464"/>
</test>
<test id="s1-s1-s8-t5" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="140">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:49.466" level="INFO">${randStr} = 0781512642</msg>
<status status="PASS" starttime="20250214 14:46:49.466" endtime="20250214 14:46:49.466"/>
</kw>
<msg timestamp="20250214 14:46:49.466" level="INFO">${random} = ozone-test-0781512642</msg>
<status status="PASS" starttime="20250214 14:46:49.465" endtime="20250214 14:46:49.466"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:49.467" level="INFO">${PREFIX} = ozone-test-0781512642</msg>
<status status="PASS" starttime="20250214 14:46:49.466" endtime="20250214 14:46:49.467"/>
</kw>
<status status="PASS" starttime="20250214 14:46:49.465" endtime="20250214 14:46:49.467"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:49.469" level="INFO">${custom_metadata_value} = VAgGJhf3nS1tpLXJS7yfVR9JBrzIjTCTFVv4kkfDlmXfAVGB3moMQJvDGQEcT90jTnNYpFRE2wUnQHsKJVHo7DisooDGHFj9f5fUqz9dDsH2hBDN1Bv1FpHoPQvOkKeCuuT7u7lOdvCZMXuVq91iMfVLHkAQWag4rArJVHCyS9qigA7dUbItOC2aUenz6VWLSTXc4szZ...</msg>
<status status="PASS" starttime="20250214 14:46:49.467" endtime="20250214 14:46:49.469"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/mpuWithLargeMetadata</arg>
<arg>255</arg>
<arg>--metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:49.473" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-0781512642/mpuWithLargeMetadata --metadata="custom-key1=VAgGJhf3nS1tpLXJS7yfVR9JBrzIjTCTFVv4kkfDlmXfAVGB3moMQJvDGQEcT90jTnNYpFRE2wUnQHsKJVHo7DisooDGHFj9f5fUqz9dDsH2hBDN1Bv1FpHoPQvOkKeCuuT7u7lOdvCZMXuVq91iMfVLHkAQWag4rArJVHCyS9qigA7dUbItOC2aUenz6VWLSTXc4szZAwuURIe4jA9qa17054roriISl9MqHVZCMVW2IjluT4lDw1GQfdxugBLaOSEz0x88mVx0zsZsEkXYsCJfLwbSjPriQBGzX1Y1AVqIOYdoQKptEDDkD5FGErUGc3DOmRA6HLFmiLVzCJ1Dbx3zzIMWUSmGZ3aiJINS6MLV37EFPecEF8qUeW5GBTycXczTId7rzQQKlmj2mtaKotPvbHK1HVUsZFOlQfb731d3KOWmTaJBSsZ7qUaK55LJvjhdw4tngbPRvLAZA7gFJvPT5p4UV2VsBmVza2WtShcQRobbJnibnA8e9zORhgXUxblSUKnjv6dWhue2npy3xll4wDFcHhw2zdTpNuaD99VqYB7ANF0kPjbP2xx2ry4PuELzjCgFnrJzoYuJAPzhupc58E2Vk5cg9ofaB1Vuhw9i8bLFa0TjuXRgj854Zd27bhpDcD8SkknYyABR1J27ZqbI7vMoNIsTYMLkG2sojdsKcMiducRn4mF2RFfiOZ2tAHrmEnHNrlMudQwY0t12Wd5YJL1sXA32ElCIEeCH8oMmhbG94yuWj1sjNe0HvpyQYA47CISIdcMlm3JjYTFZar4bPXZG6xtzexk0TRdyHt5uez4tdcgMTCyUZ1lMvAKOXLrjemWtcddadrBqeFGmuvdH2nj24DSdwWOw6Fz0smb7Vm29R0WnmIFs7cxsOuvZx9Izoqxt72o5qLzZgCbp8gC6tCV2rDIrYslqhZzmucIRkZ2xQwbStPGw4VniGBFV8uzNw1x45zqu4qAFSZaQS6hb38sZYsCczvVn4FKRm2RRiGmXud6anTqXqdnfB923QI9ea6Q63tdB2thnrnq2LtckpWtDM3dbE0iw4a70NtEaPNCM6tcuCWMapcGSX9QAKr8rzus7ZJ9W3PNFCZGk6jYVoNsJGuIypkObPVVAzDlCkE4H0VDWiVVtdWtqdy4VuaR8w2ovdrloG4hIeoexluHqSKhsxxWa0ohgrUZaOxbHEYdM6SdmEnc7Q5TzIFgcwjoQfAS4PVj1Y2I6DGXgrkq4u3HI013AV4vzrWV8mFDvmCfKvpBQ0AzFAWFFO2TVgPYiBUKkQQQfV66XJTxBPqLkLBBfBPtXVxNdarON5B6lpnSqOjkPvHhk5MSPiQLnnwuusR4tx3jTW0MkJJ5IZWC8YSk8gnwnbpKXcpbaBMnTcHJdWpp5ab4uYRFYIspZFoJ0HOcpwRJ8EpQWWvbZjqxcLIrXUMNJVDByaklVy1gBNLAo81kpfEw2RtFGahYWPCzbFJFl4iKXrBw2k6WgmOtDfkwyC4rz16rFE69IOJEEJKJ3DQk9Ds5h8Ebdt3X4WJuOpKicNfmzM6b2Pb9Tr2MI0xVBwiOAImawUo1lWOjdoQQQ559vgm0sRS2ZMc2OM6KjxJ4AGqG96M1OIwWPw7CxuSX008F79183fndS5XpPmofAYFOCY5lZ22aMyR4tO2elTdeaQUAHoLcvelu0WskYTUniCFX05UUnQz3Qoi1a2Hk60UxZjBx3UOOSLzMJb6HtrziqFUQn17QA40bRJULSpNVFf2yXrOFACHKj84i2LH1L29YDs4rRJa1fh46rvDYrJ6XNI0IOpmoW0JJriMQybZjgXFwD0NAN65dvIYgH0HgV1AdEg1DfSq7qy3NDQjWcaOCFvrrB5pPXPM1jlZmnTifzkzKwka1wJ4qMEfM9N0xSTMj4gCRfASZPlgyEAssC62Byc4YtJWgF5YXFBa1wjJu05zMLu1qAhHbBzEfWt1ZMXVNMFi82ZzDO1SGcJolfo35wIdoHtqCZYL7Sqjz0rcOdUxBHVdpxaZj4Im0H46KPYBQmFeGxTimpiP3OoIJuLWMTF9eJG1EZCbtIULla26Cm91bEvBd1mWhwSMPZS1LiJMQBl7MKZGh2s8e45299XAXSn9pnYQ1fRVR1XgJU3v2zkunyWdb9zdqlLVJiewA0mCxgZzFvgDWy9WNFjqJTzIngHXFRkqkkWh73WO7Yo2LinXW6bkMeOEmhqeW06lUSMAOvTQ6XVpdqOYFtNBeQQHKdLtkkWBlrTQriaToGeXWrPzTGq5jOG9VlNNuFqYcAvhtsW6z7vLBGvPSh4Bx1wChkhXbfnHceJ7u6ALfmFjxSZ4N6nqYiPmrw9rCgwtl4TrAkCudZQe7sUMANigcv1ShtY27plekqn9gciQUSYsHXweU80fgHtYWlDOR1KwLbnLTtShVyIleTb2sDa7X1JWIGDghSMX0PCToaAN0Q2ODTLeY1vkocQSfn1Zp3yPGQLPTJ5gVw55SfWHLWl7BLLuyCIfHNqwEcjGsLaa2ytIDvuGWZ3JbUJOCDC3QqRYx8Ju7Nc8RXP7xHhliYOdyTb67Dyvja4p4OyHtBifDRGAMmMqnHdbHFZVtkL09VFAsRAXfffE6f6Hf27QnjCKEYdAmS8PCVkgaPVCOtNf1FUNdkOhQQJKF5qVGAh5MxmFbuSrPVAwlxbVU0hvSz9hwhCEnR2LHfZxipi0maW9IDuPt6dWqeCqLGCtaocGBi4e7e3UNiu1WITw7ziJIHhQivoQEnEhA0v9K9bfd8M5Gsq4fReYujzQS9uXfRFMyco9prPG1eQF7dnGWbXzHHyBN1LSYGYGXYWySxmQMVGDlKjAw1hk0lx9VmEYIICcMkGQfhBOfcJiWL4lpZkuM7RezBDO0AdxOyInJ9NjmqEXPUz22RefklYbjHViHjWqkFSbuEiVw9GbTzsxjovn7ybO6AFknwhx0JgD6Rc9CkF0tvVp9GS3RuDqlrIN0TPabdAi2CY1evUH3J" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:49.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:49.951" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:46:49.470" endtime="20250214 14:46:49.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:49.952" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:46:49.951" endtime="20250214 14:46:49.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:49.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:49.952" endtime="20250214 14:46:49.952"/>
</kw>
<msg timestamp="20250214 14:46:49.952" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:46:49.470" endtime="20250214 14:46:49.952"/>
</kw>
<msg timestamp="20250214 14:46:49.953" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:46:49.470" endtime="20250214 14:46:49.953"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="NOT RUN" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.953"/>
</return>
<status status="PASS" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.954"/>
</branch>
<status status="PASS" starttime="20250214 14:46:49.953" endtime="20250214 14:46:49.954"/>
</if>
<msg timestamp="20250214 14:46:49.954" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:46:49.469" endtime="20250214 14:46:49.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:49.954" endtime="20250214 14:46:49.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:49.954" endtime="20250214 14:46:49.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:49.465" endtime="20250214 14:46:49.955"/>
</test>
<test id="s1-s1-s8-t6" name="Test Multipart Upload Complete Entity too small" line="146">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:49.956" level="INFO">${randStr} = 2925644881</msg>
<status status="PASS" starttime="20250214 14:46:49.956" endtime="20250214 14:46:49.956"/>
</kw>
<msg timestamp="20250214 14:46:49.956" level="INFO">${random} = ozone-test-2925644881</msg>
<status status="PASS" starttime="20250214 14:46:49.956" endtime="20250214 14:46:49.956"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:49.957" level="INFO">${PREFIX} = ozone-test-2925644881</msg>
<status status="PASS" starttime="20250214 14:46:49.957" endtime="20250214 14:46:49.957"/>
</kw>
<status status="PASS" starttime="20250214 14:46:49.955" endtime="20250214 14:46:49.957"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:49.961" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2925644881/multipartKey2  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:50.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:50.461" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2925644881/multipartKey2",
    "UploadId": "5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472"
}</msg>
<status status="PASS" starttime="20250214 14:46:49.958" endtime="20250214 14:46:50.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:50.462" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2925644881/multipartKey2",
    "UploadId": "5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472"
}</msg>
<status status="PASS" starttime="20250214 14:46:50.461" endtime="20250214 14:46:50.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:50.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:50.462" endtime="20250214 14:46:50.462"/>
</kw>
<msg timestamp="20250214 14:46:50.462" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2925644881/multipartKey2",
    "UploadId": "5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472"
}</msg>
<status status="PASS" starttime="20250214 14:46:49.958" endtime="20250214 14:46:50.462"/>
</kw>
<msg timestamp="20250214 14:46:50.462" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2925644881/multipartKey2",
    "UploadId": "5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472"
}</msg>
<status status="PASS" starttime="20250214 14:46:49.958" endtime="20250214 14:46:50.463"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:50.463" endtime="20250214 14:46:50.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:50.463" endtime="20250214 14:46:50.463"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:50.466" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-2925644881/multipartKey2",
    "UploadId": "5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:50.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:50.471" level="INFO">${output} = 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472</msg>
<status status="PASS" starttime="20250214 14:46:50.464" endtime="20250214 14:46:50.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:50.472" level="INFO">5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472</msg>
<status status="PASS" starttime="20250214 14:46:50.471" endtime="20250214 14:46:50.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:50.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:50.472" endtime="20250214 14:46:50.472"/>
</kw>
<msg timestamp="20250214 14:46:50.472" level="INFO">${upload_id} = 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472</msg>
<status status="PASS" starttime="20250214 14:46:50.464" endtime="20250214 14:46:50.472"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:50.473" endtime="20250214 14:46:50.473"/>
</return>
<status status="PASS" starttime="20250214 14:46:50.463" endtime="20250214 14:46:50.473"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:50.473" endtime="20250214 14:46:50.473"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:50.473" endtime="20250214 14:46:50.473"/>
</branch>
<status status="PASS" starttime="20250214 14:46:50.463" endtime="20250214 14:46:50.473"/>
</if>
<msg timestamp="20250214 14:46:50.473" level="INFO">${uploadID} = 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472</msg>
<status status="PASS" starttime="20250214 14:46:49.957" endtime="20250214 14:46:50.473"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>/tmp/10kb</arg>
<arg>/tmp/10kb</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:46:50.474" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250214 14:46:50.474" endtime="20250214 14:46:50.474"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:50.475" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250214 14:46:50.474" endtime="20250214 14:46:50.475"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:50.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2925644881/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.013" level="INFO">${output} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:50.476" endtime="20250214 14:46:51.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.014" level="INFO">{
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:51.013" endtime="20250214 14:46:51.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.014" endtime="20250214 14:46:51.014"/>
</kw>
<msg timestamp="20250214 14:46:51.015" level="INFO">${output} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:50.475" endtime="20250214 14:46:51.015"/>
</kw>
<msg timestamp="20250214 14:46:51.015" level="INFO">${result} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:50.475" endtime="20250214 14:46:51.015"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:51.015" endtime="20250214 14:46:51.015"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.019" level="INFO">Running command 'echo '{
    "ETag": "c6c65841177556821de100fa64d3b0da"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.024" level="INFO">${output} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.017" endtime="20250214 14:46:51.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.024" level="INFO">c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.024" endtime="20250214 14:46:51.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.025" endtime="20250214 14:46:51.025"/>
</kw>
<status status="PASS" starttime="20250214 14:46:51.016" endtime="20250214 14:46:51.025"/>
</kw>
<msg timestamp="20250214 14:46:51.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:51.016" endtime="20250214 14:46:51.025"/>
</kw>
<msg timestamp="20250214 14:46:51.025" level="INFO">${etag} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.016" endtime="20250214 14:46:51.025"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.028" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.032" level="INFO">${output} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.026" endtime="20250214 14:46:51.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.033" level="INFO">c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.033" endtime="20250214 14:46:51.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.033" endtime="20250214 14:46:51.034"/>
</kw>
<status status="PASS" starttime="20250214 14:46:51.026" endtime="20250214 14:46:51.034"/>
</kw>
<msg timestamp="20250214 14:46:51.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:51.026" endtime="20250214 14:46:51.034"/>
</kw>
<msg timestamp="20250214 14:46:51.034" level="INFO">${md5sum} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.025" endtime="20250214 14:46:51.034"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:51.034" endtime="20250214 14:46:51.034"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:51.035" endtime="20250214 14:46:51.035"/>
</return>
<status status="PASS" starttime="20250214 14:46:51.015" endtime="20250214 14:46:51.035"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:51.035" endtime="20250214 14:46:51.035"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:51.035" endtime="20250214 14:46:51.035"/>
</branch>
<status status="PASS" starttime="20250214 14:46:51.015" endtime="20250214 14:46:51.035"/>
</if>
<msg timestamp="20250214 14:46:51.035" level="INFO">${etag} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:50.475" endtime="20250214 14:46:51.035"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:51.035" endtime="20250214 14:46:51.035"/>
</kw>
<status status="PASS" starttime="20250214 14:46:50.474" endtime="20250214 14:46:51.035"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:46:51.036" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250214 14:46:51.036" endtime="20250214 14:46:51.036"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.039" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2925644881/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.559" level="INFO">${output} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:51.038" endtime="20250214 14:46:51.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.560" level="INFO">{
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:51.559" endtime="20250214 14:46:51.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.560" endtime="20250214 14:46:51.560"/>
</kw>
<msg timestamp="20250214 14:46:51.561" level="INFO">${output} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:51.037" endtime="20250214 14:46:51.561"/>
</kw>
<msg timestamp="20250214 14:46:51.561" level="INFO">${result} = {
    "ETag": "c6c65841177556821de100fa64d3b0da"
}</msg>
<status status="PASS" starttime="20250214 14:46:51.037" endtime="20250214 14:46:51.561"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:51.561" endtime="20250214 14:46:51.561"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.565" level="INFO">Running command 'echo '{
    "ETag": "c6c65841177556821de100fa64d3b0da"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.570" level="INFO">${output} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.563" endtime="20250214 14:46:51.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.571" level="INFO">c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.570" endtime="20250214 14:46:51.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.571" endtime="20250214 14:46:51.571"/>
</kw>
<status status="PASS" starttime="20250214 14:46:51.562" endtime="20250214 14:46:51.571"/>
</kw>
<msg timestamp="20250214 14:46:51.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:51.562" endtime="20250214 14:46:51.571"/>
</kw>
<msg timestamp="20250214 14:46:51.572" level="INFO">${etag} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.561" endtime="20250214 14:46:51.572"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.575" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:51.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:51.579" level="INFO">${output} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.573" endtime="20250214 14:46:51.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:51.580" level="INFO">c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.579" endtime="20250214 14:46:51.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:51.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:51.580" endtime="20250214 14:46:51.580"/>
</kw>
<status status="PASS" starttime="20250214 14:46:51.572" endtime="20250214 14:46:51.580"/>
</kw>
<msg timestamp="20250214 14:46:51.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:51.572" endtime="20250214 14:46:51.581"/>
</kw>
<msg timestamp="20250214 14:46:51.581" level="INFO">${md5sum} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.572" endtime="20250214 14:46:51.581"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:51.581" endtime="20250214 14:46:51.581"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:51.581" endtime="20250214 14:46:51.581"/>
</return>
<status status="PASS" starttime="20250214 14:46:51.561" endtime="20250214 14:46:51.581"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:51.581" endtime="20250214 14:46:51.581"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:51.581" endtime="20250214 14:46:51.581"/>
</branch>
<status status="PASS" starttime="20250214 14:46:51.561" endtime="20250214 14:46:51.581"/>
</if>
<msg timestamp="20250214 14:46:51.582" level="INFO">${etag} = c6c65841177556821de100fa64d3b0da</msg>
<status status="PASS" starttime="20250214 14:46:51.036" endtime="20250214 14:46:51.582"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:46:51.582" endtime="20250214 14:46:51.582"/>
</kw>
<status status="PASS" starttime="20250214 14:46:51.036" endtime="20250214 14:46:51.582"/>
</iter>
<status status="PASS" starttime="20250214 14:46:50.474" endtime="20250214 14:46:51.582"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:46:51.582" level="INFO">${parts} = {ETag=c6c65841177556821de100fa64d3b0da,PartNumber=1},{ETag=c6c65841177556821de100fa64d3b0da,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:51.582" endtime="20250214 14:46:51.582"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250214 14:46:51.583" endtime="20250214 14:46:51.583"/>
</return>
<msg timestamp="20250214 14:46:51.583" level="INFO">${parts} = {ETag=c6c65841177556821de100fa64d3b0da,PartNumber=1},{ETag=c6c65841177556821de100fa64d3b0da,PartNumber=2}</msg>
<status status="PASS" starttime="20250214 14:46:50.473" endtime="20250214 14:46:51.583"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>${parts}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:51.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-2925644881/multipartKey2 --upload-id 5a0d5a94-1f4e-47e2-be33-111d3779b35c-114002782479122472 --multipart-upload 'Parts=[{ETag=c6c65841177556821de100fa64d3b0da,PartNumber=1},{ETag=c6c65841177556821de100fa64d3b0da,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:52.085" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:52.085" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:46:51.584" endtime="20250214 14:46:52.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:52.086" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20250214 14:46:52.086" endtime="20250214 14:46:52.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:52.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:52.086" endtime="20250214 14:46:52.087"/>
</kw>
<msg timestamp="20250214 14:46:52.087" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:46:51.584" endtime="20250214 14:46:52.087"/>
</kw>
<msg timestamp="20250214 14:46:52.087" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:46:51.583" endtime="20250214 14:46:52.087"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:52.087" endtime="20250214 14:46:52.088"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</return>
<status status="PASS" starttime="20250214 14:46:52.088" endtime="20250214 14:46:52.088"/>
</branch>
<status status="PASS" starttime="20250214 14:46:52.087" endtime="20250214 14:46:52.088"/>
</if>
<msg timestamp="20250214 14:46:52.088" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250214 14:46:51.583" endtime="20250214 14:46:52.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:52.089" endtime="20250214 14:46:52.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:49.955" endtime="20250214 14:46:52.089"/>
</test>
<test id="s1-s1-s8-t7" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="153">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:52.091" level="INFO">${randStr} = 4373182379</msg>
<status status="PASS" starttime="20250214 14:46:52.090" endtime="20250214 14:46:52.091"/>
</kw>
<msg timestamp="20250214 14:46:52.091" level="INFO">${random} = ozone-test-4373182379</msg>
<status status="PASS" starttime="20250214 14:46:52.090" endtime="20250214 14:46:52.091"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:52.091" level="INFO">${PREFIX} = ozone-test-4373182379</msg>
<status status="PASS" starttime="20250214 14:46:52.091" endtime="20250214 14:46:52.091"/>
</kw>
<status status="PASS" starttime="20250214 14:46:52.090" endtime="20250214 14:46:52.091"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:52.096" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:52.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:52.594" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "UploadId": "2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803"
}</msg>
<status status="PASS" starttime="20250214 14:46:52.093" endtime="20250214 14:46:52.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:52.595" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "UploadId": "2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803"
}</msg>
<status status="PASS" starttime="20250214 14:46:52.595" endtime="20250214 14:46:52.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:52.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:52.595" endtime="20250214 14:46:52.596"/>
</kw>
<msg timestamp="20250214 14:46:52.596" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "UploadId": "2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803"
}</msg>
<status status="PASS" starttime="20250214 14:46:52.093" endtime="20250214 14:46:52.596"/>
</kw>
<msg timestamp="20250214 14:46:52.596" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "UploadId": "2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803"
}</msg>
<status status="PASS" starttime="20250214 14:46:52.092" endtime="20250214 14:46:52.596"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:52.596" endtime="20250214 14:46:52.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:52.597" endtime="20250214 14:46:52.597"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:52.600" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "UploadId": "2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:52.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:52.605" level="INFO">${output} = 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803</msg>
<status status="PASS" starttime="20250214 14:46:52.598" endtime="20250214 14:46:52.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:52.605" level="INFO">2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803</msg>
<status status="PASS" starttime="20250214 14:46:52.605" endtime="20250214 14:46:52.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:52.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:52.606" endtime="20250214 14:46:52.606"/>
</kw>
<msg timestamp="20250214 14:46:52.606" level="INFO">${upload_id} = 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803</msg>
<status status="PASS" starttime="20250214 14:46:52.597" endtime="20250214 14:46:52.606"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:46:52.606" endtime="20250214 14:46:52.606"/>
</return>
<status status="PASS" starttime="20250214 14:46:52.596" endtime="20250214 14:46:52.606"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:52.606" endtime="20250214 14:46:52.606"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:52.606" endtime="20250214 14:46:52.606"/>
</branch>
<status status="PASS" starttime="20250214 14:46:52.596" endtime="20250214 14:46:52.606"/>
</if>
<msg timestamp="20250214 14:46:52.607" level="INFO">${uploadID} = 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803</msg>
<status status="PASS" starttime="20250214 14:46:52.092" endtime="20250214 14:46:52.607"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:52.610" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:53.101" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:53.101" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:52.608" endtime="20250214 14:46:53.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:53.102" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:46:53.102" endtime="20250214 14:46:53.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:53.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:53.102" endtime="20250214 14:46:53.103"/>
</kw>
<msg timestamp="20250214 14:46:53.103" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:52.608" endtime="20250214 14:46:53.103"/>
</kw>
<msg timestamp="20250214 14:46:53.103" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:52.607" endtime="20250214 14:46:53.103"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:53.103" endtime="20250214 14:46:53.104"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</return>
<status status="PASS" starttime="20250214 14:46:53.104" endtime="20250214 14:46:53.104"/>
</branch>
<status status="PASS" starttime="20250214 14:46:53.103" endtime="20250214 14:46:53.104"/>
</if>
<msg timestamp="20250214 14:46:53.104" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:52.607" endtime="20250214 14:46:53.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:53.105" endtime="20250214 14:46:53.105"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:53.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:53.598" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:53.598" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:53.106" endtime="20250214 14:46:53.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:53.599" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:46:53.598" endtime="20250214 14:46:53.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:53.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:53.599" endtime="20250214 14:46:53.599"/>
</kw>
<msg timestamp="20250214 14:46:53.600" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:53.106" endtime="20250214 14:46:53.600"/>
</kw>
<msg timestamp="20250214 14:46:53.600" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:53.105" endtime="20250214 14:46:53.600"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.600"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.600"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:53.601" endtime="20250214 14:46:53.601"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.601"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:53.601" endtime="20250214 14:46:53.601"/>
</return>
<status status="PASS" starttime="20250214 14:46:53.601" endtime="20250214 14:46:53.601"/>
</branch>
<status status="PASS" starttime="20250214 14:46:53.600" endtime="20250214 14:46:53.601"/>
</if>
<msg timestamp="20250214 14:46:53.601" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:53.105" endtime="20250214 14:46:53.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:53.601" endtime="20250214 14:46:53.601"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:53.605" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4373182379/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:54.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:54.328" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:53.603" endtime="20250214 14:46:54.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:54.329" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:54.329" endtime="20250214 14:46:54.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:54.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:54.330" endtime="20250214 14:46:54.330"/>
</kw>
<msg timestamp="20250214 14:46:54.330" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:53.602" endtime="20250214 14:46:54.330"/>
</kw>
<msg timestamp="20250214 14:46:54.330" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:53.602" endtime="20250214 14:46:54.331"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:54.331" endtime="20250214 14:46:54.331"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:54.336" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:54.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:54.343" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.333" endtime="20250214 14:46:54.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:54.345" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.344" endtime="20250214 14:46:54.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:54.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:54.345" endtime="20250214 14:46:54.345"/>
</kw>
<status status="PASS" starttime="20250214 14:46:54.332" endtime="20250214 14:46:54.346"/>
</kw>
<msg timestamp="20250214 14:46:54.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:54.332" endtime="20250214 14:46:54.346"/>
</kw>
<msg timestamp="20250214 14:46:54.346" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.331" endtime="20250214 14:46:54.346"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:54.352" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:54.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:54.370" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.348" endtime="20250214 14:46:54.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:54.371" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.371" endtime="20250214 14:46:54.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:54.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:54.372" endtime="20250214 14:46:54.372"/>
</kw>
<status status="PASS" starttime="20250214 14:46:54.347" endtime="20250214 14:46:54.372"/>
</kw>
<msg timestamp="20250214 14:46:54.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:54.347" endtime="20250214 14:46:54.373"/>
</kw>
<msg timestamp="20250214 14:46:54.373" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.346" endtime="20250214 14:46:54.373"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:54.373" endtime="20250214 14:46:54.374"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:54.374" endtime="20250214 14:46:54.374"/>
</return>
<status status="PASS" starttime="20250214 14:46:54.331" endtime="20250214 14:46:54.374"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:54.374" endtime="20250214 14:46:54.374"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:54.374" endtime="20250214 14:46:54.374"/>
</branch>
<status status="PASS" starttime="20250214 14:46:54.331" endtime="20250214 14:46:54.374"/>
</if>
<msg timestamp="20250214 14:46:54.374" level="INFO">${eTag1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:53.601" endtime="20250214 14:46:54.374"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:54.380" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4373182379/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.057" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:54.377" endtime="20250214 14:46:55.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.058" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:55.058" endtime="20250214 14:46:55.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.059" endtime="20250214 14:46:55.059"/>
</kw>
<msg timestamp="20250214 14:46:55.059" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:54.376" endtime="20250214 14:46:55.059"/>
</kw>
<msg timestamp="20250214 14:46:55.059" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:46:54.375" endtime="20250214 14:46:55.059"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:55.060" endtime="20250214 14:46:55.060"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.063" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.068" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.061" endtime="20250214 14:46:55.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.069" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.069" endtime="20250214 14:46:55.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.069" endtime="20250214 14:46:55.070"/>
</kw>
<status status="PASS" starttime="20250214 14:46:55.061" endtime="20250214 14:46:55.070"/>
</kw>
<msg timestamp="20250214 14:46:55.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:55.060" endtime="20250214 14:46:55.070"/>
</kw>
<msg timestamp="20250214 14:46:55.070" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.060" endtime="20250214 14:46:55.070"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.073" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.086" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.071" endtime="20250214 14:46:55.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.087" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.086" endtime="20250214 14:46:55.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.087" endtime="20250214 14:46:55.087"/>
</kw>
<status status="PASS" starttime="20250214 14:46:55.071" endtime="20250214 14:46:55.087"/>
</kw>
<msg timestamp="20250214 14:46:55.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:55.071" endtime="20250214 14:46:55.088"/>
</kw>
<msg timestamp="20250214 14:46:55.088" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:55.070" endtime="20250214 14:46:55.088"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:55.088" endtime="20250214 14:46:55.088"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:55.088" endtime="20250214 14:46:55.088"/>
</return>
<status status="PASS" starttime="20250214 14:46:55.059" endtime="20250214 14:46:55.088"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:55.088" endtime="20250214 14:46:55.088"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:55.088" endtime="20250214 14:46:55.088"/>
</branch>
<status status="PASS" starttime="20250214 14:46:55.059" endtime="20250214 14:46:55.088"/>
</if>
<msg timestamp="20250214 14:46:55.089" level="INFO">${eTag2} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:54.374" endtime="20250214 14:46:55.089"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag3}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>3</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.092" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4373182379/multipartKey3 --part-number 3 --body /tmp/part2 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.684" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:55.090" endtime="20250214 14:46:55.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.685" level="INFO">{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:55.685" endtime="20250214 14:46:55.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.685" endtime="20250214 14:46:55.686"/>
</kw>
<msg timestamp="20250214 14:46:55.686" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:55.090" endtime="20250214 14:46:55.686"/>
</kw>
<msg timestamp="20250214 14:46:55.686" level="INFO">${result} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:46:55.089" endtime="20250214 14:46:55.686"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:55.687" endtime="20250214 14:46:55.687"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.690" level="INFO">Running command 'echo '{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.695" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.688" endtime="20250214 14:46:55.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.696" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.695" endtime="20250214 14:46:55.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.696" endtime="20250214 14:46:55.696"/>
</kw>
<status status="PASS" starttime="20250214 14:46:55.688" endtime="20250214 14:46:55.696"/>
</kw>
<msg timestamp="20250214 14:46:55.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:55.687" endtime="20250214 14:46:55.697"/>
</kw>
<msg timestamp="20250214 14:46:55.697" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.687" endtime="20250214 14:46:55.697"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.700" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:55.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:55.706" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.698" endtime="20250214 14:46:55.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:55.706" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.706" endtime="20250214 14:46:55.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:55.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:55.707" endtime="20250214 14:46:55.707"/>
</kw>
<status status="PASS" starttime="20250214 14:46:55.697" endtime="20250214 14:46:55.707"/>
</kw>
<msg timestamp="20250214 14:46:55.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:55.697" endtime="20250214 14:46:55.707"/>
</kw>
<msg timestamp="20250214 14:46:55.707" level="INFO">${md5sum} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.697" endtime="20250214 14:46:55.707"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:46:55.707" endtime="20250214 14:46:55.708"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:55.708" endtime="20250214 14:46:55.708"/>
</return>
<status status="PASS" starttime="20250214 14:46:55.686" endtime="20250214 14:46:55.708"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:55.708" endtime="20250214 14:46:55.708"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:55.708" endtime="20250214 14:46:55.708"/>
</branch>
<status status="PASS" starttime="20250214 14:46:55.686" endtime="20250214 14:46:55.708"/>
</if>
<msg timestamp="20250214 14:46:55.708" level="INFO">${eTag3} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:55.089" endtime="20250214 14:46:55.708"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:55.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:56.221" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:56.221" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:55.710" endtime="20250214 14:46:56.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:56.222" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:46:56.222" endtime="20250214 14:46:56.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:56.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:56.222" endtime="20250214 14:46:56.223"/>
</kw>
<msg timestamp="20250214 14:46:56.223" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:55.709" endtime="20250214 14:46:56.223"/>
</kw>
<msg timestamp="20250214 14:46:56.223" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:55.709" endtime="20250214 14:46:56.223"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.223" endtime="20250214 14:46:56.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:56.223" endtime="20250214 14:46:56.224"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</return>
<status status="PASS" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.224"/>
</branch>
<status status="PASS" starttime="20250214 14:46:56.223" endtime="20250214 14:46:56.224"/>
</if>
<msg timestamp="20250214 14:46:56.224" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:55.708" endtime="20250214 14:46:56.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:56.224" endtime="20250214 14:46:56.225"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:56.228" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:56.715" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:56.715" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:56.226" endtime="20250214 14:46:56.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:56.716" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250214 14:46:56.715" endtime="20250214 14:46:56.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:56.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:56.716" endtime="20250214 14:46:56.716"/>
</kw>
<msg timestamp="20250214 14:46:56.716" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:56.226" endtime="20250214 14:46:56.716"/>
</kw>
<msg timestamp="20250214 14:46:56.717" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:56.225" endtime="20250214 14:46:56.717"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.717"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.718"/>
</return>
<status status="PASS" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.718"/>
</branch>
<status status="PASS" starttime="20250214 14:46:56.717" endtime="20250214 14:46:56.718"/>
</if>
<msg timestamp="20250214 14:46:56.718" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250214 14:46:56.225" endtime="20250214 14:46:56.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:56.718" endtime="20250214 14:46:56.718"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:56.722" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:57.209" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:46:57.209" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:46:56.720" endtime="20250214 14:46:57.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:57.210" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:46:57.210" endtime="20250214 14:46:57.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:57.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:57.211" endtime="20250214 14:46:57.211"/>
</kw>
<msg timestamp="20250214 14:46:57.211" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:46:56.719" endtime="20250214 14:46:57.211"/>
</kw>
<msg timestamp="20250214 14:46:57.211" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:46:56.719" endtime="20250214 14:46:57.211"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:57.211" endtime="20250214 14:46:57.212"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</return>
<status status="PASS" starttime="20250214 14:46:57.212" endtime="20250214 14:46:57.212"/>
</branch>
<status status="PASS" starttime="20250214 14:46:57.211" endtime="20250214 14:46:57.212"/>
</if>
<msg timestamp="20250214 14:46:57.213" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250214 14:46:56.718" endtime="20250214 14:46:57.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:57.213" endtime="20250214 14:46:57.213"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:57.217" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-4373182379/multipartKey3 --upload-id 2db6dd21-24ff-49eb-be3c-b4215f5d2fc0-114002782619893803 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1},{ETag=933af24d95637a3502e60ff5d73a0030,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:57.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:57.707" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\""
}</msg>
<status status="PASS" starttime="20250214 14:46:57.215" endtime="20250214 14:46:57.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:57.708" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\""
}</msg>
<status status="PASS" starttime="20250214 14:46:57.708" endtime="20250214 14:46:57.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:57.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:57.708" endtime="20250214 14:46:57.709"/>
</kw>
<msg timestamp="20250214 14:46:57.709" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\""
}</msg>
<status status="PASS" starttime="20250214 14:46:57.215" endtime="20250214 14:46:57.709"/>
</kw>
<msg timestamp="20250214 14:46:57.709" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\""
}</msg>
<status status="PASS" starttime="20250214 14:46:57.214" endtime="20250214 14:46:57.709"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:57.709" endtime="20250214 14:46:57.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:57.710" endtime="20250214 14:46:57.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:46:57.710" endtime="20250214 14:46:57.710"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:57.713" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4373182379/multipartKey3",
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:57.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:57.718" level="INFO">${output} = "7b2bc569dca1e9fb871c904a85d0d405-3"</msg>
<status status="PASS" starttime="20250214 14:46:57.711" endtime="20250214 14:46:57.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:57.719" level="INFO">"7b2bc569dca1e9fb871c904a85d0d405-3"</msg>
<status status="PASS" starttime="20250214 14:46:57.719" endtime="20250214 14:46:57.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:57.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:57.719" endtime="20250214 14:46:57.719"/>
</kw>
<status status="PASS" starttime="20250214 14:46:57.711" endtime="20250214 14:46:57.720"/>
</kw>
<msg timestamp="20250214 14:46:57.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:57.711" endtime="20250214 14:46:57.720"/>
</kw>
<msg timestamp="20250214 14:46:57.720" level="INFO">${etag} = "7b2bc569dca1e9fb871c904a85d0d405-3"</msg>
<status status="PASS" starttime="20250214 14:46:57.710" endtime="20250214 14:46:57.720"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:46:57.720" endtime="20250214 14:46:57.720"/>
</return>
<status status="PASS" starttime="20250214 14:46:57.709" endtime="20250214 14:46:57.720"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:46:57.720" endtime="20250214 14:46:57.720"/>
</return>
<status status="NOT RUN" starttime="20250214 14:46:57.720" endtime="20250214 14:46:57.720"/>
</branch>
<status status="PASS" starttime="20250214 14:46:57.709" endtime="20250214 14:46:57.720"/>
</if>
<msg timestamp="20250214 14:46:57.720" level="INFO">${result} = "7b2bc569dca1e9fb871c904a85d0d405-3"</msg>
<status status="PASS" starttime="20250214 14:46:57.213" endtime="20250214 14:46:57.720"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:57.724" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4373182379/multipartKey3 /tmp/ozone-test-4373182379-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:58.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.336" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:57.722" endtime="20250214 14:46:58.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.337" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:58 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:58 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:58.337" endtime="20250214 14:46:58.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.337" endtime="20250214 14:46:58.338"/>
</kw>
<status status="PASS" starttime="20250214 14:46:57.721" endtime="20250214 14:46:58.338"/>
</kw>
<msg timestamp="20250214 14:46:58.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:57.721" endtime="20250214 14:46:58.338"/>
</kw>
<msg timestamp="20250214 14:46:58.338" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:57.721" endtime="20250214 14:46:58.338"/>
</kw>
<msg timestamp="20250214 14:46:58.338" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:57.721" endtime="20250214 14:46:58.338"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.341" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-4373182379-multipartKey3'.</msg>
<msg timestamp="20250214 14:46:58.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:46:58.339" endtime="20250214 14:46:58.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.351" level="INFO"/>
<status status="PASS" starttime="20250214 14:46:58.351" endtime="20250214 14:46:58.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.351" endtime="20250214 14:46:58.352"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.339" endtime="20250214 14:46:58.352"/>
</kw>
<msg timestamp="20250214 14:46:58.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.339" endtime="20250214 14:46:58.352"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.338" endtime="20250214 14:46:58.352"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.356" level="INFO">Running command 'md5sum /tmp/ozone-test-4373182379-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.370" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.354" endtime="20250214 14:46:58.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.371" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.371" endtime="20250214 14:46:58.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.371" endtime="20250214 14:46:58.372"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.353" endtime="20250214 14:46:58.372"/>
</kw>
<msg timestamp="20250214 14:46:58.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.353" endtime="20250214 14:46:58.372"/>
</kw>
<msg timestamp="20250214 14:46:58.372" level="INFO">${checksumbefore} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.353" endtime="20250214 14:46:58.372"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.376" level="INFO">Running command 'md5sum /tmp/ozone-test-4373182379-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:58.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.390" level="INFO">${output} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.373" endtime="20250214 14:46:58.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.391" level="INFO">8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.391" endtime="20250214 14:46:58.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.391" endtime="20250214 14:46:58.392"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.373" endtime="20250214 14:46:58.392"/>
</kw>
<msg timestamp="20250214 14:46:58.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.373" endtime="20250214 14:46:58.392"/>
</kw>
<msg timestamp="20250214 14:46:58.392" level="INFO">${checksumafter} = 8dba72c59bfbc948e6926b70f5b07bfa</msg>
<status status="PASS" starttime="20250214 14:46:58.372" endtime="20250214 14:46:58.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:58.392" endtime="20250214 14:46:58.393"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.353" endtime="20250214 14:46:58.393"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.396" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4373182379/multipartKey3 --part-number 1 /tmp/ozone-test-4373182379-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:58.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.975" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 5243904,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:58.394" endtime="20250214 14:46:58.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.976" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 5243904,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:58 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:58 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:58.975" endtime="20250214 14:46:58.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.976" endtime="20250214 14:46:58.976"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.394" endtime="20250214 14:46:58.976"/>
</kw>
<msg timestamp="20250214 14:46:58.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.394" endtime="20250214 14:46:58.976"/>
</kw>
<msg timestamp="20250214 14:46:58.977" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 5243904,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:58.393" endtime="20250214 14:46:58.977"/>
</kw>
<msg timestamp="20250214 14:46:58.977" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 5243904,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:58.393" endtime="20250214 14:46:58.977"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.980" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:58.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:58.994" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:58.978" endtime="20250214 14:46:58.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:58.994" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:58.994" endtime="20250214 14:46:58.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:58.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:58.995" endtime="20250214 14:46:58.995"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.978" endtime="20250214 14:46:58.995"/>
</kw>
<msg timestamp="20250214 14:46:58.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.978" endtime="20250214 14:46:58.995"/>
</kw>
<msg timestamp="20250214 14:46:58.995" level="INFO">${checksumbefore} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:58.977" endtime="20250214 14:46:58.995"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:58.998" level="INFO">Running command 'md5sum /tmp/ozone-test-4373182379-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:59.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:59.011" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:58.996" endtime="20250214 14:46:59.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:59.012" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:59.012" endtime="20250214 14:46:59.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:59.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:59.012" endtime="20250214 14:46:59.013"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.996" endtime="20250214 14:46:59.013"/>
</kw>
<msg timestamp="20250214 14:46:59.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:58.996" endtime="20250214 14:46:59.013"/>
</kw>
<msg timestamp="20250214 14:46:59.013" level="INFO">${checksumafter} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:46:58.995" endtime="20250214 14:46:59.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:59.013" endtime="20250214 14:46:59.013"/>
</kw>
<status status="PASS" starttime="20250214 14:46:58.977" endtime="20250214 14:46:59.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:59.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4373182379/multipartKey3 --part-number 3 /tmp/ozone-test-4373182379-multipartKey3-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:59.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:59.510" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 1047552,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:59.015" endtime="20250214 14:46:59.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:59.511" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 1047552,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:46:59 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Fri, 14 Feb 2025 14:46:59 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:46:59.511" endtime="20250214 14:46:59.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:59.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:59.511" endtime="20250214 14:46:59.512"/>
</kw>
<status status="PASS" starttime="20250214 14:46:59.015" endtime="20250214 14:46:59.512"/>
</kw>
<msg timestamp="20250214 14:46:59.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:59.014" endtime="20250214 14:46:59.512"/>
</kw>
<msg timestamp="20250214 14:46:59.512" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 1047552,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:59.014" endtime="20250214 14:46:59.512"/>
</kw>
<msg timestamp="20250214 14:46:59.512" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:46:57 GMT",
    "ContentLength": 1047552,
    "ETag": "\"7b2bc569dca1e9fb871c904a85d0d405-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:46:59.014" endtime="20250214 14:46:59.512"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:59.516" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:59.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:59.521" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.514" endtime="20250214 14:46:59.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:59.522" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.522" endtime="20250214 14:46:59.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:59.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:59.522" endtime="20250214 14:46:59.523"/>
</kw>
<status status="PASS" starttime="20250214 14:46:59.513" endtime="20250214 14:46:59.523"/>
</kw>
<msg timestamp="20250214 14:46:59.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:59.513" endtime="20250214 14:46:59.523"/>
</kw>
<msg timestamp="20250214 14:46:59.523" level="INFO">${checksumbefore} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.513" endtime="20250214 14:46:59.523"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:59.526" level="INFO">Running command 'md5sum /tmp/ozone-test-4373182379-multipartKey3-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:46:59.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:46:59.532" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.524" endtime="20250214 14:46:59.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:46:59.533" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.532" endtime="20250214 14:46:59.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:46:59.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:46:59.533" endtime="20250214 14:46:59.533"/>
</kw>
<status status="PASS" starttime="20250214 14:46:59.524" endtime="20250214 14:46:59.533"/>
</kw>
<msg timestamp="20250214 14:46:59.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:46:59.524" endtime="20250214 14:46:59.533"/>
</kw>
<msg timestamp="20250214 14:46:59.533" level="INFO">${checksumafter} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:46:59.523" endtime="20250214 14:46:59.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:46:59.534" endtime="20250214 14:46:59.534"/>
</kw>
<status status="PASS" starttime="20250214 14:46:59.513" endtime="20250214 14:46:59.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:52.089" endtime="20250214 14:46:59.534"/>
</test>
<test id="s1-s1-s8-t8" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:46:59.536" level="INFO">${randStr} = 3914560106</msg>
<status status="PASS" starttime="20250214 14:46:59.535" endtime="20250214 14:46:59.536"/>
</kw>
<msg timestamp="20250214 14:46:59.536" level="INFO">${random} = ozone-test-3914560106</msg>
<status status="PASS" starttime="20250214 14:46:59.535" endtime="20250214 14:46:59.536"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:46:59.536" level="INFO">${PREFIX} = ozone-test-3914560106</msg>
<status status="PASS" starttime="20250214 14:46:59.536" endtime="20250214 14:46:59.536"/>
</kw>
<status status="PASS" starttime="20250214 14:46:59.535" endtime="20250214 14:46:59.536"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>0</arg>
<arg>--storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:46:59.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-3914560106/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:00.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:00.029" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3914560106/multipartKey4",
    "UploadId": "79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215"
}</msg>
<status status="PASS" starttime="20250214 14:46:59.538" endtime="20250214 14:47:00.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:00.030" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-3914560106/multipartKey4",
    "UploadId": "79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215"
}</msg>
<status status="PASS" starttime="20250214 14:47:00.029" endtime="20250214 14:47:00.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:00.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:00.030" endtime="20250214 14:47:00.031"/>
</kw>
<msg timestamp="20250214 14:47:00.031" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3914560106/multipartKey4",
    "UploadId": "79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215"
}</msg>
<status status="PASS" starttime="20250214 14:46:59.537" endtime="20250214 14:47:00.031"/>
</kw>
<msg timestamp="20250214 14:47:00.031" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3914560106/multipartKey4",
    "UploadId": "79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215"
}</msg>
<status status="PASS" starttime="20250214 14:46:59.537" endtime="20250214 14:47:00.031"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:00.032" endtime="20250214 14:47:00.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:00.032" endtime="20250214 14:47:00.033"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:00.036" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-3914560106/multipartKey4",
    "UploadId": "79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:00.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:00.041" level="INFO">${output} = 79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215</msg>
<status status="PASS" starttime="20250214 14:47:00.033" endtime="20250214 14:47:00.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:00.042" level="INFO">79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215</msg>
<status status="PASS" starttime="20250214 14:47:00.042" endtime="20250214 14:47:00.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:00.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:00.042" endtime="20250214 14:47:00.043"/>
</kw>
<msg timestamp="20250214 14:47:00.043" level="INFO">${upload_id} = 79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215</msg>
<status status="PASS" starttime="20250214 14:47:00.033" endtime="20250214 14:47:00.043"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:00.043" endtime="20250214 14:47:00.043"/>
</return>
<status status="PASS" starttime="20250214 14:47:00.031" endtime="20250214 14:47:00.043"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:00.043" endtime="20250214 14:47:00.043"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:00.043" endtime="20250214 14:47:00.043"/>
</branch>
<status status="PASS" starttime="20250214 14:47:00.031" endtime="20250214 14:47:00.043"/>
</if>
<msg timestamp="20250214 14:47:00.044" level="INFO">${uploadID} = 79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215</msg>
<status status="PASS" starttime="20250214 14:46:59.536" endtime="20250214 14:47:00.044"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:00.047" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-3914560106/multipartKey4 --upload-id 79fd1f7c-ba35-43a5-a7fd-49a8c8a15ff6-114002783106695215 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:00.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:00.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:00.045" endtime="20250214 14:47:00.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:00.522" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:00.522" endtime="20250214 14:47:00.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:00.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:00.522" endtime="20250214 14:47:00.523"/>
</kw>
<msg timestamp="20250214 14:47:00.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:00.045" endtime="20250214 14:47:00.523"/>
</kw>
<msg timestamp="20250214 14:47:00.523" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:00.044" endtime="20250214 14:47:00.523"/>
</kw>
<msg timestamp="20250214 14:47:00.523" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:47:00.044" endtime="20250214 14:47:00.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:46:59.534" endtime="20250214 14:47:00.523"/>
</test>
<test id="s1-s1-s8-t9" name="Test abort Multipart upload with invalid uploadId" line="190">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:00.525" level="INFO">${randStr} = 8991292346</msg>
<status status="PASS" starttime="20250214 14:47:00.525" endtime="20250214 14:47:00.525"/>
</kw>
<msg timestamp="20250214 14:47:00.526" level="INFO">${random} = ozone-test-8991292346</msg>
<status status="PASS" starttime="20250214 14:47:00.525" endtime="20250214 14:47:00.526"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:00.526" level="INFO">${PREFIX} = ozone-test-8991292346</msg>
<status status="PASS" starttime="20250214 14:47:00.526" endtime="20250214 14:47:00.526"/>
</kw>
<status status="PASS" starttime="20250214 14:47:00.524" endtime="20250214 14:47:00.526"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>"random"</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:00.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-8991292346/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:01.013" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:01.013" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:47:00.527" endtime="20250214 14:47:01.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:01.014" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250214 14:47:01.014" endtime="20250214 14:47:01.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:01.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:01.014" endtime="20250214 14:47:01.015"/>
</kw>
<msg timestamp="20250214 14:47:01.015" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:47:00.527" endtime="20250214 14:47:01.015"/>
</kw>
<msg timestamp="20250214 14:47:01.015" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250214 14:47:00.527" endtime="20250214 14:47:01.015"/>
</kw>
<msg timestamp="20250214 14:47:01.015" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:47:00.526" endtime="20250214 14:47:01.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:00.524" endtime="20250214 14:47:01.015"/>
</test>
<test id="s1-s1-s8-t10" name="Upload part with Incorrect uploadID" line="193">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:01.017" level="INFO">${randStr} = 9399705926</msg>
<status status="PASS" starttime="20250214 14:47:01.017" endtime="20250214 14:47:01.017"/>
</kw>
<msg timestamp="20250214 14:47:01.017" level="INFO">${random} = ozone-test-9399705926</msg>
<status status="PASS" starttime="20250214 14:47:01.017" endtime="20250214 14:47:01.017"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:01.018" level="INFO">${PREFIX} = ozone-test-9399705926</msg>
<status status="PASS" starttime="20250214 14:47:01.017" endtime="20250214 14:47:01.018"/>
</kw>
<status status="PASS" starttime="20250214 14:47:01.016" endtime="20250214 14:47:01.018"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:01.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-9399705926/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:01.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:01.506" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9399705926/multipartKey",
    "UploadId": "a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496"
}</msg>
<status status="PASS" starttime="20250214 14:47:01.019" endtime="20250214 14:47:01.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:01.507" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-9399705926/multipartKey",
    "UploadId": "a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496"
}</msg>
<status status="PASS" starttime="20250214 14:47:01.506" endtime="20250214 14:47:01.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:01.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:01.507" endtime="20250214 14:47:01.507"/>
</kw>
<msg timestamp="20250214 14:47:01.508" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9399705926/multipartKey",
    "UploadId": "a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496"
}</msg>
<status status="PASS" starttime="20250214 14:47:01.019" endtime="20250214 14:47:01.508"/>
</kw>
<msg timestamp="20250214 14:47:01.508" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9399705926/multipartKey",
    "UploadId": "a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496"
}</msg>
<status status="PASS" starttime="20250214 14:47:01.019" endtime="20250214 14:47:01.508"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:01.508" endtime="20250214 14:47:01.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:01.508" endtime="20250214 14:47:01.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:01.511" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-9399705926/multipartKey",
    "UploadId": "a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:01.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:01.516" level="INFO">${output} = a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496</msg>
<status status="PASS" starttime="20250214 14:47:01.509" endtime="20250214 14:47:01.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:01.517" level="INFO">a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496</msg>
<status status="PASS" starttime="20250214 14:47:01.517" endtime="20250214 14:47:01.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:01.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:01.517" endtime="20250214 14:47:01.518"/>
</kw>
<msg timestamp="20250214 14:47:01.518" level="INFO">${upload_id} = a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496</msg>
<status status="PASS" starttime="20250214 14:47:01.509" endtime="20250214 14:47:01.518"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:01.518" endtime="20250214 14:47:01.518"/>
</return>
<status status="PASS" starttime="20250214 14:47:01.508" endtime="20250214 14:47:01.518"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:01.518" endtime="20250214 14:47:01.518"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:01.518" endtime="20250214 14:47:01.518"/>
</branch>
<status status="PASS" starttime="20250214 14:47:01.508" endtime="20250214 14:47:01.518"/>
</if>
<msg timestamp="20250214 14:47:01.518" level="INFO">${uploadID} = a1226339-daa8-4c73-8d84-e7f60ae0c0f4-114002783203688496</msg>
<status status="PASS" starttime="20250214 14:47:01.018" endtime="20250214 14:47:01.518"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>"no-such-upload-id"</arg>
<arg>1</arg>
<arg>/tmp/10kb</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:01.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-9399705926/multipartKey --part-number 1 --body /tmp/10kb --upload-id "no-such-upload-id" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:02.013" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:02.013" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:47:01.520" endtime="20250214 14:47:02.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:02.014" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250214 14:47:02.013" endtime="20250214 14:47:02.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:02.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:02.014" endtime="20250214 14:47:02.014"/>
</kw>
<msg timestamp="20250214 14:47:02.014" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:47:01.519" endtime="20250214 14:47:02.014"/>
</kw>
<msg timestamp="20250214 14:47:02.015" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:47:01.519" endtime="20250214 14:47:02.015"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.015"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250214 14:47:02.016" endtime="20250214 14:47:02.016"/>
</return>
<status status="PASS" starttime="20250214 14:47:02.016" endtime="20250214 14:47:02.016"/>
</branch>
<status status="PASS" starttime="20250214 14:47:02.015" endtime="20250214 14:47:02.016"/>
</if>
<msg timestamp="20250214 14:47:02.016" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250214 14:47:01.519" endtime="20250214 14:47:02.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:02.016" endtime="20250214 14:47:02.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:01.016" endtime="20250214 14:47:02.016"/>
</test>
<test id="s1-s1-s8-t11" name="Test list parts" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:02.018" level="INFO">${randStr} = 2785194933</msg>
<status status="PASS" starttime="20250214 14:47:02.018" endtime="20250214 14:47:02.018"/>
</kw>
<msg timestamp="20250214 14:47:02.018" level="INFO">${random} = ozone-test-2785194933</msg>
<status status="PASS" starttime="20250214 14:47:02.017" endtime="20250214 14:47:02.018"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:02.019" level="INFO">${PREFIX} = ozone-test-2785194933</msg>
<status status="PASS" starttime="20250214 14:47:02.018" endtime="20250214 14:47:02.019"/>
</kw>
<status status="PASS" starttime="20250214 14:47:02.017" endtime="20250214 14:47:02.019"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:02.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2785194933/multipartKey5  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:02.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:02.503" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2785194933/multipartKey5",
    "UploadId": "ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.020" endtime="20250214 14:47:02.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:02.504" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2785194933/multipartKey5",
    "UploadId": "ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.503" endtime="20250214 14:47:02.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:02.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:02.504" endtime="20250214 14:47:02.504"/>
</kw>
<msg timestamp="20250214 14:47:02.504" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2785194933/multipartKey5",
    "UploadId": "ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.020" endtime="20250214 14:47:02.504"/>
</kw>
<msg timestamp="20250214 14:47:02.505" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2785194933/multipartKey5",
    "UploadId": "ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.020" endtime="20250214 14:47:02.505"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:02.505" endtime="20250214 14:47:02.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:02.505" endtime="20250214 14:47:02.506"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:02.508" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-2785194933/multipartKey5",
    "UploadId": "ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:02.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:02.513" level="INFO">${output} = ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322</msg>
<status status="PASS" starttime="20250214 14:47:02.506" endtime="20250214 14:47:02.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:02.514" level="INFO">ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322</msg>
<status status="PASS" starttime="20250214 14:47:02.513" endtime="20250214 14:47:02.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:02.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:02.514" endtime="20250214 14:47:02.514"/>
</kw>
<msg timestamp="20250214 14:47:02.515" level="INFO">${upload_id} = ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322</msg>
<status status="PASS" starttime="20250214 14:47:02.506" endtime="20250214 14:47:02.515"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:02.515" endtime="20250214 14:47:02.515"/>
</return>
<status status="PASS" starttime="20250214 14:47:02.505" endtime="20250214 14:47:02.515"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:02.515" endtime="20250214 14:47:02.515"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:02.515" endtime="20250214 14:47:02.515"/>
</branch>
<status status="PASS" starttime="20250214 14:47:02.505" endtime="20250214 14:47:02.515"/>
</if>
<msg timestamp="20250214 14:47:02.515" level="INFO">${uploadID} = ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322</msg>
<status status="PASS" starttime="20250214 14:47:02.019" endtime="20250214 14:47:02.515"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:02.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2785194933/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.225" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.517" endtime="20250214 14:47:03.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.226" level="INFO">{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:47:03.226" endtime="20250214 14:47:03.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.226" endtime="20250214 14:47:03.227"/>
</kw>
<msg timestamp="20250214 14:47:03.227" level="INFO">${output} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.516" endtime="20250214 14:47:03.227"/>
</kw>
<msg timestamp="20250214 14:47:03.227" level="INFO">${result} = {
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}</msg>
<status status="PASS" starttime="20250214 14:47:02.516" endtime="20250214 14:47:03.227"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:03.227" endtime="20250214 14:47:03.228"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.232" level="INFO">Running command 'echo '{
    "ETag": "9a46e413ef3ac309963875c3b65791d0"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.237" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.230" endtime="20250214 14:47:03.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.238" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.238" endtime="20250214 14:47:03.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.239" endtime="20250214 14:47:03.239"/>
</kw>
<status status="PASS" starttime="20250214 14:47:03.229" endtime="20250214 14:47:03.239"/>
</kw>
<msg timestamp="20250214 14:47:03.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:03.229" endtime="20250214 14:47:03.239"/>
</kw>
<msg timestamp="20250214 14:47:03.240" level="INFO">${etag} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.228" endtime="20250214 14:47:03.240"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.243" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.257" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.241" endtime="20250214 14:47:03.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.258" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.257" endtime="20250214 14:47:03.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.258" endtime="20250214 14:47:03.258"/>
</kw>
<status status="PASS" starttime="20250214 14:47:03.240" endtime="20250214 14:47:03.258"/>
</kw>
<msg timestamp="20250214 14:47:03.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:03.240" endtime="20250214 14:47:03.258"/>
</kw>
<msg timestamp="20250214 14:47:03.259" level="INFO">${md5sum} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:03.240" endtime="20250214 14:47:03.259"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:47:03.259" endtime="20250214 14:47:03.259"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:47:03.259" endtime="20250214 14:47:03.259"/>
</return>
<status status="PASS" starttime="20250214 14:47:03.227" endtime="20250214 14:47:03.259"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:03.259" endtime="20250214 14:47:03.259"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:03.259" endtime="20250214 14:47:03.259"/>
</branch>
<status status="PASS" starttime="20250214 14:47:03.227" endtime="20250214 14:47:03.259"/>
</if>
<msg timestamp="20250214 14:47:03.260" level="INFO">${eTag1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:02.515" endtime="20250214 14:47:03.260"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.263" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2785194933/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.808" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:47:03.261" endtime="20250214 14:47:03.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.809" level="INFO">{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:47:03.809" endtime="20250214 14:47:03.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.809" endtime="20250214 14:47:03.810"/>
</kw>
<msg timestamp="20250214 14:47:03.810" level="INFO">${output} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:47:03.261" endtime="20250214 14:47:03.810"/>
</kw>
<msg timestamp="20250214 14:47:03.810" level="INFO">${result} = {
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}</msg>
<status status="PASS" starttime="20250214 14:47:03.260" endtime="20250214 14:47:03.810"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:03.811" endtime="20250214 14:47:03.811"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.814" level="INFO">Running command 'echo '{
    "ETag": "933af24d95637a3502e60ff5d73a0030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.820" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.812" endtime="20250214 14:47:03.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.820" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.820" endtime="20250214 14:47:03.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.821" endtime="20250214 14:47:03.821"/>
</kw>
<status status="PASS" starttime="20250214 14:47:03.812" endtime="20250214 14:47:03.821"/>
</kw>
<msg timestamp="20250214 14:47:03.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:03.811" endtime="20250214 14:47:03.821"/>
</kw>
<msg timestamp="20250214 14:47:03.821" level="INFO">${etag} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.811" endtime="20250214 14:47:03.821"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.825" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:03.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:03.830" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.823" endtime="20250214 14:47:03.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:03.831" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.830" endtime="20250214 14:47:03.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:03.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:03.831" endtime="20250214 14:47:03.831"/>
</kw>
<status status="PASS" starttime="20250214 14:47:03.822" endtime="20250214 14:47:03.832"/>
</kw>
<msg timestamp="20250214 14:47:03.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:03.822" endtime="20250214 14:47:03.832"/>
</kw>
<msg timestamp="20250214 14:47:03.832" level="INFO">${md5sum} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.821" endtime="20250214 14:47:03.832"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:47:03.832" endtime="20250214 14:47:03.832"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:47:03.832" endtime="20250214 14:47:03.832"/>
</return>
<status status="PASS" starttime="20250214 14:47:03.810" endtime="20250214 14:47:03.832"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:03.833" endtime="20250214 14:47:03.833"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:03.833" endtime="20250214 14:47:03.833"/>
</branch>
<status status="PASS" starttime="20250214 14:47:03.810" endtime="20250214 14:47:03.833"/>
</if>
<msg timestamp="20250214 14:47:03.833" level="INFO">${eTag2} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:03.260" endtime="20250214 14:47:03.833"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:03.836" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-2785194933/multipartKey5 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.353" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:03.834" endtime="20250214 14:47:04.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.354" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250214 14:47:04.353" endtime="20250214 14:47:04.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.354" endtime="20250214 14:47:04.355"/>
</kw>
<status status="PASS" starttime="20250214 14:47:03.834" endtime="20250214 14:47:04.355"/>
</kw>
<msg timestamp="20250214 14:47:04.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:03.834" endtime="20250214 14:47:04.355"/>
</kw>
<msg timestamp="20250214 14:47:04.356" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:03.833" endtime="20250214 14:47:04.356"/>
</kw>
<msg timestamp="20250214 14:47:04.356" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:03.833" endtime="20250214 14:47:04.356"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.360" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.365" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.357" endtime="20250214 14:47:04.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.366" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.366" endtime="20250214 14:47:04.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.366" endtime="20250214 14:47:04.367"/>
</kw>
<msg timestamp="20250214 14:47:04.367" level="INFO">${part1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.356" endtime="20250214 14:47:04.367"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.372" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.378" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:04.368" endtime="20250214 14:47:04.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.379" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:04.378" endtime="20250214 14:47:04.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.379" endtime="20250214 14:47:04.379"/>
</kw>
<msg timestamp="20250214 14:47:04.380" level="INFO">${part2} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:04.367" endtime="20250214 14:47:04.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:04.380" endtime="20250214 14:47:04.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:04.380" endtime="20250214 14:47:04.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:04.381" endtime="20250214 14:47:04.381"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-2785194933/multipartKey5 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.863" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.383" endtime="20250214 14:47:04.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.864" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20250214 14:47:04.863" endtime="20250214 14:47:04.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.864" endtime="20250214 14:47:04.864"/>
</kw>
<status status="PASS" starttime="20250214 14:47:04.382" endtime="20250214 14:47:04.865"/>
</kw>
<msg timestamp="20250214 14:47:04.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:04.382" endtime="20250214 14:47:04.865"/>
</kw>
<msg timestamp="20250214 14:47:04.865" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.382" endtime="20250214 14:47:04.865"/>
</kw>
<msg timestamp="20250214 14:47:04.865" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.381" endtime="20250214 14:47:04.865"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.868" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.873" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.866" endtime="20250214 14:47:04.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.874" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.873" endtime="20250214 14:47:04.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.874" endtime="20250214 14:47:04.874"/>
</kw>
<msg timestamp="20250214 14:47:04.874" level="INFO">${part1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:04.865" endtime="20250214 14:47:04.874"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.877" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-02-14T14:47:03.157Z",
            "ETag": "9a46e413ef3ac309963875c3b65791d0",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:04.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:04.882" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:47:04.875" endtime="20250214 14:47:04.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:04.882" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:47:04.882" endtime="20250214 14:47:04.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:04.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:04.882" endtime="20250214 14:47:04.883"/>
</kw>
<msg timestamp="20250214 14:47:04.883" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250214 14:47:04.874" endtime="20250214 14:47:04.883"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:04.883" endtime="20250214 14:47:04.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:04.883" endtime="20250214 14:47:04.884"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:04.887" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-2785194933/multipartKey5 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:05.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:05.366" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.885" endtime="20250214 14:47:05.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:05.367" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250214 14:47:05.367" endtime="20250214 14:47:05.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:05.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:05.367" endtime="20250214 14:47:05.368"/>
</kw>
<status status="PASS" starttime="20250214 14:47:04.885" endtime="20250214 14:47:05.368"/>
</kw>
<msg timestamp="20250214 14:47:05.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:04.885" endtime="20250214 14:47:05.368"/>
</kw>
<msg timestamp="20250214 14:47:05.368" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.884" endtime="20250214 14:47:05.368"/>
</kw>
<msg timestamp="20250214 14:47:05.368" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250214 14:47:04.884" endtime="20250214 14:47:05.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:05.371" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-02-14T14:47:03.743Z",
            "ETag": "933af24d95637a3502e60ff5d73a0030",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:05.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:05.376" level="INFO">${output} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:05.369" endtime="20250214 14:47:05.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:05.377" level="INFO">933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:05.376" endtime="20250214 14:47:05.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:05.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:05.377" endtime="20250214 14:47:05.377"/>
</kw>
<msg timestamp="20250214 14:47:05.377" level="INFO">${part2} = 933af24d95637a3502e60ff5d73a0030</msg>
<status status="PASS" starttime="20250214 14:47:05.368" endtime="20250214 14:47:05.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:05.378" endtime="20250214 14:47:05.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:05.378" endtime="20250214 14:47:05.378"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:05.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-2785194933/multipartKey5 --upload-id ee2a0a4f-9f29-4dc8-b3a5-7630f1901344-114002783269814322 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:05.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:05.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:05.379" endtime="20250214 14:47:05.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:05.856" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:05.855" endtime="20250214 14:47:05.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:05.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:05.856" endtime="20250214 14:47:05.856"/>
</kw>
<msg timestamp="20250214 14:47:05.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:05.379" endtime="20250214 14:47:05.856"/>
</kw>
<msg timestamp="20250214 14:47:05.856" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:05.379" endtime="20250214 14:47:05.856"/>
</kw>
<msg timestamp="20250214 14:47:05.857" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250214 14:47:05.378" endtime="20250214 14:47:05.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:02.017" endtime="20250214 14:47:05.857"/>
</test>
<test id="s1-s1-s8-t12" name="Test Multipart Upload with the simplified aws s3 cp API" line="229">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:05.858" level="INFO">${randStr} = 1656799063</msg>
<status status="PASS" starttime="20250214 14:47:05.858" endtime="20250214 14:47:05.858"/>
</kw>
<msg timestamp="20250214 14:47:05.859" level="INFO">${random} = ozone-test-1656799063</msg>
<status status="PASS" starttime="20250214 14:47:05.858" endtime="20250214 14:47:05.859"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:05.859" level="INFO">${PREFIX} = ozone-test-1656799063</msg>
<status status="PASS" starttime="20250214 14:47:05.859" endtime="20250214 14:47:05.859"/>
</kw>
<status status="PASS" starttime="20250214 14:47:05.858" endtime="20250214 14:47:05.859"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:05.862" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:06.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:06.907" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:47:05.860" endtime="20250214 14:47:06.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:06.908" level="INFO">Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (21.3 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (29.8 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (31.7 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (34.5 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (36.7 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (41.0 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (43.8 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (46.3 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (48.0 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (50.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (52.2 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (54.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (58.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (60.0 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (61.4 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (63.5 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (64.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (66.3 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (68.9 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (70.8 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (72.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (73.3 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (75.4 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (77.5 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (78.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (80.6 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (82.6 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (84.3 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (85.5 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (86.3 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (88.2 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (89.7 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (91.2 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (92.8 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (94.5 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (96.2 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (97.2 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (98.3 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (98.9 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (101.7 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (103.0 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (104.6 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (105.8 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (104.0 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (105.4 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (106.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (106.3 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (107.8 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (108.8 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (110.4 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (111.3 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (112.2 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (113.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (114.2 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (114.6 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (115.4 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (115.8 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (117.0 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (118.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (118.2 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (119.3 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (120.4 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (120.7 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (122.1 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (123.0 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (123.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (124.0 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (125.3 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (126.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (121.4 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (122.3 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (123.1 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (123.4 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (124.2 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (125.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://erasure/mpyawscli                  </msg>
<status status="PASS" starttime="20250214 14:47:06.907" endtime="20250214 14:47:06.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:06.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:06.908" endtime="20250214 14:47:06.908"/>
</kw>
<status status="PASS" starttime="20250214 14:47:05.860" endtime="20250214 14:47:06.908"/>
</kw>
<msg timestamp="20250214 14:47:06.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:05.860" endtime="20250214 14:47:06.909"/>
</kw>
<msg timestamp="20250214 14:47:06.909" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:47:05.859" endtime="20250214 14:47:06.909"/>
</kw>
<status status="PASS" starttime="20250214 14:47:05.859" endtime="20250214 14:47:06.909"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:06.912" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://erasure/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:07.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:07.666" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 14:47:06.910" endtime="20250214 14:47:07.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:07.668" level="INFO">Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (15.0 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (16.6 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (22.9 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (30.2 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (31.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (39.0 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (40.4 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (41.9 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (43.4 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (46.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (47.1 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (48.2 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (49.6 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (51.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (52.4 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (53.5 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (54.8 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (57.5 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (58.6 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (60.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (63.0 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (64.3 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (65.4 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (66.6 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (67.9 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (57.2 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (59.4 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (59.6 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (60.4 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (61.6 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (61.0 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (61.6 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (62.4 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (63.4 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (66.7 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (67.4 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (68.3 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (69.3 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (70.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (71.0 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (71.9 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (72.3 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (73.1 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (73.1 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (73.8 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (74.5 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (75.3 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (76.1 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (76.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (77.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (78.5 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (79.3 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (79.9 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (80.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (81.7 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (82.6 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (83.2 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (84.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (85.0 MiB/s) with 1 file(s) remaining
download: s3://erasure/mpyawscli to ../../tmp/22mb.result        </msg>
<status status="PASS" starttime="20250214 14:47:07.667" endtime="20250214 14:47:07.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:07.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:07.668" endtime="20250214 14:47:07.668"/>
</kw>
<status status="PASS" starttime="20250214 14:47:06.910" endtime="20250214 14:47:07.669"/>
</kw>
<msg timestamp="20250214 14:47:07.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:06.910" endtime="20250214 14:47:07.669"/>
</kw>
<msg timestamp="20250214 14:47:07.669" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250214 14:47:06.909" endtime="20250214 14:47:07.669"/>
</kw>
<status status="PASS" starttime="20250214 14:47:06.909" endtime="20250214 14:47:07.669"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:07.674" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:08.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:08.172" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:47:07.671" endtime="20250214 14:47:08.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:08.173" level="INFO">delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:47:08.172" endtime="20250214 14:47:08.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:08.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:08.173" endtime="20250214 14:47:08.174"/>
</kw>
<status status="PASS" starttime="20250214 14:47:07.670" endtime="20250214 14:47:08.174"/>
</kw>
<msg timestamp="20250214 14:47:08.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:07.670" endtime="20250214 14:47:08.174"/>
</kw>
<msg timestamp="20250214 14:47:08.174" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20250214 14:47:07.670" endtime="20250214 14:47:08.174"/>
</kw>
<status status="PASS" starttime="20250214 14:47:07.669" endtime="20250214 14:47:08.174"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:08.178" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:08.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:08.222" level="INFO">${output} = f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.175" endtime="20250214 14:47:08.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:08.223" level="INFO">f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.223" endtime="20250214 14:47:08.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:08.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:08.224" endtime="20250214 14:47:08.224"/>
</kw>
<status status="PASS" starttime="20250214 14:47:08.175" endtime="20250214 14:47:08.224"/>
</kw>
<msg timestamp="20250214 14:47:08.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:08.175" endtime="20250214 14:47:08.224"/>
</kw>
<msg timestamp="20250214 14:47:08.224" level="INFO">${checksumbefore} = f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.175" endtime="20250214 14:47:08.225"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:08.228" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:08.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:08.272" level="INFO">${output} = f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.226" endtime="20250214 14:47:08.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:08.273" level="INFO">f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.272" endtime="20250214 14:47:08.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:08.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:08.273" endtime="20250214 14:47:08.273"/>
</kw>
<status status="PASS" starttime="20250214 14:47:08.225" endtime="20250214 14:47:08.273"/>
</kw>
<msg timestamp="20250214 14:47:08.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:08.225" endtime="20250214 14:47:08.274"/>
</kw>
<msg timestamp="20250214 14:47:08.274" level="INFO">${checksumafter} = f7363a5fb3b10481b3ee830bbbcb0260</msg>
<status status="PASS" starttime="20250214 14:47:08.225" endtime="20250214 14:47:08.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:08.274" endtime="20250214 14:47:08.274"/>
</kw>
<status status="PASS" starttime="20250214 14:47:08.174" endtime="20250214 14:47:08.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:05.857" endtime="20250214 14:47:08.274"/>
</test>
<test id="s1-s1-s8-t13" name="Test Multipart Upload Put With Copy" line="235">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:08.276" level="INFO">${randStr} = 7022296615</msg>
<status status="PASS" starttime="20250214 14:47:08.276" endtime="20250214 14:47:08.276"/>
</kw>
<msg timestamp="20250214 14:47:08.277" level="INFO">${random} = ozone-test-7022296615</msg>
<status status="PASS" starttime="20250214 14:47:08.276" endtime="20250214 14:47:08.277"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:08.277" level="INFO">${PREFIX} = ozone-test-7022296615</msg>
<status status="PASS" starttime="20250214 14:47:08.277" endtime="20250214 14:47:08.277"/>
</kw>
<status status="PASS" starttime="20250214 14:47:08.275" endtime="20250214 14:47:08.277"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:08.281" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7022296615/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:08.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:08.908" level="INFO">${output} = {
    "ETag": "\"9a46e413ef3ac309963875c3b65791d0\""
}</msg>
<status status="PASS" starttime="20250214 14:47:08.278" endtime="20250214 14:47:08.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:08.909" level="INFO">{
    "ETag": "\"9a46e413ef3ac309963875c3b65791d0\""
}</msg>
<status status="PASS" starttime="20250214 14:47:08.908" endtime="20250214 14:47:08.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:08.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:08.909" endtime="20250214 14:47:08.909"/>
</kw>
<status status="PASS" starttime="20250214 14:47:08.278" endtime="20250214 14:47:08.909"/>
</kw>
<msg timestamp="20250214 14:47:08.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:08.278" endtime="20250214 14:47:08.909"/>
</kw>
<msg timestamp="20250214 14:47:08.910" level="INFO">${output} = {
    "ETag": "\"9a46e413ef3ac309963875c3b65791d0\""
}</msg>
<status status="PASS" starttime="20250214 14:47:08.277" endtime="20250214 14:47:08.910"/>
</kw>
<msg timestamp="20250214 14:47:08.910" level="INFO">${result} = {
    "ETag": "\"9a46e413ef3ac309963875c3b65791d0\""
}</msg>
<status status="PASS" starttime="20250214 14:47:08.277" endtime="20250214 14:47:08.910"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:08.914" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7022296615/copytest/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:09.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:09.404" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "UploadId": "4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834"
}</msg>
<status status="PASS" starttime="20250214 14:47:08.912" endtime="20250214 14:47:09.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:09.405" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "UploadId": "4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834"
}</msg>
<status status="PASS" starttime="20250214 14:47:09.404" endtime="20250214 14:47:09.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:09.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:09.405" endtime="20250214 14:47:09.405"/>
</kw>
<msg timestamp="20250214 14:47:09.405" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "UploadId": "4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834"
}</msg>
<status status="PASS" starttime="20250214 14:47:08.911" endtime="20250214 14:47:09.405"/>
</kw>
<msg timestamp="20250214 14:47:09.406" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "UploadId": "4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834"
}</msg>
<status status="PASS" starttime="20250214 14:47:08.911" endtime="20250214 14:47:09.406"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:09.406" endtime="20250214 14:47:09.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:09.406" endtime="20250214 14:47:09.406"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:09.409" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "UploadId": "4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:09.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:09.414" level="INFO">${output} = 4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834</msg>
<status status="PASS" starttime="20250214 14:47:09.407" endtime="20250214 14:47:09.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:09.415" level="INFO">4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834</msg>
<status status="PASS" starttime="20250214 14:47:09.415" endtime="20250214 14:47:09.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:09.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:09.415" endtime="20250214 14:47:09.415"/>
</kw>
<msg timestamp="20250214 14:47:09.416" level="INFO">${upload_id} = 4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834</msg>
<status status="PASS" starttime="20250214 14:47:09.407" endtime="20250214 14:47:09.416"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:09.416" endtime="20250214 14:47:09.416"/>
</return>
<status status="PASS" starttime="20250214 14:47:09.406" endtime="20250214 14:47:09.416"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:09.416" endtime="20250214 14:47:09.416"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:09.416" endtime="20250214 14:47:09.416"/>
</branch>
<status status="PASS" starttime="20250214 14:47:09.406" endtime="20250214 14:47:09.416"/>
</if>
<msg timestamp="20250214 14:47:09.416" level="INFO">${uploadID} = 4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834</msg>
<status status="PASS" starttime="20250214 14:47:08.910" endtime="20250214 14:47:09.416"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:09.419" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7022296615/copytest/destination --upload-id 4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834 --part-number 1 --copy-source erasure/ozone-test-7022296615/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:10.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:10.090" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "9a46e413ef3ac309963875c3b65791d0",
        "LastModified": "2025-02-14T14:47:10.028Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:09.417" endtime="20250214 14:47:10.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:10.092" level="INFO">{
    "CopyPartResult": {
        "ETag": "9a46e413ef3ac309963875c3b65791d0",
        "LastModified": "2025-02-14T14:47:10.028Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:10.091" endtime="20250214 14:47:10.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:10.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:10.092" endtime="20250214 14:47:10.092"/>
</kw>
<status status="PASS" starttime="20250214 14:47:09.417" endtime="20250214 14:47:10.092"/>
</kw>
<msg timestamp="20250214 14:47:10.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:09.417" endtime="20250214 14:47:10.093"/>
</kw>
<msg timestamp="20250214 14:47:10.093" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "9a46e413ef3ac309963875c3b65791d0",
        "LastModified": "2025-02-14T14:47:10.028Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:09.417" endtime="20250214 14:47:10.093"/>
</kw>
<msg timestamp="20250214 14:47:10.093" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "9a46e413ef3ac309963875c3b65791d0",
        "LastModified": "2025-02-14T14:47:10.028Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:09.416" endtime="20250214 14:47:10.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:10.093" endtime="20250214 14:47:10.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:10.094" endtime="20250214 14:47:10.094"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:10.097" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "9a46e413ef3ac309963875c3b65791d0",
        "LastModified": "2025-02-14T14:47:10.028Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:10.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:10.103" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:10.094" endtime="20250214 14:47:10.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:10.104" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:10.103" endtime="20250214 14:47:10.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:10.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:10.104" endtime="20250214 14:47:10.104"/>
</kw>
<msg timestamp="20250214 14:47:10.104" level="INFO">${eTag1} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:10.094" endtime="20250214 14:47:10.104"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:10.109" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-7022296615/copytest/destination --upload-id 4062e772-017e-41e7-9a74-d5f8818ff911-114002783721291834 --multipart-upload 'Parts=[{ETag=9a46e413ef3ac309963875c3b65791d0,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:10.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:10.604" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\""
}</msg>
<status status="PASS" starttime="20250214 14:47:10.106" endtime="20250214 14:47:10.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:10.605" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\""
}</msg>
<status status="PASS" starttime="20250214 14:47:10.605" endtime="20250214 14:47:10.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:10.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:10.605" endtime="20250214 14:47:10.606"/>
</kw>
<msg timestamp="20250214 14:47:10.606" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\""
}</msg>
<status status="PASS" starttime="20250214 14:47:10.106" endtime="20250214 14:47:10.606"/>
</kw>
<msg timestamp="20250214 14:47:10.606" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\""
}</msg>
<status status="PASS" starttime="20250214 14:47:10.105" endtime="20250214 14:47:10.606"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:10.606" endtime="20250214 14:47:10.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:10.607" endtime="20250214 14:47:10.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:10.607" endtime="20250214 14:47:10.607"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:10.610" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7022296615/copytest/destination",
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:10.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:10.615" level="INFO">${output} = "38103cbef157d41abc9de50bfd0d6ef7-1"</msg>
<status status="PASS" starttime="20250214 14:47:10.608" endtime="20250214 14:47:10.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:10.616" level="INFO">"38103cbef157d41abc9de50bfd0d6ef7-1"</msg>
<status status="PASS" starttime="20250214 14:47:10.616" endtime="20250214 14:47:10.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:10.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:10.616" endtime="20250214 14:47:10.617"/>
</kw>
<status status="PASS" starttime="20250214 14:47:10.608" endtime="20250214 14:47:10.617"/>
</kw>
<msg timestamp="20250214 14:47:10.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:10.608" endtime="20250214 14:47:10.617"/>
</kw>
<msg timestamp="20250214 14:47:10.617" level="INFO">${etag} = "38103cbef157d41abc9de50bfd0d6ef7-1"</msg>
<status status="PASS" starttime="20250214 14:47:10.607" endtime="20250214 14:47:10.617"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:47:10.617" endtime="20250214 14:47:10.617"/>
</return>
<status status="PASS" starttime="20250214 14:47:10.606" endtime="20250214 14:47:10.617"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:10.617" endtime="20250214 14:47:10.617"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:10.617" endtime="20250214 14:47:10.617"/>
</branch>
<status status="PASS" starttime="20250214 14:47:10.606" endtime="20250214 14:47:10.618"/>
</if>
<status status="PASS" starttime="20250214 14:47:10.104" endtime="20250214 14:47:10.618"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:10.621" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7022296615/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:11.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:11.212" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:10 GMT",
    "ContentLength": 5243904,
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:47:10.619" endtime="20250214 14:47:11.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:11.213" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:10 GMT",
    "ContentLength": 5243904,
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:11 GMT",
    "Metadata": {},
    "PartsCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:11 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:11.212" endtime="20250214 14:47:11.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:11.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:11.213" endtime="20250214 14:47:11.213"/>
</kw>
<status status="PASS" starttime="20250214 14:47:10.619" endtime="20250214 14:47:11.214"/>
</kw>
<msg timestamp="20250214 14:47:11.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:10.618" endtime="20250214 14:47:11.214"/>
</kw>
<msg timestamp="20250214 14:47:11.214" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:10 GMT",
    "ContentLength": 5243904,
    "ETag": "\"38103cbef157d41abc9de50bfd0d6ef7-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:47:10.618" endtime="20250214 14:47:11.214"/>
</kw>
<status status="PASS" starttime="20250214 14:47:10.618" endtime="20250214 14:47:11.214"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:11.218" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:11.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:11.231" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.215" endtime="20250214 14:47:11.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:11.232" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.231" endtime="20250214 14:47:11.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:11.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:11.232" endtime="20250214 14:47:11.233"/>
</kw>
<status status="PASS" starttime="20250214 14:47:11.215" endtime="20250214 14:47:11.233"/>
</kw>
<msg timestamp="20250214 14:47:11.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:11.215" endtime="20250214 14:47:11.233"/>
</kw>
<msg timestamp="20250214 14:47:11.233" level="INFO">${checksumbefore} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.215" endtime="20250214 14:47:11.233"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:11.236" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:11.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:11.249" level="INFO">${output} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.234" endtime="20250214 14:47:11.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:11.250" level="INFO">9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.249" endtime="20250214 14:47:11.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:11.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:11.250" endtime="20250214 14:47:11.250"/>
</kw>
<status status="PASS" starttime="20250214 14:47:11.234" endtime="20250214 14:47:11.250"/>
</kw>
<msg timestamp="20250214 14:47:11.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:11.233" endtime="20250214 14:47:11.251"/>
</kw>
<msg timestamp="20250214 14:47:11.251" level="INFO">${checksumafter} = 9a46e413ef3ac309963875c3b65791d0</msg>
<status status="PASS" starttime="20250214 14:47:11.233" endtime="20250214 14:47:11.251"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:11.251" endtime="20250214 14:47:11.251"/>
</kw>
<status status="PASS" starttime="20250214 14:47:11.214" endtime="20250214 14:47:11.251"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:08.275" endtime="20250214 14:47:11.251"/>
</test>
<test id="s1-s1-s8-t14" name="Test Multipart Upload Put With Copy and range" line="251">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:11.253" level="INFO">${randStr} = 5295093684</msg>
<status status="PASS" starttime="20250214 14:47:11.253" endtime="20250214 14:47:11.253"/>
</kw>
<msg timestamp="20250214 14:47:11.253" level="INFO">${random} = ozone-test-5295093684</msg>
<status status="PASS" starttime="20250214 14:47:11.253" endtime="20250214 14:47:11.253"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:11.254" level="INFO">${PREFIX} = ozone-test-5295093684</msg>
<status status="PASS" starttime="20250214 14:47:11.253" endtime="20250214 14:47:11.254"/>
</kw>
<status status="PASS" starttime="20250214 14:47:11.252" endtime="20250214 14:47:11.254"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:11.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-5295093684/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:12.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:12.070" level="INFO">${output} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:11.255" endtime="20250214 14:47:12.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:12.072" level="INFO">{
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:12.071" endtime="20250214 14:47:12.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:12.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:12.072" endtime="20250214 14:47:12.072"/>
</kw>
<status status="PASS" starttime="20250214 14:47:11.255" endtime="20250214 14:47:12.073"/>
</kw>
<msg timestamp="20250214 14:47:12.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:11.255" endtime="20250214 14:47:12.073"/>
</kw>
<msg timestamp="20250214 14:47:12.073" level="INFO">${output} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:11.254" endtime="20250214 14:47:12.073"/>
</kw>
<msg timestamp="20250214 14:47:12.073" level="INFO">${result} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:11.254" endtime="20250214 14:47:12.073"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:12.079" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5295093684/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:12.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:12.628" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "UploadId": "c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117"
}</msg>
<status status="PASS" starttime="20250214 14:47:12.076" endtime="20250214 14:47:12.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:12.629" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "UploadId": "c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117"
}</msg>
<status status="PASS" starttime="20250214 14:47:12.629" endtime="20250214 14:47:12.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:12.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:12.629" endtime="20250214 14:47:12.630"/>
</kw>
<msg timestamp="20250214 14:47:12.630" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "UploadId": "c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117"
}</msg>
<status status="PASS" starttime="20250214 14:47:12.075" endtime="20250214 14:47:12.630"/>
</kw>
<msg timestamp="20250214 14:47:12.630" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "UploadId": "c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117"
}</msg>
<status status="PASS" starttime="20250214 14:47:12.075" endtime="20250214 14:47:12.630"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:12.631" endtime="20250214 14:47:12.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:12.631" endtime="20250214 14:47:12.631"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:12.634" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "UploadId": "c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:12.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:12.639" level="INFO">${output} = c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117</msg>
<status status="PASS" starttime="20250214 14:47:12.632" endtime="20250214 14:47:12.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:12.640" level="INFO">c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117</msg>
<status status="PASS" starttime="20250214 14:47:12.639" endtime="20250214 14:47:12.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:12.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:12.640" endtime="20250214 14:47:12.640"/>
</kw>
<msg timestamp="20250214 14:47:12.640" level="INFO">${upload_id} = c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117</msg>
<status status="PASS" starttime="20250214 14:47:12.631" endtime="20250214 14:47:12.641"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:12.641" endtime="20250214 14:47:12.641"/>
</return>
<status status="PASS" starttime="20250214 14:47:12.630" endtime="20250214 14:47:12.641"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:12.641" endtime="20250214 14:47:12.641"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:12.641" endtime="20250214 14:47:12.641"/>
</branch>
<status status="PASS" starttime="20250214 14:47:12.630" endtime="20250214 14:47:12.641"/>
</if>
<msg timestamp="20250214 14:47:12.641" level="INFO">${uploadID} = c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117</msg>
<status status="PASS" starttime="20250214 14:47:12.074" endtime="20250214 14:47:12.641"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:12.645" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-5295093684/copyrange/destination --upload-id c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117 --part-number 1 --copy-source erasure/ozone-test-5295093684/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:13.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:13.388" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.337Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:12.643" endtime="20250214 14:47:13.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:13.389" level="INFO">{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.337Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:13.388" endtime="20250214 14:47:13.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:13.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:13.389" endtime="20250214 14:47:13.389"/>
</kw>
<status status="PASS" starttime="20250214 14:47:12.642" endtime="20250214 14:47:13.389"/>
</kw>
<msg timestamp="20250214 14:47:13.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:12.642" endtime="20250214 14:47:13.389"/>
</kw>
<msg timestamp="20250214 14:47:13.390" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.337Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:12.642" endtime="20250214 14:47:13.390"/>
</kw>
<msg timestamp="20250214 14:47:13.390" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.337Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:12.641" endtime="20250214 14:47:13.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:13.390" endtime="20250214 14:47:13.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:13.390" endtime="20250214 14:47:13.390"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:13.393" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.337Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:13.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:13.398" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.391" endtime="20250214 14:47:13.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:13.399" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.398" endtime="20250214 14:47:13.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:13.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:13.399" endtime="20250214 14:47:13.399"/>
</kw>
<msg timestamp="20250214 14:47:13.399" level="INFO">${eTag1} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.391" endtime="20250214 14:47:13.400"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:13.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-5295093684/copyrange/destination --upload-id c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117 --part-number 2 --copy-source erasure/ozone-test-5295093684/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:13.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:13.933" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.870Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:13.401" endtime="20250214 14:47:13.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:13.934" level="INFO">{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.870Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:13.933" endtime="20250214 14:47:13.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:13.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:13.934" endtime="20250214 14:47:13.935"/>
</kw>
<status status="PASS" starttime="20250214 14:47:13.401" endtime="20250214 14:47:13.935"/>
</kw>
<msg timestamp="20250214 14:47:13.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:13.401" endtime="20250214 14:47:13.935"/>
</kw>
<msg timestamp="20250214 14:47:13.935" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.870Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:13.400" endtime="20250214 14:47:13.935"/>
</kw>
<msg timestamp="20250214 14:47:13.935" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.870Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:13.400" endtime="20250214 14:47:13.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:13.935" endtime="20250214 14:47:13.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:13.936" endtime="20250214 14:47:13.936"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:13.939" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:13.870Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:13.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:13.944" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.937" endtime="20250214 14:47:13.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:13.945" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.944" endtime="20250214 14:47:13.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:13.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:13.945" endtime="20250214 14:47:13.945"/>
</kw>
<msg timestamp="20250214 14:47:13.946" level="INFO">${eTag2} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:13.936" endtime="20250214 14:47:13.946"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:13.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-5295093684/copyrange/destination --upload-id c2183f60-b8a0-48db-bfe5-f95df6719394-114002783932973117 --multipart-upload 'Parts=[{ETag=26005c0d8d2d230fc85d6c523b29f8c9,PartNumber=1},{ETag=26005c0d8d2d230fc85d6c523b29f8c9,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:14.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:14.461" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:13.948" endtime="20250214 14:47:14.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:14.461" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:14.461" endtime="20250214 14:47:14.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:14.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:14.462" endtime="20250214 14:47:14.462"/>
</kw>
<msg timestamp="20250214 14:47:14.462" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:13.947" endtime="20250214 14:47:14.462"/>
</kw>
<msg timestamp="20250214 14:47:14.462" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:13.946" endtime="20250214 14:47:14.462"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:14.463" endtime="20250214 14:47:14.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:14.463" endtime="20250214 14:47:14.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:14.463" endtime="20250214 14:47:14.464"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:14.467" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5295093684/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:14.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:14.472" level="INFO">${output} = "f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:14.465" endtime="20250214 14:47:14.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:14.473" level="INFO">"f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:14.472" endtime="20250214 14:47:14.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:14.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:14.473" endtime="20250214 14:47:14.473"/>
</kw>
<status status="PASS" starttime="20250214 14:47:14.464" endtime="20250214 14:47:14.473"/>
</kw>
<msg timestamp="20250214 14:47:14.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:14.464" endtime="20250214 14:47:14.473"/>
</kw>
<msg timestamp="20250214 14:47:14.473" level="INFO">${etag} = "f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:14.464" endtime="20250214 14:47:14.473"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:47:14.474" endtime="20250214 14:47:14.474"/>
</return>
<status status="PASS" starttime="20250214 14:47:14.463" endtime="20250214 14:47:14.474"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:14.474" endtime="20250214 14:47:14.474"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:14.474" endtime="20250214 14:47:14.474"/>
</branch>
<status status="PASS" starttime="20250214 14:47:14.462" endtime="20250214 14:47:14.474"/>
</if>
<status status="PASS" starttime="20250214 14:47:13.946" endtime="20250214 14:47:14.474"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:14.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5295093684/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:15.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:15.093" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:14 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:47:14.475" endtime="20250214 14:47:15.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:15.094" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:14 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:14 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:14 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:15.094" endtime="20250214 14:47:15.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:15.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:15.094" endtime="20250214 14:47:15.095"/>
</kw>
<status status="PASS" starttime="20250214 14:47:14.475" endtime="20250214 14:47:15.095"/>
</kw>
<msg timestamp="20250214 14:47:15.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:14.475" endtime="20250214 14:47:15.095"/>
</kw>
<msg timestamp="20250214 14:47:15.095" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:14 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:47:14.474" endtime="20250214 14:47:15.095"/>
</kw>
<status status="PASS" starttime="20250214 14:47:14.474" endtime="20250214 14:47:15.095"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:15.099" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:15.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:15.121" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.097" endtime="20250214 14:47:15.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:15.122" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.122" endtime="20250214 14:47:15.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:15.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:15.123" endtime="20250214 14:47:15.123"/>
</kw>
<status status="PASS" starttime="20250214 14:47:15.096" endtime="20250214 14:47:15.123"/>
</kw>
<msg timestamp="20250214 14:47:15.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:15.096" endtime="20250214 14:47:15.123"/>
</kw>
<msg timestamp="20250214 14:47:15.123" level="INFO">${checksumbefore} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.096" endtime="20250214 14:47:15.123"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:15.127" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:15.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:15.149" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.124" endtime="20250214 14:47:15.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:15.150" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.149" endtime="20250214 14:47:15.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:15.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:15.150" endtime="20250214 14:47:15.150"/>
</kw>
<status status="PASS" starttime="20250214 14:47:15.124" endtime="20250214 14:47:15.150"/>
</kw>
<msg timestamp="20250214 14:47:15.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:15.124" endtime="20250214 14:47:15.150"/>
</kw>
<msg timestamp="20250214 14:47:15.151" level="INFO">${checksumafter} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:15.123" endtime="20250214 14:47:15.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:15.151" endtime="20250214 14:47:15.151"/>
</kw>
<status status="PASS" starttime="20250214 14:47:15.096" endtime="20250214 14:47:15.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:11.252" endtime="20250214 14:47:15.151"/>
</test>
<test id="s1-s1-s8-t15" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="273">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:15.153" level="INFO">${randStr} = 6273998064</msg>
<status status="PASS" starttime="20250214 14:47:15.153" endtime="20250214 14:47:15.153"/>
</kw>
<msg timestamp="20250214 14:47:15.153" level="INFO">${random} = ozone-test-6273998064</msg>
<status status="PASS" starttime="20250214 14:47:15.153" endtime="20250214 14:47:15.153"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:15.154" level="INFO">${PREFIX} = ozone-test-6273998064</msg>
<status status="PASS" starttime="20250214 14:47:15.153" endtime="20250214 14:47:15.154"/>
</kw>
<status status="PASS" starttime="20250214 14:47:15.152" endtime="20250214 14:47:15.154"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250214 14:47:15.154" level="INFO">${curDate} = 2025-02-14 14:47:15.154</msg>
<status status="PASS" starttime="20250214 14:47:15.154" endtime="20250214 14:47:15.154"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20250214 14:47:15.157" level="INFO">${beforeCreate} = 2025-02-13 14:47:15.154</msg>
<status status="PASS" starttime="20250214 14:47:15.154" endtime="20250214 14:47:15.157"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250214 14:47:15.157" level="INFO">${tomorrow} = 2025-02-15 14:47:15.154</msg>
<status status="PASS" starttime="20250214 14:47:15.157" endtime="20250214 14:47:15.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:15.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6273998064/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:15.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:15.898" level="INFO">${output} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:15.158" endtime="20250214 14:47:15.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:15.899" level="INFO">{
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:15.899" endtime="20250214 14:47:15.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:15.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:15.900" endtime="20250214 14:47:15.900"/>
</kw>
<status status="PASS" starttime="20250214 14:47:15.158" endtime="20250214 14:47:15.900"/>
</kw>
<msg timestamp="20250214 14:47:15.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:15.158" endtime="20250214 14:47:15.900"/>
</kw>
<msg timestamp="20250214 14:47:15.900" level="INFO">${output} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:15.158" endtime="20250214 14:47:15.900"/>
</kw>
<msg timestamp="20250214 14:47:15.900" level="INFO">${result} = {
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\""
}</msg>
<status status="PASS" starttime="20250214 14:47:15.157" endtime="20250214 14:47:15.901"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:15.905" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6273998064/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:16.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:16.392" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "UploadId": "1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161"
}</msg>
<status status="PASS" starttime="20250214 14:47:15.902" endtime="20250214 14:47:16.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:16.393" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "UploadId": "1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161"
}</msg>
<status status="PASS" starttime="20250214 14:47:16.392" endtime="20250214 14:47:16.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:16.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:16.393" endtime="20250214 14:47:16.393"/>
</kw>
<msg timestamp="20250214 14:47:16.393" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "UploadId": "1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161"
}</msg>
<status status="PASS" starttime="20250214 14:47:15.902" endtime="20250214 14:47:16.394"/>
</kw>
<msg timestamp="20250214 14:47:16.394" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "UploadId": "1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161"
}</msg>
<status status="PASS" starttime="20250214 14:47:15.902" endtime="20250214 14:47:16.394"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:16.394" endtime="20250214 14:47:16.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:16.394" endtime="20250214 14:47:16.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:16.398" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "UploadId": "1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:16.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:16.403" level="INFO">${output} = 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161</msg>
<status status="PASS" starttime="20250214 14:47:16.395" endtime="20250214 14:47:16.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:16.403" level="INFO">1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161</msg>
<status status="PASS" starttime="20250214 14:47:16.403" endtime="20250214 14:47:16.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:16.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:16.404" endtime="20250214 14:47:16.404"/>
</kw>
<msg timestamp="20250214 14:47:16.404" level="INFO">${upload_id} = 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161</msg>
<status status="PASS" starttime="20250214 14:47:16.395" endtime="20250214 14:47:16.404"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:16.404" endtime="20250214 14:47:16.404"/>
</return>
<status status="PASS" starttime="20250214 14:47:16.394" endtime="20250214 14:47:16.404"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:16.404" endtime="20250214 14:47:16.404"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:16.404" endtime="20250214 14:47:16.404"/>
</branch>
<status status="PASS" starttime="20250214 14:47:16.394" endtime="20250214 14:47:16.405"/>
</if>
<msg timestamp="20250214 14:47:16.405" level="INFO">${uploadID} = 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161</msg>
<status status="PASS" starttime="20250214 14:47:15.901" endtime="20250214 14:47:16.405"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:16.408" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-6273998064/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:16.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:16.919" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:47:16.406" endtime="20250214 14:47:16.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:16.920" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:16 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:16 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:16.919" endtime="20250214 14:47:16.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:16.920" endtime="20250214 14:47:16.920"/>
</kw>
<status status="PASS" starttime="20250214 14:47:16.406" endtime="20250214 14:47:16.920"/>
</kw>
<msg timestamp="20250214 14:47:16.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:16.406" endtime="20250214 14:47:16.920"/>
</kw>
<msg timestamp="20250214 14:47:16.921" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:47:16.405" endtime="20250214 14:47:16.921"/>
</kw>
<msg timestamp="20250214 14:47:16.921" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250214 14:47:16.405" endtime="20250214 14:47:16.921"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:16.924" level="INFO">Running command 'echo '{
    "LastModified": "Fri, 14 Feb 2025 14:47:15 GMT",
    "ContentLength": 10485760,
    "ETag": "\"26005c0d8d2d230fc85d6c523b29f8c9\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:16 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:16 GMT"
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:16.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:16.928" level="INFO">${output} = Fri, 14 Feb 2025 14:47:15 GMT</msg>
<status status="PASS" starttime="20250214 14:47:16.921" endtime="20250214 14:47:16.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:16.929" level="INFO">Fri, 14 Feb 2025 14:47:15 GMT</msg>
<status status="PASS" starttime="20250214 14:47:16.929" endtime="20250214 14:47:16.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:16.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:16.929" endtime="20250214 14:47:16.930"/>
</kw>
<msg timestamp="20250214 14:47:16.930" level="INFO">${lastModified} = Fri, 14 Feb 2025 14:47:15 GMT</msg>
<status status="PASS" starttime="20250214 14:47:16.921" endtime="20250214 14:47:16.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:16.930" endtime="20250214 14:47:16.930"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250214 14:47:16.933" level="INFO">${lmDate} = 2025-02-14 14:47:15.000</msg>
<status status="PASS" starttime="20250214 14:47:16.930" endtime="20250214 14:47:16.933"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250214 14:47:16.933" level="INFO">${afterCreate} = 2025-02-14 14:47:18.000</msg>
<status status="PASS" starttime="20250214 14:47:16.933" endtime="20250214 14:47:16.933"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250214 14:47:16.934" level="INFO">${latestDate} = 2025-02-14 14:47:16.934</msg>
<status status="PASS" starttime="20250214 14:47:16.934" endtime="20250214 14:47:16.934"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20250214 14:47:16.934" level="INFO">${sleepSeconds} = 1.066</msg>
<status status="PASS" starttime="20250214 14:47:16.934" endtime="20250214 14:47:16.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 14:47:18.001" level="INFO">Slept 1 second 66 milliseconds</msg>
<status status="PASS" starttime="20250214 14:47:16.935" endtime="20250214 14:47:18.001"/>
</kw>
<status status="PASS" starttime="20250214 14:47:16.934" endtime="20250214 14:47:18.001"/>
</kw>
<status status="PASS" starttime="20250214 14:47:16.933" endtime="20250214 14:47:18.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:18.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --part-number 1 --copy-source erasure/ozone-test-6273998064/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-14 14:47:18.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:18.619" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:18.620" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.003" endtime="20250214 14:47:18.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:18.620" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.620" endtime="20250214 14:47:18.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:18.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:18.621" endtime="20250214 14:47:18.621"/>
</kw>
<msg timestamp="20250214 14:47:18.621" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.002" endtime="20250214 14:47:18.621"/>
</kw>
<msg timestamp="20250214 14:47:18.621" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.002" endtime="20250214 14:47:18.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:18.621" endtime="20250214 14:47:18.622"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:18.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --part-number 2 --copy-source erasure/ozone-test-6273998064/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-13 14:47:15.154' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:19.127" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:19.127" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.623" endtime="20250214 14:47:19.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:19.128" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:19.128" endtime="20250214 14:47:19.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:19.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:19.128" endtime="20250214 14:47:19.129"/>
</kw>
<msg timestamp="20250214 14:47:19.129" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.622" endtime="20250214 14:47:19.129"/>
</kw>
<msg timestamp="20250214 14:47:19.129" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250214 14:47:18.622" endtime="20250214 14:47:19.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:19.129" endtime="20250214 14:47:19.129"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:19.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --part-number 1 --copy-source erasure/ozone-test-6273998064/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-13 14:47:15.154' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:20.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:20.013" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:19.920Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:19.131" endtime="20250214 14:47:20.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:20.014" level="INFO">{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:19.920Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.013" endtime="20250214 14:47:20.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:20.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:20.014" endtime="20250214 14:47:20.014"/>
</kw>
<msg timestamp="20250214 14:47:20.015" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:19.920Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:19.130" endtime="20250214 14:47:20.015"/>
</kw>
<msg timestamp="20250214 14:47:20.015" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:19.920Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:19.130" endtime="20250214 14:47:20.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:20.015" endtime="20250214 14:47:20.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:20.015" endtime="20250214 14:47:20.016"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:20.019" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:19.920Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:20.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:20.027" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.016" endtime="20250214 14:47:20.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:20.028" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.027" endtime="20250214 14:47:20.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:20.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:20.028" endtime="20250214 14:47:20.029"/>
</kw>
<msg timestamp="20250214 14:47:20.029" level="INFO">${eTag1} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.016" endtime="20250214 14:47:20.029"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:20.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --part-number 2 --copy-source erasure/ozone-test-6273998064/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-02-14 14:47:18.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:20.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:20.592" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:20.536Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.030" endtime="20250214 14:47:20.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:20.593" level="INFO">{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:20.536Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.592" endtime="20250214 14:47:20.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:20.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:20.593" endtime="20250214 14:47:20.593"/>
</kw>
<msg timestamp="20250214 14:47:20.593" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:20.536Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.030" endtime="20250214 14:47:20.593"/>
</kw>
<msg timestamp="20250214 14:47:20.593" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:20.536Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.029" endtime="20250214 14:47:20.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:20.594" endtime="20250214 14:47:20.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:20.594" endtime="20250214 14:47:20.594"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:20.597" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:20.536Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:20.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:20.602" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.595" endtime="20250214 14:47:20.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:20.603" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.602" endtime="20250214 14:47:20.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:20.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:20.603" endtime="20250214 14:47:20.603"/>
</kw>
<msg timestamp="20250214 14:47:20.603" level="INFO">${eTag2} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:20.594" endtime="20250214 14:47:20.603"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:20.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --part-number 1 --copy-source erasure/ozone-test-6273998064/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-02-15 14:47:15.154' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:21.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:21.428" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:21.348Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.604" endtime="20250214 14:47:21.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:21.429" level="INFO">{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:21.348Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:21.429" endtime="20250214 14:47:21.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:21.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:21.429" endtime="20250214 14:47:21.430"/>
</kw>
<msg timestamp="20250214 14:47:21.430" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:21.348Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.604" endtime="20250214 14:47:21.430"/>
</kw>
<msg timestamp="20250214 14:47:21.430" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:21.348Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:20.603" endtime="20250214 14:47:21.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:21.431" endtime="20250214 14:47:21.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:21.431" endtime="20250214 14:47:21.431"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:21.435" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "26005c0d8d2d230fc85d6c523b29f8c9",
        "LastModified": "2025-02-14T14:47:21.348Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:21.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:21.440" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:21.432" endtime="20250214 14:47:21.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:21.441" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:21.440" endtime="20250214 14:47:21.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:21.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:21.441" endtime="20250214 14:47:21.441"/>
</kw>
<msg timestamp="20250214 14:47:21.441" level="INFO">${eTag1} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:21.432" endtime="20250214 14:47:21.441"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:21.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key ozone-test-6273998064/copyrange/destination --upload-id 1f763d49-1758-41a2-adf2-e2081925fa7f-114002784179716161 --multipart-upload 'Parts=[{ETag=26005c0d8d2d230fc85d6c523b29f8c9,PartNumber=1},{ETag=26005c0d8d2d230fc85d6c523b29f8c9,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:21.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:21.953" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:21.443" endtime="20250214 14:47:21.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:21.954" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:21.954" endtime="20250214 14:47:21.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:21.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:21.954" endtime="20250214 14:47:21.955"/>
</kw>
<msg timestamp="20250214 14:47:21.955" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:21.443" endtime="20250214 14:47:21.955"/>
</kw>
<msg timestamp="20250214 14:47:21.955" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}</msg>
<status status="PASS" starttime="20250214 14:47:21.442" endtime="20250214 14:47:21.955"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:21.955" endtime="20250214 14:47:21.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:21.956" endtime="20250214 14:47:21.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:21.956" endtime="20250214 14:47:21.956"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:21.960" level="INFO">Running command 'echo '{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6273998064/copyrange/destination",
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:21.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:21.965" level="INFO">${output} = "f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:21.957" endtime="20250214 14:47:21.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:21.966" level="INFO">"f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:21.965" endtime="20250214 14:47:21.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:21.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:21.966" endtime="20250214 14:47:21.966"/>
</kw>
<status status="PASS" starttime="20250214 14:47:21.957" endtime="20250214 14:47:21.966"/>
</kw>
<msg timestamp="20250214 14:47:21.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:21.957" endtime="20250214 14:47:21.966"/>
</kw>
<msg timestamp="20250214 14:47:21.966" level="INFO">${etag} = "f436dcfc86eeba68f1dec631a8d99466-2"</msg>
<status status="PASS" starttime="20250214 14:47:21.956" endtime="20250214 14:47:21.967"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250214 14:47:21.967" endtime="20250214 14:47:21.967"/>
</return>
<status status="PASS" starttime="20250214 14:47:21.955" endtime="20250214 14:47:21.967"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:21.967" endtime="20250214 14:47:21.967"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:21.967" endtime="20250214 14:47:21.967"/>
</branch>
<status status="PASS" starttime="20250214 14:47:21.955" endtime="20250214 14:47:21.967"/>
</if>
<status status="PASS" starttime="20250214 14:47:21.441" endtime="20250214 14:47:21.967"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:21.970" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6273998064/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:22.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:22.583" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:21 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:47:21.968" endtime="20250214 14:47:22.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:22.584" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:21 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:22 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:22 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:22.583" endtime="20250214 14:47:22.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:22.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:22.584" endtime="20250214 14:47:22.584"/>
</kw>
<status status="PASS" starttime="20250214 14:47:21.968" endtime="20250214 14:47:22.585"/>
</kw>
<msg timestamp="20250214 14:47:22.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:21.968" endtime="20250214 14:47:22.585"/>
</kw>
<msg timestamp="20250214 14:47:22.585" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:21 GMT",
    "ContentLength": 10485760,
    "ETag": "\"f436dcfc86eeba68f1dec631a8d99466-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250214 14:47:21.967" endtime="20250214 14:47:22.585"/>
</kw>
<status status="PASS" starttime="20250214 14:47:21.967" endtime="20250214 14:47:22.585"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:22.588" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:22.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:22.611" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.586" endtime="20250214 14:47:22.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:22.611" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.611" endtime="20250214 14:47:22.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:22.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:22.612" endtime="20250214 14:47:22.612"/>
</kw>
<status status="PASS" starttime="20250214 14:47:22.586" endtime="20250214 14:47:22.612"/>
</kw>
<msg timestamp="20250214 14:47:22.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:22.586" endtime="20250214 14:47:22.612"/>
</kw>
<msg timestamp="20250214 14:47:22.612" level="INFO">${checksumbefore} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.585" endtime="20250214 14:47:22.612"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:22.615" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:22.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:22.637" level="INFO">${output} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.613" endtime="20250214 14:47:22.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:22.638" level="INFO">26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.638" endtime="20250214 14:47:22.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:22.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:22.639" endtime="20250214 14:47:22.639"/>
</kw>
<status status="PASS" starttime="20250214 14:47:22.613" endtime="20250214 14:47:22.639"/>
</kw>
<msg timestamp="20250214 14:47:22.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:22.613" endtime="20250214 14:47:22.639"/>
</kw>
<msg timestamp="20250214 14:47:22.639" level="INFO">${checksumafter} = 26005c0d8d2d230fc85d6c523b29f8c9</msg>
<status status="PASS" starttime="20250214 14:47:22.612" endtime="20250214 14:47:22.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:22.639" endtime="20250214 14:47:22.640"/>
</kw>
<status status="PASS" starttime="20250214 14:47:22.585" endtime="20250214 14:47:22.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:15.152" endtime="20250214 14:47:22.640"/>
</test>
<test id="s1-s1-s8-t16" name="Test Multipart Upload list" line="320">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:22.642" level="INFO">${randStr} = 7682815004</msg>
<status status="PASS" starttime="20250214 14:47:22.642" endtime="20250214 14:47:22.642"/>
</kw>
<msg timestamp="20250214 14:47:22.642" level="INFO">${random} = ozone-test-7682815004</msg>
<status status="PASS" starttime="20250214 14:47:22.641" endtime="20250214 14:47:22.642"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250214 14:47:22.642" level="INFO">${PREFIX} = ozone-test-7682815004</msg>
<status status="PASS" starttime="20250214 14:47:22.642" endtime="20250214 14:47:22.642"/>
</kw>
<status status="PASS" starttime="20250214 14:47:22.641" endtime="20250214 14:47:22.642"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:22.646" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7682815004/listtest/key1  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:23.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:23.148" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key1",
    "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557"
}</msg>
<status status="PASS" starttime="20250214 14:47:22.644" endtime="20250214 14:47:23.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:23.149" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key1",
    "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557"
}</msg>
<status status="PASS" starttime="20250214 14:47:23.149" endtime="20250214 14:47:23.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:23.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:23.149" endtime="20250214 14:47:23.150"/>
</kw>
<msg timestamp="20250214 14:47:23.150" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key1",
    "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557"
}</msg>
<status status="PASS" starttime="20250214 14:47:22.644" endtime="20250214 14:47:23.150"/>
</kw>
<msg timestamp="20250214 14:47:23.150" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key1",
    "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557"
}</msg>
<status status="PASS" starttime="20250214 14:47:22.643" endtime="20250214 14:47:23.150"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:23.150" endtime="20250214 14:47:23.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:23.151" endtime="20250214 14:47:23.151"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:23.154" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key1",
    "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:23.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:23.159" level="INFO">${output} = 1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557</msg>
<status status="PASS" starttime="20250214 14:47:23.151" endtime="20250214 14:47:23.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:23.159" level="INFO">1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557</msg>
<status status="PASS" starttime="20250214 14:47:23.159" endtime="20250214 14:47:23.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:23.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:23.159" endtime="20250214 14:47:23.160"/>
</kw>
<msg timestamp="20250214 14:47:23.160" level="INFO">${upload_id} = 1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557</msg>
<status status="PASS" starttime="20250214 14:47:23.151" endtime="20250214 14:47:23.160"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:23.160" endtime="20250214 14:47:23.160"/>
</return>
<status status="PASS" starttime="20250214 14:47:23.150" endtime="20250214 14:47:23.160"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:23.160" endtime="20250214 14:47:23.160"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:23.160" endtime="20250214 14:47:23.160"/>
</branch>
<status status="PASS" starttime="20250214 14:47:23.150" endtime="20250214 14:47:23.160"/>
</if>
<msg timestamp="20250214 14:47:23.160" level="INFO">${uploadID1} = 1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557</msg>
<status status="PASS" starttime="20250214 14:47:22.642" endtime="20250214 14:47:23.160"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:23.164" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7682815004/listtest/key2  2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:23.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:23.646" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key2",
    "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846"
}</msg>
<status status="PASS" starttime="20250214 14:47:23.162" endtime="20250214 14:47:23.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:23.647" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key2",
    "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846"
}</msg>
<status status="PASS" starttime="20250214 14:47:23.647" endtime="20250214 14:47:23.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:23.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:23.647" endtime="20250214 14:47:23.648"/>
</kw>
<msg timestamp="20250214 14:47:23.648" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key2",
    "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846"
}</msg>
<status status="PASS" starttime="20250214 14:47:23.162" endtime="20250214 14:47:23.648"/>
</kw>
<msg timestamp="20250214 14:47:23.648" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key2",
    "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846"
}</msg>
<status status="PASS" starttime="20250214 14:47:23.161" endtime="20250214 14:47:23.648"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:23.648" endtime="20250214 14:47:23.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:23.649" endtime="20250214 14:47:23.649"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:23.652" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7682815004/listtest/key2",
    "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:23.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:23.657" level="INFO">${output} = b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846</msg>
<status status="PASS" starttime="20250214 14:47:23.649" endtime="20250214 14:47:23.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:23.657" level="INFO">b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846</msg>
<status status="PASS" starttime="20250214 14:47:23.657" endtime="20250214 14:47:23.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:23.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:23.657" endtime="20250214 14:47:23.658"/>
</kw>
<msg timestamp="20250214 14:47:23.658" level="INFO">${upload_id} = b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846</msg>
<status status="PASS" starttime="20250214 14:47:23.649" endtime="20250214 14:47:23.658"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250214 14:47:23.658" endtime="20250214 14:47:23.658"/>
</return>
<status status="PASS" starttime="20250214 14:47:23.648" endtime="20250214 14:47:23.658"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250214 14:47:23.658" endtime="20250214 14:47:23.658"/>
</return>
<status status="NOT RUN" starttime="20250214 14:47:23.658" endtime="20250214 14:47:23.658"/>
</branch>
<status status="PASS" starttime="20250214 14:47:23.648" endtime="20250214 14:47:23.658"/>
</if>
<msg timestamp="20250214 14:47:23.658" level="INFO">${uploadID2} = b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846</msg>
<status status="PASS" starttime="20250214 14:47:23.161" endtime="20250214 14:47:23.658"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:23.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket erasure --prefix ozone-test-7682815004/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:24.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:24.162" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557",
            "Key": "ozone-test-7682815004/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:47:23.660" endtime="20250214 14:47:24.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:24.163" level="INFO">{
    "Uploads": [
        {
            "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557",
            "Key": "ozone-test-7682815004/listtest/key1",
            "Initiated": "2025-02-14T14:47:23.083Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846",
            "Key": "ozone-test-7682815004/listtest/key2",
            "Initiated": "2025-02-14T14:47:23.591Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250214 14:47:24.163" endtime="20250214 14:47:24.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:24.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:24.164" endtime="20250214 14:47:24.164"/>
</kw>
<status status="PASS" starttime="20250214 14:47:23.660" endtime="20250214 14:47:24.164"/>
</kw>
<msg timestamp="20250214 14:47:24.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:23.659" endtime="20250214 14:47:24.164"/>
</kw>
<msg timestamp="20250214 14:47:24.164" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557",
            "Key": "ozone-test-7682815004/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:47:23.659" endtime="20250214 14:47:24.164"/>
</kw>
<msg timestamp="20250214 14:47:24.164" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557",
            "Key": "ozone-test-7682815004/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250214 14:47:23.659" endtime="20250214 14:47:24.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:24.165" endtime="20250214 14:47:24.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:24.165" endtime="20250214 14:47:24.165"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:24.168" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "1c4418bc-97e3-4b7f-a40b-0265ce50ac6e-114002784621887557",
            "Key": "ozone-test-7682815004/listtest/key1",
            "Initiated": "2025-02-14T14:47:23.083Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "b5478214-902c-4c5b-ab3e-8292fe849ef6-114002784655179846",
            "Key": "ozone-test-7682815004/listtest/key2",
            "Initiated": "2025-02-14T14:47:23.591Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:24.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:24.173" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:47:24.166" endtime="20250214 14:47:24.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:24.174" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:47:24.173" endtime="20250214 14:47:24.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:24.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:24.174" endtime="20250214 14:47:24.174"/>
</kw>
<msg timestamp="20250214 14:47:24.174" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250214 14:47:24.165" endtime="20250214 14:47:24.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:24.175" endtime="20250214 14:47:24.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:22.640" endtime="20250214 14:47:24.175"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20250214 14:47:24.177" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 14:47:24.177" endtime="20250214 14:47:24.177"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.176" endtime="20250214 14:47:24.177"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:46:31.640" endtime="20250214 14:47:24.177"/>
</suite>
<suite id="s1-s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:24.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:24.187" endtime="20250214 14:47:24.187"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.187" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:24.188" endtime="20250214 14:47:24.188"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.187" endtime="20250214 14:47:24.188"/>
</kw>
<test id="s1-s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:24.190" level="INFO">${postfix} = 55821</msg>
<status status="PASS" starttime="20250214 14:47:24.189" endtime="20250214 14:47:24.190"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250214 14:47:24.190" level="INFO">${DESTBUCKET} = destbucket-55821</msg>
<status status="PASS" starttime="20250214 14:47:24.190" endtime="20250214 14:47:24.190"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:24.194" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-55821 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:24.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:24.747" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-55821"
}</msg>
<status status="PASS" starttime="20250214 14:47:24.191" endtime="20250214 14:47:24.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:24.747" level="INFO">{
    "Location": "http://s3g:9878/destbucket-55821"
}</msg>
<status status="PASS" starttime="20250214 14:47:24.747" endtime="20250214 14:47:24.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:24.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:24.748" endtime="20250214 14:47:24.748"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.191" endtime="20250214 14:47:24.748"/>
</kw>
<msg timestamp="20250214 14:47:24.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:24.191" endtime="20250214 14:47:24.748"/>
</kw>
<msg timestamp="20250214 14:47:24.748" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-55821"
}</msg>
<status status="PASS" starttime="20250214 14:47:24.191" endtime="20250214 14:47:24.748"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.190" endtime="20250214 14:47:24.749"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.189" endtime="20250214 14:47:24.749"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.189" endtime="20250214 14:47:24.749"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:24.752" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20250214 14:47:24.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:24.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:24.750" endtime="20250214 14:47:24.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:24.756" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:24.756" endtime="20250214 14:47:24.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:24.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:24.756" endtime="20250214 14:47:24.756"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.749" endtime="20250214 14:47:24.757"/>
</kw>
<msg timestamp="20250214 14:47:24.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:24.749" endtime="20250214 14:47:24.757"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.749" endtime="20250214 14:47:24.757"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:24.760" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:24.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:24.764" level="INFO">${output} = 029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:24.758" endtime="20250214 14:47:24.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:24.764" level="INFO">029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:24.764" endtime="20250214 14:47:24.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:24.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:24.765" endtime="20250214 14:47:24.765"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.757" endtime="20250214 14:47:24.765"/>
</kw>
<msg timestamp="20250214 14:47:24.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:24.757" endtime="20250214 14:47:24.765"/>
</kw>
<msg timestamp="20250214 14:47:24.765" level="INFO">${file_checksum} = 029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:24.757" endtime="20250214 14:47:24.765"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:24.769" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:25.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:25.279" level="INFO">${output} = {
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\""
}</msg>
<status status="PASS" starttime="20250214 14:47:24.767" endtime="20250214 14:47:25.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:25.280" level="INFO">{
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\""
}</msg>
<status status="PASS" starttime="20250214 14:47:25.279" endtime="20250214 14:47:25.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:25.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:25.280" endtime="20250214 14:47:25.280"/>
</kw>
<status status="PASS" starttime="20250214 14:47:24.767" endtime="20250214 14:47:25.281"/>
</kw>
<msg timestamp="20250214 14:47:25.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:24.766" endtime="20250214 14:47:25.281"/>
</kw>
<msg timestamp="20250214 14:47:25.281" level="INFO">${output} = {
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\""
}</msg>
<status status="PASS" starttime="20250214 14:47:24.766" endtime="20250214 14:47:25.281"/>
</kw>
<msg timestamp="20250214 14:47:25.281" level="INFO">${result} = {
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\""
}</msg>
<status status="PASS" starttime="20250214 14:47:24.766" endtime="20250214 14:47:25.281"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:25.284" level="INFO">Running command 'echo '{
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:25.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:25.288" level="INFO">${output} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:25.282" endtime="20250214 14:47:25.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:25.289" level="INFO">"029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:25.289" endtime="20250214 14:47:25.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:25.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:25.289" endtime="20250214 14:47:25.290"/>
</kw>
<msg timestamp="20250214 14:47:25.290" level="INFO">${eTag} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:25.281" endtime="20250214 14:47:25.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:25.290" endtime="20250214 14:47:25.290"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:25.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:25.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:25.787" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:25.219Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:25.292" endtime="20250214 14:47:25.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:25.788" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:25.219Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:25.787" endtime="20250214 14:47:25.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:25.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:25.788" endtime="20250214 14:47:25.789"/>
</kw>
<status status="PASS" starttime="20250214 14:47:25.291" endtime="20250214 14:47:25.789"/>
</kw>
<msg timestamp="20250214 14:47:25.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:25.291" endtime="20250214 14:47:25.789"/>
</kw>
<msg timestamp="20250214 14:47:25.789" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:25.219Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:25.291" endtime="20250214 14:47:25.789"/>
</kw>
<msg timestamp="20250214 14:47:25.789" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:25.219Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:25.290" endtime="20250214 14:47:25.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:25.790" endtime="20250214 14:47:25.790"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:25.794" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:26.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:26.346" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:26.283Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:25.792" endtime="20250214 14:47:26.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:26.347" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:26.283Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:26.347" endtime="20250214 14:47:26.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:26.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:26.348" endtime="20250214 14:47:26.348"/>
</kw>
<status status="PASS" starttime="20250214 14:47:25.791" endtime="20250214 14:47:26.348"/>
</kw>
<msg timestamp="20250214 14:47:26.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:25.791" endtime="20250214 14:47:26.348"/>
</kw>
<msg timestamp="20250214 14:47:26.348" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:26.283Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:25.791" endtime="20250214 14:47:26.348"/>
</kw>
<msg timestamp="20250214 14:47:26.348" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:26.283Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:25.790" endtime="20250214 14:47:26.348"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:26.351" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:26.283Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:26.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:26.357" level="INFO">${output} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:26.349" endtime="20250214 14:47:26.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:26.358" level="INFO">"029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:26.357" endtime="20250214 14:47:26.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:26.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:26.358" endtime="20250214 14:47:26.358"/>
</kw>
<msg timestamp="20250214 14:47:26.358" level="INFO">${eTag} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:26.349" endtime="20250214 14:47:26.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:26.359" endtime="20250214 14:47:26.359"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:26.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-55821 --prefix ozone-test-7682815004/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:26.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:26.851" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:26.283Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:26.361" endtime="20250214 14:47:26.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:26.853" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:26.283Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:26.852" endtime="20250214 14:47:26.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:26.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:26.853" endtime="20250214 14:47:26.854"/>
</kw>
<status status="PASS" starttime="20250214 14:47:26.361" endtime="20250214 14:47:26.854"/>
</kw>
<msg timestamp="20250214 14:47:26.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:26.360" endtime="20250214 14:47:26.854"/>
</kw>
<msg timestamp="20250214 14:47:26.855" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:26.283Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:26.360" endtime="20250214 14:47:26.855"/>
</kw>
<msg timestamp="20250214 14:47:26.855" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:26.283Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:26.359" endtime="20250214 14:47:26.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:26.855" endtime="20250214 14:47:26.856"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:26.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:27.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:27.356" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:26.857" endtime="20250214 14:47:27.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:27.357" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:27 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 14:47:27 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:27.356" endtime="20250214 14:47:27.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:27.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:27.357" endtime="20250214 14:47:27.357"/>
</kw>
<status status="PASS" starttime="20250214 14:47:26.857" endtime="20250214 14:47:27.357"/>
</kw>
<msg timestamp="20250214 14:47:27.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:26.857" endtime="20250214 14:47:27.357"/>
</kw>
<msg timestamp="20250214 14:47:27.357" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:26.856" endtime="20250214 14:47:27.357"/>
</kw>
<msg timestamp="20250214 14:47:27.358" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:26.856" endtime="20250214 14:47:27.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:27.358" endtime="20250214 14:47:27.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:27.358" endtime="20250214 14:47:27.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:27.358" endtime="20250214 14:47:27.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:27.359" endtime="20250214 14:47:27.359"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:27.362" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:27.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:27.855" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:27.360" endtime="20250214 14:47:27.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:27.856" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:27 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:27 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:27.856" endtime="20250214 14:47:27.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:27.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:27.857" endtime="20250214 14:47:27.857"/>
</kw>
<status status="PASS" starttime="20250214 14:47:27.360" endtime="20250214 14:47:27.857"/>
</kw>
<msg timestamp="20250214 14:47:27.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:27.360" endtime="20250214 14:47:27.857"/>
</kw>
<msg timestamp="20250214 14:47:27.857" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:27.360" endtime="20250214 14:47:27.857"/>
</kw>
<msg timestamp="20250214 14:47:27.857" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:27.359" endtime="20250214 14:47:27.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:27.858" endtime="20250214 14:47:27.858"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:27.860" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:26 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:27 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:27 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:27.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:27.865" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:47:27.858" endtime="20250214 14:47:27.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:27.866" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:47:27.866" endtime="20250214 14:47:27.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:27.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:27.866" endtime="20250214 14:47:27.867"/>
</kw>
<msg timestamp="20250214 14:47:27.867" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:47:27.858" endtime="20250214 14:47:27.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:27.867" endtime="20250214 14:47:27.867"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:27.871" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:28.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:28.405" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:28.343Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:27.869" endtime="20250214 14:47:28.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:28.406" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:28.343Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:28.406" endtime="20250214 14:47:28.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:28.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:28.406" endtime="20250214 14:47:28.407"/>
</kw>
<status status="PASS" starttime="20250214 14:47:27.869" endtime="20250214 14:47:28.407"/>
</kw>
<msg timestamp="20250214 14:47:28.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:27.868" endtime="20250214 14:47:28.407"/>
</kw>
<msg timestamp="20250214 14:47:28.407" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:28.343Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:27.868" endtime="20250214 14:47:28.407"/>
</kw>
<msg timestamp="20250214 14:47:28.407" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:28.343Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:27.867" endtime="20250214 14:47:28.407"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:28.410" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:28.343Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:28.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:28.415" level="INFO">${output} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:28.408" endtime="20250214 14:47:28.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:28.416" level="INFO">"029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:28.415" endtime="20250214 14:47:28.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:28.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:28.416" endtime="20250214 14:47:28.416"/>
</kw>
<msg timestamp="20250214 14:47:28.416" level="INFO">${eTag} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:28.407" endtime="20250214 14:47:28.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:28.417" endtime="20250214 14:47:28.417"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:28.420" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-55821 --prefix ozone-test-7682815004/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:28.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:28.918" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:28.343Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:28.418" endtime="20250214 14:47:28.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:28.919" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:28.343Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:28.918" endtime="20250214 14:47:28.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:28.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:28.919" endtime="20250214 14:47:28.919"/>
</kw>
<status status="PASS" starttime="20250214 14:47:28.418" endtime="20250214 14:47:28.919"/>
</kw>
<msg timestamp="20250214 14:47:28.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:28.418" endtime="20250214 14:47:28.919"/>
</kw>
<msg timestamp="20250214 14:47:28.919" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:28.343Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:28.417" endtime="20250214 14:47:28.920"/>
</kw>
<msg timestamp="20250214 14:47:28.920" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/copyobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:28.343Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250214 14:47:28.417" endtime="20250214 14:47:28.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:28.920" endtime="20250214 14:47:28.920"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:28.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:29.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:29.400" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:28.921" endtime="20250214 14:47:29.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:29.401" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:29 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    },
    "ExpiresString": "Fri, 14 Feb 2025 14:47:29 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:29.400" endtime="20250214 14:47:29.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:29.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:29.401" endtime="20250214 14:47:29.401"/>
</kw>
<status status="PASS" starttime="20250214 14:47:28.921" endtime="20250214 14:47:29.402"/>
</kw>
<msg timestamp="20250214 14:47:29.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:28.921" endtime="20250214 14:47:29.402"/>
</kw>
<msg timestamp="20250214 14:47:29.402" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:28.921" endtime="20250214 14:47:29.402"/>
</kw>
<msg timestamp="20250214 14:47:29.402" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:28.920" endtime="20250214 14:47:29.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:29.402" endtime="20250214 14:47:29.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:29.403" endtime="20250214 14:47:29.403"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:29.403" endtime="20250214 14:47:29.403"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:29.403" endtime="20250214 14:47:29.404"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:29.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:29.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:29.886" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:29.405" endtime="20250214 14:47:29.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:29.887" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:29 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:29 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:29.886" endtime="20250214 14:47:29.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:29.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:29.887" endtime="20250214 14:47:29.887"/>
</kw>
<status status="PASS" starttime="20250214 14:47:29.405" endtime="20250214 14:47:29.887"/>
</kw>
<msg timestamp="20250214 14:47:29.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:29.405" endtime="20250214 14:47:29.888"/>
</kw>
<msg timestamp="20250214 14:47:29.888" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:29.404" endtime="20250214 14:47:29.888"/>
</kw>
<msg timestamp="20250214 14:47:29.888" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:29.404" endtime="20250214 14:47:29.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:29.888" endtime="20250214 14:47:29.888"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:29.891" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:28 GMT",
    "ContentLength": 29,
    "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:29 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:47:29 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:29.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:29.896" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250214 14:47:29.889" endtime="20250214 14:47:29.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:29.897" level="INFO">1</msg>
<status status="PASS" starttime="20250214 14:47:29.896" endtime="20250214 14:47:29.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:29.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:29.897" endtime="20250214 14:47:29.897"/>
</kw>
<msg timestamp="20250214 14:47:29.897" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250214 14:47:29.888" endtime="20250214 14:47:29.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:29.897" endtime="20250214 14:47:29.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:24.189" endtime="20250214 14:47:29.898"/>
</test>
<test id="s1-s1-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:29.902" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:30.391" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:30.391" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:29.900" endtime="20250214 14:47:30.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:30.392" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:30.391" endtime="20250214 14:47:30.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:30.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:30.392" endtime="20250214 14:47:30.392"/>
</kw>
<msg timestamp="20250214 14:47:30.392" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:29.899" endtime="20250214 14:47:30.392"/>
</kw>
<msg timestamp="20250214 14:47:30.392" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:29.899" endtime="20250214 14:47:30.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:30.393" endtime="20250214 14:47:30.393"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:30.396" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-7682815004/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:30.885" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:30.885" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:30.394" endtime="20250214 14:47:30.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:30.886" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:30.886" endtime="20250214 14:47:30.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:30.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:30.887" endtime="20250214 14:47:30.887"/>
</kw>
<msg timestamp="20250214 14:47:30.887" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:30.393" endtime="20250214 14:47:30.887"/>
</kw>
<msg timestamp="20250214 14:47:30.887" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:30.393" endtime="20250214 14:47:30.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:30.887" endtime="20250214 14:47:30.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:29.898" endtime="20250214 14:47:30.888"/>
</test>
<test id="s1-s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:30.892" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:30.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:30.896" level="INFO">${output} = 029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:30.890" endtime="20250214 14:47:30.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:30.897" level="INFO">029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:30.897" endtime="20250214 14:47:30.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:30.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:30.897" endtime="20250214 14:47:30.898"/>
</kw>
<status status="PASS" starttime="20250214 14:47:30.889" endtime="20250214 14:47:30.898"/>
</kw>
<msg timestamp="20250214 14:47:30.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:30.889" endtime="20250214 14:47:30.898"/>
</kw>
<msg timestamp="20250214 14:47:30.898" level="INFO">${file_checksum} = 029284c5e37a6ce5903dcec2e3954173</msg>
<status status="PASS" starttime="20250214 14:47:30.889" endtime="20250214 14:47:30.898"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:30.902" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source destbucket-55821/ozone-test-7682815004/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:31.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:31.394" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:31.338Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:30.900" endtime="20250214 14:47:31.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:31.395" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:31.338Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:31.394" endtime="20250214 14:47:31.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:31.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:31.395" endtime="20250214 14:47:31.395"/>
</kw>
<status status="PASS" starttime="20250214 14:47:30.899" endtime="20250214 14:47:31.395"/>
</kw>
<msg timestamp="20250214 14:47:31.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:30.899" endtime="20250214 14:47:31.395"/>
</kw>
<msg timestamp="20250214 14:47:31.395" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:31.338Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:30.899" endtime="20250214 14:47:31.395"/>
</kw>
<msg timestamp="20250214 14:47:31.396" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:31.338Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:30.898" endtime="20250214 14:47:31.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:31.396" endtime="20250214 14:47:31.396"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:31.399" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"029284c5e37a6ce5903dcec2e3954173\"",
        "LastModified": "2025-02-14T14:47:31.338Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:31.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:31.404" level="INFO">${output} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:31.396" endtime="20250214 14:47:31.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:31.404" level="INFO">"029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:31.404" endtime="20250214 14:47:31.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:31.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:31.404" endtime="20250214 14:47:31.405"/>
</kw>
<msg timestamp="20250214 14:47:31.405" level="INFO">${eTag} = "029284c5e37a6ce5903dcec2e3954173"</msg>
<status status="PASS" starttime="20250214 14:47:31.396" endtime="20250214 14:47:31.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:31.405" endtime="20250214 14:47:31.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:30.888" endtime="20250214 14:47:31.405"/>
</test>
<test id="s1-s1-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:31.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:31.895" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:31.896" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:47:31.407" endtime="20250214 14:47:31.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:31.897" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:47:31.896" endtime="20250214 14:47:31.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:31.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:31.897" endtime="20250214 14:47:31.897"/>
</kw>
<msg timestamp="20250214 14:47:31.897" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:47:31.407" endtime="20250214 14:47:31.897"/>
</kw>
<msg timestamp="20250214 14:47:31.897" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:47:31.406" endtime="20250214 14:47:31.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:31.897" endtime="20250214 14:47:31.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:31.406" endtime="20250214 14:47:31.898"/>
</test>
<test id="s1-s1-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:31.902" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:32.395" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:32.395" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 14:47:31.900" endtime="20250214 14:47:32.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:32.396" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250214 14:47:32.396" endtime="20250214 14:47:32.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:32.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:32.396" endtime="20250214 14:47:32.397"/>
</kw>
<msg timestamp="20250214 14:47:32.398" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 14:47:31.899" endtime="20250214 14:47:32.398"/>
</kw>
<msg timestamp="20250214 14:47:32.398" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250214 14:47:31.899" endtime="20250214 14:47:32.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:32.398" endtime="20250214 14:47:32.398"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:32.401" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:32.891" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:32.891" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 14:47:32.399" endtime="20250214 14:47:32.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:32.892" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250214 14:47:32.891" endtime="20250214 14:47:32.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:32.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:32.892" endtime="20250214 14:47:32.892"/>
</kw>
<msg timestamp="20250214 14:47:32.893" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 14:47:32.399" endtime="20250214 14:47:32.893"/>
</kw>
<msg timestamp="20250214 14:47:32.893" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250214 14:47:32.398" endtime="20250214 14:47:32.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:32.893" endtime="20250214 14:47:32.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:31.898" endtime="20250214 14:47:32.893"/>
</test>
<test id="s1-s1-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:32.897" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 14:47:32.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:32.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:32.895" endtime="20250214 14:47:32.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:32.900" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:32.899" endtime="20250214 14:47:32.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:32.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:32.900" endtime="20250214 14:47:32.900"/>
</kw>
<status status="PASS" starttime="20250214 14:47:32.895" endtime="20250214 14:47:32.900"/>
</kw>
<msg timestamp="20250214 14:47:32.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:32.895" endtime="20250214 14:47:32.901"/>
</kw>
<status status="PASS" starttime="20250214 14:47:32.894" endtime="20250214 14:47:32.901"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:47:32.903" level="INFO">${custom_metadata_value} = aeavWIxNH0uBMgTIFCB7KM264U3LRAiogEnTVsZc8RyOyX7LWGMyP9NCQCGLl7NW0afF1A5Pc8QsFgN9RgBeumwgKC81YriNKLtgAV2uYwzFtH7PayuMU6iPhJ4iOIZNunkynn55NisjRzvJYbcZKPburhkryMG57YrANfz1IFbWVeUs5EgJyM4IVhaYJnJHYNuK9sGJ...</msg>
<status status="PASS" starttime="20250214 14:47:32.901" endtime="20250214 14:47:32.903"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:32.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-55821 --key ozone-test-7682815004/copyobject/key=value/f1 --copy-source erasure/ozone-test-7682815004/copyobject/key=value/f1 --metadata="custom-key1=aeavWIxNH0uBMgTIFCB7KM264U3LRAiogEnTVsZc8RyOyX7LWGMyP9NCQCGLl7NW0afF1A5Pc8QsFgN9RgBeumwgKC81YriNKLtgAV2uYwzFtH7PayuMU6iPhJ4iOIZNunkynn55NisjRzvJYbcZKPburhkryMG57YrANfz1IFbWVeUs5EgJyM4IVhaYJnJHYNuK9sGJQZmTOWo60QTLuUcOh4hDHmm1r431HRoAX6TiSbmHylMzdFOzrYonL7vnPztSpFrFgWwYThVxOMCNBTXFbhLUEWyyRZcB8r0Sx3vPqIGg7UVSm8yRZYTFL5Krr9zBvFw0Oq9LzayNGWbaFDJVIjtBlfHINyYoAg2hTJ27ecgXbo4uLxBuVKPdOs5G5I4iQWI1tDnZuk5pfb1saHqS6pY47GWcvoSX9SZEVUW4JH77EpoQUM5MEtGlMNoEYeftDtAcTyVLFinsdv6GVfzP9xdVjphnSdOQWMUhsNLkfxKffJcZXKMQsiXX6JZSWm3F0swk6IlVcvigEr0ySnSrqg3i5meibOHNW8rZphbLfEALUwvwCabxzmKF8Fa5TZ8Q3qFMoY6kz3LUgTT23YZRmAAFvonKPj7bNkiSgJWCUM1yKUslpkh5f7RTtjYrw6tJKwDWcm5ax81lZIRLaCfy7sJJVpkbGeO6GkR9pbRpitdur3pCWO4OC6wRhdmv3ICzqiAVWF6lXeKPLKCgXTEMiUJ4Dfxubg4rkPK8jbaae4NiHoUU3Wden1y3zSA4mLSrkkhqUDkT3kHbtjz0S0apG9giv8geOX2fedLX8yx6rFrx7AiIUqcwJmrF5pSBmMQWj8UtZYooClmpGVDpMaJbewm01gGf22D5Kn1Ye1HbEXkzzDeodH2GtpCo6wFPSzDDleXtqK00Y7TDeoIXUMT1QwTY9mRw8YkxWWKXYrT7R0MqDkhofutcVvTXlQ1jaWXnMRv9zrLMF2eHQoMOzMm1EEzsLMAVu3037UBE52ZKKLV2YSYJY0rZ8tU1NpB5z2QxmgRxPoZSsI40UWwFgxLudGrVAWodUrf9sqSs4C1cTHKgHmImWjX1Sdxatxc5ZGVy5woH7MraWIoK9fRhPOSFPXdFUJ0PQpAYLFMKgP38XKp1eK28h4Jm5UyhraOUNP34Hvi6VY1oCwBklhEUwItUwKjQQltPDbD4DHAMjBFL8Z27yXu2qaEuOotNP2lrZSyz9egMtkcpa4y3IsB6teBgMnMUlpSjdrdJQnQjVG0Pu3ZWril62kIKWkn0QJCleF39wz7rUuW5EiVeP2aFEZhWwYl9VZwkmeNDaM6y4NQTMBG3l4ffrTiXxZr6RUViUXKcJw6TiwXSuBejXzAXvwdDyFDQ10E7rWMBPFun3CTi5IE9NsNLqmiEaRu6HiHKFvJ7aeiTtTyHp8lqgnx3PIdfn1sqoX6DJzHGqiYLtqWjtBU4OJRzVcIiAudYtxj4hXEnWtLCyA5vIodRBLCO7q7l4vXrLxoz0SAXDxeYtx63F4RRcfKcAre0N9dus3TIdTy7QT7qLCbyIFOPAsKwugEpOimR3zKVdmKpLz3QRihUecXsDVwOSPQukCDFdZgrktCc0ah4xDt6b9LtSSsjxpqwEpAhGYVZCdo1JlAOqWVSQyTNpZ4wO3p9wlCaUDbkxz0HRTm2zh5GwyHDlLs8aZcD0ThU2sbYr9MwxaXIEWJmz4bZy714IoczropMhi7mfPTQUtiqZwhXLRCC9EbmBDUo6fAebOlLF7sDspy3IpVWnHxH2N2Kjs0ImCI1040WiVhNhIWhwxvvkDQssqolurvbHtzB22xg755X3ZmWDuZUbXBBNlfGISkDbV4xg9xt8t0H7VYdh52TAc1zpUpIVkS0sws9Stoylr9VxkHwMqBW6dSYA9ktLQICb3cbWhirrcihCKX6Kf26KYO7rO1kDb46YNy84uK2l1j3lpEU9b3sDXeiXAzxVTduRfKmuRPyDsL8N36VvwRCJdVvodreS9DS6nPB1OAtuM9aFMLccW3df35OgeaE8xc2OGLIwr9Bfht1AzkInHTudbBkqjXKBINx8DKhwkCDFO4zCg87mdI6PpYbwjHlKuhwR6wiHii0EX7nbAyeYf6823AJ3NLJPN3hRMmzhUgcZ05TjzdVb2KhC4B2GHIR4sNugKHoOw6G9T4y6qPTQqeCnQtJG0yHoIGEe7RCMDUgSPn74i3RGIatHSH8IHwaBFQcZBXcIKdghiBHUfiin96vcg21SAgDxjjgbEL5EYyoUeBLnQ00Tc0RwqrMXAjhEsiNJyVVXit47hh6i5XvTejG7EDYmQHlDueXvn0Ynk46qLdEwVWEMKgZFtDQuhdrci9OFZCQtHRBQ4sJ7grpPNYzaHUKsJYYNpZtyShJt2dCQyk3Sb4H8dj6oUTEnTvi0TEdLtyO6NH9v1I61LoCn18dEOaRQGlY0d1O7HtLN1IC4itXymNcTzFXwV3cfFdbqJY8ZrQTGWMwmBpYFcclEGlIEc5O75Xp3kIoFNmucVAoQEetMUdWKJWwpyyxLLkfRl0stryCll5H2tjDAtIGm2x4sV0SCgXzBd696boFn8mXUA8SReQSKaODH3ehcAEloqQMctAtVoCNzFkCWh8vMb4jB0TOQc1ui0EGkO3SjmufROxoRwkfHWJFZCkKyFAbiOzlM0M9aLgNuFO74yfj6DhGwga8JWxqgoahM6C1HxE6y4RcBP69ysnhuvKaRpx4RJnh6pjZskk3z7AHcqyLdnU9ONmm0IQU3jnpAalH89sGQ57O0qv6k4AoMTV1ZLqkhVeR7q1bmZeU3rRjMshzRWtiXVhFaobdZpLlzgHYTDgVngNaRp1k2wCu8UNyT9OgCEFXk21G2PiJDeclQDJUEuSEcbND2naW1QPX2OzIejLPQl3t6MfxnFMNRyp71uWYNCapkVJud3240CzgwJvFItfngvdDKPEs3WlTDmzxTnSleQX22kKsgKyBG4Ch1oLuSWZZ" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:33.387" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:33.387" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:47:32.904" endtime="20250214 14:47:33.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:33.388" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:47:33.387" endtime="20250214 14:47:33.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:33.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:33.388" endtime="20250214 14:47:33.388"/>
</kw>
<msg timestamp="20250214 14:47:33.388" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:47:32.904" endtime="20250214 14:47:33.388"/>
</kw>
<msg timestamp="20250214 14:47:33.389" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:47:32.903" endtime="20250214 14:47:33.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:33.389" endtime="20250214 14:47:33.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:32.894" endtime="20250214 14:47:33.389"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:24.180" endtime="20250214 14:47:33.390"/>
</suite>
<suite id="s1-s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:33.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:33.399" endtime="20250214 14:47:33.399"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:33.400" endtime="20250214 14:47:33.400"/>
</kw>
<status status="PASS" starttime="20250214 14:47:33.399" endtime="20250214 14:47:33.400"/>
</kw>
<test id="s1-s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:33.404" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:33.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:33.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:33.402" endtime="20250214 14:47:33.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:33.407" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:33.406" endtime="20250214 14:47:33.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:33.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:33.407" endtime="20250214 14:47:33.407"/>
</kw>
<status status="PASS" starttime="20250214 14:47:33.401" endtime="20250214 14:47:33.407"/>
</kw>
<msg timestamp="20250214 14:47:33.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:33.401" endtime="20250214 14:47:33.407"/>
</kw>
<status status="PASS" starttime="20250214 14:47:33.401" endtime="20250214 14:47:33.407"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:33.410" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:33.880" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:33.880" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:33.408" endtime="20250214 14:47:33.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:33.881" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:33.880" endtime="20250214 14:47:33.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:33.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:33.881" endtime="20250214 14:47:33.881"/>
</kw>
<msg timestamp="20250214 14:47:33.881" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:33.408" endtime="20250214 14:47:33.881"/>
</kw>
<msg timestamp="20250214 14:47:33.881" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:33.408" endtime="20250214 14:47:33.881"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:33.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:34.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:34.384" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:33.883" endtime="20250214 14:47:34.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:34.385" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:34.385" endtime="20250214 14:47:34.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:34.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:34.386" endtime="20250214 14:47:34.386"/>
</kw>
<status status="PASS" starttime="20250214 14:47:33.882" endtime="20250214 14:47:34.386"/>
</kw>
<msg timestamp="20250214 14:47:34.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:33.882" endtime="20250214 14:47:34.386"/>
</kw>
<msg timestamp="20250214 14:47:34.387" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:33.882" endtime="20250214 14:47:34.387"/>
</kw>
<msg timestamp="20250214 14:47:34.387" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:33.882" endtime="20250214 14:47:34.387"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:47:34.387" endtime="20250214 14:47:34.387"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:34.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:34.885" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:34.885" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:34.388" endtime="20250214 14:47:34.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:34.886" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:34.885" endtime="20250214 14:47:34.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:34.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:34.886" endtime="20250214 14:47:34.886"/>
</kw>
<msg timestamp="20250214 14:47:34.887" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:34.388" endtime="20250214 14:47:34.887"/>
</kw>
<msg timestamp="20250214 14:47:34.887" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:34.387" endtime="20250214 14:47:34.887"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:34.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:35.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:35.379" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 14:47:34.888" endtime="20250214 14:47:35.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:35.380" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 14:47:35.380" endtime="20250214 14:47:35.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:35.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:35.381" endtime="20250214 14:47:35.381"/>
</kw>
<status status="PASS" starttime="20250214 14:47:34.888" endtime="20250214 14:47:35.381"/>
</kw>
<msg timestamp="20250214 14:47:35.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:34.888" endtime="20250214 14:47:35.381"/>
</kw>
<msg timestamp="20250214 14:47:35.381" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 14:47:34.887" endtime="20250214 14:47:35.381"/>
</kw>
<msg timestamp="20250214 14:47:35.382" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250214 14:47:34.887" endtime="20250214 14:47:35.382"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:47:35.382" endtime="20250214 14:47:35.382"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:35.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:35.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:35.930" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:35.383" endtime="20250214 14:47:35.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:35.931" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:35.930" endtime="20250214 14:47:35.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:35.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:35.931" endtime="20250214 14:47:35.931"/>
</kw>
<status status="PASS" starttime="20250214 14:47:35.383" endtime="20250214 14:47:35.932"/>
</kw>
<msg timestamp="20250214 14:47:35.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:35.383" endtime="20250214 14:47:35.932"/>
</kw>
<msg timestamp="20250214 14:47:35.932" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:35.383" endtime="20250214 14:47:35.932"/>
</kw>
<msg timestamp="20250214 14:47:35.932" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:35.382" endtime="20250214 14:47:35.932"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:35.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:36.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:36.412" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:35.933" endtime="20250214 14:47:36.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:36.413" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:36 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:36 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:36.412" endtime="20250214 14:47:36.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:36.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:36.413" endtime="20250214 14:47:36.414"/>
</kw>
<msg timestamp="20250214 14:47:36.414" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:35 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:35.933" endtime="20250214 14:47:36.414"/>
</kw>
<status status="PASS" starttime="20250214 14:47:35.932" endtime="20250214 14:47:36.414"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:36.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:36.902" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:36.902" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:36.415" endtime="20250214 14:47:36.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:36.903" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:36.903" endtime="20250214 14:47:36.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:36.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:36.904" endtime="20250214 14:47:36.904"/>
</kw>
<msg timestamp="20250214 14:47:36.904" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:36.415" endtime="20250214 14:47:36.904"/>
</kw>
<status status="PASS" starttime="20250214 14:47:36.414" endtime="20250214 14:47:36.904"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:36.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:37.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:37.399" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:36.906" endtime="20250214 14:47:37.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:37.400" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:37.400" endtime="20250214 14:47:37.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:37.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:37.400" endtime="20250214 14:47:37.401"/>
</kw>
<status status="PASS" starttime="20250214 14:47:36.905" endtime="20250214 14:47:37.401"/>
</kw>
<msg timestamp="20250214 14:47:37.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:36.905" endtime="20250214 14:47:37.401"/>
</kw>
<msg timestamp="20250214 14:47:37.401" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:36.905" endtime="20250214 14:47:37.401"/>
</kw>
<msg timestamp="20250214 14:47:37.401" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/word.txt/"
}</msg>
<status status="PASS" starttime="20250214 14:47:36.904" endtime="20250214 14:47:37.401"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:47:37.402" endtime="20250214 14:47:37.402"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:37.405" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket erasure --key ozone-test-7682815004/word.txt --copy-source erasure/ozone-test-7682815004/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:37.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:37.952" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T14:47:37.875Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:37.403" endtime="20250214 14:47:37.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:37.953" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T14:47:37.875Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:37.953" endtime="20250214 14:47:37.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:37.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:37.953" endtime="20250214 14:47:37.954"/>
</kw>
<status status="PASS" starttime="20250214 14:47:37.403" endtime="20250214 14:47:37.954"/>
</kw>
<msg timestamp="20250214 14:47:37.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:37.403" endtime="20250214 14:47:37.954"/>
</kw>
<msg timestamp="20250214 14:47:37.954" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T14:47:37.875Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:37.402" endtime="20250214 14:47:37.954"/>
</kw>
<msg timestamp="20250214 14:47:37.954" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-02-14T14:47:37.875Z"
    }
}</msg>
<status status="PASS" starttime="20250214 14:47:37.402" endtime="20250214 14:47:37.954"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:37.957" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:38.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:38.450" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:37.955" endtime="20250214 14:47:38.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:38.451" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:38 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:38 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:38.450" endtime="20250214 14:47:38.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:38.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:38.451" endtime="20250214 14:47:38.452"/>
</kw>
<msg timestamp="20250214 14:47:38.452" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:37.955" endtime="20250214 14:47:38.452"/>
</kw>
<status status="PASS" starttime="20250214 14:47:37.954" endtime="20250214 14:47:38.452"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:38.456" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:38.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:38.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:38.453" endtime="20250214 14:47:38.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:38.926" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:38.926" endtime="20250214 14:47:38.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:38.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:38.927" endtime="20250214 14:47:38.927"/>
</kw>
<status status="PASS" starttime="20250214 14:47:38.453" endtime="20250214 14:47:38.927"/>
</kw>
<msg timestamp="20250214 14:47:38.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:38.453" endtime="20250214 14:47:38.927"/>
</kw>
<msg timestamp="20250214 14:47:38.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:38.452" endtime="20250214 14:47:38.927"/>
</kw>
<status status="PASS" starttime="20250214 14:47:38.452" endtime="20250214 14:47:38.927"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:38.931" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:39.428" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:39.428" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:38.928" endtime="20250214 14:47:39.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:39.429" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:39.428" endtime="20250214 14:47:39.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:39.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:39.429" endtime="20250214 14:47:39.429"/>
</kw>
<msg timestamp="20250214 14:47:39.430" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:38.928" endtime="20250214 14:47:39.430"/>
</kw>
<status status="PASS" starttime="20250214 14:47:38.928" endtime="20250214 14:47:39.430"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:33.401" endtime="20250214 14:47:39.430"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:33.391" endtime="20250214 14:47:39.430"/>
</suite>
<suite id="s1-s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:39.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:39.439" endtime="20250214 14:47:39.439"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.439" endtime="20250214 14:47:39.439"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.439" endtime="20250214 14:47:39.439"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.439" endtime="20250214 14:47:39.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.440" endtime="20250214 14:47:39.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.440" endtime="20250214 14:47:39.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.440" endtime="20250214 14:47:39.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.440" endtime="20250214 14:47:39.440"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:39.440" endtime="20250214 14:47:39.440"/>
</kw>
<status status="PASS" starttime="20250214 14:47:39.439" endtime="20250214 14:47:39.440"/>
</kw>
<test id="s1-s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:39.444" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:39.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:39.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:39.441" endtime="20250214 14:47:39.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:39.448" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:39.448" endtime="20250214 14:47:39.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:39.448" endtime="20250214 14:47:39.449"/>
</kw>
<status status="PASS" starttime="20250214 14:47:39.441" endtime="20250214 14:47:39.449"/>
</kw>
<msg timestamp="20250214 14:47:39.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:39.441" endtime="20250214 14:47:39.449"/>
</kw>
<status status="PASS" starttime="20250214 14:47:39.441" endtime="20250214 14:47:39.449"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:39.453" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:39.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:39.983" level="INFO">${output} = {
    "ETag": "\"26aaa484999022e8c1a113157c6afedc\""
}</msg>
<status status="PASS" starttime="20250214 14:47:39.451" endtime="20250214 14:47:39.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:39.984" level="INFO">{
    "ETag": "\"26aaa484999022e8c1a113157c6afedc\""
}</msg>
<status status="PASS" starttime="20250214 14:47:39.984" endtime="20250214 14:47:39.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:39.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:39.984" endtime="20250214 14:47:39.985"/>
</kw>
<status status="PASS" starttime="20250214 14:47:39.450" endtime="20250214 14:47:39.985"/>
</kw>
<msg timestamp="20250214 14:47:39.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:39.450" endtime="20250214 14:47:39.985"/>
</kw>
<msg timestamp="20250214 14:47:39.985" level="INFO">${output} = {
    "ETag": "\"26aaa484999022e8c1a113157c6afedc\""
}</msg>
<status status="PASS" starttime="20250214 14:47:39.450" endtime="20250214 14:47:39.985"/>
</kw>
<msg timestamp="20250214 14:47:39.985" level="INFO">${result} = {
    "ETag": "\"26aaa484999022e8c1a113157c6afedc\""
}</msg>
<status status="PASS" starttime="20250214 14:47:39.449" endtime="20250214 14:47:39.985"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:39.989" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:40.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:40.468" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T14:47:39.913Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 14:47:39.987" endtime="20250214 14:47:40.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:40.469" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T14:47:39.913Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:40.469" endtime="20250214 14:47:40.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:40.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:40.469" endtime="20250214 14:47:40.470"/>
</kw>
<status status="PASS" starttime="20250214 14:47:39.986" endtime="20250214 14:47:40.470"/>
</kw>
<msg timestamp="20250214 14:47:40.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:39.986" endtime="20250214 14:47:40.470"/>
</kw>
<msg timestamp="20250214 14:47:40.470" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T14:47:39.913Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 14:47:39.986" endtime="20250214 14:47:40.470"/>
</kw>
<msg timestamp="20250214 14:47:40.470" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/deletetestapi/key=value/f1",
            "LastModified": "2025-02-14T14:47:39.913Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250214 14:47:39.985" endtime="20250214 14:47:40.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:40.471" endtime="20250214 14:47:40.471"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:40.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:40.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:40.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:40.472" endtime="20250214 14:47:40.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:40.960" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:40.959" endtime="20250214 14:47:40.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:40.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:40.960" endtime="20250214 14:47:40.960"/>
</kw>
<status status="PASS" starttime="20250214 14:47:40.472" endtime="20250214 14:47:40.960"/>
</kw>
<msg timestamp="20250214 14:47:40.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:40.472" endtime="20250214 14:47:40.961"/>
</kw>
<msg timestamp="20250214 14:47:40.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:40.471" endtime="20250214 14:47:40.961"/>
</kw>
<msg timestamp="20250214 14:47:40.961" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:40.471" endtime="20250214 14:47:40.961"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:40.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:41.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:41.451" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:40.963" endtime="20250214 14:47:41.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:41.452" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:41.452" endtime="20250214 14:47:41.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:41.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:41.452" endtime="20250214 14:47:41.453"/>
</kw>
<status status="PASS" starttime="20250214 14:47:40.962" endtime="20250214 14:47:41.453"/>
</kw>
<msg timestamp="20250214 14:47:41.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:40.962" endtime="20250214 14:47:41.453"/>
</kw>
<msg timestamp="20250214 14:47:41.453" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:40.962" endtime="20250214 14:47:41.453"/>
</kw>
<msg timestamp="20250214 14:47:41.453" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:40.961" endtime="20250214 14:47:41.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:41.454" endtime="20250214 14:47:41.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:39.440" endtime="20250214 14:47:41.454"/>
</test>
<test id="s1-s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:41.458" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:41.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:41.938" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:41.456" endtime="20250214 14:47:41.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:41.939" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
                           PRE ozone-test-5295093684/
                           PRE ozone-test-6273998064/
                           PRE ozone-test-7022296615/
                           PRE ozone-test-7682815004/
                           PRE specialchars/
2025-02-14 14:45:53       4068 README1.md
2025-02-14 14:45:52       4068 README10.md
2025-02-14 14:46:37    6291456 empty_file_ozone-test-8337848884
2025-02-14 14:45:52   10485761 multiUpload.1.gz
2025-02-14 14:45:53   10485761 multiUpload.2.gz
2025-02-14 14:45:47         29 testfile
2025-02-14 14:45:55   20971522 yuyujkdymh</msg>
<status status="PASS" starttime="20250214 14:47:41.938" endtime="20250214 14:47:41.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:41.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:41.939" endtime="20250214 14:47:41.939"/>
</kw>
<status status="PASS" starttime="20250214 14:47:41.456" endtime="20250214 14:47:41.940"/>
</kw>
<msg timestamp="20250214 14:47:41.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:41.456" endtime="20250214 14:47:41.940"/>
</kw>
<msg timestamp="20250214 14:47:41.940" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:41.455" endtime="20250214 14:47:41.940"/>
</kw>
<msg timestamp="20250214 14:47:41.940" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:41.455" endtime="20250214 14:47:41.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:41.940" endtime="20250214 14:47:41.940"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:41.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:42.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:42.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:41.942" endtime="20250214 14:47:42.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:42.425" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:42.424" endtime="20250214 14:47:42.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:42.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:42.425" endtime="20250214 14:47:42.425"/>
</kw>
<status status="PASS" starttime="20250214 14:47:41.941" endtime="20250214 14:47:42.425"/>
</kw>
<msg timestamp="20250214 14:47:42.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:41.941" endtime="20250214 14:47:42.425"/>
</kw>
<msg timestamp="20250214 14:47:42.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:41.941" endtime="20250214 14:47:42.426"/>
</kw>
<msg timestamp="20250214 14:47:42.426" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:41.940" endtime="20250214 14:47:42.426"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:42.430" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:42.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:42.897" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:42.427" endtime="20250214 14:47:42.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:42.898" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
                           PRE ozone-test-5295093684/
                           PRE ozone-test-6273998064/
                           PRE ozone-test-7022296615/
                           PRE ozone-test-7682815004/
                           PRE specialchars/
2025-02-14 14:45:53       4068 README1.md
2025-02-14 14:45:52       4068 README10.md
2025-02-14 14:46:37    6291456 empty_file_ozone-test-8337848884
2025-02-14 14:45:52   10485761 multiUpload.1.gz
2025-02-14 14:45:53   10485761 multiUpload.2.gz
2025-02-14 14:45:47         29 testfile
2025-02-14 14:45:55   20971522 yuyujkdymh</msg>
<status status="PASS" starttime="20250214 14:47:42.897" endtime="20250214 14:47:42.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:42.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:42.898" endtime="20250214 14:47:42.898"/>
</kw>
<status status="PASS" starttime="20250214 14:47:42.427" endtime="20250214 14:47:42.898"/>
</kw>
<msg timestamp="20250214 14:47:42.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:42.427" endtime="20250214 14:47:42.899"/>
</kw>
<msg timestamp="20250214 14:47:42.899" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:42.426" endtime="20250214 14:47:42.899"/>
</kw>
<msg timestamp="20250214 14:47:42.899" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-2349054235/
                           PRE ozone-test-4373182379/
             ...</msg>
<status status="PASS" starttime="20250214 14:47:42.426" endtime="20250214 14:47:42.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:42.899" endtime="20250214 14:47:42.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:41.454" endtime="20250214 14:47:42.899"/>
</test>
<test id="s1-s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:42.903" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:42.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:42.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:42.901" endtime="20250214 14:47:42.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:42.907" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:42.907" endtime="20250214 14:47:42.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:42.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:42.908" endtime="20250214 14:47:42.908"/>
</kw>
<status status="PASS" starttime="20250214 14:47:42.901" endtime="20250214 14:47:42.908"/>
</kw>
<msg timestamp="20250214 14:47:42.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:42.901" endtime="20250214 14:47:42.908"/>
</kw>
<status status="PASS" starttime="20250214 14:47:42.900" endtime="20250214 14:47:42.908"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:42.912" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:43.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:43.401" level="INFO">${output} = Completed 29 Bytes/29 Bytes (650 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 14:47:42.910" endtime="20250214 14:47:43.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:43.402" level="INFO">Completed 29 Bytes/29 Bytes (650 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 14:47:43.401" endtime="20250214 14:47:43.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:43.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:43.402" endtime="20250214 14:47:43.402"/>
</kw>
<status status="PASS" starttime="20250214 14:47:42.909" endtime="20250214 14:47:43.402"/>
</kw>
<msg timestamp="20250214 14:47:43.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:42.909" endtime="20250214 14:47:43.403"/>
</kw>
<msg timestamp="20250214 14:47:43.403" level="INFO">${output} = Completed 29 Bytes/29 Bytes (650 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 14:47:42.909" endtime="20250214 14:47:43.403"/>
</kw>
<msg timestamp="20250214 14:47:43.403" level="INFO">${result} = Completed 29 Bytes/29 Bytes (650 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250214 14:47:42.908" endtime="20250214 14:47:43.403"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:43.406" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:43.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:43.868" level="INFO">${output} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:43.404" endtime="20250214 14:47:43.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:43.869" level="INFO">2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:43.868" endtime="20250214 14:47:43.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:43.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:43.869" endtime="20250214 14:47:43.870"/>
</kw>
<status status="PASS" starttime="20250214 14:47:43.404" endtime="20250214 14:47:43.870"/>
</kw>
<msg timestamp="20250214 14:47:43.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:43.404" endtime="20250214 14:47:43.870"/>
</kw>
<msg timestamp="20250214 14:47:43.870" level="INFO">${output} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:43.403" endtime="20250214 14:47:43.870"/>
</kw>
<msg timestamp="20250214 14:47:43.870" level="INFO">${result} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:43.403" endtime="20250214 14:47:43.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:43.870" endtime="20250214 14:47:43.871"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:43.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:44.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:44.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:43.872" endtime="20250214 14:47:44.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:44.373" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:44.373" endtime="20250214 14:47:44.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:44.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:44.373" endtime="20250214 14:47:44.374"/>
</kw>
<status status="PASS" starttime="20250214 14:47:43.872" endtime="20250214 14:47:44.374"/>
</kw>
<msg timestamp="20250214 14:47:44.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:43.872" endtime="20250214 14:47:44.374"/>
</kw>
<msg timestamp="20250214 14:47:44.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:43.871" endtime="20250214 14:47:44.374"/>
</kw>
<msg timestamp="20250214 14:47:44.374" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:43.871" endtime="20250214 14:47:44.374"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:44.378" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-7682815004/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:44.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:44.847" level="INFO">${output} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:44.376" endtime="20250214 14:47:44.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:44.848" level="INFO">2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:44.848" endtime="20250214 14:47:44.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:44.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:44.848" endtime="20250214 14:47:44.849"/>
</kw>
<status status="PASS" starttime="20250214 14:47:44.376" endtime="20250214 14:47:44.849"/>
</kw>
<msg timestamp="20250214 14:47:44.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:44.375" endtime="20250214 14:47:44.849"/>
</kw>
<msg timestamp="20250214 14:47:44.849" level="INFO">${output} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:44.375" endtime="20250214 14:47:44.849"/>
</kw>
<msg timestamp="20250214 14:47:44.849" level="INFO">${result} = 2025-02-14 14:47:43         29 f1</msg>
<status status="PASS" starttime="20250214 14:47:44.374" endtime="20250214 14:47:44.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:44.849" endtime="20250214 14:47:44.850"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:44.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:45.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:45.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:44.851" endtime="20250214 14:47:45.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:45.346" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:45.345" endtime="20250214 14:47:45.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:45.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:45.346" endtime="20250214 14:47:45.346"/>
</kw>
<status status="PASS" starttime="20250214 14:47:44.851" endtime="20250214 14:47:45.346"/>
</kw>
<msg timestamp="20250214 14:47:45.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:44.851" endtime="20250214 14:47:45.347"/>
</kw>
<msg timestamp="20250214 14:47:45.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:44.850" endtime="20250214 14:47:45.347"/>
</kw>
<msg timestamp="20250214 14:47:45.347" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:44.850" endtime="20250214 14:47:45.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:42.900" endtime="20250214 14:47:45.347"/>
</test>
<test id="s1-s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:45.351" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:45.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:45.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:45.349" endtime="20250214 14:47:45.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:45.356" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:45.355" endtime="20250214 14:47:45.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:45.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:45.356" endtime="20250214 14:47:45.357"/>
</kw>
<status status="PASS" starttime="20250214 14:47:45.348" endtime="20250214 14:47:45.357"/>
</kw>
<msg timestamp="20250214 14:47:45.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:45.348" endtime="20250214 14:47:45.357"/>
</kw>
<status status="PASS" starttime="20250214 14:47:45.348" endtime="20250214 14:47:45.357"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:45.360" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:45.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:45.846" level="INFO">${output} = Completed 29 Bytes/29 Bytes (654 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.358" endtime="20250214 14:47:45.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:45.846" level="INFO">Completed 29 Bytes/29 Bytes (654 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.846" endtime="20250214 14:47:45.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:45.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:45.847" endtime="20250214 14:47:45.847"/>
</kw>
<status status="PASS" starttime="20250214 14:47:45.358" endtime="20250214 14:47:45.847"/>
</kw>
<msg timestamp="20250214 14:47:45.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:45.358" endtime="20250214 14:47:45.847"/>
</kw>
<msg timestamp="20250214 14:47:45.847" level="INFO">${output} = Completed 29 Bytes/29 Bytes (654 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.357" endtime="20250214 14:47:45.847"/>
</kw>
<msg timestamp="20250214 14:47:45.848" level="INFO">${result} = Completed 29 Bytes/29 Bytes (654 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.357" endtime="20250214 14:47:45.848"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:45.851" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:46.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:46.325" level="INFO">${output} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.849" endtime="20250214 14:47:46.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:46.326" level="INFO">2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:46.325" endtime="20250214 14:47:46.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:46.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:46.326" endtime="20250214 14:47:46.326"/>
</kw>
<status status="PASS" starttime="20250214 14:47:45.849" endtime="20250214 14:47:46.327"/>
</kw>
<msg timestamp="20250214 14:47:46.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:45.848" endtime="20250214 14:47:46.327"/>
</kw>
<msg timestamp="20250214 14:47:46.327" level="INFO">${output} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.848" endtime="20250214 14:47:46.327"/>
</kw>
<msg timestamp="20250214 14:47:46.327" level="INFO">${result} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:45.848" endtime="20250214 14:47:46.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:46.327" endtime="20250214 14:47:46.327"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:46.331" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:46.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:46.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:46.329" endtime="20250214 14:47:46.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:46.811" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:46.810" endtime="20250214 14:47:46.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:46.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:46.811" endtime="20250214 14:47:46.811"/>
</kw>
<status status="PASS" starttime="20250214 14:47:46.328" endtime="20250214 14:47:46.811"/>
</kw>
<msg timestamp="20250214 14:47:46.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:46.328" endtime="20250214 14:47:46.811"/>
</kw>
<msg timestamp="20250214 14:47:46.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:46.328" endtime="20250214 14:47:46.812"/>
</kw>
<msg timestamp="20250214 14:47:46.812" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:46.327" endtime="20250214 14:47:46.812"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:46.816" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-7682815004/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:47.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:47.296" level="INFO">${output} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:46.814" endtime="20250214 14:47:47.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:47.297" level="INFO">2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:47.297" endtime="20250214 14:47:47.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:47.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:47.297" endtime="20250214 14:47:47.298"/>
</kw>
<status status="PASS" starttime="20250214 14:47:46.814" endtime="20250214 14:47:47.298"/>
</kw>
<msg timestamp="20250214 14:47:47.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:46.813" endtime="20250214 14:47:47.298"/>
</kw>
<msg timestamp="20250214 14:47:47.298" level="INFO">${output} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:46.812" endtime="20250214 14:47:47.298"/>
</kw>
<msg timestamp="20250214 14:47:47.298" level="INFO">${result} = 2025-02-14 14:47:45         29 filefile</msg>
<status status="PASS" starttime="20250214 14:47:46.812" endtime="20250214 14:47:47.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:47.298" endtime="20250214 14:47:47.299"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:47.302" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:47.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:47.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:47.300" endtime="20250214 14:47:47.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:47.774" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:47.774" endtime="20250214 14:47:47.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:47.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:47.774" endtime="20250214 14:47:47.775"/>
</kw>
<status status="PASS" starttime="20250214 14:47:47.300" endtime="20250214 14:47:47.775"/>
</kw>
<msg timestamp="20250214 14:47:47.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:47.299" endtime="20250214 14:47:47.775"/>
</kw>
<msg timestamp="20250214 14:47:47.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:47.299" endtime="20250214 14:47:47.775"/>
</kw>
<msg timestamp="20250214 14:47:47.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:47.299" endtime="20250214 14:47:47.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:45.347" endtime="20250214 14:47:47.775"/>
</test>
<test id="s1-s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:47.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:48.259" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:48.259" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:47.777" endtime="20250214 14:47:48.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:48.260" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:48.260" endtime="20250214 14:47:48.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:48.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:48.261" endtime="20250214 14:47:48.261"/>
</kw>
<msg timestamp="20250214 14:47:48.261" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:47.777" endtime="20250214 14:47:48.261"/>
</kw>
<msg timestamp="20250214 14:47:48.261" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250214 14:47:47.776" endtime="20250214 14:47:48.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:48.261" endtime="20250214 14:47:48.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:47.776" endtime="20250214 14:47:48.262"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:39.431" endtime="20250214 14:47:48.263"/>
</suite>
<suite id="s1-s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:48.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:48.272" endtime="20250214 14:47:48.272"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.273"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.273" endtime="20250214 14:47:48.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.274" endtime="20250214 14:47:48.274"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:48.274" endtime="20250214 14:47:48.274"/>
</kw>
<status status="PASS" starttime="20250214 14:47:48.272" endtime="20250214 14:47:48.274"/>
</kw>
<test id="s1-s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:48.278" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:48.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:48.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:48.275" endtime="20250214 14:47:48.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:48.280" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:48.280" endtime="20250214 14:47:48.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:48.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:48.280" endtime="20250214 14:47:48.281"/>
</kw>
<status status="PASS" starttime="20250214 14:47:48.275" endtime="20250214 14:47:48.281"/>
</kw>
<msg timestamp="20250214 14:47:48.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:48.275" endtime="20250214 14:47:48.281"/>
</kw>
<status status="PASS" starttime="20250214 14:47:48.274" endtime="20250214 14:47:48.281"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:48.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:48.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:48.815" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:48.282" endtime="20250214 14:47:48.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:48.816" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:48.815" endtime="20250214 14:47:48.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:48.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:48.816" endtime="20250214 14:47:48.816"/>
</kw>
<msg timestamp="20250214 14:47:48.817" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:48.282" endtime="20250214 14:47:48.817"/>
</kw>
<msg timestamp="20250214 14:47:48.817" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:48.281" endtime="20250214 14:47:48.817"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:48.820" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:49.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:49.298" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:48 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:48.818" endtime="20250214 14:47:49.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:49.299" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:48 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:49 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:49 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:49.299" endtime="20250214 14:47:49.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:49.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:49.299" endtime="20250214 14:47:49.300"/>
</kw>
<msg timestamp="20250214 14:47:49.300" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:48 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:48.817" endtime="20250214 14:47:49.300"/>
</kw>
<msg timestamp="20250214 14:47:49.300" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:48 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:48.817" endtime="20250214 14:47:49.300"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:49.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-7682815004/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:49.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:49.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:49.301" endtime="20250214 14:47:49.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:49.789" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:49.788" endtime="20250214 14:47:49.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:49.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:49.789" endtime="20250214 14:47:49.789"/>
</kw>
<msg timestamp="20250214 14:47:49.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:49.301" endtime="20250214 14:47:49.789"/>
</kw>
<msg timestamp="20250214 14:47:49.789" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:47:49.300" endtime="20250214 14:47:49.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:48.274" endtime="20250214 14:47:49.790"/>
</test>
<test id="s1-s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:49.794" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure-non-existent --key ozone-test-7682815004/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:50.276" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:50.277" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:49.792" endtime="20250214 14:47:50.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:50.277" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:50.277" endtime="20250214 14:47:50.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:50.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:50.278" endtime="20250214 14:47:50.278"/>
</kw>
<msg timestamp="20250214 14:47:50.278" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:49.791" endtime="20250214 14:47:50.278"/>
</kw>
<msg timestamp="20250214 14:47:50.278" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:49.791" endtime="20250214 14:47:50.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:50.278" endtime="20250214 14:47:50.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:50.279" endtime="20250214 14:47:50.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:49.790" endtime="20250214 14:47:50.279"/>
</test>
<test id="s1-s1-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 14:47:50.280" endtime="20250214 14:47:50.280"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:50.283" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:50.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:50.822" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:50.281" endtime="20250214 14:47:50.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:50.822" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:50.822" endtime="20250214 14:47:50.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:50.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:50.823" endtime="20250214 14:47:50.823"/>
</kw>
<msg timestamp="20250214 14:47:50.823" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:50.281" endtime="20250214 14:47:50.823"/>
</kw>
<msg timestamp="20250214 14:47:50.823" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:50.280" endtime="20250214 14:47:50.823"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:50.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:51.320" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:51.320" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:50.824" endtime="20250214 14:47:51.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:51.321" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:51.320" endtime="20250214 14:47:51.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:51.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:51.321" endtime="20250214 14:47:51.321"/>
</kw>
<msg timestamp="20250214 14:47:51.322" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:50.824" endtime="20250214 14:47:51.322"/>
</kw>
<msg timestamp="20250214 14:47:51.322" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:50.823" endtime="20250214 14:47:51.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:51.322" endtime="20250214 14:47:51.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:51.322" endtime="20250214 14:47:51.322"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:50.279" endtime="20250214 14:47:51.323"/>
</test>
<test id="s1-s1-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250214 14:47:51.324" endtime="20250214 14:47:51.324"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:51.327" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:51.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:51.851" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:51.325" endtime="20250214 14:47:51.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:51.852" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:51.852" endtime="20250214 14:47:51.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:51.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:51.853" endtime="20250214 14:47:51.853"/>
</kw>
<msg timestamp="20250214 14:47:51.853" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:51.324" endtime="20250214 14:47:51.854"/>
</kw>
<msg timestamp="20250214 14:47:51.854" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:51.324" endtime="20250214 14:47:51.854"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:51.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:52.349" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:52.349" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:51.856" endtime="20250214 14:47:52.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:52.350" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:52.350" endtime="20250214 14:47:52.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:52.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:52.351" endtime="20250214 14:47:52.351"/>
</kw>
<msg timestamp="20250214 14:47:52.351" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:51.855" endtime="20250214 14:47:52.351"/>
</kw>
<msg timestamp="20250214 14:47:52.351" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:51.854" endtime="20250214 14:47:52.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:52.351" endtime="20250214 14:47:52.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:52.352" endtime="20250214 14:47:52.352"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:52.355" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:52.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:52.834" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:52.353" endtime="20250214 14:47:52.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:52.834" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:47:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:52 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:52 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:52.834" endtime="20250214 14:47:52.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:52.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:52.835" endtime="20250214 14:47:52.835"/>
</kw>
<msg timestamp="20250214 14:47:52.835" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:52.353" endtime="20250214 14:47:52.835"/>
</kw>
<msg timestamp="20250214 14:47:52.835" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:47:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:47:52.352" endtime="20250214 14:47:52.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:51.323" endtime="20250214 14:47:52.836"/>
</test>
<test id="s1-s1-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:52.839" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:53.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:47:53.316" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:52.837" endtime="20250214 14:47:53.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:53.317" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:53.316" endtime="20250214 14:47:53.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:53.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:53.317" endtime="20250214 14:47:53.317"/>
</kw>
<msg timestamp="20250214 14:47:53.318" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:52.837" endtime="20250214 14:47:53.318"/>
</kw>
<msg timestamp="20250214 14:47:53.318" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250214 14:47:52.836" endtime="20250214 14:47:53.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:53.318" endtime="20250214 14:47:53.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:53.318" endtime="20250214 14:47:53.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:52.836" endtime="20250214 14:47:53.319"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:48.264" endtime="20250214 14:47:53.319"/>
</suite>
<suite id="s1-s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:53.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.329" endtime="20250214 14:47:53.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.330" endtime="20250214 14:47:53.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.330" endtime="20250214 14:47:53.330"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:53.330" endtime="20250214 14:47:53.330"/>
</kw>
<status status="PASS" starttime="20250214 14:47:53.328" endtime="20250214 14:47:53.330"/>
</kw>
<test id="s1-s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:53.333" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:53.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:53.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:53.331" endtime="20250214 14:47:53.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:53.338" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:53.337" endtime="20250214 14:47:53.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:53.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:53.338" endtime="20250214 14:47:53.338"/>
</kw>
<status status="PASS" starttime="20250214 14:47:53.331" endtime="20250214 14:47:53.339"/>
</kw>
<msg timestamp="20250214 14:47:53.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:53.331" endtime="20250214 14:47:53.339"/>
</kw>
<status status="PASS" starttime="20250214 14:47:53.330" endtime="20250214 14:47:53.339"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:53.342" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:53.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:53.850" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.340" endtime="20250214 14:47:53.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:53.851" level="INFO">{
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.851" endtime="20250214 14:47:53.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:53.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:53.851" endtime="20250214 14:47:53.852"/>
</kw>
<status status="PASS" starttime="20250214 14:47:53.340" endtime="20250214 14:47:53.852"/>
</kw>
<msg timestamp="20250214 14:47:53.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:53.340" endtime="20250214 14:47:53.852"/>
</kw>
<msg timestamp="20250214 14:47:53.852" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.339" endtime="20250214 14:47:53.853"/>
</kw>
<msg timestamp="20250214 14:47:53.853" level="INFO">${result} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.339" endtime="20250214 14:47:53.853"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:53.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:54.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:54.411" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.854" endtime="20250214 14:47:54.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:54.412" level="INFO">{
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:54.411" endtime="20250214 14:47:54.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:54.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:54.412" endtime="20250214 14:47:54.413"/>
</kw>
<status status="PASS" starttime="20250214 14:47:53.854" endtime="20250214 14:47:54.413"/>
</kw>
<msg timestamp="20250214 14:47:54.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:53.854" endtime="20250214 14:47:54.413"/>
</kw>
<msg timestamp="20250214 14:47:54.413" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.853" endtime="20250214 14:47:54.413"/>
</kw>
<msg timestamp="20250214 14:47:54.413" level="INFO">${result} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:53.853" endtime="20250214 14:47:54.413"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:54.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:54.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:54.922" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:54.414" endtime="20250214 14:47:54.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:54.923" level="INFO">{
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:54.923" endtime="20250214 14:47:54.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:54.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:54.923" endtime="20250214 14:47:54.924"/>
</kw>
<status status="PASS" starttime="20250214 14:47:54.414" endtime="20250214 14:47:54.924"/>
</kw>
<msg timestamp="20250214 14:47:54.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:54.414" endtime="20250214 14:47:54.924"/>
</kw>
<msg timestamp="20250214 14:47:54.924" level="INFO">${output} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:54.414" endtime="20250214 14:47:54.924"/>
</kw>
<msg timestamp="20250214 14:47:54.924" level="INFO">${result} = {
    "ETag": "\"3372abc4fa3f5f9940bd92f7afd66088\""
}</msg>
<status status="PASS" starttime="20250214 14:47:54.413" endtime="20250214 14:47:54.924"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:54.928" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:55.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:55.407" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1",
            "LastModified": "2025-02-14T14:47:53.787Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:54.926" endtime="20250214 14:47:55.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:55.408" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1",
            "LastModified": "2025-02-14T14:47:53.787Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f2",
            "LastModified": "2025-02-14T14:47:54.343Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f3",
            "LastModified": "2025-02-14T14:47:54.861Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:55.408" endtime="20250214 14:47:55.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:55.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:55.409" endtime="20250214 14:47:55.409"/>
</kw>
<status status="PASS" starttime="20250214 14:47:54.926" endtime="20250214 14:47:55.409"/>
</kw>
<msg timestamp="20250214 14:47:55.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:54.925" endtime="20250214 14:47:55.410"/>
</kw>
<msg timestamp="20250214 14:47:55.410" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1",
            "LastModified": "2025-02-14T14:47:53.787Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:54.925" endtime="20250214 14:47:55.410"/>
</kw>
<msg timestamp="20250214 14:47:55.410" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1",
            "LastModified": "2025-02-14T14:47:53.787Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:54.925" endtime="20250214 14:47:55.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.410" endtime="20250214 14:47:55.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.411" endtime="20250214 14:47:55.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.412" endtime="20250214 14:47:55.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.412" endtime="20250214 14:47:55.412"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.412" endtime="20250214 14:47:55.413"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:55.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket erasure --delete 'Objects=[{Key=ozone-test-7682815004/multidelete/key=value/f1},{Key=ozone-test-7682815004/multidelete/key=value/f2},{Key=ozone-test-7682815004/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:55.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:55.905" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 14:47:55.414" endtime="20250214 14:47:55.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:55.906" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 14:47:55.905" endtime="20250214 14:47:55.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:55.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:55.906" endtime="20250214 14:47:55.907"/>
</kw>
<status status="PASS" starttime="20250214 14:47:55.414" endtime="20250214 14:47:55.907"/>
</kw>
<msg timestamp="20250214 14:47:55.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:55.414" endtime="20250214 14:47:55.907"/>
</kw>
<msg timestamp="20250214 14:47:55.907" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 14:47:55.413" endtime="20250214 14:47:55.907"/>
</kw>
<msg timestamp="20250214 14:47:55.907" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250214 14:47:55.413" endtime="20250214 14:47:55.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:55.907" endtime="20250214 14:47:55.908"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:55.911" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:56.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:56.393" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f3",
            "LastModified": "2025-02-14T14:47:54.861Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:55.909" endtime="20250214 14:47:56.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:56.394" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f3",
            "LastModified": "2025-02-14T14:47:54.861Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:56.393" endtime="20250214 14:47:56.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:56.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:56.394" endtime="20250214 14:47:56.394"/>
</kw>
<status status="PASS" starttime="20250214 14:47:55.909" endtime="20250214 14:47:56.394"/>
</kw>
<msg timestamp="20250214 14:47:56.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:55.908" endtime="20250214 14:47:56.395"/>
</kw>
<msg timestamp="20250214 14:47:56.395" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f3",
            "LastModified": "2025-02-14T14:47:54.861Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:55.908" endtime="20250214 14:47:56.395"/>
</kw>
<msg timestamp="20250214 14:47:56.395" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/multidelete/key=value/f3",
            "LastModified": "2025-02-14T14:47:54.861Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250214 14:47:55.908" endtime="20250214 14:47:56.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:56.395" endtime="20250214 14:47:56.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:56.395" endtime="20250214 14:47:56.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:56.396" endtime="20250214 14:47:56.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:56.396" endtime="20250214 14:47:56.396"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:56.396" endtime="20250214 14:47:56.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:53.330" endtime="20250214 14:47:56.397"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:53.321" endtime="20250214 14:47:56.397"/>
</suite>
<suite id="s1-s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:47:56.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:56.406" endtime="20250214 14:47:56.406"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.406" endtime="20250214 14:47:56.406"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:47:56.407" endtime="20250214 14:47:56.407"/>
</kw>
<status status="PASS" starttime="20250214 14:47:56.406" endtime="20250214 14:47:56.407"/>
</kw>
<test id="s1-s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:56.411" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:47:56.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:56.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:56.408" endtime="20250214 14:47:56.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:56.413" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:56.413" endtime="20250214 14:47:56.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:56.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:56.413" endtime="20250214 14:47:56.414"/>
</kw>
<status status="PASS" starttime="20250214 14:47:56.408" endtime="20250214 14:47:56.414"/>
</kw>
<msg timestamp="20250214 14:47:56.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:56.408" endtime="20250214 14:47:56.414"/>
</kw>
<status status="PASS" starttime="20250214 14:47:56.408" endtime="20250214 14:47:56.414"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:56.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:56.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:56.941" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:56.415" endtime="20250214 14:47:56.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:56.942" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:56.941" endtime="20250214 14:47:56.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:56.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:56.942" endtime="20250214 14:47:56.942"/>
</kw>
<status status="PASS" starttime="20250214 14:47:56.415" endtime="20250214 14:47:56.942"/>
</kw>
<msg timestamp="20250214 14:47:56.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:56.415" endtime="20250214 14:47:56.942"/>
</kw>
<msg timestamp="20250214 14:47:56.942" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:56.414" endtime="20250214 14:47:56.943"/>
</kw>
<msg timestamp="20250214 14:47:56.943" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:47:56.414" endtime="20250214 14:47:56.943"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:56.947" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:57.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:57.448" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:56.944" endtime="20250214 14:47:57.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:57.449" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:57.449" endtime="20250214 14:47:57.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:57.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:57.449" endtime="20250214 14:47:57.450"/>
</kw>
<status status="PASS" starttime="20250214 14:47:56.944" endtime="20250214 14:47:57.450"/>
</kw>
<msg timestamp="20250214 14:47:57.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:56.944" endtime="20250214 14:47:57.450"/>
</kw>
<msg timestamp="20250214 14:47:57.450" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:56.943" endtime="20250214 14:47:57.450"/>
</kw>
<msg timestamp="20250214 14:47:57.450" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:56.943" endtime="20250214 14:47:57.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:57.450" endtime="20250214 14:47:57.451"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:57.454" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:57.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:57.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:47:57.451" endtime="20250214 14:47:57.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:57.458" level="INFO"/>
<status status="PASS" starttime="20250214 14:47:57.458" endtime="20250214 14:47:57.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:57.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:57.458" endtime="20250214 14:47:57.458"/>
</kw>
<status status="PASS" starttime="20250214 14:47:57.451" endtime="20250214 14:47:57.458"/>
</kw>
<msg timestamp="20250214 14:47:57.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:57.451" endtime="20250214 14:47:57.459"/>
</kw>
<status status="PASS" starttime="20250214 14:47:57.451" endtime="20250214 14:47:57.459"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:57.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:57.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:57.959" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 14:47:57.460" endtime="20250214 14:47:57.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:57.960" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 14:47:57.959" endtime="20250214 14:47:57.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:57.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:57.960" endtime="20250214 14:47:57.961"/>
</kw>
<status status="PASS" starttime="20250214 14:47:57.460" endtime="20250214 14:47:57.961"/>
</kw>
<msg timestamp="20250214 14:47:57.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:57.460" endtime="20250214 14:47:57.961"/>
</kw>
<msg timestamp="20250214 14:47:57.961" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 14:47:57.459" endtime="20250214 14:47:57.961"/>
</kw>
<msg timestamp="20250214 14:47:57.961" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250214 14:47:57.459" endtime="20250214 14:47:57.961"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:57.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:58.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:58.461" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:57.963" endtime="20250214 14:47:58.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:58.462" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        },
        {
            "Key": "ozone-test-7682815004/putobject/key=value/zerobyte",
            "LastModified": "2025-02-14T14:47:57.895Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:47:58.461" endtime="20250214 14:47:58.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:58.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:58.462" endtime="20250214 14:47:58.462"/>
</kw>
<status status="PASS" starttime="20250214 14:47:57.962" endtime="20250214 14:47:58.462"/>
</kw>
<msg timestamp="20250214 14:47:58.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:57.962" endtime="20250214 14:47:58.462"/>
</kw>
<msg timestamp="20250214 14:47:58.463" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:57.962" endtime="20250214 14:47:58.463"/>
</kw>
<msg timestamp="20250214 14:47:58.463" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:47:56.868Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:47:57.961" endtime="20250214 14:47:58.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:58.463" endtime="20250214 14:47:58.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:56.407" endtime="20250214 14:47:58.463"/>
</test>
<test id="s1-s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:58.468" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:58.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:58.955" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:58.466" endtime="20250214 14:47:58.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:58.956" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:58 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:58 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:58.956" endtime="20250214 14:47:58.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:58.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:58.956" endtime="20250214 14:47:58.957"/>
</kw>
<status status="PASS" starttime="20250214 14:47:58.466" endtime="20250214 14:47:58.957"/>
</kw>
<msg timestamp="20250214 14:47:58.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:58.465" endtime="20250214 14:47:58.957"/>
</kw>
<msg timestamp="20250214 14:47:58.957" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:58.465" endtime="20250214 14:47:58.957"/>
</kw>
<msg timestamp="20250214 14:47:58.957" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:47:58.464" endtime="20250214 14:47:58.957"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:58.961" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:58.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:58.965" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.959" endtime="20250214 14:47:58.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:58.966" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.966" endtime="20250214 14:47:58.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:58.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:58.966" endtime="20250214 14:47:58.967"/>
</kw>
<status status="PASS" starttime="20250214 14:47:58.958" endtime="20250214 14:47:58.967"/>
</kw>
<msg timestamp="20250214 14:47:58.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:58.958" endtime="20250214 14:47:58.967"/>
</kw>
<msg timestamp="20250214 14:47:58.967" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.958" endtime="20250214 14:47:58.967"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:58.970" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:58.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:58.974" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.968" endtime="20250214 14:47:58.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:58.975" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.974" endtime="20250214 14:47:58.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:58.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:58.975" endtime="20250214 14:47:58.975"/>
</kw>
<status status="PASS" starttime="20250214 14:47:58.968" endtime="20250214 14:47:58.976"/>
</kw>
<msg timestamp="20250214 14:47:58.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:58.968" endtime="20250214 14:47:58.976"/>
</kw>
<msg timestamp="20250214 14:47:58.976" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250214 14:47:58.967" endtime="20250214 14:47:58.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:58.976" endtime="20250214 14:47:58.976"/>
</kw>
<status status="PASS" starttime="20250214 14:47:58.957" endtime="20250214 14:47:58.976"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:58.977" endtime="20250214 14:47:58.977"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:58.981" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:59.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:59.465" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:57 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:58.978" endtime="20250214 14:47:59.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:59.466" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:57 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:59 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:59 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:59.466" endtime="20250214 14:47:59.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:59.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:59.466" endtime="20250214 14:47:59.467"/>
</kw>
<status status="PASS" starttime="20250214 14:47:58.978" endtime="20250214 14:47:59.467"/>
</kw>
<msg timestamp="20250214 14:47:59.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:58.978" endtime="20250214 14:47:59.467"/>
</kw>
<msg timestamp="20250214 14:47:59.467" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:57 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:58.977" endtime="20250214 14:47:59.467"/>
</kw>
<msg timestamp="20250214 14:47:59.467" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:57 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:58.977" endtime="20250214 14:47:59.467"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:59.470" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:59.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:59.475" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.468" endtime="20250214 14:47:59.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:59.475" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.475" endtime="20250214 14:47:59.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:59.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:59.476" endtime="20250214 14:47:59.476"/>
</kw>
<status status="PASS" starttime="20250214 14:47:59.468" endtime="20250214 14:47:59.476"/>
</kw>
<msg timestamp="20250214 14:47:59.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:59.468" endtime="20250214 14:47:59.476"/>
</kw>
<msg timestamp="20250214 14:47:59.476" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.467" endtime="20250214 14:47:59.476"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:59.479" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:59.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:59.483" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.477" endtime="20250214 14:47:59.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:59.484" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.484" endtime="20250214 14:47:59.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:59.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:59.484" endtime="20250214 14:47:59.484"/>
</kw>
<status status="PASS" starttime="20250214 14:47:59.477" endtime="20250214 14:47:59.485"/>
</kw>
<msg timestamp="20250214 14:47:59.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:59.477" endtime="20250214 14:47:59.485"/>
</kw>
<msg timestamp="20250214 14:47:59.485" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250214 14:47:59.476" endtime="20250214 14:47:59.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:47:59.485" endtime="20250214 14:47:59.485"/>
</kw>
<status status="PASS" starttime="20250214 14:47:59.467" endtime="20250214 14:47:59.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:58.464" endtime="20250214 14:47:59.486"/>
</test>
<test id="s1-s1-s14-t3" name="Get object with wrong signature" line="52">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:47:59.487" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:47:59.486" endtime="20250214 14:47:59.487"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<status status="NOT RUN" starttime="20250214 14:47:59.487" endtime="20250214 14:47:59.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:47:59.487" endtime="20250214 14:47:59.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:59.486" endtime="20250214 14:47:59.487">Skip in unsecure cluster</status>
</test>
<test id="s1-s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="57">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:59.491" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:47:59.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:59.988" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:59.489" endtime="20250214 14:47:59.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:59.989" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:47:59 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:47:59 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:47:59.989" endtime="20250214 14:47:59.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:47:59.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:47:59.990" endtime="20250214 14:47:59.990"/>
</kw>
<status status="PASS" starttime="20250214 14:47:59.489" endtime="20250214 14:47:59.990"/>
</kw>
<msg timestamp="20250214 14:47:59.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:59.488" endtime="20250214 14:47:59.990"/>
</kw>
<msg timestamp="20250214 14:47:59.990" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:59.488" endtime="20250214 14:47:59.990"/>
</kw>
<msg timestamp="20250214 14:47:59.991" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:47:59.488" endtime="20250214 14:47:59.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:59.991" endtime="20250214 14:47:59.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:59.991" endtime="20250214 14:47:59.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:47:59.991" endtime="20250214 14:47:59.992"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:47:59.995" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:47:59.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:47:59.999" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250214 14:47:59.993" endtime="20250214 14:47:59.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:47:59.999" level="INFO">Rando</msg>
<status status="PASS" starttime="20250214 14:47:59.999" endtime="20250214 14:47:59.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:00.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:00.000" endtime="20250214 14:48:00.000"/>
</kw>
<status status="PASS" starttime="20250214 14:47:59.992" endtime="20250214 14:48:00.000"/>
</kw>
<msg timestamp="20250214 14:48:00.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:47:59.992" endtime="20250214 14:48:00.000"/>
</kw>
<msg timestamp="20250214 14:48:00.000" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20250214 14:47:59.992" endtime="20250214 14:48:00.000"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:00.004" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:00.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:00.008" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250214 14:48:00.001" endtime="20250214 14:48:00.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:00.010" level="INFO">Rando</msg>
<status status="PASS" starttime="20250214 14:48:00.009" endtime="20250214 14:48:00.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:00.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:00.010" endtime="20250214 14:48:00.010"/>
</kw>
<status status="PASS" starttime="20250214 14:48:00.001" endtime="20250214 14:48:00.010"/>
</kw>
<msg timestamp="20250214 14:48:00.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:00.001" endtime="20250214 14:48:00.011"/>
</kw>
<msg timestamp="20250214 14:48:00.011" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20250214 14:48:00.000" endtime="20250214 14:48:00.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:00.011" endtime="20250214 14:48:00.012"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:00.016" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:00.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:00.506" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.014" endtime="20250214 14:48:00.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:00.507" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:00 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:00 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:00.506" endtime="20250214 14:48:00.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:00.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:00.507" endtime="20250214 14:48:00.507"/>
</kw>
<status status="PASS" starttime="20250214 14:48:00.013" endtime="20250214 14:48:00.507"/>
</kw>
<msg timestamp="20250214 14:48:00.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:00.013" endtime="20250214 14:48:00.508"/>
</kw>
<msg timestamp="20250214 14:48:00.508" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.012" endtime="20250214 14:48:00.508"/>
</kw>
<msg timestamp="20250214 14:48:00.508" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.012" endtime="20250214 14:48:00.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:00.508" endtime="20250214 14:48:00.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:00.508" endtime="20250214 14:48:00.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:00.509" endtime="20250214 14:48:00.509"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:00.512" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:48:00.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:00.516" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.510" endtime="20250214 14:48:00.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:00.517" level="INFO">ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.516" endtime="20250214 14:48:00.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:00.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:00.517" endtime="20250214 14:48:00.517"/>
</kw>
<status status="PASS" starttime="20250214 14:48:00.509" endtime="20250214 14:48:00.517"/>
</kw>
<msg timestamp="20250214 14:48:00.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:00.509" endtime="20250214 14:48:00.517"/>
</kw>
<msg timestamp="20250214 14:48:00.517" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.509" endtime="20250214 14:48:00.517"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:00.520" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:00.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:00.524" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.518" endtime="20250214 14:48:00.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:00.525" level="INFO">ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.524" endtime="20250214 14:48:00.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:00.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:00.525" endtime="20250214 14:48:00.525"/>
</kw>
<status status="PASS" starttime="20250214 14:48:00.518" endtime="20250214 14:48:00.525"/>
</kw>
<msg timestamp="20250214 14:48:00.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:00.518" endtime="20250214 14:48:00.525"/>
</kw>
<msg timestamp="20250214 14:48:00.526" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20250214 14:48:00.518" endtime="20250214 14:48:00.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:00.526" endtime="20250214 14:48:00.526"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:00.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:01.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:01.012" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.527" endtime="20250214 14:48:01.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:01.013" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:00 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:00 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:01.013" endtime="20250214 14:48:01.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:01.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:01.014" endtime="20250214 14:48:01.014"/>
</kw>
<status status="PASS" starttime="20250214 14:48:00.527" endtime="20250214 14:48:01.014"/>
</kw>
<msg timestamp="20250214 14:48:01.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:00.527" endtime="20250214 14:48:01.014"/>
</kw>
<msg timestamp="20250214 14:48:01.014" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.526" endtime="20250214 14:48:01.014"/>
</kw>
<msg timestamp="20250214 14:48:01.015" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:00.526" endtime="20250214 14:48:01.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:01.015" endtime="20250214 14:48:01.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:01.015" endtime="20250214 14:48:01.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:01.015" endtime="20250214 14:48:01.016"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:01.019" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:48:01.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:01.022" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.017" endtime="20250214 14:48:01.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:01.023" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.023" endtime="20250214 14:48:01.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:01.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:01.023" endtime="20250214 14:48:01.024"/>
</kw>
<status status="PASS" starttime="20250214 14:48:01.016" endtime="20250214 14:48:01.024"/>
</kw>
<msg timestamp="20250214 14:48:01.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:01.016" endtime="20250214 14:48:01.024"/>
</kw>
<msg timestamp="20250214 14:48:01.024" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.016" endtime="20250214 14:48:01.024"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:01.027" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:01.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:01.031" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.025" endtime="20250214 14:48:01.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:01.031" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.031" endtime="20250214 14:48:01.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:01.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:01.031" endtime="20250214 14:48:01.032"/>
</kw>
<status status="PASS" starttime="20250214 14:48:01.025" endtime="20250214 14:48:01.032"/>
</kw>
<msg timestamp="20250214 14:48:01.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:01.025" endtime="20250214 14:48:01.032"/>
</kw>
<msg timestamp="20250214 14:48:01.032" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20250214 14:48:01.024" endtime="20250214 14:48:01.032"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:01.032" endtime="20250214 14:48:01.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:47:59.487" endtime="20250214 14:48:01.033"/>
</test>
<test id="s1-s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="83">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:01.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:01.529" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:01.529" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:01.035" endtime="20250214 14:48:01.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:01.530" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:01.530" endtime="20250214 14:48:01.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:01.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:01.531" endtime="20250214 14:48:01.531"/>
</kw>
<msg timestamp="20250214 14:48:01.531" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:01.034" endtime="20250214 14:48:01.531"/>
</kw>
<msg timestamp="20250214 14:48:01.531" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:01.034" endtime="20250214 14:48:01.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:01.531" endtime="20250214 14:48:01.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:01.033" endtime="20250214 14:48:01.532"/>
</test>
<test id="s1-s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="88">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:01.536" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.035" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:01.534" endtime="20250214 14:48:02.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.036" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:01 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:01 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:02.036" endtime="20250214 14:48:02.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.036" endtime="20250214 14:48:02.037"/>
</kw>
<status status="PASS" starttime="20250214 14:48:01.534" endtime="20250214 14:48:02.037"/>
</kw>
<msg timestamp="20250214 14:48:02.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:01.534" endtime="20250214 14:48:02.037"/>
</kw>
<msg timestamp="20250214 14:48:02.037" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:01.533" endtime="20250214 14:48:02.037"/>
</kw>
<msg timestamp="20250214 14:48:02.038" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:01.533" endtime="20250214 14:48:02.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.038" endtime="20250214 14:48:02.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.038" endtime="20250214 14:48:02.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.039" endtime="20250214 14:48:02.039"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.043" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.047" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.041" endtime="20250214 14:48:02.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.048" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.047" endtime="20250214 14:48:02.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.048" endtime="20250214 14:48:02.049"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.040" endtime="20250214 14:48:02.049"/>
</kw>
<msg timestamp="20250214 14:48:02.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.040" endtime="20250214 14:48:02.049"/>
</kw>
<msg timestamp="20250214 14:48:02.049" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.039" endtime="20250214 14:48:02.049"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.052" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.056" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.050" endtime="20250214 14:48:02.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.057" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.056" endtime="20250214 14:48:02.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.057" endtime="20250214 14:48:02.057"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.050" endtime="20250214 14:48:02.057"/>
</kw>
<msg timestamp="20250214 14:48:02.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.050" endtime="20250214 14:48:02.057"/>
</kw>
<msg timestamp="20250214 14:48:02.058" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.049" endtime="20250214 14:48:02.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:02.058" endtime="20250214 14:48:02.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:01.532" endtime="20250214 14:48:02.058"/>
</test>
<test id="s1-s1-s14-t7" name="Get Partial object from s3 with only start offset" line="97">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.063" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.551" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:02.060" endtime="20250214 14:48:02.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.551" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:02 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:02 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:02.551" endtime="20250214 14:48:02.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.552" endtime="20250214 14:48:02.552"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.060" endtime="20250214 14:48:02.552"/>
</kw>
<msg timestamp="20250214 14:48:02.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.060" endtime="20250214 14:48:02.552"/>
</kw>
<msg timestamp="20250214 14:48:02.552" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:02.060" endtime="20250214 14:48:02.552"/>
</kw>
<msg timestamp="20250214 14:48:02.553" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:02.059" endtime="20250214 14:48:02.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.553" endtime="20250214 14:48:02.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.553" endtime="20250214 14:48:02.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:02.553" endtime="20250214 14:48:02.554"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.557" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.560" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.555" endtime="20250214 14:48:02.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.561" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.561" endtime="20250214 14:48:02.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.561" endtime="20250214 14:48:02.562"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.554" endtime="20250214 14:48:02.562"/>
</kw>
<msg timestamp="20250214 14:48:02.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.554" endtime="20250214 14:48:02.562"/>
</kw>
<msg timestamp="20250214 14:48:02.562" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.554" endtime="20250214 14:48:02.562"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.566" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:02.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:02.569" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.564" endtime="20250214 14:48:02.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:02.570" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.569" endtime="20250214 14:48:02.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:02.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:02.570" endtime="20250214 14:48:02.570"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.563" endtime="20250214 14:48:02.571"/>
</kw>
<msg timestamp="20250214 14:48:02.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.563" endtime="20250214 14:48:02.571"/>
</kw>
<msg timestamp="20250214 14:48:02.571" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:02.562" endtime="20250214 14:48:02.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:02.571" endtime="20250214 14:48:02.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:02.059" endtime="20250214 14:48:02.571"/>
</test>
<test id="s1-s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="106">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:02.576" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:03.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.075" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:02.574" endtime="20250214 14:48:03.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.076" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:03 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:03 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:03.075" endtime="20250214 14:48:03.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.076" endtime="20250214 14:48:03.076"/>
</kw>
<status status="PASS" starttime="20250214 14:48:02.573" endtime="20250214 14:48:03.077"/>
</kw>
<msg timestamp="20250214 14:48:03.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:02.573" endtime="20250214 14:48:03.077"/>
</kw>
<msg timestamp="20250214 14:48:03.077" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:02.573" endtime="20250214 14:48:03.077"/>
</kw>
<msg timestamp="20250214 14:48:03.077" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:02.572" endtime="20250214 14:48:03.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.077" endtime="20250214 14:48:03.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.078" endtime="20250214 14:48:03.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.078" endtime="20250214 14:48:03.078"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.081" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:48:03.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.085" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250214 14:48:03.079" endtime="20250214 14:48:03.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.086" level="INFO">R</msg>
<status status="PASS" starttime="20250214 14:48:03.085" endtime="20250214 14:48:03.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.086" endtime="20250214 14:48:03.086"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.079" endtime="20250214 14:48:03.086"/>
</kw>
<msg timestamp="20250214 14:48:03.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.079" endtime="20250214 14:48:03.087"/>
</kw>
<msg timestamp="20250214 14:48:03.087" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20250214 14:48:03.078" endtime="20250214 14:48:03.087"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.090" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:03.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.093" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250214 14:48:03.088" endtime="20250214 14:48:03.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.094" level="INFO">R</msg>
<status status="PASS" starttime="20250214 14:48:03.093" endtime="20250214 14:48:03.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.094" endtime="20250214 14:48:03.095"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.087" endtime="20250214 14:48:03.095"/>
</kw>
<msg timestamp="20250214 14:48:03.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.087" endtime="20250214 14:48:03.095"/>
</kw>
<msg timestamp="20250214 14:48:03.095" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20250214 14:48:03.087" endtime="20250214 14:48:03.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:03.095" endtime="20250214 14:48:03.095"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:03.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.591" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.097" endtime="20250214 14:48:03.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.592" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:03 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:03 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:03.591" endtime="20250214 14:48:03.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.592" endtime="20250214 14:48:03.592"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.096" endtime="20250214 14:48:03.592"/>
</kw>
<msg timestamp="20250214 14:48:03.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.096" endtime="20250214 14:48:03.592"/>
</kw>
<msg timestamp="20250214 14:48:03.593" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.096" endtime="20250214 14:48:03.593"/>
</kw>
<msg timestamp="20250214 14:48:03.593" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.095" endtime="20250214 14:48:03.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.593" endtime="20250214 14:48:03.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.593" endtime="20250214 14:48:03.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:03.593" endtime="20250214 14:48:03.594"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.597" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:48:03.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.600" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250214 14:48:03.595" endtime="20250214 14:48:03.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.601" level="INFO">o</msg>
<status status="PASS" starttime="20250214 14:48:03.601" endtime="20250214 14:48:03.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.601" endtime="20250214 14:48:03.602"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.594" endtime="20250214 14:48:03.602"/>
</kw>
<msg timestamp="20250214 14:48:03.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.594" endtime="20250214 14:48:03.602"/>
</kw>
<msg timestamp="20250214 14:48:03.602" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20250214 14:48:03.594" endtime="20250214 14:48:03.602"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.605" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:03.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:03.608" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250214 14:48:03.603" endtime="20250214 14:48:03.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:03.609" level="INFO">o</msg>
<status status="PASS" starttime="20250214 14:48:03.609" endtime="20250214 14:48:03.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:03.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:03.609" endtime="20250214 14:48:03.610"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.603" endtime="20250214 14:48:03.610"/>
</kw>
<msg timestamp="20250214 14:48:03.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.603" endtime="20250214 14:48:03.610"/>
</kw>
<msg timestamp="20250214 14:48:03.610" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20250214 14:48:03.602" endtime="20250214 14:48:03.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:03.610" endtime="20250214 14:48:03.611"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:02.572" endtime="20250214 14:48:03.611"/>
</test>
<test id="s1-s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="123">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:03.615" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:04.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.118" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.613" endtime="20250214 14:48:04.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.119" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:04 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:04 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:04.118" endtime="20250214 14:48:04.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.119" endtime="20250214 14:48:04.119"/>
</kw>
<status status="PASS" starttime="20250214 14:48:03.613" endtime="20250214 14:48:04.119"/>
</kw>
<msg timestamp="20250214 14:48:04.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:03.613" endtime="20250214 14:48:04.120"/>
</kw>
<msg timestamp="20250214 14:48:04.120" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.612" endtime="20250214 14:48:04.120"/>
</kw>
<msg timestamp="20250214 14:48:04.120" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250214 14:48:03.612" endtime="20250214 14:48:04.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.120" endtime="20250214 14:48:04.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.121" endtime="20250214 14:48:04.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.121" endtime="20250214 14:48:04.121"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.124" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20250214 14:48:04.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.128" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250214 14:48:04.122" endtime="20250214 14:48:04.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.129" level="INFO">ext</msg>
<status status="PASS" starttime="20250214 14:48:04.128" endtime="20250214 14:48:04.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.129" endtime="20250214 14:48:04.129"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.122" endtime="20250214 14:48:04.129"/>
</kw>
<msg timestamp="20250214 14:48:04.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.122" endtime="20250214 14:48:04.129"/>
</kw>
<msg timestamp="20250214 14:48:04.130" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20250214 14:48:04.121" endtime="20250214 14:48:04.130"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.132" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:04.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.136" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250214 14:48:04.130" endtime="20250214 14:48:04.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.136" level="INFO">ext</msg>
<status status="PASS" starttime="20250214 14:48:04.136" endtime="20250214 14:48:04.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.137" endtime="20250214 14:48:04.137"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.130" endtime="20250214 14:48:04.137"/>
</kw>
<msg timestamp="20250214 14:48:04.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.130" endtime="20250214 14:48:04.137"/>
</kw>
<msg timestamp="20250214 14:48:04.137" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20250214 14:48:04.130" endtime="20250214 14:48:04.137"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:04.137" endtime="20250214 14:48:04.138"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.141" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:04.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.633" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.139" endtime="20250214 14:48:04.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.634" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:04 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:04 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:04.633" endtime="20250214 14:48:04.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.634" endtime="20250214 14:48:04.634"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.139" endtime="20250214 14:48:04.635"/>
</kw>
<msg timestamp="20250214 14:48:04.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.139" endtime="20250214 14:48:04.635"/>
</kw>
<msg timestamp="20250214 14:48:04.635" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.138" endtime="20250214 14:48:04.635"/>
</kw>
<msg timestamp="20250214 14:48:04.635" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.138" endtime="20250214 14:48:04.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.635" endtime="20250214 14:48:04.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.636" endtime="20250214 14:48:04.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:04.636" endtime="20250214 14:48:04.636"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.639" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:04.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.643" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.637" endtime="20250214 14:48:04.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.643" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.643" endtime="20250214 14:48:04.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.643" endtime="20250214 14:48:04.644"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.637" endtime="20250214 14:48:04.644"/>
</kw>
<msg timestamp="20250214 14:48:04.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.636" endtime="20250214 14:48:04.644"/>
</kw>
<msg timestamp="20250214 14:48:04.644" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.636" endtime="20250214 14:48:04.644"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.647" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:04.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:04.650" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.645" endtime="20250214 14:48:04.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:04.651" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.651" endtime="20250214 14:48:04.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:04.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:04.651" endtime="20250214 14:48:04.652"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.645" endtime="20250214 14:48:04.652"/>
</kw>
<msg timestamp="20250214 14:48:04.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.645" endtime="20250214 14:48:04.652"/>
</kw>
<msg timestamp="20250214 14:48:04.652" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:04.644" endtime="20250214 14:48:04.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:04.652" endtime="20250214 14:48:04.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:03.611" endtime="20250214 14:48:04.653"/>
</test>
<test id="s1-s1-s14-t10" name="Incorrect values for end and start offset" line="141">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:04.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.145" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.655" endtime="20250214 14:48:05.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.146" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:05 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:05 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:05.146" endtime="20250214 14:48:05.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.146" endtime="20250214 14:48:05.147"/>
</kw>
<status status="PASS" starttime="20250214 14:48:04.655" endtime="20250214 14:48:05.147"/>
</kw>
<msg timestamp="20250214 14:48:05.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:04.654" endtime="20250214 14:48:05.147"/>
</kw>
<msg timestamp="20250214 14:48:05.147" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.654" endtime="20250214 14:48:05.147"/>
</kw>
<msg timestamp="20250214 14:48:05.147" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:04.654" endtime="20250214 14:48:05.147"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:05.147" endtime="20250214 14:48:05.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:05.148" endtime="20250214 14:48:05.148"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.151" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.155" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.149" endtime="20250214 14:48:05.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.156" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.156" endtime="20250214 14:48:05.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.156" endtime="20250214 14:48:05.157"/>
</kw>
<status status="PASS" starttime="20250214 14:48:05.149" endtime="20250214 14:48:05.157"/>
</kw>
<msg timestamp="20250214 14:48:05.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:05.148" endtime="20250214 14:48:05.157"/>
</kw>
<msg timestamp="20250214 14:48:05.157" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.148" endtime="20250214 14:48:05.157"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.160" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.164" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.158" endtime="20250214 14:48:05.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.165" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.164" endtime="20250214 14:48:05.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.165" endtime="20250214 14:48:05.165"/>
</kw>
<status status="PASS" starttime="20250214 14:48:05.158" endtime="20250214 14:48:05.165"/>
</kw>
<msg timestamp="20250214 14:48:05.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:05.158" endtime="20250214 14:48:05.166"/>
</kw>
<msg timestamp="20250214 14:48:05.166" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.157" endtime="20250214 14:48:05.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:05.166" endtime="20250214 14:48:05.166"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.169" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.653" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:05.167" endtime="20250214 14:48:05.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.654" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:05 GMT",
    "Metadata": {},
    "ExpiresString": "Fri, 14 Feb 2025 14:48:05 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:05.653" endtime="20250214 14:48:05.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.654" endtime="20250214 14:48:05.654"/>
</kw>
<status status="PASS" starttime="20250214 14:48:05.167" endtime="20250214 14:48:05.654"/>
</kw>
<msg timestamp="20250214 14:48:05.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:05.167" endtime="20250214 14:48:05.655"/>
</kw>
<msg timestamp="20250214 14:48:05.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:05.167" endtime="20250214 14:48:05.655"/>
</kw>
<msg timestamp="20250214 14:48:05.655" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:47:56 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:05.166" endtime="20250214 14:48:05.655"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:05.655" endtime="20250214 14:48:05.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:05.655" endtime="20250214 14:48:05.656"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.659" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.662" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.657" endtime="20250214 14:48:05.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.663" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.663" endtime="20250214 14:48:05.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.663" endtime="20250214 14:48:05.664"/>
</kw>
<status status="PASS" starttime="20250214 14:48:05.656" endtime="20250214 14:48:05.664"/>
</kw>
<msg timestamp="20250214 14:48:05.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:05.656" endtime="20250214 14:48:05.664"/>
</kw>
<msg timestamp="20250214 14:48:05.664" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.656" endtime="20250214 14:48:05.664"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.667" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:05.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:05.671" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.665" endtime="20250214 14:48:05.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:05.671" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.671" endtime="20250214 14:48:05.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:05.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:05.671" endtime="20250214 14:48:05.672"/>
</kw>
<status status="PASS" starttime="20250214 14:48:05.665" endtime="20250214 14:48:05.672"/>
</kw>
<msg timestamp="20250214 14:48:05.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:05.664" endtime="20250214 14:48:05.672"/>
</kw>
<msg timestamp="20250214 14:48:05.672" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250214 14:48:05.664" endtime="20250214 14:48:05.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:05.672" endtime="20250214 14:48:05.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:04.653" endtime="20250214 14:48:05.673"/>
</test>
<test id="s1-s1-s14-t11" name="Zero byte file" line="156">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:05.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:06.159" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:06.159" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:05.675" endtime="20250214 14:48:06.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:06.160" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.160" endtime="20250214 14:48:06.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:06.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:06.160" endtime="20250214 14:48:06.161"/>
</kw>
<msg timestamp="20250214 14:48:06.161" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:05.674" endtime="20250214 14:48:06.161"/>
</kw>
<msg timestamp="20250214 14:48:06.161" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:05.674" endtime="20250214 14:48:06.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:06.161" endtime="20250214 14:48:06.161"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:06.165" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:06.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:06.653" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.162" endtime="20250214 14:48:06.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:06.654" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.653" endtime="20250214 14:48:06.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:06.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:06.654" endtime="20250214 14:48:06.654"/>
</kw>
<msg timestamp="20250214 14:48:06.654" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.162" endtime="20250214 14:48:06.654"/>
</kw>
<msg timestamp="20250214 14:48:06.654" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.161" endtime="20250214 14:48:06.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:06.655" endtime="20250214 14:48:06.655"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:06.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:07.158" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:07.158" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.656" endtime="20250214 14:48:07.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:07.159" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:07.158" endtime="20250214 14:48:07.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:07.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:07.159" endtime="20250214 14:48:07.159"/>
</kw>
<msg timestamp="20250214 14:48:07.160" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.655" endtime="20250214 14:48:07.160"/>
</kw>
<msg timestamp="20250214 14:48:07.160" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250214 14:48:06.655" endtime="20250214 14:48:07.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:07.160" endtime="20250214 14:48:07.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:05.673" endtime="20250214 14:48:07.160"/>
</test>
<test id="s1-s1-s14-t12" name="Create file with user defined metadata and tags" line="166">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:07.164" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 14:48:07.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:07.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:07.162" endtime="20250214 14:48:07.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:07.167" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:07.166" endtime="20250214 14:48:07.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:07.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:07.167" endtime="20250214 14:48:07.168"/>
</kw>
<status status="PASS" starttime="20250214 14:48:07.162" endtime="20250214 14:48:07.168"/>
</kw>
<msg timestamp="20250214 14:48:07.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:07.162" endtime="20250214 14:48:07.168"/>
</kw>
<status status="PASS" starttime="20250214 14:48:07.161" endtime="20250214 14:48:07.168"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:07.171" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:07.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:07.720" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:07.169" endtime="20250214 14:48:07.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:07.721" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:07.721" endtime="20250214 14:48:07.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:07.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:07.721" endtime="20250214 14:48:07.722"/>
</kw>
<status status="PASS" starttime="20250214 14:48:07.169" endtime="20250214 14:48:07.722"/>
</kw>
<msg timestamp="20250214 14:48:07.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:07.169" endtime="20250214 14:48:07.722"/>
</kw>
<msg timestamp="20250214 14:48:07.722" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:07.169" endtime="20250214 14:48:07.722"/>
</kw>
<status status="PASS" starttime="20250214 14:48:07.168" endtime="20250214 14:48:07.722"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:07.726" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:08.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:08.225" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:07.724" endtime="20250214 14:48:08.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:08.226" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:08 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 14:48:08 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:08.225" endtime="20250214 14:48:08.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:08.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:08.226" endtime="20250214 14:48:08.226"/>
</kw>
<status status="PASS" starttime="20250214 14:48:07.724" endtime="20250214 14:48:08.227"/>
</kw>
<msg timestamp="20250214 14:48:08.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:07.723" endtime="20250214 14:48:08.227"/>
</kw>
<msg timestamp="20250214 14:48:08.227" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:07.723" endtime="20250214 14:48:08.227"/>
</kw>
<msg timestamp="20250214 14:48:08.227" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:07.723" endtime="20250214 14:48:08.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:08.227" endtime="20250214 14:48:08.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:08.228" endtime="20250214 14:48:08.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:08.231" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-7682815004/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:11.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:11.274" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-7682815004/putobject/custom-metadata/key1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T1...</msg>
<status status="PASS" starttime="20250214 14:48:08.229" endtime="20250214 14:48:11.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:11.275" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-7682815004/putobject/custom-metadata/key1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T14:48:07.605Z",
  "modificationTime" : "2025-02-14T14:48:07.636Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "requiredNodes" : 5,
    "minimumNodes" : 3,
    "replicationType" : "EC"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 115816896921600107,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 732,
  "file" : true
}</msg>
<status status="PASS" starttime="20250214 14:48:11.274" endtime="20250214 14:48:11.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:11.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:11.275" endtime="20250214 14:48:11.275"/>
</kw>
<status status="PASS" starttime="20250214 14:48:08.228" endtime="20250214 14:48:11.276"/>
</kw>
<msg timestamp="20250214 14:48:11.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:08.228" endtime="20250214 14:48:11.276"/>
</kw>
<msg timestamp="20250214 14:48:11.276" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-7682815004/putobject/custom-metadata/key1",
  "owner" : "dlfknslnfslf",
  "dataSize" : 11,
  "creationTime" : "2025-02-14T1...</msg>
<status status="PASS" starttime="20250214 14:48:08.228" endtime="20250214 14:48:11.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:11.276" endtime="20250214 14:48:11.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:11.276" endtime="20250214 14:48:11.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:11.277" endtime="20250214 14:48:11.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:11.277" endtime="20250214 14:48:11.277"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:11.281" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:11.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:11.775" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:11.279" endtime="20250214 14:48:11.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:11.776" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:11 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:11 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:11.775" endtime="20250214 14:48:11.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:11.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:11.776" endtime="20250214 14:48:11.776"/>
</kw>
<status status="PASS" starttime="20250214 14:48:11.279" endtime="20250214 14:48:11.777"/>
</kw>
<msg timestamp="20250214 14:48:11.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:11.279" endtime="20250214 14:48:11.777"/>
</kw>
<msg timestamp="20250214 14:48:11.777" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:11.278" endtime="20250214 14:48:11.777"/>
</kw>
<msg timestamp="20250214 14:48:11.777" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:11.277" endtime="20250214 14:48:11.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:11.777" endtime="20250214 14:48:11.777"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:11.780" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:07 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:11 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:11 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:11.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:11.785" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:48:11.778" endtime="20250214 14:48:11.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:11.786" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:48:11.786" endtime="20250214 14:48:11.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:11.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:11.786" endtime="20250214 14:48:11.787"/>
</kw>
<msg timestamp="20250214 14:48:11.787" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:48:11.777" endtime="20250214 14:48:11.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:11.787" endtime="20250214 14:48:11.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:07.161" endtime="20250214 14:48:11.787"/>
</test>
<test id="s1-s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="185">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:11.791" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 14:48:11.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:11.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:11.789" endtime="20250214 14:48:11.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:11.794" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:11.793" endtime="20250214 14:48:11.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:11.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:11.794" endtime="20250214 14:48:11.794"/>
</kw>
<status status="PASS" starttime="20250214 14:48:11.789" endtime="20250214 14:48:11.794"/>
</kw>
<msg timestamp="20250214 14:48:11.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:11.788" endtime="20250214 14:48:11.794"/>
</kw>
<status status="PASS" starttime="20250214 14:48:11.788" endtime="20250214 14:48:11.794"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:11.798" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:12.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:12.330" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:11.796" endtime="20250214 14:48:12.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:12.331" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:12.330" endtime="20250214 14:48:12.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:12.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:12.331" endtime="20250214 14:48:12.331"/>
</kw>
<status status="PASS" starttime="20250214 14:48:11.795" endtime="20250214 14:48:12.331"/>
</kw>
<msg timestamp="20250214 14:48:12.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:11.795" endtime="20250214 14:48:12.331"/>
</kw>
<msg timestamp="20250214 14:48:12.332" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:11.795" endtime="20250214 14:48:12.332"/>
</kw>
<status status="PASS" starttime="20250214 14:48:11.794" endtime="20250214 14:48:12.332"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:12.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:12.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:12.812" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:12.333" endtime="20250214 14:48:12.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:12.813" level="INFO">{
    "LastModified": "Fri, 14 Feb 2025 14:48:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:12 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Fri, 14 Feb 2025 14:48:12 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:12.813" endtime="20250214 14:48:12.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:12.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:12.813" endtime="20250214 14:48:12.814"/>
</kw>
<status status="PASS" starttime="20250214 14:48:12.333" endtime="20250214 14:48:12.814"/>
</kw>
<msg timestamp="20250214 14:48:12.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:12.333" endtime="20250214 14:48:12.814"/>
</kw>
<msg timestamp="20250214 14:48:12.814" level="INFO">${output} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:12.332" endtime="20250214 14:48:12.814"/>
</kw>
<msg timestamp="20250214 14:48:12.814" level="INFO">${result} = {
    "LastModified": "Fri, 14 Feb 2025 14:48:12 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250214 14:48:12.332" endtime="20250214 14:48:12.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:12.814" endtime="20250214 14:48:12.815"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:12.815" endtime="20250214 14:48:12.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:11.788" endtime="20250214 14:48:12.815"/>
</test>
<test id="s1-s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="193">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:12.819" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 14:48:12.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:12.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:12.817" endtime="20250214 14:48:12.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:12.822" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:12.821" endtime="20250214 14:48:12.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:12.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:12.822" endtime="20250214 14:48:12.822"/>
</kw>
<status status="PASS" starttime="20250214 14:48:12.817" endtime="20250214 14:48:12.822"/>
</kw>
<msg timestamp="20250214 14:48:12.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:12.816" endtime="20250214 14:48:12.823"/>
</kw>
<status status="PASS" starttime="20250214 14:48:12.816" endtime="20250214 14:48:12.823"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:48:12.825" level="INFO">${custom_metadata_value} = ZFhDM67dXC5n0Q8SwWv3OtDQowsvSuUhO3PsDnCFzfpCMEnFqLnIJJJf8CGSIrlUQlt8D0RvibSQn0MoWTYTE8YcIAnLIvZsKLmPqboCtxDgvPqYfxnE9JSOZdS3i54ibkf1sphC8pot72Umk8kh4hwX3l6V0t4DMnnVPjdHjaXTtAmaubkj8DOLj7CPl9vVyiWJmTxQ...</msg>
<status status="PASS" starttime="20250214 14:48:12.823" endtime="20250214 14:48:12.825"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:12.828" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=ZFhDM67dXC5n0Q8SwWv3OtDQowsvSuUhO3PsDnCFzfpCMEnFqLnIJJJf8CGSIrlUQlt8D0RvibSQn0MoWTYTE8YcIAnLIvZsKLmPqboCtxDgvPqYfxnE9JSOZdS3i54ibkf1sphC8pot72Umk8kh4hwX3l6V0t4DMnnVPjdHjaXTtAmaubkj8DOLj7CPl9vVyiWJmTxQIUrI7ZW0EKSbeyGgMuIaoOS8gd2tR1lDqCe68mdZm3JIqd9s5Vs81NCtfiOtSZkY8NGTY9NChKP56L95ZRrbSC9R7uJD2ramJZuh7j78XnyICpqNvPU7S9pRiW6gyl3jCsOxME5umpTVD8e0JCAHz2NWWB5l79m01iYdKSJq9QCni0bbeFd5rVFeAcH8N9bLQHoi7gImHJbz7mFdo87yzJo4oQi3n6T2hSY8G3RjU19vechqZPH4lIV3qSuTLyVAqo5Cu3pqUFVeQ1IRmqVzxClElZzudxWWgJVEJ017yWPDtB1DXh7sZmnrLidFcSiuCS2wWktrQ18EYxJJK0Q29rUCw4gflAqA4FH9YaHUc53EC1CvHJR4TJrjuT8baqpLQnBzVGboa0wU0EPgFwjCbpzzneASyg6NcEGL0ivZjStujwr5iNsMWo1jCBCX8qSLwZ1xE6MXWRwyCAE8ig3ejtqhtwehZ64rkisSxy9ll9mi2ObDZURqUo5fR3ervtL5fGucDYGjNUsLKGeE2Dl0LMIVa8P8nn6iRzbx2am0AHS90n8qCRJFWYw5yLWv9bMDmOmju5AEkq6OSBrjz6PvdSzcKqUUaAZtDxLM1pqu0HFRqmKOunxUiln4rQ1jDlvacGFkNiBa8g1tcwiDRiGH873PL1vsfkJukyGjiVJjMLmX9EXE2Yze7jc22STnmid1BzRUfAf9UWI7OFtWmuKsjD9GHgQVD7H2Z4ntlKvWyQcMW1Ikw3UNyZSL0uC6UktHvtLQaVldH6Fsnd32Eve34bDXaWemi17uPqOXbbRBhch1l5qDBeMZUa7nboVoMNsaPuIQEb0p9PnNG5PZRJOt2Hem9Xh61i4HMr6sSWmxTeAWIVHIBzMhmqKyUprE3f3DhNpzoRwzKWQvo7xoE9vhY76EDCZLXwGnH2RpM9vuBP4n1ZKriCrVZVwCKG3yIjhegDn2z2qeASM64FMljEpkSWP6mkD1YIpau6FbV7kY1DXF1Bz2XL4i28Nm2Up4X1p3czOE5rRNyBZbCz097r9QJWEs38sdqGqQ5plZc1b71ogOwKDzSvM6luNJjObAt4mLr0NWDJJiy3b8TDWfRFqBbG8rYkDf9zsXhWRsvXTfFnsYon8OIBuz0fslJdvPspW1X0xrkqxluYTZ9GmZZE7gNUHXr8czgV9cIrwxyccTjZAS2MVfAb7gl16I9dcATbjpRsCveRKwDg0zBlbIxRONXp6ol5Hcnqb8T2ncGI8zYFEMILI8tYpPQWORvDSJtuY7nDxf28o3gHwh4OuEUqxtLG8BOZLD3UguNdqQmLWUeerRx6o2bTmNwSPOT9Et126zSNrpV2o4Mx3imgF0zhn2iwluesNKPXYjE3nPEv5FE1IFicm50IJhzqC9DulzDVCxcO6cEWKwcldXFaAkm8XV8QvYV4N2jqcscAKSW5yov5j43069PrDYdHCfol7zZLRrUwq5Gq9hR5xY42CkKhEBzd5QS7MfDnUIXVZuN6xK0m36TeK5X0Jiu1W2JJMqEwk3aH71jhqOqIpTtf6WAQGlrfz0gKEBNCDReae5506xwDhEiQhNKhGd5u5nUA5Dn110vWYt5T7CDHrrQ7isrbt9YcPUJ4Y2vpX5N5XN0Cdt2V1pQDokPuP1V8KbKy0W25edFnJyht8p6JgE1bxmiKzOYkUmZRrKDWMgjEM8e9o8XTevOrjr2dIzGwU29hJr8cbHmew0qVEexl6DttoBy8hCB5PQlNlH3i3EmGoc2UGWa5DMgc7Ppw5OH5hBsDoNjyaTAQIvmmoPp1zA2oODHNG8EVnGKLYDn90O1FhCfjOQDFc9MmWwArcywQWDHMopBgXaRGsFZPiqtkCX3LqR2Km3fxwGyDSBBxRX2jlzy5Nf5M2tIIqQZVrJw5WIr2tL3xGqOZqGwfucdQGTTjfvshsEg21B6ejyKxhqUyzw9A74bYSi8xLvgL4WHHiKdYR1dmd5w8m2lrqpSISLK9kiVdlrLJXdJ4BAXHS5DNnnLedvwgIqgtKpIYeghLYv0oGrpmZz3ic2MdImSmhOBRQwBCJpQ1xOy4RBrVdWdHWlgtypAjFifVFIUWPDEM42wWbjPcd4NPvmlpN9TO3YgvtNQzdDznyWxFg5SCXkYc4EpO8iQoqYIhY4mcLLh8U1jEfgeHYlPrLGHDTueMff6SHljDp4R0xGJYFmUvnwKtN9fwPsuc2zTVci3VZbrozzlahtPEBLvo5IV6Z0OhIsg1Apv0MoQwda5fVR5bBjkTffSf42hk8Ig5PTwuMk7YGubwWVXN901DRj97WgaqF9pJACNO1SXI2L9ARzit7yqpSaA6RZB0D8BbQroVxUuRRjFbnqedBp9btfOwC20bz6H4h6MDkGe3BtaxBKwp2zj42qE1cef9Xk0swIURfJuzjFViMZLtb2RmsFwZjRtoTsv5I7NDSQTUAAAnVEQYm8JjjZALOY7PUh6SU9TSURHHOXc2Qs5kaWe3FMDs06iqQefD5cvd4FkDip83lBXy8MRzcmlwbRGSYfq6xI7uGRA58V6v4pB8NpHVn1wCdBOIhm1GFztjGB0nMv1jKdji8Qm4UgMYGoBEqMv5Fcv4P1rgcnqSjFQPLUQmGLPhZ8k7zSkDzk0cGOw6J0O4H2TeESHO4LefzbXSpQCoSNnKSBfvm3lUq3ws02DTEriopZsvO3Tuy9sBPLvHWeQ2ZxWZGOYn07jxxFXvNCX9YIXcSo5BWVJ3WGGH46F0u9oTBRK6S0IHxGLAMTRXq8UJHijsTbfQobbGHc3qGZG5tw" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:13.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:13.314" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:48:12.826" endtime="20250214 14:48:13.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:13.314" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:48:13.314" endtime="20250214 14:48:13.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:13.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:13.315" endtime="20250214 14:48:13.315"/>
</kw>
<msg timestamp="20250214 14:48:13.315" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:48:12.826" endtime="20250214 14:48:13.315"/>
</kw>
<msg timestamp="20250214 14:48:13.315" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250214 14:48:12.825" endtime="20250214 14:48:13.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:13.315" endtime="20250214 14:48:13.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:13.316" endtime="20250214 14:48:13.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:12.816" endtime="20250214 14:48:13.316"/>
</test>
<test id="s1-s1-s14-t15" name="Create files invalid tags" line="200">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:13.320" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:13.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:13.809" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 14:48:13.318" endtime="20250214 14:48:13.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:13.810" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 14:48:13.810" endtime="20250214 14:48:13.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:13.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:13.810" endtime="20250214 14:48:13.811"/>
</kw>
<msg timestamp="20250214 14:48:13.811" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 14:48:13.318" endtime="20250214 14:48:13.811"/>
</kw>
<msg timestamp="20250214 14:48:13.811" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250214 14:48:13.317" endtime="20250214 14:48:13.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:13.811" endtime="20250214 14:48:13.812"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:48:13.812" level="INFO">${long_tag_key} = Q8YmGu0oy3JSf0wWnrWlzeLJmt7hVHMP0MciJ5aTyOgvMMExJay2IIYk2aaxOEJA4Nf3bQcHQqfmpp6hIU0FTGnvFwTrOj9u1vMAYRr9KLA0a26na9Cu631z8whQyHwr5</msg>
<status status="PASS" starttime="20250214 14:48:13.812" endtime="20250214 14:48:13.812"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:13.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="Q8YmGu0oy3JSf0wWnrWlzeLJmt7hVHMP0MciJ5aTyOgvMMExJay2IIYk2aaxOEJA4Nf3bQcHQqfmpp6hIU0FTGnvFwTrOj9u1vMAYRr9KLA0a26na9Cu631z8whQyHwr5=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:14.315" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:14.315" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 14:48:13.813" endtime="20250214 14:48:14.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:14.316" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 14:48:14.316" endtime="20250214 14:48:14.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:14.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:14.316" endtime="20250214 14:48:14.317"/>
</kw>
<msg timestamp="20250214 14:48:14.317" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 14:48:13.813" endtime="20250214 14:48:14.317"/>
</kw>
<msg timestamp="20250214 14:48:14.317" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250214 14:48:13.812" endtime="20250214 14:48:14.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:14.317" endtime="20250214 14:48:14.317"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:48:14.318" level="INFO">${long_tag_value} = eErvXAsMAwEAeGNHdlxFFS6lUFq5h3HZaZc0jGlW6NqMx7BKx48MpaEEM48b6uv1dVJRzzBW3v0RfZNIBS0wyu3A8oKWwsvZPc2HXAzUT7Puvlew22yTdIbLy73BTC59iliBctCVvkipaBLVQQSLypuNd7TDGvYG9tGwR3bpnOeogGaFyC18LWgh7W3ad7gXv2iUA8i9...</msg>
<status status="PASS" starttime="20250214 14:48:14.317" endtime="20250214 14:48:14.318"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:14.321" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=eErvXAsMAwEAeGNHdlxFFS6lUFq5h3HZaZc0jGlW6NqMx7BKx48MpaEEM48b6uv1dVJRzzBW3v0RfZNIBS0wyu3A8oKWwsvZPc2HXAzUT7Puvlew22yTdIbLy73BTC59iliBctCVvkipaBLVQQSLypuNd7TDGvYG9tGwR3bpnOeogGaFyC18LWgh7W3ad7gXv2iUA8i9S7LgaUq2wJCG2C5QsvUnRdLndQykPPkdnjT128mguqLMP1TlbBn3KWzIf" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:14.808" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:14.808" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 14:48:14.319" endtime="20250214 14:48:14.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:14.809" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 14:48:14.808" endtime="20250214 14:48:14.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:14.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:14.809" endtime="20250214 14:48:14.809"/>
</kw>
<msg timestamp="20250214 14:48:14.809" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 14:48:14.319" endtime="20250214 14:48:14.809"/>
</kw>
<msg timestamp="20250214 14:48:14.809" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250214 14:48:14.318" endtime="20250214 14:48:14.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:14.810" endtime="20250214 14:48:14.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:13.317" endtime="20250214 14:48:14.810"/>
</test>
<test id="s1-s1-s14-t16" name="Create files with too many tags" line="210">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:14.814" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250214 14:48:14.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:14.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:14.812" endtime="20250214 14:48:14.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:14.817" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:14.816" endtime="20250214 14:48:14.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:14.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:14.817" endtime="20250214 14:48:14.817"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.812" endtime="20250214 14:48:14.817"/>
</kw>
<msg timestamp="20250214 14:48:14.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:14.811" endtime="20250214 14:48:14.818"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.811" endtime="20250214 14:48:14.818"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:48:14.818" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20250214 14:48:14.818" endtime="20250214 14:48:14.818"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.818" endtime="20250214 14:48:14.819"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.818" endtime="20250214 14:48:14.819"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.819" endtime="20250214 14:48:14.819"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.819" endtime="20250214 14:48:14.819"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.819" endtime="20250214 14:48:14.820"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.819" endtime="20250214 14:48:14.820"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.820" endtime="20250214 14:48:14.820"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.820" endtime="20250214 14:48:14.820"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.820" endtime="20250214 14:48:14.821"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.820" endtime="20250214 14:48:14.821"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.821" endtime="20250214 14:48:14.821"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.821" endtime="20250214 14:48:14.821"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.821" endtime="20250214 14:48:14.822"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.821" endtime="20250214 14:48:14.822"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.822" endtime="20250214 14:48:14.822"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.822" endtime="20250214 14:48:14.822"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.822" endtime="20250214 14:48:14.823"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.822" endtime="20250214 14:48:14.823"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.823" endtime="20250214 14:48:14.823"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.823" endtime="20250214 14:48:14.823"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250214 14:48:14.823" endtime="20250214 14:48:14.824"/>
</kw>
<status status="PASS" starttime="20250214 14:48:14.823" endtime="20250214 14:48:14.824"/>
</iter>
<status status="PASS" starttime="20250214 14:48:14.818" endtime="20250214 14:48:14.824"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250214 14:48:14.824" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20250214 14:48:14.824" endtime="20250214 14:48:14.824"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:14.827" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:15.318" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:15.318" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 14:48:14.825" endtime="20250214 14:48:15.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:15.319" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 14:48:15.318" endtime="20250214 14:48:15.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:15.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:15.319" endtime="20250214 14:48:15.319"/>
</kw>
<msg timestamp="20250214 14:48:15.319" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 14:48:14.825" endtime="20250214 14:48:15.319"/>
</kw>
<msg timestamp="20250214 14:48:15.319" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250214 14:48:14.824" endtime="20250214 14:48:15.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:15.320" endtime="20250214 14:48:15.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:14.811" endtime="20250214 14:48:15.320"/>
</test>
<test id="s1-s1-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="221">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:15.324" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20250214 14:48:15.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:15.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:15.322" endtime="20250214 14:48:15.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:15.332" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:15.332" endtime="20250214 14:48:15.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:15.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:15.332" endtime="20250214 14:48:15.333"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.321" endtime="20250214 14:48:15.333"/>
</kw>
<msg timestamp="20250214 14:48:15.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:15.321" endtime="20250214 14:48:15.333"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.321" endtime="20250214 14:48:15.333"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:15.336" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:15.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:15.341" level="INFO">${output} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.334" endtime="20250214 14:48:15.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:15.341" level="INFO">8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.341" endtime="20250214 14:48:15.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:15.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:15.342" endtime="20250214 14:48:15.342"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.333" endtime="20250214 14:48:15.342"/>
</kw>
<msg timestamp="20250214 14:48:15.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:15.333" endtime="20250214 14:48:15.342"/>
</kw>
<msg timestamp="20250214 14:48:15.342" level="INFO">${file_md5_checksum} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.333" endtime="20250214 14:48:15.342"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:15.346" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:15.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:15.873" level="INFO">${output} = 2025-02-14 14:48:15,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:15,650 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.344" endtime="20250214 14:48:15.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:15.874" level="INFO">2025-02-14 14:48:15,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:15,650 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://erasure']
2025-02-14 14:48:15,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f668a82d820&gt;
2025-02-14 14:48:15,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f668b118c10&gt;
2025-02-14 14:48:15,650 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f668ae09e50&gt;
2025-02-14 14:48:15,652 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:15,653 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f668a89a4c0&gt;
2025-02-14 14:48:15,654 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f668a7de820&gt;
2025-02-14 14:48:15,654 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f668a8b3310&gt;
2025-02-14 14:48:15,654 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,654 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f668a7de820&gt;
2025-02-14 14:48:15,655 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f668a8b3310&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,656 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,657 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,658 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f668add86a0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f668a72cee0&gt;
2025-02-14 14:48:15,660 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:15,660 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:15,661 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:15,685 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:15,685 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f668c34d9d0&gt;
2025-02-14 14:48:15,691 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:15,699 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:15,719 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:15,722 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:15,724 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f668b44fa60&gt;
2025-02-14 14:48:15,724 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f668b44f820&gt;
2025-02-14 14:48:15,724 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,728 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:15,729 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:15,730 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:15,730 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:15,730 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,730 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:15,731 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f668c34d9d0&gt;
2025-02-14 14:48:15,731 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f668b44fa60&gt;
2025-02-14 14:48:15,731 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f668b44f820&gt;
2025-02-14 14:48:15,732 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,733 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:15,735 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:15,735 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:15,735 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,735 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:15,736 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f668c34d9d0&gt;
2025-02-14 14:48:15,736 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f668b44fa60&gt;
2025-02-14 14:48:15,736 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f668b44f820&gt;
2025-02-14 14:48:15,737 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,739 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:15,740 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:15,740 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:15,740 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:15,741 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:15,741 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:15,742 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:15,742 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6689b74250&gt;}) about to wait for the following futures []
2025-02-14 14:48:15,742 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6689b74250&gt;}) done waiting for dependent futures
2025-02-14 14:48:15,742 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6689b74250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6689c7d310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f6689b687f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6689b68880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6689b68ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6689b74250&gt;}
2025-02-14 14:48:15,743 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6689b68ac0&gt; for transfer request: 0.
2025-02-14 14:48:15,743 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:15,743 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:15,743 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:15,743 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6689c7d310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6689b74ac0&gt;, 'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f668b39d4c0&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f668b3978b0&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f668b39ddc0&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f668b397820&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f668b39e700&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6689c56250&gt;&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f6689cdd100&gt;&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f668b397670&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f668b39e8b0&gt;
2025-02-14 14:48:15,744 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6689c56250&gt;&gt;
2025-02-14 14:48:15,745 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:15,745 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:15,746 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:15,746 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:15,746 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f668b50d790&gt;
2025-02-14 14:48:15,746 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:15,748 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f668b397b80&gt;
2025-02-14 14:48:15,748 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:15,748 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6689c56220&gt;&gt;
2025-02-14 14:48:15,748 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f668b397280&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f668b39ed30&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f668b39dee0&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'jKGGjiqcnzeOCOpzM8DjbQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6689b74ac0&gt;, 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6689c7d490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f6689b74ac0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f668aad3790&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6689c7d400&gt;&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f668b3974c0&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f668b39e820&gt;
2025-02-14 14:48:15,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f6689c56220&gt;&gt;
2025-02-14 14:48:15,750 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:15,750 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/small_file

content-md5:jKGGjiqcnzeOCOpzM8DjbQ==
host:s3g:9878
x-amz-content-sha256:2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a
x-amz-date:20250214T144815Z

content-md5;host;x-amz-content-sha256;x-amz-date
2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a
2025-02-14 14:48:15,750 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144815Z
20250214/us-west-1/s3/aws4_request
489e6aa4a7c44aea8021c0921e2f015a5ef6d8a1b18df481c9c979f5839d8511
2025-02-14 14:48:15,751 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
6a196334dd5dc854a12547c496c54b2d65d5ae4697b31eca326da7f349694a24
2025-02-14 14:48:15,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f668aad3820&gt;
2025-02-14 14:48:15,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f668b39e670&gt;
2025-02-14 14:48:15,751 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'jKGGjiqcnzeOCOpzM8DjbQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144815Z', 'X-Amz-Content-SHA256': b'2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=6a196334dd5dc854a12547c496c54b2d65d5ae4697b31eca326da7f349694a24', 'amz-sdk-invocation-id': b'613b2622-55d6-4e57-a9e4-b42d583c2f92', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-14 14:48:15,751 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:15,752 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:15,765 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (10.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (19.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (27.9 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:15,812 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/small_file HTTP/1.1" 200 0
2025-02-14 14:48:15,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f668b39eb80&gt;
2025-02-14 14:48:15,812 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f668b39e9d0&gt;
2025-02-14 14:48:15,812 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:15 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:15 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Server': 'Ozone', 'x-amz-id-2': 'y0McikMCyWINaI', 'x-amz-request-id': '8d578afc-d813-4894-a7bf-5741cc2e8674', 'Content-Length': '0'}
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f668b39eca0&gt;
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6689c56190&gt;
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f6689c56250&gt;&gt;
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f668a829d30&gt;
2025-02-14 14:48:15,813 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 976.6 KiB/976.6 KiB (13.6 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://erasure/small_file            
2025-02-14 14:48:15,814 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:15.874" endtime="20250214 14:48:15.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:15.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:15.875" endtime="20250214 14:48:15.876"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.343" endtime="20250214 14:48:15.876"/>
</kw>
<msg timestamp="20250214 14:48:15.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:15.343" endtime="20250214 14:48:15.876"/>
</kw>
<msg timestamp="20250214 14:48:15.877" level="INFO">${output} = 2025-02-14 14:48:15,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:15,650 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.343" endtime="20250214 14:48:15.877"/>
</kw>
<msg timestamp="20250214 14:48:15.877" level="INFO">${result} = 2025-02-14 14:48:15,650 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:15,650 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.342" endtime="20250214 14:48:15.877"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:48:15.878" endtime="20250214 14:48:15.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:15.320" endtime="20250214 14:48:15.879"/>
</test>
<test id="s1-s1-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="228">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:15.884" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:15.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:15.890" level="INFO">${output} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.882" endtime="20250214 14:48:15.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:15.891" level="INFO">8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.891" endtime="20250214 14:48:15.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:15.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:15.891" endtime="20250214 14:48:15.892"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.881" endtime="20250214 14:48:15.892"/>
</kw>
<msg timestamp="20250214 14:48:15.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:15.881" endtime="20250214 14:48:15.892"/>
</kw>
<msg timestamp="20250214 14:48:15.892" level="INFO">${file_md5_checksum} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:15.880" endtime="20250214 14:48:15.892"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:15.896" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:16.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:16.418" level="INFO">${output} = 2025-02-14 14:48:16,222 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:16,222 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.894" endtime="20250214 14:48:16.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:16.419" level="INFO">2025-02-14 14:48:16,222 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:16,222 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/small_file', '/tmp/small_file_downloaded']
2025-02-14 14:48:16,222 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7eff340ab820&gt;
2025-02-14 14:48:16,222 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7eff34996c10&gt;
2025-02-14 14:48:16,222 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7eff34687e50&gt;
2025-02-14 14:48:16,224 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:16,225 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7eff341184c0&gt;
2025-02-14 14:48:16,225 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7eff3405d820&gt;
2025-02-14 14:48:16,226 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7eff34131310&gt;
2025-02-14 14:48:16,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,226 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7eff3405d820&gt;
2025-02-14 14:48:16,226 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7eff34131310&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,228 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7eff346566a0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7eff33fabee0&gt;
2025-02-14 14:48:16,232 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:16,232 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:16,233 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:16,256 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:16,257 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7eff35bcb9d0&gt;
2025-02-14 14:48:16,263 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:16,272 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:16,292 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:16,295 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:16,297 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7eff34ccda60&gt;
2025-02-14 14:48:16,297 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7eff34ccd820&gt;
2025-02-14 14:48:16,297 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,300 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:16,302 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:16,302 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:16,303 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:16,303 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,303 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:16,303 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7eff35bcb9d0&gt;
2025-02-14 14:48:16,304 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7eff34ccda60&gt;
2025-02-14 14:48:16,304 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7eff34ccd820&gt;
2025-02-14 14:48:16,304 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,306 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:16,308 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:16,308 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:16,308 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,308 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:16,308 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7eff35bcb9d0&gt;
2025-02-14 14:48:16,309 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7eff34ccda60&gt;
2025-02-14 14:48:16,309 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7eff34ccd820&gt;
2025-02-14 14:48:16,309 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,311 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:16,313 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:16,313 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:16,313 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:16,313 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:16,314 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7eff34c158b0&gt;
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7eff34c15820&gt;
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7eff34c1c700&gt;
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33406460&gt;&gt;
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7eff33494370&gt;&gt;
2025-02-14 14:48:16,314 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7eff34c15670&gt;
2025-02-14 14:48:16,315 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7eff34c1c8b0&gt;
2025-02-14 14:48:16,315 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33406460&gt;&gt;
2025-02-14 14:48:16,315 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:16,316 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:16,316 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:16,316 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:16,316 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7eff34c15b80&gt;
2025-02-14 14:48:16,316 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7eff33406430&gt;&gt;
2025-02-14 14:48:16,316 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7eff34c15280&gt;
2025-02-14 14:48:16,316 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7eff34c1cd30&gt;
2025-02-14 14:48:16,316 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7eff34c1bee0&gt;
2025-02-14 14:48:16,316 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7eff334336d0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:16,317 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7eff33433640&gt;&gt;
2025-02-14 14:48:16,317 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7eff34c154c0&gt;
2025-02-14 14:48:16,317 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7eff34c1c820&gt;
2025-02-14 14:48:16,317 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7eff33406430&gt;&gt;
2025-02-14 14:48:16,317 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:16,317 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144816Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:16,317 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144816Z
20250214/us-west-1/s3/aws4_request
cd7fad3e942df902736d0e8a7be9a9a7917e0e57bbcaebe7688be1af384f4c2d
2025-02-14 14:48:16,317 - MainThread - botocore.auth - DEBUG - Signature:
48c1c97f5a5361fd8e9cff0bec5c19d09af15e442cfc10d3aa6420bcba553ecf
2025-02-14 14:48:16,317 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7eff34c1c670&gt;
2025-02-14 14:48:16,317 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144816Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=48c1c97f5a5361fd8e9cff0bec5c19d09af15e442cfc10d3aa6420bcba553ecf', 'amz-sdk-invocation-id': b'ddb9c85a-9ce1-4618-9a0a-33e83b810b63', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:16,318 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:16,324 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/small_file HTTP/1.1" 200 0
2025-02-14 14:48:16,325 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7eff34c1cb80&gt;
2025-02-14 14:48:16,325 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7eff34c1c9d0&gt;
2025-02-14 14:48:16,325 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:16 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:16 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:15 GMT', 'Server': 'Ozone', 'x-amz-id-2': '0cOjzLFaZCnqRRl', 'x-amz-request-id': '213e18d8-1fa2-4243-8220-e19b71ca83a4', 'Content-Length': '1000000'}
2025-02-14 14:48:16,325 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:16,325 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7eff34c1cca0&gt;
2025-02-14 14:48:16,325 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7eff334063a0&gt;
2025-02-14 14:48:16,326 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:16,326 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33406460&gt;&gt;
2025-02-14 14:48:16,326 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7eff340a7d30&gt;
2025-02-14 14:48:16,326 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:16,327 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;}) about to wait for the following futures []
2025-02-14 14:48:16,327 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;}) done waiting for dependent futures
2025-02-14 14:48:16,327 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7eff334bb310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7eff334067f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7eff33406880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7eff33406ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7eff33406b80&gt;}
2025-02-14 14:48:16,327 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7eff33406ac0&gt; for transfer request: 0.
2025-02-14 14:48:16,327 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7eff334bb310&gt;, 'bucket': 'erasure', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7eff33414e20&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7eff33414e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7eff33414e50&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7eff33414f10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7eff33414a30&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7eff333c0730&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7eff34c158b0&gt;
2025-02-14 14:48:16,328 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7eff34c15820&gt;
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7eff34c1c700&gt;
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33494250&gt;&gt;
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7eff3351b160&gt;&gt;
2025-02-14 14:48:16,328 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7eff34c15670&gt;
2025-02-14 14:48:16,329 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7eff34c1c8b0&gt;
2025-02-14 14:48:16,329 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33494250&gt;&gt;
2025-02-14 14:48:16,329 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:16,329 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:16,329 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7eff34c15b80&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7eff33494220&gt;&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7eff34c15280&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7eff34c1cd30&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7eff34c1bee0&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/small_file', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7eff334bb490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7eff34350790&gt;
2025-02-14 14:48:16,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7eff334bb400&gt;&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7eff34c154c0&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7eff34c1c820&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7eff33494220&gt;&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144816Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144816Z
20250214/us-west-1/s3/aws4_request
e4afafb98b89811ef98c9e94df3a4c9e3e7fabccd051afd33d1051e49083e0c8
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
648638ab6886ebf9712004882aa9eac4e5535472f161c86f540528890c1fd087
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7eff34350820&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7eff34c1c670&gt;
2025-02-14 14:48:16,331 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144816Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=648638ab6886ebf9712004882aa9eac4e5535472f161c86f540528890c1fd087', 'amz-sdk-invocation-id': b'99f66629-56b7-46b2-911f-1f8e215c0312', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:16,332 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:16,349 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/small_file HTTP/1.1" 200 1000000
2025-02-14 14:48:16,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7eff34c1cb80&gt;
2025-02-14 14:48:16,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7eff34c1c9d0&gt;
2025-02-14 14:48:16,350 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:16 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:16 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:15 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'V0eEIYGQg', 'x-amz-request-id': '07e5a39d-349d-4b94-9dd6-231db2b6c413', 'Content-Length': '1000000'}
2025-02-14 14:48:16,350 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7eff33388610&gt;
2025-02-14 14:48:16,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7eff34c1cca0&gt;
2025-02-14 14:48:16,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7eff33494190&gt;
2025-02-14 14:48:16,351 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:16,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7eff33494250&gt;&gt;
2025-02-14 14:48:16,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7eff340a7d30&gt;
2025-02-14 14:48:16,352 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-14 14:48:16,352 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 14:48:16,353 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (10.1 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:16,354 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (18.7 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:16,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 14:48:16,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'offset': 262144}
2025-02-14 14:48:16,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 14:48:16,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
Completed 768.0 KiB/976.6 KiB (27.2 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:16,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'offset': 524288}
2025-02-14 14:48:16,356 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (33.5 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:16,356 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-14 14:48:16,356 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'offset': 786432}
2025-02-14 14:48:16,357 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2025-02-14 14:48:16,357 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2025-02-14 14:48:16,357 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7eff333c0850&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7eff33406880&gt;}
2025-02-14 14:48:16,357 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/small_file to ../../tmp/small_file_downloaded
2025-02-14 14:48:16,357 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:16.419" endtime="20250214 14:48:16.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:16.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:16.420" endtime="20250214 14:48:16.420"/>
</kw>
<status status="PASS" starttime="20250214 14:48:15.893" endtime="20250214 14:48:16.420"/>
</kw>
<msg timestamp="20250214 14:48:16.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:15.893" endtime="20250214 14:48:16.421"/>
</kw>
<msg timestamp="20250214 14:48:16.421" level="INFO">${output} = 2025-02-14 14:48:16,222 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:16,222 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.893" endtime="20250214 14:48:16.421"/>
</kw>
<msg timestamp="20250214 14:48:16.422" level="INFO">${result} = 2025-02-14 14:48:16,222 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:16,222 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:15.892" endtime="20250214 14:48:16.422"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:48:16.422" endtime="20250214 14:48:16.422"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:48:16.423" endtime="20250214 14:48:16.423"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:16.427" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:16.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:16.882" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 14:48:16.425" endtime="20250214 14:48:16.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:16.883" level="INFO">delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 14:48:16.882" endtime="20250214 14:48:16.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:16.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:16.883" endtime="20250214 14:48:16.883"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.424" endtime="20250214 14:48:16.884"/>
</kw>
<msg timestamp="20250214 14:48:16.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:16.424" endtime="20250214 14:48:16.884"/>
</kw>
<msg timestamp="20250214 14:48:16.884" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20250214 14:48:16.424" endtime="20250214 14:48:16.884"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.423" endtime="20250214 14:48:16.884"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:16.887" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:16.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:16.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:16.885" endtime="20250214 14:48:16.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:16.892" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:16.891" endtime="20250214 14:48:16.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:16.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:16.892" endtime="20250214 14:48:16.892"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.885" endtime="20250214 14:48:16.892"/>
</kw>
<msg timestamp="20250214 14:48:16.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:16.884" endtime="20250214 14:48:16.892"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.884" endtime="20250214 14:48:16.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:15.880" endtime="20250214 14:48:16.893"/>
</test>
<test id="s1-s1-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="237">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:16.897" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:16.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:16.902" level="INFO">${output} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:16.895" endtime="20250214 14:48:16.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:16.903" level="INFO">8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:16.902" endtime="20250214 14:48:16.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:16.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:16.903" endtime="20250214 14:48:16.903"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.895" endtime="20250214 14:48:16.904"/>
</kw>
<msg timestamp="20250214 14:48:16.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:16.894" endtime="20250214 14:48:16.904"/>
</kw>
<msg timestamp="20250214 14:48:16.904" level="INFO">${file_md5_checksum} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<status status="PASS" starttime="20250214 14:48:16.894" endtime="20250214 14:48:16.904"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:16.907" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:17.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:17.470" level="INFO">${output} = 2025-02-14 14:48:17,218 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,219 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:16.905" endtime="20250214 14:48:17.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:17.472" level="INFO">2025-02-14 14:48:17,218 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,219 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://erasure/test_file']
2025-02-14 14:48:17,219 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f5ee5f3e820&gt;
2025-02-14 14:48:17,219 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f5ee6829c10&gt;
2025-02-14 14:48:17,219 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f5ee651ae50&gt;
2025-02-14 14:48:17,220 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:17,222 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f5ee5fab4c0&gt;
2025-02-14 14:48:17,222 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f5ee5ef1820&gt;
2025-02-14 14:48:17,222 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f5ee5fc4310&gt;
2025-02-14 14:48:17,223 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,223 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f5ee5ef1820&gt;
2025-02-14 14:48:17,223 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f5ee5fc4310&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5ee64e96a0&gt;
2025-02-14 14:48:17,228 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5ee5e3eee0&gt;
2025-02-14 14:48:17,229 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:17,229 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:17,230 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:17,253 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:17,253 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5ee7a5e9d0&gt;
2025-02-14 14:48:17,259 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:17,268 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:17,288 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:17,291 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:17,293 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5ee6b60a60&gt;
2025-02-14 14:48:17,293 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5ee6b60820&gt;
2025-02-14 14:48:17,293 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,296 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,298 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:17,298 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,299 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,299 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,299 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,299 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5ee7a5e9d0&gt;
2025-02-14 14:48:17,300 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5ee6b60a60&gt;
2025-02-14 14:48:17,300 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5ee6b60820&gt;
2025-02-14 14:48:17,300 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,302 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,304 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,304 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,304 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,304 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,304 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5ee7a5e9d0&gt;
2025-02-14 14:48:17,305 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5ee6b60a60&gt;
2025-02-14 14:48:17,305 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5ee6b60820&gt;
2025-02-14 14:48:17,305 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,307 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,309 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,309 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,309 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,309 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,310 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:17,310 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:17,311 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5ee52782b0&gt;}) about to wait for the following futures []
2025-02-14 14:48:17,311 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5ee52782b0&gt;}) done waiting for dependent futures
2025-02-14 14:48:17,311 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5ee52782b0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5ee5491370&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5ee526b850&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5ee526b8e0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5ee526bb20&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5ee52782b0&gt;}
2025-02-14 14:48:17,312 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5ee526bb20&gt; for transfer request: 0.
2025-02-14 14:48:17,312 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:17,312 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2025-02-14 14:48:17,312 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2025-02-14 14:48:17,312 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5ee5491370&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5ee5278b20&gt;, 'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f5ee6aae4c0&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f5ee6aa88b0&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f5ee6aaedc0&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f5ee6aa8820&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5ee6aaf700&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5ee546a2b0&gt;&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5ee5473160&gt;&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f5ee6aa8670&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5ee6aaf8b0&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5ee546a2b0&gt;&gt;
2025-02-14 14:48:17,313 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:17,314 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:17,314 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:17,314 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:17,314 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:17,315 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f5ee6c1d790&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f5ee6aa8b80&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5ee546a280&gt;&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f5ee6aa8280&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f5ee6aafd30&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5ee6aaeee0&gt;
2025-02-14 14:48:17,317 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'jKGGjiqcnzeOCOpzM8DjbQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5ee5278b20&gt;, 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5ee54914f0&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5ee5278b20&gt;, 'Metadata': {'ETag': 'custom-etag-value'}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:17,318 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f5ee61e4790&gt;
2025-02-14 14:48:17,318 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5ee5491460&gt;&gt;
2025-02-14 14:48:17,318 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f5ee6aa84c0&gt;
2025-02-14 14:48:17,318 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f5ee6aaf820&gt;
2025-02-14 14:48:17,318 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5ee546a280&gt;&gt;
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_file

content-md5:jKGGjiqcnzeOCOpzM8DjbQ==
host:s3g:9878
x-amz-content-sha256:2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a
x-amz-date:20250214T144817Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144817Z
20250214/us-west-1/s3/aws4_request
514028c157b2d8c2317c64880abfbd25e65949164681441fbb66c6f34c72ad47
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
2cdfcc54cf086544482d5892eb9dede404175d9d4b2a7980c041de1a40088563
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f5ee61e4820&gt;
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f5ee6aaf670&gt;
2025-02-14 14:48:17,319 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'jKGGjiqcnzeOCOpzM8DjbQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144817Z', 'X-Amz-Content-SHA256': b'2ea68914c37241077fd9aaf34fcf9b444402ee23eb60996817d0b706a1d6cc8a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=2cdfcc54cf086544482d5892eb9dede404175d9d4b2a7980c041de1a40088563', 'amz-sdk-invocation-id': b'f6539a37-2567-4ca2-9211-164f2f966898', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-02-14 14:48:17,320 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:17,321 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:17,333 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (11.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (20.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (29.1 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:17,389 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_file HTTP/1.1" 200 0
2025-02-14 14:48:17,390 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f5ee6aafb80&gt;
2025-02-14 14:48:17,390 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f5ee6aaf9d0&gt;
2025-02-14 14:48:17,390 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Server': 'Ozone', 'x-amz-id-2': 'BhDUAnWyjXREcoE', 'x-amz-request-id': '6b2ca77d-1991-4b20-98c2-2cbd039c90f2', 'Content-Length': '0'}
2025-02-14 14:48:17,390 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f5ee6aafca0&gt;
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5ee546a1f0&gt;
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5ee546a2b0&gt;&gt;
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f5ee5f3ad30&gt;
Completed 976.6 KiB/976.6 KiB (12.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://erasure/test_file             
2025-02-14 14:48:17,391 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:17,392 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:17.471" endtime="20250214 14:48:17.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:17.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:17.472" endtime="20250214 14:48:17.473"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.905" endtime="20250214 14:48:17.473"/>
</kw>
<msg timestamp="20250214 14:48:17.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:16.905" endtime="20250214 14:48:17.473"/>
</kw>
<msg timestamp="20250214 14:48:17.474" level="INFO">${output} = 2025-02-14 14:48:17,218 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,219 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:16.904" endtime="20250214 14:48:17.474"/>
</kw>
<status status="PASS" starttime="20250214 14:48:16.904" endtime="20250214 14:48:17.474"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:17.479" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:17.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:17.983" level="INFO">${output} = 2025-02-14 14:48:17,792 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,792 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:17.476" endtime="20250214 14:48:17.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:17.984" level="INFO">2025-02-14 14:48:17,792 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,792 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/test_file', '/tmp/test_file_downloaded']
2025-02-14 14:48:17,793 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f03f124a820&gt;
2025-02-14 14:48:17,793 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f03f1b35c10&gt;
2025-02-14 14:48:17,793 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f03f1826e50&gt;
2025-02-14 14:48:17,794 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:17,796 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f03f12b74c0&gt;
2025-02-14 14:48:17,796 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f03f11fc820&gt;
2025-02-14 14:48:17,796 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f03f12d0310&gt;
2025-02-14 14:48:17,797 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,797 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f03f11fc820&gt;
2025-02-14 14:48:17,797 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f03f12d0310&gt;
2025-02-14 14:48:17,798 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,798 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,800 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f03f17f66a0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f03f1149ee0&gt;
2025-02-14 14:48:17,802 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:17,802 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:17,804 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:17,826 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:17,826 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f03f2d6a9d0&gt;
2025-02-14 14:48:17,833 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:17,841 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:17,861 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:17,864 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:17,866 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f03f1e6ca60&gt;
2025-02-14 14:48:17,866 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f03f1e6c820&gt;
2025-02-14 14:48:17,866 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,869 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,871 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:17,872 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,872 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,872 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,872 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,873 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f03f2d6a9d0&gt;
2025-02-14 14:48:17,873 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f03f1e6ca60&gt;
2025-02-14 14:48:17,873 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f03f1e6c820&gt;
2025-02-14 14:48:17,874 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,875 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,877 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,877 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,877 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,877 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,878 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f03f2d6a9d0&gt;
2025-02-14 14:48:17,878 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f03f1e6ca60&gt;
2025-02-14 14:48:17,878 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f03f1e6c820&gt;
2025-02-14 14:48:17,879 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,881 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:17,882 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:17,882 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:17,882 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:17,882 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:17,883 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f03f1db48b0&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f03f1db4820&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f03f1dbb700&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f05a5460&gt;&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f03f0633370&gt;&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f03f1db4670&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f03f1dbb8b0&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f05a5460&gt;&gt;
2025-02-14 14:48:17,884 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:17,885 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:17,885 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:17,885 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:17,885 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f03f1db4b80&gt;
2025-02-14 14:48:17,885 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f03f05a5430&gt;&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f03f1db4280&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f03f1dbbd30&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f03f1dbaee0&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f03f05d26d0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f03f05d2640&gt;&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f03f1db44c0&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f03f1dbb820&gt;
2025-02-14 14:48:17,886 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f03f05a5430&gt;&gt;
2025-02-14 14:48:17,887 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:17,887 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144817Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:17,887 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144817Z
20250214/us-west-1/s3/aws4_request
ea56b4b81f7592c1d19b7a043bcdc4a88274a4f858a100bc58122ad1764fa825
2025-02-14 14:48:17,887 - MainThread - botocore.auth - DEBUG - Signature:
e4424a5383c84a432a3e94d3b2b32385895653b8666282a3c5f3c41958bd64d8
2025-02-14 14:48:17,887 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f03f1dbb670&gt;
2025-02-14 14:48:17,887 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144817Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e4424a5383c84a432a3e94d3b2b32385895653b8666282a3c5f3c41958bd64d8', 'amz-sdk-invocation-id': b'8d53633b-c33a-45c2-bee3-71ce0d5a5239', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:17,887 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:17,894 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/test_file HTTP/1.1" 200 0
2025-02-14 14:48:17,895 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f03f1dbbb80&gt;
2025-02-14 14:48:17,895 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f03f1dbb9d0&gt;
2025-02-14 14:48:17,895 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:17 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'xtpZfgxhXZvU', 'x-amz-request-id': 'd358a2bf-0c9f-475b-ac3e-b94f68d6f44b', 'Content-Length': '1000000'}
2025-02-14 14:48:17,895 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:17,896 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f03f1dbbca0&gt;
2025-02-14 14:48:17,896 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f03f05a53a0&gt;
2025-02-14 14:48:17,896 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:17,896 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f05a5460&gt;&gt;
2025-02-14 14:48:17,896 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f03f1246d30&gt;
2025-02-14 14:48:17,897 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:17,898 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;}) about to wait for the following futures []
2025-02-14 14:48:17,898 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;}) done waiting for dependent futures
2025-02-14 14:48:17,898 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f03f0659310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f03f05a57f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f03f05a5880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f03f05a5ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f03f05a5b80&gt;}
2025-02-14 14:48:17,898 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f03f05a5ac0&gt; for transfer request: 0.
2025-02-14 14:48:17,898 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f03f0659310&gt;, 'bucket': 'erasure', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f03f05b3dc0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f03f05b3e20&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f03f05b3df0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f03f05b3eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f03f05b39a0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f03f055f700&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f03f1db48b0&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f03f1db4820&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f03f1dbb700&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f0633250&gt;&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f03f06ba160&gt;&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f03f1db4670&gt;
2025-02-14 14:48:17,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f03f1dbb8b0&gt;
2025-02-14 14:48:17,900 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f0633250&gt;&gt;
2025-02-14 14:48:17,900 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f03f1db4b80&gt;
2025-02-14 14:48:17,901 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f03f0633220&gt;&gt;
2025-02-14 14:48:17,901 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f03f1db4280&gt;
2025-02-14 14:48:17,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f03f1dbbd30&gt;
2025-02-14 14:48:17,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f03f1dbaee0&gt;
2025-02-14 14:48:17,902 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/test_file', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f03f0659490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:17,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f03f14f0790&gt;
2025-02-14 14:48:17,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f03f0659400&gt;&gt;
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f03f1db44c0&gt;
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f03f1dbb820&gt;
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f03f0633220&gt;&gt;
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144817Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:17,903 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144817Z
20250214/us-west-1/s3/aws4_request
8ef4436fc8f0b4c0a0b3e31ccdbc9cb7c241fabf3076a4216822f5484e8dd48b
2025-02-14 14:48:17,904 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f46e7fc44fd491763fdc8c3059a7925ea3417595470d330d48346354edc42920
2025-02-14 14:48:17,904 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f03f14f0820&gt;
2025-02-14 14:48:17,904 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f03f1dbb670&gt;
2025-02-14 14:48:17,904 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144817Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f46e7fc44fd491763fdc8c3059a7925ea3417595470d330d48346354edc42920', 'amz-sdk-invocation-id': b'3edda581-35b0-410d-876c-2d3c041fccee', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:17,904 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:17,925 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/test_file HTTP/1.1" 200 1000000
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f03f1dbbb80&gt;
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f03f1dbb9d0&gt;
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"8ca1868e2a9c9f378e08ea7333c0e36d"', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:17 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'YAcxz5ZAVnPcZk8', 'x-amz-request-id': '40197b17-b878-45d1-b1ad-9062fce31d0d', 'Content-Length': '1000000'}
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f03f05245e0&gt;
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f03f1dbbca0&gt;
2025-02-14 14:48:17,926 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f03f0633190&gt;
2025-02-14 14:48:17,927 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:17,927 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f03f0633250&gt;&gt;
2025-02-14 14:48:17,927 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f03f1246d30&gt;
2025-02-14 14:48:17,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-14 14:48:17,928 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 14:48:17,928 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (8.6 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:17,928 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (16.7 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (24.6 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:17,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (30.8 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'offset': 786432}
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f03f055f820&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f03f05a5880&gt;}
2025-02-14 14:48:17,930 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/test_file to ../../tmp/test_file_downloaded 
2025-02-14 14:48:17,931 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:17.983" endtime="20250214 14:48:17.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:17.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:17.984" endtime="20250214 14:48:17.984"/>
</kw>
<status status="PASS" starttime="20250214 14:48:17.476" endtime="20250214 14:48:17.985"/>
</kw>
<msg timestamp="20250214 14:48:17.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:17.476" endtime="20250214 14:48:17.985"/>
</kw>
<msg timestamp="20250214 14:48:17.986" level="INFO">${output} = 2025-02-14 14:48:17,792 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,792 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:17.475" endtime="20250214 14:48:17.986"/>
</kw>
<msg timestamp="20250214 14:48:17.986" level="INFO">${result} = 2025-02-14 14:48:17,792 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:17,792 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:17.475" endtime="20250214 14:48:17.986"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 14:48:17.987" level="INFO">${match} = HEAD /erasure/test_file HTTP/1.1" 200 0
2025-02-14 14:48:17,895 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f03f1dbbb80&gt;...</msg>
<msg timestamp="20250214 14:48:17.987" level="INFO">${ETag} = 8ca1868e2a9c9f378e08ea7333c0e36d</msg>
<msg timestamp="20250214 14:48:17.987" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20250214 14:48:17.986" endtime="20250214 14:48:17.987"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:48:17.987" endtime="20250214 14:48:17.988"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:48:17.988" endtime="20250214 14:48:17.988"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:48:17.988" endtime="20250214 14:48:17.988"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:17.992" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:18.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:18.461" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 14:48:17.990" endtime="20250214 14:48:18.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:18.462" level="INFO">delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 14:48:18.462" endtime="20250214 14:48:18.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:18.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:18.463" endtime="20250214 14:48:18.463"/>
</kw>
<status status="PASS" starttime="20250214 14:48:17.989" endtime="20250214 14:48:18.463"/>
</kw>
<msg timestamp="20250214 14:48:18.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:17.989" endtime="20250214 14:48:18.463"/>
</kw>
<msg timestamp="20250214 14:48:18.463" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20250214 14:48:17.989" endtime="20250214 14:48:18.463"/>
</kw>
<status status="PASS" starttime="20250214 14:48:17.988" endtime="20250214 14:48:18.463"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:18.467" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:18.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:18.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:18.464" endtime="20250214 14:48:18.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:18.471" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:18.471" endtime="20250214 14:48:18.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:18.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:18.471" endtime="20250214 14:48:18.472"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.464" endtime="20250214 14:48:18.472"/>
</kw>
<msg timestamp="20250214 14:48:18.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:18.464" endtime="20250214 14:48:18.472"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.464" endtime="20250214 14:48:18.472"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:18.475" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:18.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:18.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:18.473" endtime="20250214 14:48:18.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:18.480" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:18.479" endtime="20250214 14:48:18.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:18.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:18.480" endtime="20250214 14:48:18.480"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.473" endtime="20250214 14:48:18.480"/>
</kw>
<msg timestamp="20250214 14:48:18.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:18.473" endtime="20250214 14:48:18.480"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.472" endtime="20250214 14:48:18.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:16.893" endtime="20250214 14:48:18.481"/>
</test>
<test id="s1-s1-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="250">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:18.484" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 14:48:18.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:18.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:18.482" endtime="20250214 14:48:18.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:18.527" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:18.526" endtime="20250214 14:48:18.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:18.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:18.527" endtime="20250214 14:48:18.527"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.482" endtime="20250214 14:48:18.528"/>
</kw>
<msg timestamp="20250214 14:48:18.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:18.482" endtime="20250214 14:48:18.528"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.482" endtime="20250214 14:48:18.528"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:18.532" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:19.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:19.575" level="INFO">${output} = 2025-02-14 14:48:18,888 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:18,888 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:18.529" endtime="20250214 14:48:19.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:19.576" level="INFO">2025-02-14 14:48:18,888 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:18,888 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 14:48:18,888 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7feaf136f820&gt;
2025-02-14 14:48:18,888 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7feaf1c59c10&gt;
2025-02-14 14:48:18,889 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7feaf194ae50&gt;
2025-02-14 14:48:18,890 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:18,892 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7feaf13db4c0&gt;
2025-02-14 14:48:18,892 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7feaf1321820&gt;
2025-02-14 14:48:18,892 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7feaf13f3310&gt;
2025-02-14 14:48:18,892 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,893 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7feaf1321820&gt;
2025-02-14 14:48:18,893 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7feaf13f3310&gt;
2025-02-14 14:48:18,894 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,894 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,894 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,896 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7feaf191a6a0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7feaf126dee0&gt;
2025-02-14 14:48:18,898 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:18,898 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:18,900 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:18,924 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:18,924 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7feaf2e8e9d0&gt;
2025-02-14 14:48:18,930 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:18,939 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:18,959 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:18,962 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:18,964 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7feaf1f90a60&gt;
2025-02-14 14:48:18,964 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7feaf1f90820&gt;
2025-02-14 14:48:18,965 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,968 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:18,969 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:18,970 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:18,970 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:18,970 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,970 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:18,971 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7feaf2e8e9d0&gt;
2025-02-14 14:48:18,971 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7feaf1f90a60&gt;
2025-02-14 14:48:18,972 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7feaf1f90820&gt;
2025-02-14 14:48:18,972 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,973 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:18,975 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:18,975 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:18,975 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,976 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:18,976 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7feaf2e8e9d0&gt;
2025-02-14 14:48:18,977 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7feaf1f90a60&gt;
2025-02-14 14:48:18,977 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7feaf1f90820&gt;
2025-02-14 14:48:18,977 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,979 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:18,980 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:18,981 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:18,981 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:18,981 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:18,981 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:18,982 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:18,983 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7feaf06b4250&gt;}) about to wait for the following futures []
2025-02-14 14:48:18,983 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7feaf06b4250&gt;}) done waiting for dependent futures
2025-02-14 14:48:18,983 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7feaf06b4250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7feaf087e310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7feaf06a87f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7feaf06a8880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7feaf06a8ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7feaf06b4250&gt;}
2025-02-14 14:48:18,983 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7feaf06a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:18,983 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:18,984 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:18,984 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7feaf06a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:18,984 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:18,984 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:18,984 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7feaf087e310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7feaf1ede4c0&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7feaf1ed88b0&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7feaf1ed8820&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7feaf1edf700&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7feaf08de100&gt;&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7feaf1ed8670&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7feaf1edf8b0&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:18,985 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:18,986 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:18,986 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:18,986 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7feaf1ed8b80&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7feaf1ed8280&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7feaf1edfd30&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7feaf1edeee0&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7feaf087e490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7feaf1613790&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7feaf087e400&gt;&gt;
2025-02-14 14:48:18,987 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7feaf1ed84c0&gt;
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7feaf1edf820&gt;
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144818Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144818Z
20250214/us-west-1/s3/aws4_request
d6640d8ae9f87c9398fd6dbabd825f1fa8402d13e15a65f0ed0b237676328a6f
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
25dcba17dc79d1d09b194745eaab55ac6467151130d25511338e92fa7df63f20
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7feaf1613820&gt;
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7feaf1edf670&gt;
2025-02-14 14:48:18,988 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144818Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=25dcba17dc79d1d09b194745eaab55ac6467151130d25511338e92fa7df63f20', 'amz-sdk-invocation-id': b'45c5c0f2-e78a-4dc0-aa5e-84e43f7b50ec', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 14:48:18,989 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:18,989 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;]
2025-02-14 14:48:18,989 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;
2025-02-14 14:48:18,989 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7feaf06a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:18,990 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:18,990 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;]
2025-02-14 14:48:18,990 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;
2025-02-14 14:48:18,990 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7feaf06a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:18,990 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:18,990 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7feaf0649580&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7feaef5cb340&gt;]
2025-02-14 14:48:18,991 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7feaf06b4d60&gt;
2025-02-14 14:48:18,991 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:19,002 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 14:48:19,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7feaf1edfb80&gt;
2025-02-14 14:48:19,003 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7feaf1edf9d0&gt;
2025-02-14 14:48:19,003 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:18 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:18 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'aMteb7Po6d', 'x-amz-request-id': '033b0c80-ace5-46db-bdf0-382f5722572b', 'Content-Length': '285'}
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7feaf1edfca0&gt;
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7feaf0857190&gt;
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,004 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7feaf136ad30&gt;
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7feaf0649580&gt;
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7feaf087e310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0649130&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947'}
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7feaf1ed88b0&gt;
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7feaf1ededc0&gt;
2025-02-14 14:48:19,005 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7feaf087e310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0678eb0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947'}
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7feaf1ed8820&gt;
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7feaf1ed88b0&gt;
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7feaf1edf700&gt;
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7feaf1ededc0&gt;
2025-02-14 14:48:19,006 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7feaf1ed8820&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7feaf08de100&gt;&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7feaf1edf700&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7feaf1ed8670&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7feaf1edf8b0&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7feaf08de100&gt;&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,007 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7feaf1ed8670&gt;
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7feaf1edf8b0&gt;
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:19,008 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:19,009 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:19,009 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:19,010 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:19,010 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7feaf204d8b0&gt;
2025-02-14 14:48:19,009 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7feaf204d8b0&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7feaf1ed8b80&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7feaf1ed8280&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7feaf1edfd30&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7feaf1edeee0&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '0ejoiCirtUZUqPOhygl7Ug==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0678eb0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7feaf087e490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0678eb0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7feaf1613790&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7feaf087e400&gt;&gt;
2025-02-14 14:48:19,014 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7feaf1ed84c0&gt;
2025-02-14 14:48:19,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7feaf1edf820&gt;
2025-02-14 14:48:19,015 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,016 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947
content-md5:0ejoiCirtUZUqPOhygl7Ug==
host:s3g:9878
x-amz-content-sha256:efd0de9f7a508fde160f133604b436ae2f9210d9cc1853d8e20bef165a9c9232
x-amz-date:20250214T144819Z

content-md5;host;x-amz-content-sha256;x-amz-date
efd0de9f7a508fde160f133604b436ae2f9210d9cc1853d8e20bef165a9c9232
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144819Z
20250214/us-west-1/s3/aws4_request
205a288aec798fa84989d803b22b55c554b63142824dc9a13687b84b484c51cc
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
23032b6dbbdbec10e4426b2203d1f985053afe568232dd75fc483bda5753aff2
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7feaf1613820&gt;
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7feaf1edf670&gt;
2025-02-14 14:48:19,017 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'0ejoiCirtUZUqPOhygl7Ug==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144819Z', 'X-Amz-Content-SHA256': b'efd0de9f7a508fde160f133604b436ae2f9210d9cc1853d8e20bef165a9c9232', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=23032b6dbbdbec10e4426b2203d1f985053afe568232dd75fc483bda5753aff2', 'amz-sdk-invocation-id': b'8a0fff65-94fe-4b66-97ff-3964efb55a5f', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 14:48:19,018 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7feaf1ed8b80&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7feaf1ed8280&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7feaf1edfd30&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7feaf1edeee0&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'pvnxhuTjg8sjb47hBoo8Yg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0649130&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7feaf087e490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7feaf0649130&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7feaf1613790&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7feaf087e400&gt;&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7feaf1ed84c0&gt;
2025-02-14 14:48:19,027 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7feaf1edf820&gt;
2025-02-14 14:48:19,028 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,035 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:19,035 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947
content-md5:pvnxhuTjg8sjb47hBoo8Yg==
host:s3g:9878
x-amz-content-sha256:ae1652f682a7f168909c4c205e2344132d26448902e3b1226c9945a636096ef2
x-amz-date:20250214T144819Z

content-md5;host;x-amz-content-sha256;x-amz-date
ae1652f682a7f168909c4c205e2344132d26448902e3b1226c9945a636096ef2
2025-02-14 14:48:19,035 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144819Z
20250214/us-west-1/s3/aws4_request
ffea6f711a072b9f52ccdbd8a3a19fdcbbb17650daf6710211e2b839b9d64cb6
2025-02-14 14:48:19,035 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
19e302c40804a0f2052b092452eace8b94b0083ac39f97e96998a1945ad3c8a9
2025-02-14 14:48:19,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7feaf1613820&gt;
2025-02-14 14:48:19,036 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7feaf1edf670&gt;
2025-02-14 14:48:19,036 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'pvnxhuTjg8sjb47hBoo8Yg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144819Z', 'X-Amz-Content-SHA256': b'ae1652f682a7f168909c4c205e2344132d26448902e3b1226c9945a636096ef2', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=19e302c40804a0f2052b092452eace8b94b0083ac39f97e96998a1945ad3c8a9', 'amz-sdk-invocation-id': b'ff9c0c5d-d022-4bf0-ae5b-32a52ca45172', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 14:48:19,036 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-14 14:48:19,037 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-14 14:48:19,037 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (4.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (8.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (12.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (15.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (19.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (22.5 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:19,063 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (21.9 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (23.9 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (26.3 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (28.3 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (30.1 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (32.3 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (34.6 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (36.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (38.9 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (43.6 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (45.9 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (45.6 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (46.7 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (48.5 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (50.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (51.6 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (53.4 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (55.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (57.1 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (59.1 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (61.0 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (61.3 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (62.8 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (64.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (65.5 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (66.8 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (68.1 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (69.2 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (70.6 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (71.1 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (72.0 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:19,222 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 14:48:19,223 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7feaf1edfb80&gt;
2025-02-14 14:48:19,224 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7feaf1edf9d0&gt;
2025-02-14 14:48:19,224 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'd1e8e88828abb54654a8f3a1ca097b52', 'Server': 'Ozone', 'x-amz-id-2': 'iIaaDni8Nb', 'x-amz-request-id': 'f5fe926d-cb59-4e0e-8d13-e9800a8668df', 'Content-Length': '0'}
2025-02-14 14:48:19,224 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7feaf1edfca0&gt;
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7feaf0857190&gt;
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7feaf136ad30&gt;
2025-02-14 14:48:19,225 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (39.5 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:19,396 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7feaf1edfb80&gt;
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7feaf1edf9d0&gt;
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'a6f9f186e4e383cb236f8ee1068a3c62', 'Server': 'Ozone', 'x-amz-id-2': '2fZvPlKl', 'x-amz-request-id': '90bd3c84-e4af-430a-8a53-80319f2205f4', 'Content-Length': '0'}
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7feaf1edfca0&gt;
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7feaf0857190&gt;
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:19,397 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,398 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7feaf136ad30&gt;
2025-02-14 14:48:19,398 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:19,398 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7feaef5cb340&gt;
2025-02-14 14:48:19,399 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:19,399 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7feaf087e310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'parts': [{'ETag': 'a6f9f186e4e383cb236f8ee1068a3c62', 'PartNumber': 1}, {'ETag': 'd1e8e88828abb54654a8f3a1ca097b52', 'PartNumber': 2}]}
2025-02-14 14:48:19,400 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7feaf1ed88b0&gt;
2025-02-14 14:48:19,400 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7feaf1ed8820&gt;
2025-02-14 14:48:19,400 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7feaf1edf700&gt;
2025-02-14 14:48:19,401 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,401 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7feaf08de100&gt;&gt;
2025-02-14 14:48:19,401 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7feaf1ed8670&gt;
2025-02-14 14:48:19,401 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7feaf1edf8b0&gt;
2025-02-14 14:48:19,401 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,403 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:19,403 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:19,403 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:19,403 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:19,404 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7feaf1ed8b80&gt;
2025-02-14 14:48:19,405 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,405 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7feaf1ed8280&gt;
2025-02-14 14:48:19,405 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7feaf1edfd30&gt;
2025-02-14 14:48:19,405 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7feaf1edeee0&gt;
2025-02-14 14:48:19,406 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;a6f9f186e4e383cb236f8ee1068a3c62&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;d1e8e88828abb54654a8f3a1ca097b52&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7feaf087e490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947', 'MultipartUpload': {'Parts': [{'ETag': 'a6f9f186e4e383cb236f8ee1068a3c62', 'PartNumber': 1}, {'ETag': 'd1e8e88828abb54654a8f3a1ca097b52', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:19,406 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7feaf1613790&gt;
2025-02-14 14:48:19,406 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7feaf087e400&gt;&gt;
2025-02-14 14:48:19,407 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7feaf1ed84c0&gt;
2025-02-14 14:48:19,407 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7feaf1edf820&gt;
2025-02-14 14:48:19,407 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7feaf0857220&gt;&gt;
2025-02-14 14:48:19,408 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:19,408 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947
host:s3g:9878
x-amz-content-sha256:38a66e7a845f0e899ce3f5cf61dc0276fcc3cf2991e6e3b2285029299ba3aff8
x-amz-date:20250214T144819Z

host;x-amz-content-sha256;x-amz-date
38a66e7a845f0e899ce3f5cf61dc0276fcc3cf2991e6e3b2285029299ba3aff8
2025-02-14 14:48:19,408 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144819Z
20250214/us-west-1/s3/aws4_request
1996c1d0472c9c96376b119d1ba3f6b4e4e691fd9ffe50e418229442970091ce
2025-02-14 14:48:19,409 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
9eabc659be2b9ccc1028b6c698e7361c19d400f2eeb5606a31eb4ae38ea36396
2025-02-14 14:48:19,409 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7feaf1613820&gt;
2025-02-14 14:48:19,411 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7feaf1edf670&gt;
2025-02-14 14:48:19,411 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144819Z', 'X-Amz-Content-SHA256': b'38a66e7a845f0e899ce3f5cf61dc0276fcc3cf2991e6e3b2285029299ba3aff8', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=9eabc659be2b9ccc1028b6c698e7361c19d400f2eeb5606a31eb4ae38ea36396', 'amz-sdk-invocation-id': b'ac80972b-fdf0-4b9e-9bcc-51ed2872858a', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947 HTTP/1.1" 200 286
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7feaf1edfb80&gt;
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7feaf1edf9d0&gt;
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'nUbc3XAqexcIz4Q', 'x-amz-request-id': '3af76a50-5661-427f-88df-2fc60f92c594', 'Content-Length': '286'}
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"ee7a8a184cfde0f34310f78b26bb8b16-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7feaf1edfca0&gt;
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7feaf0857190&gt;
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7feaf0857250&gt;&gt;
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7feaf136ad30&gt;
2025-02-14 14:48:19,478 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 14:48:19,483 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:19.576" endtime="20250214 14:48:19.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:19.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:19.577" endtime="20250214 14:48:19.578"/>
</kw>
<status status="PASS" starttime="20250214 14:48:18.529" endtime="20250214 14:48:19.578"/>
</kw>
<msg timestamp="20250214 14:48:19.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:18.529" endtime="20250214 14:48:19.578"/>
</kw>
<msg timestamp="20250214 14:48:19.579" level="INFO">${output} = 2025-02-14 14:48:18,888 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:18,888 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:18.528" endtime="20250214 14:48:19.579"/>
</kw>
<msg timestamp="20250214 14:48:19.580" level="INFO">${result} = 2025-02-14 14:48:18,888 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:18,888 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:18.528" endtime="20250214 14:48:19.580"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 14:48:19.581" level="INFO">${match} = POST /erasure/big_file?uploadId=a7f9c070-d3f6-4d8d-b5af-4a02496acd7d-114002788286201947 HTTP/1.1" 200 286
2025-02-14 14:48:19,477 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse...</msg>
<msg timestamp="20250214 14:48:19.581" level="INFO">${etag1} = ee7a8a184cfde0f34310f78b26bb8b16-2</msg>
<status status="PASS" starttime="20250214 14:48:19.580" endtime="20250214 14:48:19.581"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:19.585" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:20.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:20.339" level="INFO">${output} = 2025-02-14 14:48:19,891 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:19,891 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:19.583" endtime="20250214 14:48:20.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:20.341" level="INFO">2025-02-14 14:48:19,891 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:19,891 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/big_file', '/tmp/big_file_downloaded']
2025-02-14 14:48:19,892 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f35eda59820&gt;
2025-02-14 14:48:19,892 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f35ee344c10&gt;
2025-02-14 14:48:19,892 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f35ee035e50&gt;
2025-02-14 14:48:19,893 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:19,895 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f35edac64c0&gt;
2025-02-14 14:48:19,895 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f35eda0b820&gt;
2025-02-14 14:48:19,895 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f35edadf310&gt;
2025-02-14 14:48:19,895 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,896 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f35eda0b820&gt;
2025-02-14 14:48:19,896 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f35edadf310&gt;
2025-02-14 14:48:19,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,897 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,897 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,898 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,899 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f35ee0046a0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,900 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f35ed959ee0&gt;
2025-02-14 14:48:19,901 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:19,901 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:19,902 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:19,925 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:19,925 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f35ef5799d0&gt;
2025-02-14 14:48:19,931 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:19,939 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:19,958 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:19,961 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:19,963 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f35ee67ba60&gt;
2025-02-14 14:48:19,963 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f35ee67b820&gt;
2025-02-14 14:48:19,963 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,966 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:19,968 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:19,969 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:19,969 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:19,969 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,969 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:19,969 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f35ef5799d0&gt;
2025-02-14 14:48:19,970 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f35ee67ba60&gt;
2025-02-14 14:48:19,970 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f35ee67b820&gt;
2025-02-14 14:48:19,970 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,972 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:19,974 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:19,974 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:19,974 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,974 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:19,974 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f35ef5799d0&gt;
2025-02-14 14:48:19,975 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f35ee67ba60&gt;
2025-02-14 14:48:19,975 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f35ee67b820&gt;
2025-02-14 14:48:19,975 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,977 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:19,979 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:19,979 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:19,979 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:19,979 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:19,980 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:19,980 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f35ee5c38b0&gt;
2025-02-14 14:48:19,980 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f35ee5c3820&gt;
2025-02-14 14:48:19,980 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f35ee5ca700&gt;
2025-02-14 14:48:19,980 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ecdb4460&gt;&gt;
2025-02-14 14:48:19,981 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f35ece42370&gt;&gt;
2025-02-14 14:48:19,981 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f35ee5c3670&gt;
2025-02-14 14:48:19,981 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f35ee5ca8b0&gt;
2025-02-14 14:48:19,981 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ecdb4460&gt;&gt;
2025-02-14 14:48:19,981 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:19,982 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:19,982 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:19,982 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:19,982 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f35ee5c3b80&gt;
2025-02-14 14:48:19,982 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ecdb4430&gt;&gt;
2025-02-14 14:48:19,982 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f35ee5c3280&gt;
2025-02-14 14:48:19,982 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f35ee5cad30&gt;
2025-02-14 14:48:19,982 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f35ee5c9ee0&gt;
2025-02-14 14:48:19,982 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f35ecde06d0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:19,983 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f35ecde0640&gt;&gt;
2025-02-14 14:48:19,983 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f35ee5c34c0&gt;
2025-02-14 14:48:19,983 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f35ee5ca820&gt;
2025-02-14 14:48:19,983 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ecdb4430&gt;&gt;
2025-02-14 14:48:19,983 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:19,983 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144819Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:19,983 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144819Z
20250214/us-west-1/s3/aws4_request
8d4c7b471dc5412c729db25e1e1a937dc358fa875f5cb6f256ef315c10e02b19
2025-02-14 14:48:19,984 - MainThread - botocore.auth - DEBUG - Signature:
1c573ac0275e6400107570635003585ec1ef638a3ce1ed3905d24f422c45ccf8
2025-02-14 14:48:19,984 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f35ee5ca670&gt;
2025-02-14 14:48:19,984 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/big_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144819Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1c573ac0275e6400107570635003585ec1ef638a3ce1ed3905d24f422c45ccf8', 'amz-sdk-invocation-id': b'c258576d-4862-433a-ad4b-74dd7b909c08', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:19,984 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:19,992 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/big_file HTTP/1.1" 200 0
2025-02-14 14:48:19,992 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f35ee5cab80&gt;
2025-02-14 14:48:19,992 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f35ee5ca9d0&gt;
2025-02-14 14:48:19,992 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"ee7a8a184cfde0f34310f78b26bb8b16-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'Q12zXgpKlANbE', 'x-amz-request-id': '3faf90d8-872c-47c1-8829-5de28ae976c0', 'Content-Length': '10000000'}
2025-02-14 14:48:19,993 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:19,993 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f35ee5caca0&gt;
2025-02-14 14:48:19,993 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f35ecdb43a0&gt;
2025-02-14 14:48:19,993 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:19,993 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ecdb4460&gt;&gt;
2025-02-14 14:48:19,993 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f35eda55d30&gt;
2025-02-14 14:48:19,994 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:19,994 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;}) about to wait for the following futures []
2025-02-14 14:48:19,994 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;}) done waiting for dependent futures
2025-02-14 14:48:19,994 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f35ece68310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f35ecdb47f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f35ecdb4880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt;}
2025-02-14 14:48:19,995 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4ac0&gt; for transfer request: 0.
2025-02-14 14:48:19,995 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:19,995 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2025-02-14 14:48:19,995 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2025-02-14 14:48:19,995 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f35ece68310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f35ecdc2e20&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f35ecdc2e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f35ecdc2e50&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f35ecdc2f10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f35ecd6e730&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f35ee5c38b0&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f35ee5c3820&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f35ee5ca700&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f35ecec9160&gt;&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f35ee5c3670&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f35ee5ca8b0&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:19,996 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:19,997 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:19,997 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:19,997 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:19,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f35ee5c3b80&gt;
2025-02-14 14:48:19,997 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ece42220&gt;&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f35ee5c3280&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f35ee5cad30&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f35ee5c9ee0&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f35ece68490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'Range': 'bytes=0-8388607'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f35edcff790&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f35ece68400&gt;&gt;
2025-02-14 14:48:19,998 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4ac0&gt; for transfer request: 0.
2025-02-14 14:48:19,998 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f35ee5c34c0&gt;
2025-02-14 14:48:19,999 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:19,999 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f35ee5ca820&gt;
2025-02-14 14:48:19,999 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ece42220&gt;&gt;
2025-02-14 14:48:19,999 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:19,999 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144819Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:19,999 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144819Z
20250214/us-west-1/s3/aws4_request
8ba4572f426b607ecefaa1554ea5fa9279f4b25c4305fa4cd7fe37994f253cb5
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c653bddffa83e96ab921412910c6fd896e88d69f3bdc9e439d4b30d03b202685
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f35edcff820&gt;
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f35ee5ca670&gt;
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144819Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=c653bddffa83e96ab921412910c6fd896e88d69f3bdc9e439d4b30d03b202685', 'amz-sdk-invocation-id': b'0be3c2c6-d81c-4b84-9b6f-6d0db497b90a', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:20,000 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:20,000 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f35ece68310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f35ecdc2e20&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f35ecdc2e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f35ecdc2e50&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f35ecdc2f10&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f35ecdc2a30&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f35ecd6e730&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f35ee5c38b0&gt;
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f35ee5c3820&gt;
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f35ee5ca700&gt;
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f35ecec9160&gt;&gt;
2025-02-14 14:48:20,001 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f35ee5c3670&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f35ee5ca8b0&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f35ee5c3b80&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ece42220&gt;&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f35ee5c3280&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f35ee5cad30&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f35ee5c9ee0&gt;
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f35ece68490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'Range': 'bytes=8388608-'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:20,002 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f35edcff790&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f35ece68400&gt;&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f35ee5c34c0&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f35ee5ca820&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f35ece42220&gt;&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144820Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144820Z
20250214/us-west-1/s3/aws4_request
248cc7bb1de163cc3c6fd69ef8d5f07b86c93a95e778cd9bb631e30c6062dbe2
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
496e00b568bc0ce7cb7f810193efb0a2f6efadeee485359c73d394f45954d554
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f35edcff820&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f35ee5ca670&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144820Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=496e00b568bc0ce7cb7f810193efb0a2f6efadeee485359c73d394f45954d554', 'amz-sdk-invocation-id': b'12926216-95f9-4fd3-ba2d-c5638fd3e67b', 'amz-sdk-request': b'attempt=1'}&gt;
2025-02-14 14:48:20,003 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-02-14 14:48:20,059 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 1611392
2025-02-14 14:48:20,060 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f35ee5cab80&gt;
2025-02-14 14:48:20,060 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f35ee5ca9d0&gt;
2025-02-14 14:48:20,060 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:20 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:20 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"ee7a8a184cfde0f34310f78b26bb8b16-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'Buetq5Opsq', 'x-amz-request-id': '1f1749a8-7cd0-48ec-9586-3224ec3de786', 'Content-Length': '1611392'}
2025-02-14 14:48:20,060 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f35ecd3f760&gt;
2025-02-14 14:48:20,061 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f35ee5caca0&gt;
2025-02-14 14:48:20,061 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f35ece42190&gt;
2025-02-14 14:48:20,061 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:20,061 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:20,061 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f35eda55d30&gt;
2025-02-14 14:48:20,063 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,063 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 256.0 KiB/9.5 MiB (3.9 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:20,065 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2025-02-14 14:48:20,065 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
Completed 512.0 KiB/9.5 MiB (7.3 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:20,067 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 8388608}
2025-02-14 14:48:20,067 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,068 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,068 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,069 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 768.0 KiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:20,070 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,070 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2025-02-14 14:48:20,070 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2025-02-14 14:48:20,070 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 8650752}
2025-02-14 14:48:20,071 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,071 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2025-02-14 14:48:20,071 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2025-02-14 14:48:20,071 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 8912896}
2025-02-14 14:48:20,070 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,071 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 1.0 MiB/9.5 MiB (14.1 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (17.1 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,071 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,072 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 1.5 MiB/9.5 MiB (20.4 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,072 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,072 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,073 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
Completed 1.5 MiB/9.5 MiB (20.5 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,074 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2025-02-14 14:48:20,073 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,074 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,074 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 9175040}
2025-02-14 14:48:20,074 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,075 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,075 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2025-02-14 14:48:20,075 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2025-02-14 14:48:20,076 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 9437184}
2025-02-14 14:48:20,076 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,076 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2025-02-14 14:48:20,076 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2025-02-14 14:48:20,076 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 9699328}
2025-02-14 14:48:20,077 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,077 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2025-02-14 14:48:20,077 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2025-02-14 14:48:20,077 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 9961472}
2025-02-14 14:48:20,078 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,168 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 8388608
2025-02-14 14:48:20,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f35ee5cab80&gt;
2025-02-14 14:48:20,169 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f35ee5ca9d0&gt;
2025-02-14 14:48:20,169 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:20 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:20 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"ee7a8a184cfde0f34310f78b26bb8b16-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Fri, 14 Feb 2025 14:48:19 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'S9p6OWW5uH4', 'x-amz-request-id': 'a1d0e4dc-075f-427d-b2b5-8892c79d52b2', 'Content-Length': '8388608'}
2025-02-14 14:48:20,169 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f35ecd37f10&gt;
2025-02-14 14:48:20,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f35ee5caca0&gt;
2025-02-14 14:48:20,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f35ece42190&gt;
2025-02-14 14:48:20,170 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:20,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f35ece42250&gt;&gt;
2025-02-14 14:48:20,170 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f35eda55d30&gt;
Completed 1.8 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,172 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,172 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,173 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,173 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,173 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 0}
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 262144}
2025-02-14 14:48:20,174 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.0 MiB/9.5 MiB (11.7 MiB/s) with 1 file(s) remaining  
Completed 2.3 MiB/9.5 MiB (12.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,175 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,175 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,176 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,176 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (14.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,176 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-02-14 14:48:20,176 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-02-14 14:48:20,176 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 524288}
2025-02-14 14:48:20,176 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.8 MiB/9.5 MiB (15.6 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,178 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,178 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (16.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,178 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-02-14 14:48:20,178 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-02-14 14:48:20,178 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 786432}
2025-02-14 14:48:20,178 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,178 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,179 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 3.3 MiB/9.5 MiB (18.2 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,179 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2025-02-14 14:48:20,179 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2025-02-14 14:48:20,179 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 1048576}
2025-02-14 14:48:20,180 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,179 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,180 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (19.4 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,180 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,180 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 1310720}
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2025-02-14 14:48:20,181 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 1572864}
2025-02-14 14:48:20,182 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,181 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,183 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.8 MiB/9.5 MiB (20.5 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (21.8 MiB/s) with 1 file(s) remaining  
Completed 4.3 MiB/9.5 MiB (23.2 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 1835008}
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2025-02-14 14:48:20,184 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 2097152}
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 2359296}
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2025-02-14 14:48:20,185 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 2621440}
2025-02-14 14:48:20,186 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.5 MiB/9.5 MiB (24.1 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,187 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,187 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,187 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2025-02-14 14:48:20,188 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2025-02-14 14:48:20,188 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 2883584}
Completed 4.8 MiB/9.5 MiB (25.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,188 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,188 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,189 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,189 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 5.0 MiB/9.5 MiB (26.4 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,189 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,189 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2025-02-14 14:48:20,190 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2025-02-14 14:48:20,190 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 3145728}
Completed 5.3 MiB/9.5 MiB (27.6 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,190 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,191 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,191 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,191 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (28.7 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,190 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2025-02-14 14:48:20,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 3407872}
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 3670016}
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2025-02-14 14:48:20,192 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2025-02-14 14:48:20,193 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 3932160}
2025-02-14 14:48:20,193 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,250 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 5.8 MiB/9.5 MiB (23.0 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,250 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,250 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2025-02-14 14:48:20,250 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2025-02-14 14:48:20,251 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 4194304}
2025-02-14 14:48:20,251 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,251 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,251 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,251 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2025-02-14 14:48:20,252 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2025-02-14 14:48:20,252 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 4456448}
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 6.0 MiB/9.5 MiB (23.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,252 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.3 MiB/9.5 MiB (24.8 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (25.8 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (26.7 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,252 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,253 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2025-02-14 14:48:20,253 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2025-02-14 14:48:20,253 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 4718592}
2025-02-14 14:48:20,253 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,253 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (27.6 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,254 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 7.3 MiB/9.5 MiB (28.5 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,254 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2025-02-14 14:48:20,254 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2025-02-14 14:48:20,254 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 4980736}
2025-02-14 14:48:20,254 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,255 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,255 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
Completed 7.5 MiB/9.5 MiB (29.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,255 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,256 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2025-02-14 14:48:20,255 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.8 MiB/9.5 MiB (30.2 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,256 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2025-02-14 14:48:20,256 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 5242880}
2025-02-14 14:48:20,257 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,256 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,257 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2025-02-14 14:48:20,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2025-02-14 14:48:20,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 5505024}
2025-02-14 14:48:20,258 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,257 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,258 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (31.1 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2025-02-14 14:48:20,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2025-02-14 14:48:20,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 5767168}
2025-02-14 14:48:20,258 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,258 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (31.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,259 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,259 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,259 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.5 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (33.7 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,259 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,259 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2025-02-14 14:48:20,260 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,260 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2025-02-14 14:48:20,260 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 6029312}
2025-02-14 14:48:20,260 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,260 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (34.5 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,260 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2025-02-14 14:48:20,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2025-02-14 14:48:20,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 6291456}
2025-02-14 14:48:20,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (35.4 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,262 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f35ecdb4b80&gt; for transfer request: 0.
2025-02-14 14:48:20,262 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:20,262 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (36.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 6553600}
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2025-02-14 14:48:20,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 6815744}
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 7077888}
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 7340032}
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 7602176}
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 7864320}
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2025-02-14 14:48:20,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'offset': 8126464}
2025-02-14 14:48:20,265 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:20,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2025-02-14 14:48:20,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2025-02-14 14:48:20,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f35ecd6e850&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f35ecdb4880&gt;}
2025-02-14 14:48:20,265 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/big_file to ../../tmp/big_file_downloaded 
2025-02-14 14:48:20,265 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:20.340" endtime="20250214 14:48:20.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:20.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:20.342" endtime="20250214 14:48:20.342"/>
</kw>
<status status="PASS" starttime="20250214 14:48:19.582" endtime="20250214 14:48:20.342"/>
</kw>
<msg timestamp="20250214 14:48:20.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:19.582" endtime="20250214 14:48:20.343"/>
</kw>
<msg timestamp="20250214 14:48:20.345" level="INFO">${output} = 2025-02-14 14:48:19,891 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:19,891 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:19.582" endtime="20250214 14:48:20.345"/>
</kw>
<msg timestamp="20250214 14:48:20.345" level="INFO">${file_download_result} = 2025-02-14 14:48:19,891 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:19,891 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:19.581" endtime="20250214 14:48:20.345"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 14:48:20.347" level="INFO">${match} = GET /erasure/big_file HTTP/1.1" 206 1611392
2025-02-14 14:48:20,060 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at ...</msg>
<msg timestamp="20250214 14:48:20.347" level="INFO">${etag2} = ee7a8a184cfde0f34310f78b26bb8b16-2</msg>
<status status="PASS" starttime="20250214 14:48:20.345" endtime="20250214 14:48:20.347"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:48:20.347" endtime="20250214 14:48:20.347"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:20.351" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:20.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:20.835" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:20.348" endtime="20250214 14:48:20.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:20.836" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:20.836" endtime="20250214 14:48:20.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:20.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:20.836" endtime="20250214 14:48:20.837"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.348" endtime="20250214 14:48:20.837"/>
</kw>
<msg timestamp="20250214 14:48:20.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:20.348" endtime="20250214 14:48:20.837"/>
</kw>
<msg timestamp="20250214 14:48:20.837" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:20.347" endtime="20250214 14:48:20.837"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.347" endtime="20250214 14:48:20.837"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:20.840" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:20.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:20.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:20.838" endtime="20250214 14:48:20.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:20.847" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:20.846" endtime="20250214 14:48:20.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:20.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:20.847" endtime="20250214 14:48:20.847"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.838" endtime="20250214 14:48:20.847"/>
</kw>
<msg timestamp="20250214 14:48:20.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:20.837" endtime="20250214 14:48:20.847"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.837" endtime="20250214 14:48:20.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:18.481" endtime="20250214 14:48:20.848"/>
</test>
<test id="s1-s1-s14-t21" name="Create key twice with different content and expect different ETags" line="261">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:20.852" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20250214 14:48:20.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:20.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:20.850" endtime="20250214 14:48:20.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:20.860" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:20.859" endtime="20250214 14:48:20.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:20.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:20.860" endtime="20250214 14:48:20.860"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.849" endtime="20250214 14:48:20.860"/>
</kw>
<msg timestamp="20250214 14:48:20.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:20.849" endtime="20250214 14:48:20.861"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.849" endtime="20250214 14:48:20.861"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:20.864" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20250214 14:48:20.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:20.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:20.862" endtime="20250214 14:48:20.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:20.872" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:20.871" endtime="20250214 14:48:20.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:20.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:20.872" endtime="20250214 14:48:20.872"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.861" endtime="20250214 14:48:20.873"/>
</kw>
<msg timestamp="20250214 14:48:20.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:20.861" endtime="20250214 14:48:20.873"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.861" endtime="20250214 14:48:20.873"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:20.876" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:21.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:21.497" level="INFO">${output} = 2025-02-14 14:48:21,185 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,186 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:20.874" endtime="20250214 14:48:21.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:21.498" level="INFO">2025-02-14 14:48:21,185 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,186 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://erasure/test_key_to_check_etag_differences']
2025-02-14 14:48:21,186 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa3b4a72820&gt;
2025-02-14 14:48:21,186 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa3b535cc10&gt;
2025-02-14 14:48:21,186 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa3b504de50&gt;
2025-02-14 14:48:21,187 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:21,189 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa3b4ade4c0&gt;
2025-02-14 14:48:21,189 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa3b4a23820&gt;
2025-02-14 14:48:21,189 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fa3b4af7310&gt;
2025-02-14 14:48:21,190 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,190 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa3b4a23820&gt;
2025-02-14 14:48:21,190 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fa3b4af7310&gt;
2025-02-14 14:48:21,191 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,192 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,193 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,194 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa3b501d6a0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,195 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa3b4971ee0&gt;
2025-02-14 14:48:21,196 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:21,196 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:21,197 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:21,220 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:21,221 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3b65919d0&gt;
2025-02-14 14:48:21,227 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:21,235 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:21,254 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:21,257 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:21,259 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3b5693a60&gt;
2025-02-14 14:48:21,259 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3b5693820&gt;
2025-02-14 14:48:21,259 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,262 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,264 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:21,265 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,265 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,265 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,265 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,265 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3b65919d0&gt;
2025-02-14 14:48:21,266 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3b5693a60&gt;
2025-02-14 14:48:21,266 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3b5693820&gt;
2025-02-14 14:48:21,266 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,268 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,270 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,270 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,270 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,270 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,270 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa3b65919d0&gt;
2025-02-14 14:48:21,271 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa3b5693a60&gt;
2025-02-14 14:48:21,271 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa3b5693820&gt;
2025-02-14 14:48:21,271 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,273 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,275 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,275 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,275 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,275 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,276 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:21,276 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:21,277 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3b3dd8250&gt;}) about to wait for the following futures []
2025-02-14 14:48:21,277 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3b3dd8250&gt;}) done waiting for dependent futures
2025-02-14 14:48:21,277 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3b3dd8250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa3b3e81310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa3b3dcc7f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa3b3dcc880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa3b3dccac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa3b3dd8250&gt;}
2025-02-14 14:48:21,278 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa3b3dccac0&gt; for transfer request: 0.
2025-02-14 14:48:21,278 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:21,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:21,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:21,278 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa3b3e81310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa3b3dd8ac0&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-14 14:48:21,278 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fa3b55e14c0&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fa3b55db8b0&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fa3b55e1dc0&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fa3b55db820&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa3b55e2700&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa3b3e5a250&gt;&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa3b3ee1100&gt;&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa3b55db670&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa3b55e28b0&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa3b3e5a250&gt;&gt;
2025-02-14 14:48:21,279 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:21,280 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:21,280 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:21,280 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:21,281 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7fa3b5750790&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fa3b55dbb80&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa3b3e5a220&gt;&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fa3b55db280&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7fa3b55e2d30&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa3b55e1ee0&gt;
2025-02-14 14:48:21,283 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'eADerwqDD0deGtWLDZ1WXw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa3b3dd8ac0&gt;, 'auth_path': '/erasure/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa3b3e81490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa3b3dd8ac0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:21,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fa3b4d17790&gt;
2025-02-14 14:48:21,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa3b3e81400&gt;&gt;
2025-02-14 14:48:21,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fa3b55db4c0&gt;
2025-02-14 14:48:21,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fa3b55e2820&gt;
2025-02-14 14:48:21,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa3b3e5a220&gt;&gt;
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:eADerwqDD0deGtWLDZ1WXw==
host:s3g:9878
x-amz-content-sha256:d5b9d4f3c4b120eb09db56a6fc47aa508b37963cd6eca9efee28fe4e867315e5
x-amz-date:20250214T144821Z

content-md5;host;x-amz-content-sha256;x-amz-date
d5b9d4f3c4b120eb09db56a6fc47aa508b37963cd6eca9efee28fe4e867315e5
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144821Z
20250214/us-west-1/s3/aws4_request
c0a595f913326958b5f49c88a50530b8fb75a1369f7e29e513f7d4befbfc04f0
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
39f00a7360ae635a350f5dfbedabde59014b8e94104494ea3bac17e883e3968b
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fa3b4d17820&gt;
2025-02-14 14:48:21,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fa3b55e2670&gt;
2025-02-14 14:48:21,286 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'eADerwqDD0deGtWLDZ1WXw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144821Z', 'X-Amz-Content-SHA256': b'd5b9d4f3c4b120eb09db56a6fc47aa508b37963cd6eca9efee28fe4e867315e5', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=39f00a7360ae635a350f5dfbedabde59014b8e94104494ea3bac17e883e3968b', 'amz-sdk-invocation-id': b'597e9af0-a663-44cd-aebb-9d88fbecddfb', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-14 14:48:21,286 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:21,287 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:21,320 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (11.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (16.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (20.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:21,414 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7fa3b55e2b80&gt;
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7fa3b55e29d0&gt;
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:21 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:21 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7800deaf0a830f475e1ad58b0d9d565f"', 'Server': 'Ozone', 'x-amz-id-2': 'OTZECbIVUNjRJD', 'x-amz-request-id': '1621730b-14dc-4964-92f7-1905f9e2ca85', 'Content-Length': '0'}
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7fa3b55e2ca0&gt;
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa3b3e5a190&gt;
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:21,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa3b3e5a250&gt;&gt;
2025-02-14 14:48:21,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fa3b4a6dd30&gt;
2025-02-14 14:48:21,416 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://erasure/test_key_to_check_etag_differences
2025-02-14 14:48:21,416 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:21.497" endtime="20250214 14:48:21.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:21.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:21.499" endtime="20250214 14:48:21.499"/>
</kw>
<status status="PASS" starttime="20250214 14:48:20.874" endtime="20250214 14:48:21.499"/>
</kw>
<msg timestamp="20250214 14:48:21.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:20.873" endtime="20250214 14:48:21.500"/>
</kw>
<msg timestamp="20250214 14:48:21.501" level="INFO">${output} = 2025-02-14 14:48:21,185 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,186 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:20.873" endtime="20250214 14:48:21.501"/>
</kw>
<msg timestamp="20250214 14:48:21.501" level="INFO">${file1UploadResult} = 2025-02-14 14:48:21,185 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,186 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:20.873" endtime="20250214 14:48:21.501"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 14:48:21.503" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 14:48:21,415 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _...</msg>
<msg timestamp="20250214 14:48:21.503" level="INFO">${etag1} = 7800deaf0a830f475e1ad58b0d9d565f</msg>
<status status="PASS" starttime="20250214 14:48:21.501" endtime="20250214 14:48:21.503"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:21.507" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:22.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:22.096" level="INFO">${output} = 2025-02-14 14:48:21,834 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,834 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:21.504" endtime="20250214 14:48:22.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:22.097" level="INFO">2025-02-14 14:48:21,834 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,834 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://erasure/test_key_to_check_etag_differences']
2025-02-14 14:48:21,834 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f0e64638820&gt;
2025-02-14 14:48:21,834 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f0e64f23c10&gt;
2025-02-14 14:48:21,834 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f0e64c14e50&gt;
2025-02-14 14:48:21,836 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:21,837 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f0e646a54c0&gt;
2025-02-14 14:48:21,837 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f0e645e9820&gt;
2025-02-14 14:48:21,838 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f0e646be310&gt;
2025-02-14 14:48:21,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,838 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f0e645e9820&gt;
2025-02-14 14:48:21,839 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f0e646be310&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,840 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,841 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,842 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0e64be36a0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,843 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0e64537ee0&gt;
2025-02-14 14:48:21,844 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:21,844 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:21,845 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:21,872 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:21,872 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0e661589d0&gt;
2025-02-14 14:48:21,878 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:21,887 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:21,906 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:21,909 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:21,911 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0e6525aa60&gt;
2025-02-14 14:48:21,911 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0e6525a820&gt;
2025-02-14 14:48:21,911 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,914 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,916 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:21,916 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,916 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,917 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,917 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,917 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0e661589d0&gt;
2025-02-14 14:48:21,918 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0e6525aa60&gt;
2025-02-14 14:48:21,918 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0e6525a820&gt;
2025-02-14 14:48:21,918 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,920 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,921 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,921 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,921 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,921 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,922 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0e661589d0&gt;
2025-02-14 14:48:21,922 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0e6525aa60&gt;
2025-02-14 14:48:21,923 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0e6525a820&gt;
2025-02-14 14:48:21,923 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,925 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:21,926 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:21,926 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:21,926 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:21,927 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:21,927 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:21,928 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:21,928 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0e6399f250&gt;}) about to wait for the following futures []
2025-02-14 14:48:21,928 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0e6399f250&gt;}) done waiting for dependent futures
2025-02-14 14:48:21,928 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0e6399f250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0e63a47310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f0e639937f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f0e63993880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f0e63993ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0e6399f250&gt;}
2025-02-14 14:48:21,929 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0e63993ac0&gt; for transfer request: 0.
2025-02-14 14:48:21,929 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:21,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:21,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:21,929 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0e63a47310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0e6399fac0&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f0e651a84c0&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f0e651a28b0&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f0e651a8dc0&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f0e651a2820&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f0e651a9700&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f0e63a21250&gt;&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f0e63aa8100&gt;&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f0e651a2670&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f0e651a98b0&gt;
2025-02-14 14:48:21,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f0e63a21250&gt;&gt;
2025-02-14 14:48:21,931 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:21,931 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:21,931 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:21,931 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:21,932 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f0e65317790&gt;
2025-02-14 14:48:21,932 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:21,934 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f0e651a2b80&gt;
2025-02-14 14:48:21,934 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:21,934 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f0e63a21220&gt;&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f0e651a2280&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f0e651a9d30&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0e651a8ee0&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '/TGLJiCa2sXmx80P2/0JcQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0e6399fac0&gt;, 'auth_path': '/erasure/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0e63a47490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0e6399fac0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f0e648de790&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0e63a47400&gt;&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f0e651a24c0&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f0e651a9820&gt;
2025-02-14 14:48:21,935 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f0e63a21220&gt;&gt;
2025-02-14 14:48:21,936 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:21,936 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:/TGLJiCa2sXmx80P2/0JcQ==
host:s3g:9878
x-amz-content-sha256:c31e2bfed05859c4fc87b004326ee00c81b8f3af95d9632306844888147407d3
x-amz-date:20250214T144821Z

content-md5;host;x-amz-content-sha256;x-amz-date
c31e2bfed05859c4fc87b004326ee00c81b8f3af95d9632306844888147407d3
2025-02-14 14:48:21,936 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144821Z
20250214/us-west-1/s3/aws4_request
d469f716ae867a819a1e4e725692694fd558c2cefc93f55f6a2a0bb4f035cb50
2025-02-14 14:48:21,937 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
58c3bfe0fa7b98c4bb8d0b2683a856e260efba74c82eeb6597a82ca0623a992d
2025-02-14 14:48:21,937 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f0e648de820&gt;
2025-02-14 14:48:21,937 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f0e651a9670&gt;
2025-02-14 14:48:21,937 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'/TGLJiCa2sXmx80P2/0JcQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144821Z', 'X-Amz-Content-SHA256': b'c31e2bfed05859c4fc87b004326ee00c81b8f3af95d9632306844888147407d3', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=58c3bfe0fa7b98c4bb8d0b2683a856e260efba74c82eeb6597a82ca0623a992d', 'amz-sdk-invocation-id': b'99e413ab-a23e-40ae-94dc-b19a51e4bc59', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-02-14 14:48:21,937 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:21,938 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:21,961 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (15.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (22.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (29.0 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:22,035 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f0e651a9b80&gt;
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f0e651a99d0&gt;
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:21 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:21 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"fd318b26209adac5e6c7cd0fdbfd0971"', 'Server': 'Ozone', 'x-amz-id-2': 'DsnfD6F1sKmC1x', 'x-amz-request-id': 'b4f7b5a4-915c-4d9b-ab68-be08ec5eb16c', 'Content-Length': '0'}
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f0e651a9ca0&gt;
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0e63a21190&gt;
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:22,037 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f0e63a21250&gt;&gt;
2025-02-14 14:48:22,037 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f0e64634d30&gt;
2025-02-14 14:48:22,037 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://erasure/test_key_to_check_etag_differences
2025-02-14 14:48:22,038 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:22.097" endtime="20250214 14:48:22.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:22.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:22.098" endtime="20250214 14:48:22.098"/>
</kw>
<status status="PASS" starttime="20250214 14:48:21.504" endtime="20250214 14:48:22.098"/>
</kw>
<msg timestamp="20250214 14:48:22.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:21.504" endtime="20250214 14:48:22.098"/>
</kw>
<msg timestamp="20250214 14:48:22.099" level="INFO">${output} = 2025-02-14 14:48:21,834 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,834 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:21.503" endtime="20250214 14:48:22.099"/>
</kw>
<msg timestamp="20250214 14:48:22.099" level="INFO">${file2UploadResult} = 2025-02-14 14:48:21,834 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:21,834 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:21.503" endtime="20250214 14:48:22.099"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250214 14:48:22.100" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-02-14 14:48:22,036 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _...</msg>
<msg timestamp="20250214 14:48:22.100" level="INFO">${etag2} = fd318b26209adac5e6c7cd0fdbfd0971</msg>
<status status="PASS" starttime="20250214 14:48:22.099" endtime="20250214 14:48:22.100"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250214 14:48:22.100" endtime="20250214 14:48:22.101"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:22.104" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:22.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:22.568" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 14:48:22.102" endtime="20250214 14:48:22.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:22.569" level="INFO">delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 14:48:22.568" endtime="20250214 14:48:22.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:22.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:22.569" endtime="20250214 14:48:22.569"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.102" endtime="20250214 14:48:22.569"/>
</kw>
<msg timestamp="20250214 14:48:22.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:22.102" endtime="20250214 14:48:22.569"/>
</kw>
<msg timestamp="20250214 14:48:22.569" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250214 14:48:22.101" endtime="20250214 14:48:22.569"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.101" endtime="20250214 14:48:22.570"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:22.573" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:22.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:22.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:22.571" endtime="20250214 14:48:22.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:22.577" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:22.577" endtime="20250214 14:48:22.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:22.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:22.578" endtime="20250214 14:48:22.578"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.570" endtime="20250214 14:48:22.578"/>
</kw>
<msg timestamp="20250214 14:48:22.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:22.570" endtime="20250214 14:48:22.578"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.570" endtime="20250214 14:48:22.578"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:22.581" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:22.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:22.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:22.579" endtime="20250214 14:48:22.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:22.586" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:22.585" endtime="20250214 14:48:22.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:22.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:22.586" endtime="20250214 14:48:22.586"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.579" endtime="20250214 14:48:22.586"/>
</kw>
<msg timestamp="20250214 14:48:22.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:22.579" endtime="20250214 14:48:22.586"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.578" endtime="20250214 14:48:22.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:20.848" endtime="20250214 14:48:22.587"/>
</test>
<test id="s1-s1-s14-t22" name="Create&amp;Download big file by multipart upload and get file via part numbers" line="274">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:22.590" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 14:48:22.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:22.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:22.588" endtime="20250214 14:48:22.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:22.633" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:22.633" endtime="20250214 14:48:22.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:22.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:22.633" endtime="20250214 14:48:22.634"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.588" endtime="20250214 14:48:22.634"/>
</kw>
<msg timestamp="20250214 14:48:22.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:22.588" endtime="20250214 14:48:22.634"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.588" endtime="20250214 14:48:22.634"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:22.638" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:23.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:23.399" level="INFO">${output} = 2025-02-14 14:48:22,938 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:22,938 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:22.636" endtime="20250214 14:48:23.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:23.400" level="INFO">2025-02-14 14:48:22,938 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:22,938 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 14:48:22,938 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fc2d3b31820&gt;
2025-02-14 14:48:22,938 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fc2d441cc10&gt;
2025-02-14 14:48:22,938 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fc2d410de50&gt;
2025-02-14 14:48:22,940 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:22,941 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fc2d3b9e4c0&gt;
2025-02-14 14:48:22,942 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fc2d3ae3820&gt;
2025-02-14 14:48:22,942 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fc2d3bb7310&gt;
2025-02-14 14:48:22,942 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,942 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fc2d3ae3820&gt;
2025-02-14 14:48:22,943 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fc2d3bb7310&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,944 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,945 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,946 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc2d40dc6a0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc2d3a30ee0&gt;
2025-02-14 14:48:22,947 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:22,947 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:22,949 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:22,971 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:22,971 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc2d56519d0&gt;
2025-02-14 14:48:22,977 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:22,985 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:23,004 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:23,007 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:23,009 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc2d4753a60&gt;
2025-02-14 14:48:23,009 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc2d4753820&gt;
2025-02-14 14:48:23,009 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,012 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:23,014 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:23,014 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:23,014 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:23,014 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,014 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:23,015 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc2d56519d0&gt;
2025-02-14 14:48:23,016 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc2d4753a60&gt;
2025-02-14 14:48:23,016 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc2d4753820&gt;
2025-02-14 14:48:23,016 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,017 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:23,019 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:23,019 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:23,019 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,019 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:23,020 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc2d56519d0&gt;
2025-02-14 14:48:23,020 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc2d4753a60&gt;
2025-02-14 14:48:23,020 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc2d4753820&gt;
2025-02-14 14:48:23,021 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,022 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:23,024 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:23,024 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:23,024 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:23,024 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:23,025 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:23,026 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:23,026 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc2d2e98250&gt;}) about to wait for the following futures []
2025-02-14 14:48:23,026 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc2d2e98250&gt;}) done waiting for dependent futures
2025-02-14 14:48:23,026 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc2d2e98250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc2d2f40310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fc2d2e8b7f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fc2d2e8b880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fc2d2e8bac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc2d2e98250&gt;}
2025-02-14 14:48:23,027 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc2d2e8bac0&gt; for transfer request: 0.
2025-02-14 14:48:23,027 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:23,027 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:23,027 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc2d2e8bac0&gt; for transfer request: 0.
2025-02-14 14:48:23,027 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:23,027 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:23,027 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc2d2f40310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fc2d46a14c0&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fc2d469b8b0&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fc2d469b820&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fc2d46a2700&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fc2d2fa0100&gt;&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fc2d469b670&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fc2d46a28b0&gt;
2025-02-14 14:48:23,028 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,029 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fc2d469bb80&gt;
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fc2d469b280&gt;
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fc2d46a2d30&gt;
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc2d46a1ee0&gt;
2025-02-14 14:48:23,030 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc2d2f40490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fc2d3dd7790&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc2d2f40400&gt;&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fc2d469b4c0&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fc2d46a2820&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144823Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144823Z
20250214/us-west-1/s3/aws4_request
be13069763511903b8d8cf9cde1d179e098a827b853b977856e37e20d15c8e28
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ec0712f78873c13b4ebe689c6bcaa720569d767ef4f2fbfa4c4223084c0a3721
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fc2d3dd7820&gt;
2025-02-14 14:48:23,031 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fc2d46a2670&gt;
2025-02-14 14:48:23,032 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;]
2025-02-14 14:48:23,032 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144823Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=ec0712f78873c13b4ebe689c6bcaa720569d767ef4f2fbfa4c4223084c0a3721', 'amz-sdk-invocation-id': b'fd9dfd18-866b-498b-8e21-b0426ffbfdb0', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 14:48:23,032 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:23,032 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc2d2e8bac0&gt; for transfer request: 0.
2025-02-14 14:48:23,032 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;
2025-02-14 14:48:23,033 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:23,033 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;]
2025-02-14 14:48:23,033 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc2d2e8bac0&gt; for transfer request: 0.
2025-02-14 14:48:23,033 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;
2025-02-14 14:48:23,033 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:23,034 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e2d580&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d1dcc340&gt;]
2025-02-14 14:48:23,034 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e98d60&gt;
2025-02-14 14:48:23,034 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:23,045 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 14:48:23,045 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fc2d46a2b80&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fc2d46a29d0&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'ptYnEqpbr9e', 'x-amz-request-id': '3f635e5c-4dc7-4e4d-bbb1-9fab9a46a0fe', 'Content-Length': '285'}
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7fc2d46a2ca0&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc2d2f1a190&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fc2d3b2dd30&gt;
2025-02-14 14:48:23,046 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc2d2f40310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e5e5b0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000'}
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fc2d469b8b0&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fc2d46a1dc0&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fc2d469b820&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fc2d46a2700&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fc2d2fa0100&gt;&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fc2d469b670&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fc2d46a28b0&gt;
2025-02-14 14:48:23,047 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fc2d48108b0&gt;
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d2e2d580&gt;
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:23,048 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc2d2f40310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e2d130&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000'}
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fc2d469b8b0&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fc2d46a1dc0&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fc2d469b820&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fc2d46a2700&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fc2d2fa0100&gt;&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fc2d469b670&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fc2d46a28b0&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:23,049 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fc2d48108b0&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fc2d469bb80&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fc2d469b280&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fc2d46a2d30&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc2d46a1ee0&gt;
2025-02-14 14:48:23,053 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '9afGXqT0G0lky5sTb1GSMQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e5e5b0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc2d2f40490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e5e5b0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:23,054 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fc2d3dd7790&gt;
2025-02-14 14:48:23,054 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc2d2f40400&gt;&gt;
2025-02-14 14:48:23,054 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fc2d469b4c0&gt;
2025-02-14 14:48:23,054 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fc2d46a2820&gt;
2025-02-14 14:48:23,054 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000
content-md5:9afGXqT0G0lky5sTb1GSMQ==
host:s3g:9878
x-amz-content-sha256:23fcd413c9f00b9ac194f1ae37890bc6342147d7756bedec1893d9dc4d57780a
x-amz-date:20250214T144823Z

content-md5;host;x-amz-content-sha256;x-amz-date
23fcd413c9f00b9ac194f1ae37890bc6342147d7756bedec1893d9dc4d57780a
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144823Z
20250214/us-west-1/s3/aws4_request
e3ecc2918ade2fec2c57d990c391e3173b4ad2c204b3b5c8a38bafbccecedd06
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
9ba03d1ab8478e96e5ce9d2cb4b5c080ece102725a25b919e9ac00d81fe46b11
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fc2d3dd7820&gt;
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fc2d46a2670&gt;
2025-02-14 14:48:23,056 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'9afGXqT0G0lky5sTb1GSMQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144823Z', 'X-Amz-Content-SHA256': b'23fcd413c9f00b9ac194f1ae37890bc6342147d7756bedec1893d9dc4d57780a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=9ba03d1ab8478e96e5ce9d2cb4b5c080ece102725a25b919e9ac00d81fe46b11', 'amz-sdk-invocation-id': b'1d15d568-6b7d-40f2-937b-1cde2d5807d8', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 14:48:23,057 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:23,065 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fc2d469bb80&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fc2d469b280&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fc2d46a2d30&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc2d46a1ee0&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'ePjAa457KpX2zb3m8QqU+w==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e2d130&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc2d2f40490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc2d2e2d130&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fc2d3dd7790&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc2d2f40400&gt;&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fc2d469b4c0&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fc2d46a2820&gt;
2025-02-14 14:48:23,066 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,072 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000
content-md5:ePjAa457KpX2zb3m8QqU+w==
host:s3g:9878
x-amz-content-sha256:b4832e3c11df5a856db8ab9504a7dcc8a72ccde57b12cb9936ae30fc7c24f0a5
x-amz-date:20250214T144823Z

content-md5;host;x-amz-content-sha256;x-amz-date
b4832e3c11df5a856db8ab9504a7dcc8a72ccde57b12cb9936ae30fc7c24f0a5
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144823Z
20250214/us-west-1/s3/aws4_request
5dd3e20c31a403f87b8324177a70b9838d892d38332e1da11b5a47a682f70a71
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
671c6fac0b0b40d4e2b4f51a1aa6c259d0b715e4c80fddddaf7db19e82dc14d8
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fc2d3dd7820&gt;
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fc2d46a2670&gt;
2025-02-14 14:48:23,074 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'ePjAa457KpX2zb3m8QqU+w==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144823Z', 'X-Amz-Content-SHA256': b'b4832e3c11df5a856db8ab9504a7dcc8a72ccde57b12cb9936ae30fc7c24f0a5', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=671c6fac0b0b40d4e2b4f51a1aa6c259d0b715e4c80fddddaf7db19e82dc14d8', 'amz-sdk-invocation-id': b'd0456d81-83e2-42dd-9e0a-ae5c2a0ee98e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 14:48:23,075 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
Completed 256.0 KiB/9.5 MiB (5.1 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:23,077 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 512.0 KiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (13.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (17.6 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (21.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (24.7 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:23,122 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (18.3 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (20.8 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (23.3 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (25.2 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (27.5 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (28.4 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (30.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (32.6 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (34.3 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (38.5 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (40.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (42.1 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (44.0 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (45.8 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (47.2 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (49.1 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (50.8 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (51.8 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (53.6 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (53.2 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (54.0 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (55.3 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (56.5 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (57.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (58.1 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (59.7 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (57.5 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (58.9 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:23,178 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fc2d46a2b80&gt;
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fc2d46a29d0&gt;
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'f5a7c65ea4f41b4964cb9b136f519231', 'Server': 'Ozone', 'x-amz-id-2': 'CubeEpdHQy', 'x-amz-request-id': 'c3d1365e-5ce7-41ff-9cf7-db98ea39d82b', 'Content-Length': '0'}
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fc2d46a2ca0&gt;
2025-02-14 14:48:23,179 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc2d2f1a190&gt;
2025-02-14 14:48:23,180 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:23,180 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,180 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fc2d3b2dd30&gt;
2025-02-14 14:48:23,180 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (57.4 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (58.8 MiB/s) with 1 file(s) remaining  
Completed 9.3 MiB/9.5 MiB (60.0 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (61.2 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:23,313 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 14:48:23,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fc2d46a2b80&gt;
2025-02-14 14:48:23,313 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fc2d46a29d0&gt;
2025-02-14 14:48:23,313 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '78f8c06b8e7b2a95f6cdbde6f10a94fb', 'Server': 'Ozone', 'x-amz-id-2': '4bJeQjlOzg', 'x-amz-request-id': '6598eed8-9e0e-4754-bd4e-715ff260c846', 'Content-Length': '0'}
2025-02-14 14:48:23,313 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fc2d46a2ca0&gt;
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc2d2f1a190&gt;
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fc2d3b2dd30&gt;
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc2d1dcc340&gt;
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:23,314 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc2d2f40310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'parts': [{'ETag': '78f8c06b8e7b2a95f6cdbde6f10a94fb', 'PartNumber': 1}, {'ETag': 'f5a7c65ea4f41b4964cb9b136f519231', 'PartNumber': 2}]}
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7fc2d469b8b0&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fc2d469b820&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fc2d46a2700&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fc2d2fa0100&gt;&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fc2d469b670&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fc2d46a28b0&gt;
2025-02-14 14:48:23,315 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,316 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:23,316 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:23,316 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:23,316 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fc2d469bb80&gt;
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fc2d469b280&gt;
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fc2d46a2d30&gt;
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc2d46a1ee0&gt;
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;78f8c06b8e7b2a95f6cdbde6f10a94fb&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;f5a7c65ea4f41b4964cb9b136f519231&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc2d2f40490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': '3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000', 'MultipartUpload': {'Parts': [{'ETag': '78f8c06b8e7b2a95f6cdbde6f10a94fb', 'PartNumber': 1}, {'ETag': 'f5a7c65ea4f41b4964cb9b136f519231', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:23,317 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fc2d3dd7790&gt;
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc2d2f40400&gt;&gt;
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fc2d469b4c0&gt;
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fc2d46a2820&gt;
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fc2d2f1a220&gt;&gt;
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000
host:s3g:9878
x-amz-content-sha256:2572ab34e17b3c2d66ce80d5d366f66cc22f48f42b38176c4252609d40ffb7ad
x-amz-date:20250214T144823Z

host;x-amz-content-sha256;x-amz-date
2572ab34e17b3c2d66ce80d5d366f66cc22f48f42b38176c4252609d40ffb7ad
2025-02-14 14:48:23,318 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144823Z
20250214/us-west-1/s3/aws4_request
59980b0ef69f9189a34bd98bd150e8fd06008f8618317fc219798227828c49f6
2025-02-14 14:48:23,319 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
c4ca837356e8bed36204f19c5e9f95451ed6a3eba727268155a081f0b63dbcc4
2025-02-14 14:48:23,319 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fc2d3dd7820&gt;
2025-02-14 14:48:23,319 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fc2d46a2670&gt;
2025-02-14 14:48:23,319 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144823Z', 'X-Amz-Content-SHA256': b'2572ab34e17b3c2d66ce80d5d366f66cc22f48f42b38176c4252609d40ffb7ad', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c4ca837356e8bed36204f19c5e9f95451ed6a3eba727268155a081f0b63dbcc4', 'amz-sdk-invocation-id': b'a52d771c-27b0-4545-9ea3-e6e788d54823', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 14:48:23,344 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=3e0cd341-8a12-442c-8994-5b5147265ecc-114002788551164000 HTTP/1.1" 200 286
2025-02-14 14:48:23,344 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fc2d46a2b80&gt;
2025-02-14 14:48:23,344 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fc2d46a29d0&gt;
2025-02-14 14:48:23,344 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:23 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'XBPcFH7HHW', 'x-amz-request-id': 'f257055b-cbb0-445b-97f5-6224ed04468d', 'Content-Length': '286'}
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"4f7e5a9b9a7252f682ee08e36bfb7bb3-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7fc2d46a2ca0&gt;
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc2d2f1a190&gt;
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fc2d2f1a250&gt;&gt;
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fc2d3b2dd30&gt;
2025-02-14 14:48:23,345 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 14:48:23,346 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:23.399" endtime="20250214 14:48:23.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:23.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:23.401" endtime="20250214 14:48:23.401"/>
</kw>
<status status="PASS" starttime="20250214 14:48:22.635" endtime="20250214 14:48:23.401"/>
</kw>
<msg timestamp="20250214 14:48:23.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:22.635" endtime="20250214 14:48:23.401"/>
</kw>
<msg timestamp="20250214 14:48:23.403" level="INFO">${output} = 2025-02-14 14:48:22,938 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:22,938 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:22.634" endtime="20250214 14:48:23.403"/>
</kw>
<msg timestamp="20250214 14:48:23.403" level="INFO">${result} = 2025-02-14 14:48:22,938 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:22,938 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:22.634" endtime="20250214 14:48:23.403"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_1_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:23.406" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_1 --part-number 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:24.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:24.048" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 8388608,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:23.404" endtime="20250214 14:48:24.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:24.049" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 8388608,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:23 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:24.048" endtime="20250214 14:48:24.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:24.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:24.049" endtime="20250214 14:48:24.050"/>
</kw>
<status status="PASS" starttime="20250214 14:48:23.404" endtime="20250214 14:48:24.050"/>
</kw>
<msg timestamp="20250214 14:48:24.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:23.404" endtime="20250214 14:48:24.050"/>
</kw>
<msg timestamp="20250214 14:48:24.050" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 8388608,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:23.404" endtime="20250214 14:48:24.050"/>
</kw>
<msg timestamp="20250214 14:48:24.050" level="INFO">${get_part_1_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 8388608,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:23.403" endtime="20250214 14:48:24.050"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_1_size}</var>
<arg>echo '${get_part_1_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:24.054" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 8388608,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:23 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:23 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:24.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:24.062" level="INFO">${output} = 8388608</msg>
<status status="PASS" starttime="20250214 14:48:24.051" endtime="20250214 14:48:24.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:24.063" level="INFO">8388608</msg>
<status status="PASS" starttime="20250214 14:48:24.062" endtime="20250214 14:48:24.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:24.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:24.063" endtime="20250214 14:48:24.064"/>
</kw>
<msg timestamp="20250214 14:48:24.064" level="INFO">${part_1_size} = 8388608</msg>
<status status="PASS" starttime="20250214 14:48:24.051" endtime="20250214 14:48:24.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_1_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:24.064" endtime="20250214 14:48:24.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_2_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_2 --part-number 2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:24.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_2 --part-number 2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:24.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:24.622" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 1611392,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:24.066" endtime="20250214 14:48:24.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:24.623" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 1611392,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:24 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:24.622" endtime="20250214 14:48:24.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:24.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:24.623" endtime="20250214 14:48:24.623"/>
</kw>
<status status="PASS" starttime="20250214 14:48:24.066" endtime="20250214 14:48:24.623"/>
</kw>
<msg timestamp="20250214 14:48:24.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:24.065" endtime="20250214 14:48:24.623"/>
</kw>
<msg timestamp="20250214 14:48:24.623" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 1611392,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:24.065" endtime="20250214 14:48:24.624"/>
</kw>
<msg timestamp="20250214 14:48:24.624" level="INFO">${get_part_2_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 1611392,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250214 14:48:24.064" endtime="20250214 14:48:24.624"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_2_size}</var>
<arg>echo '${get_part_2_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:24.626" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 1611392,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:24 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:24.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:24.631" level="INFO">${output} = 1611392</msg>
<status status="PASS" starttime="20250214 14:48:24.624" endtime="20250214 14:48:24.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:24.632" level="INFO">1611392</msg>
<status status="PASS" starttime="20250214 14:48:24.632" endtime="20250214 14:48:24.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:24.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:24.632" endtime="20250214 14:48:24.633"/>
</kw>
<msg timestamp="20250214 14:48:24.633" level="INFO">${part_2_size} = 1611392</msg>
<status status="PASS" starttime="20250214 14:48:24.624" endtime="20250214 14:48:24.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_2_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:24.633" endtime="20250214 14:48:24.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>10000000</arg>
<arg>${${part_1_size} + ${part_2_size}}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:24.634" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:24.633" endtime="20250214 14:48:24.635"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_3_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_3 --part-number 3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:24.638" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_3 --part-number 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 0,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:24.636" endtime="20250214 14:48:25.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.134" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 0,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:25 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:25 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:25.133" endtime="20250214 14:48:25.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.134" endtime="20250214 14:48:25.134"/>
</kw>
<status status="PASS" starttime="20250214 14:48:24.636" endtime="20250214 14:48:25.134"/>
</kw>
<msg timestamp="20250214 14:48:25.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:24.636" endtime="20250214 14:48:25.134"/>
</kw>
<msg timestamp="20250214 14:48:25.135" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 0,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:24.635" endtime="20250214 14:48:25.135"/>
</kw>
<msg timestamp="20250214 14:48:25.135" level="INFO">${get_part_3_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:23 GMT",
    "ContentLength": 0,
    "ETag": "\"4f7e5a9b9a7252f682ee08e36bfb7bb3-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:24.635" endtime="20250214 14:48:25.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:25.135" endtime="20250214 14:48:25.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:25.135" endtime="20250214 14:48:25.136"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.139" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.598" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:25.137" endtime="20250214 14:48:25.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.599" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:25.598" endtime="20250214 14:48:25.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.599" endtime="20250214 14:48:25.599"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.136" endtime="20250214 14:48:25.599"/>
</kw>
<msg timestamp="20250214 14:48:25.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.136" endtime="20250214 14:48:25.600"/>
</kw>
<msg timestamp="20250214 14:48:25.600" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:25.136" endtime="20250214 14:48:25.600"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.136" endtime="20250214 14:48:25.600"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.603" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:25.601" endtime="20250214 14:48:25.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.609" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:25.609" endtime="20250214 14:48:25.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.609" endtime="20250214 14:48:25.610"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.600" endtime="20250214 14:48:25.610"/>
</kw>
<msg timestamp="20250214 14:48:25.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.600" endtime="20250214 14:48:25.610"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.600" endtime="20250214 14:48:25.610"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.613" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:25.611" endtime="20250214 14:48:25.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.619" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:25.619" endtime="20250214 14:48:25.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.619" endtime="20250214 14:48:25.619"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.611" endtime="20250214 14:48:25.620"/>
</kw>
<msg timestamp="20250214 14:48:25.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.610" endtime="20250214 14:48:25.620"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.610" endtime="20250214 14:48:25.620"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.623" level="INFO">Running command 'rm -rf /tmp/big_file_2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:25.621" endtime="20250214 14:48:25.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.627" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:25.627" endtime="20250214 14:48:25.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.627" endtime="20250214 14:48:25.627"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.620" endtime="20250214 14:48:25.628"/>
</kw>
<msg timestamp="20250214 14:48:25.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.620" endtime="20250214 14:48:25.628"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.620" endtime="20250214 14:48:25.628"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.631" level="INFO">Running command 'rm -rf /tmp/big_file_3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:25.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:25.629" endtime="20250214 14:48:25.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.635" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:25.634" endtime="20250214 14:48:25.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.635" endtime="20250214 14:48:25.635"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.628" endtime="20250214 14:48:25.635"/>
</kw>
<msg timestamp="20250214 14:48:25.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.628" endtime="20250214 14:48:25.635"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.628" endtime="20250214 14:48:25.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:22.587" endtime="20250214 14:48:25.636"/>
</test>
<test id="s1-s1-s14-t23" name="Create&amp;Download big file by multipart upload and get file not existed part number" line="296">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.640" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250214 14:48:25.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:25.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:25.638" endtime="20250214 14:48:25.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:25.682" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:25.682" endtime="20250214 14:48:25.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:25.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:25.682" endtime="20250214 14:48:25.683"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.637" endtime="20250214 14:48:25.683"/>
</kw>
<msg timestamp="20250214 14:48:25.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.637" endtime="20250214 14:48:25.683"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.637" endtime="20250214 14:48:25.683"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:25.687" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:26.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:26.526" level="INFO">${output} = 2025-02-14 14:48:25,993 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:25,993 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:25.684" endtime="20250214 14:48:26.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:26.527" level="INFO">2025-02-14 14:48:25,993 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:25,993 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2025-02-14 14:48:25,993 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa4a6f68820&gt;
2025-02-14 14:48:25,993 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa4a7853c10&gt;
2025-02-14 14:48:25,993 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa4a7544e50&gt;
2025-02-14 14:48:25,995 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-02-14 14:48:25,996 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa4a6fd54c0&gt;
2025-02-14 14:48:25,997 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa4a6f19820&gt;
2025-02-14 14:48:25,997 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fa4a6fee310&gt;
2025-02-14 14:48:25,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,997 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa4a6f19820&gt;
2025-02-14 14:48:25,998 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fa4a6fee310&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:25,999 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,000 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:26,001 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4a75146a0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa4a6e68ee0&gt;
2025-02-14 14:48:26,002 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-02-14 14:48:26,002 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-02-14 14:48:26,004 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-02-14 14:48:26,028 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-02-14 14:48:26,028 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4a8a889d0&gt;
2025-02-14 14:48:26,034 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-02-14 14:48:26,042 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-02-14 14:48:26,063 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-02-14 14:48:26,066 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-02-14 14:48:26,068 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4a7b8aa60&gt;
2025-02-14 14:48:26,068 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4a7b8a820&gt;
2025-02-14 14:48:26,068 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,071 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:26,073 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-02-14 14:48:26,074 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:26,074 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:26,074 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,074 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:26,075 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4a8a889d0&gt;
2025-02-14 14:48:26,075 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4a7b8aa60&gt;
2025-02-14 14:48:26,075 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4a7b8a820&gt;
2025-02-14 14:48:26,075 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,077 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:26,079 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:26,079 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:26,079 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,079 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:26,080 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4a8a889d0&gt;
2025-02-14 14:48:26,080 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4a7b8aa60&gt;
2025-02-14 14:48:26,080 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4a7b8a820&gt;
2025-02-14 14:48:26,080 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,082 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-02-14 14:48:26,084 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-02-14 14:48:26,084 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-02-14 14:48:26,084 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-02-14 14:48:26,084 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-02-14 14:48:26,085 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-02-14 14:48:26,086 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:26,086 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4a62b4250&gt;}) about to wait for the following futures []
2025-02-14 14:48:26,086 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4a62b4250&gt;}) done waiting for dependent futures
2025-02-14 14:48:26,086 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4a62b4250&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa4a6478310&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa4a62a87f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa4a62a8880&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4a62a8ac0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4a62b4250&gt;}
2025-02-14 14:48:26,087 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4a62a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:26,087 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:26,087 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-02-14 14:48:26,087 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4a62a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:26,087 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:26,087 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:26,087 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa4a6478310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fa4a7ad84c0&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fa4a7ad28b0&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fa4a7ad2820&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4a7ad9700&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa4a64d8100&gt;&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fa4a7ad2670&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4a7ad98b0&gt;
2025-02-14 14:48:26,088 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,089 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:26,089 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fa4a7ad2b80&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;]
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fa4a7ad2280&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fa4a7ad9d30&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4a7ad8ee0&gt;
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa4a6478490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fa4a720e790&gt;
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa4a6478400&gt;&gt;
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fa4a7ad24c0&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4a62a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4a7ad9820&gt;
2025-02-14 14:48:26,090 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;
2025-02-14 14:48:26,091 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,091 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250214T144826Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144826Z
20250214/us-west-1/s3/aws4_request
d1975f9f540bf5bbe9c452c15477f4d659b3f024bcb600e0a5c73d96cb01a339
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
078ff80521930509f04920ff70686af9c7d5f26261c6cbc9a179790ea2a69a16
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fa4a720e820&gt;
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;]
2025-02-14 14:48:26,092 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fa4a7ad9670&gt;
2025-02-14 14:48:26,093 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144826Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=078ff80521930509f04920ff70686af9c7d5f26261c6cbc9a179790ea2a69a16', 'amz-sdk-invocation-id': b'3fc30931-6192-4471-bdcd-384bdca08fae', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-02-14 14:48:26,093 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-02-14 14:48:26,093 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4a62a8ac0&gt; for transfer request: 0.
2025-02-14 14:48:26,093 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;
2025-02-14 14:48:26,094 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-02-14 14:48:26,094 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a624a580&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62707c0&gt;]
2025-02-14 14:48:26,094 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62b4d60&gt;
2025-02-14 14:48:26,094 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:26,106 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2025-02-14 14:48:26,107 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fa4a7ad9b80&gt;
2025-02-14 14:48:26,107 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fa4a7ad99d0&gt;
2025-02-14 14:48:26,107 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'W5oevke3', 'x-amz-request-id': '7be6de50-b87f-42bf-9383-158e0816e99f', 'Content-Length': '285'}
2025-02-14 14:48:26,107 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7fa4a7ad9ca0&gt;
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa4a6451190&gt;
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fa4a6f64d30&gt;
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:26,108 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa4a6478310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624afd0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699'}
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fa4a7ad28b0&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fa4a7ad8dc0&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fa4a7ad2820&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4a7ad9700&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa4a64d8100&gt;&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fa4a7ad2670&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4a7ad98b0&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:26,109 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fa4a7c478b0&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a624a580&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa4a6478310&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624a130&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699'}
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fa4a7ad28b0&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fa4a7ad8dc0&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fa4a7ad2820&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4a7ad9700&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa4a64d8100&gt;&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fa4a7ad2670&gt;
2025-02-14 14:48:26,110 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4a7ad98b0&gt;
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:26,111 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fa4a7c478b0&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fa4a7ad2b80&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fa4a7ad2280&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fa4a7ad9d30&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4a7ad8ee0&gt;
2025-02-14 14:48:26,114 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'AOM32Rx0hpkXaqRXM4gMAQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624afd0&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa4a6478490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624afd0&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:26,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fa4a720e790&gt;
2025-02-14 14:48:26,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa4a6478400&gt;&gt;
2025-02-14 14:48:26,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fa4a7ad24c0&gt;
2025-02-14 14:48:26,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4a7ad9820&gt;
2025-02-14 14:48:26,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699
content-md5:AOM32Rx0hpkXaqRXM4gMAQ==
host:s3g:9878
x-amz-content-sha256:bb5e5ba7e7b14744fd2c6c2c6149065f7cdcbc20bc8f04741eed8c9dd45d213c
x-amz-date:20250214T144826Z

content-md5;host;x-amz-content-sha256;x-amz-date
bb5e5ba7e7b14744fd2c6c2c6149065f7cdcbc20bc8f04741eed8c9dd45d213c
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144826Z
20250214/us-west-1/s3/aws4_request
ed65d56369e4b592f009aa31e4cfa30fbcbe20556b7712b5fe04d830054bb062
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
d8f95c16db3d6b21697c79e6149489730569e6bc15f1a4b65b3915b280915343
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fa4a720e820&gt;
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fa4a7ad9670&gt;
2025-02-14 14:48:26,117 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'AOM32Rx0hpkXaqRXM4gMAQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144826Z', 'X-Amz-Content-SHA256': b'bb5e5ba7e7b14744fd2c6c2c6149065f7cdcbc20bc8f04741eed8c9dd45d213c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=d8f95c16db3d6b21697c79e6149489730569e6bc15f1a4b65b3915b280915343', 'amz-sdk-invocation-id': b'66dccdbb-0960-4a4e-acec-8cdefe3b9c92', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-02-14 14:48:26,118 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fa4a7ad2b80&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fa4a7ad2280&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7fa4a7ad9d30&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4a7ad8ee0&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '0eEcIv9Jy9Jguz5unGxyJQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624a130&gt;, 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa4a6478490&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa4a624a130&gt;}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fa4a720e790&gt;
2025-02-14 14:48:26,127 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa4a6478400&gt;&gt;
2025-02-14 14:48:26,128 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fa4a7ad24c0&gt;
2025-02-14 14:48:26,128 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4a7ad9820&gt;
2025-02-14 14:48:26,128 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,133 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (5.3 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:26,135 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:26,135 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699
content-md5:0eEcIv9Jy9Jguz5unGxyJQ==
host:s3g:9878
x-amz-content-sha256:7a1553ac947b8beed14f840856deb95c063826b6c5a143f54ebccdfe1ebf7eee
x-amz-date:20250214T144826Z

content-md5;host;x-amz-content-sha256;x-amz-date
7a1553ac947b8beed14f840856deb95c063826b6c5a143f54ebccdfe1ebf7eee
2025-02-14 14:48:26,135 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144826Z
20250214/us-west-1/s3/aws4_request
d809467d17f17d43db836f99beb925a84f19951fa39ddf9163ad16ad65c9b8ad
2025-02-14 14:48:26,136 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
665b71d9f4bf2909a2b7408005148826622bc01970831cd1e31d937b8548116f
2025-02-14 14:48:26,136 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fa4a720e820&gt;
2025-02-14 14:48:26,136 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fa4a7ad9670&gt;
2025-02-14 14:48:26,136 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'0eEcIv9Jy9Jguz5unGxyJQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250214T144826Z', 'X-Amz-Content-SHA256': b'7a1553ac947b8beed14f840856deb95c063826b6c5a143f54ebccdfe1ebf7eee', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=665b71d9f4bf2909a2b7408005148826622bc01970831cd1e31d937b8548116f', 'amz-sdk-invocation-id': b'60c593a6-9209-4147-8ea2-83efd07f2268', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-02-14 14:48:26,137 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
Completed 512.0 KiB/9.5 MiB (9.9 MiB/s) with 1 file(s) remaining
2025-02-14 14:48:26,138 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 768.0 KiB/9.5 MiB (14.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (18.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (22.5 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (26.3 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:26,161 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (23.4 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (26.1 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (29.1 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (32.2 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (34.0 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (36.5 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (39.1 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (43.3 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (45.7 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (45.7 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (47.0 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (47.8 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (49.0 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (50.2 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (52.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (54.2 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (56.2 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (58.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (60.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (51.8 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (53.6 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (55.3 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (56.9 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (57.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (58.2 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (59.0 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (60.5 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (61.5 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (61.0 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (62.4 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (63.1 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:26,271 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=2 HTTP/1.1" 200 0
2025-02-14 14:48:26,272 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fa4a7ad9b80&gt;
2025-02-14 14:48:26,274 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fa4a7ad99d0&gt;
2025-02-14 14:48:26,274 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '00e337d91c748699176aa45733880c01', 'Server': 'Ozone', 'x-amz-id-2': 'aPZ6P5xJtO', 'x-amz-request-id': '10e58e24-8644-4b1f-8ec0-405d5d0b8fbe', 'Content-Length': '0'}
2025-02-14 14:48:26,274 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:26,275 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fa4a7ad9ca0&gt;
2025-02-14 14:48:26,276 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa4a6451190&gt;
2025-02-14 14:48:26,276 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:26,277 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,277 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fa4a6f64d30&gt;
Completed 9.5 MiB/9.5 MiB (49.6 MiB/s) with 1 file(s) remaining  
2025-02-14 14:48:26,281 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:26,421 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699&amp;partNumber=1 HTTP/1.1" 200 0
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7fa4a7ad9b80&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7fa4a7ad99d0&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'd1e11c22ff49cbd260bb3e6e9c6c7225', 'Server': 'Ozone', 'x-amz-id-2': '2i7SvxkFRZlm9', 'x-amz-request-id': '4d21426d-51ac-4c8b-8858-1b20ba4b988e', 'Content-Length': '0'}
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7fa4a7ad9ca0&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa4a6451190&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fa4a6f64d30&gt;
2025-02-14 14:48:26,422 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-02-14 14:48:26,423 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fa4a62707c0&gt;
2025-02-14 14:48:26,423 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-02-14 14:48:26,423 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa4a6478310&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'parts': [{'ETag': 'd1e11c22ff49cbd260bb3e6e9c6c7225', 'PartNumber': 1}, {'ETag': '00e337d91c748699176aa45733880c01', 'PartNumber': 2}]}
2025-02-14 14:48:26,423 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7fa4a7ad28b0&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fa4a7ad2820&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa4a7ad9700&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa4a64d8100&gt;&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fa4a7ad2670&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa4a7ad98b0&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'erasure', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-02-14 14:48:26,424 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/erasure
2025-02-14 14:48:26,425 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-02-14 14:48:26,425 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-02-14 14:48:26,425 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fa4a7ad2b80&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fa4a7ad2280&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7fa4a7ad9d30&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4a7ad8ee0&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;d1e11c22ff49cbd260bb3e6e9c6c7225&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;00e337d91c748699176aa45733880c01&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/erasure/big_file', 'url': 'http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa4a6478490&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'erasure', 'params': {'Bucket': 'erasure', 'Key': 'big_file', 'UploadId': 'd8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699', 'MultipartUpload': {'Parts': [{'ETag': 'd1e11c22ff49cbd260bb3e6e9c6c7225', 'PartNumber': 1}, {'ETag': '00e337d91c748699176aa45733880c01', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'erasure', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fa4a720e790&gt;
2025-02-14 14:48:26,426 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa4a6478400&gt;&gt;
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fa4a7ad24c0&gt;
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7fa4a7ad9820&gt;
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa4a6451220&gt;&gt;
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699
host:s3g:9878
x-amz-content-sha256:1399037b40a2d7e3885f70c1dc843db02c5eb68ccebec5d3ec2ee4a76feed5be
x-amz-date:20250214T144826Z

host;x-amz-content-sha256;x-amz-date
1399037b40a2d7e3885f70c1dc843db02c5eb68ccebec5d3ec2ee4a76feed5be
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250214T144826Z
20250214/us-west-1/s3/aws4_request
9f1956c9b74f184a46d26efcce8577215fe7297894b3a5dead0bb39f38556690
2025-02-14 14:48:26,427 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
0b40dbe86ee536610be3ed4d15df5cb2b1bc191fdbbbe331e8c79f992fdf90d4
2025-02-14 14:48:26,428 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fa4a720e820&gt;
2025-02-14 14:48:26,428 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fa4a7ad9670&gt;
2025-02-14 14:48:26,428 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250214T144826Z', 'X-Amz-Content-SHA256': b'1399037b40a2d7e3885f70c1dc843db02c5eb68ccebec5d3ec2ee4a76feed5be', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20250214/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=0b40dbe86ee536610be3ed4d15df5cb2b1bc191fdbbbe331e8c79f992fdf90d4', 'amz-sdk-invocation-id': b'0dbd36b2-f37a-48d4-853b-c1fe9dc70722', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-02-14 14:48:26,454 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=d8c3c3e3-5a86-4c0c-8efe-f3eb1c12c07d-114002788751769699 HTTP/1.1" 200 286
2025-02-14 14:48:26,455 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7fa4a7ad9b80&gt;
2025-02-14 14:48:26,455 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7fa4a7ad99d0&gt;
2025-02-14 14:48:26,455 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Fri, 14 Feb 2025 14:48:26 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'pjNbo5zx', 'x-amz-request-id': '490db61f-946f-432d-a56c-c0210d49c3bf', 'Content-Length': '286'}
2025-02-14 14:48:26,455 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"f410405ab8dae32c06cdeb5615592b28-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7fa4a7ad9ca0&gt;
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa4a6451190&gt;
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa4a6451250&gt;&gt;
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fa4a6f64d30&gt;
2025-02-14 14:48:26,456 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2025-02-14 14:48:26,457 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250214 14:48:26.526" endtime="20250214 14:48:26.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:26.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:26.528" endtime="20250214 14:48:26.528"/>
</kw>
<status status="PASS" starttime="20250214 14:48:25.684" endtime="20250214 14:48:26.528"/>
</kw>
<msg timestamp="20250214 14:48:26.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:25.684" endtime="20250214 14:48:26.528"/>
</kw>
<msg timestamp="20250214 14:48:26.530" level="INFO">${output} = 2025-02-14 14:48:25,993 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:25,993 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:25.683" endtime="20250214 14:48:26.530"/>
</kw>
<msg timestamp="20250214 14:48:26.530" level="INFO">${result} = 2025-02-14 14:48:25,993 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-02-14 14:48:25,993 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250214 14:48:25.683" endtime="20250214 14:48:26.530"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_99_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 99</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:26.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key big_file /tmp/big_file_1 --part-number 99 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:27.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:27.038" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:26 GMT",
    "ContentLength": 0,
    "ETag": "\"f410405ab8dae32c06cdeb5615592b28-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:26.531" endtime="20250214 14:48:27.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:27.040" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:26 GMT",
    "ContentLength": 0,
    "ETag": "\"f410405ab8dae32c06cdeb5615592b28-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:26 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:26 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:27.039" endtime="20250214 14:48:27.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:27.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:27.041" endtime="20250214 14:48:27.041"/>
</kw>
<status status="PASS" starttime="20250214 14:48:26.531" endtime="20250214 14:48:27.041"/>
</kw>
<msg timestamp="20250214 14:48:27.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:26.531" endtime="20250214 14:48:27.041"/>
</kw>
<msg timestamp="20250214 14:48:27.041" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:26 GMT",
    "ContentLength": 0,
    "ETag": "\"f410405ab8dae32c06cdeb5615592b28-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:26.531" endtime="20250214 14:48:27.041"/>
</kw>
<msg timestamp="20250214 14:48:27.042" level="INFO">${get_part_99_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:26 GMT",
    "ContentLength": 0,
    "ETag": "\"f410405ab8dae32c06cdeb5615592b28-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250214 14:48:26.530" endtime="20250214 14:48:27.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:27.042" endtime="20250214 14:48:27.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:27.042" endtime="20250214 14:48:27.042"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:27.046" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:27.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:27.513" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:27.044" endtime="20250214 14:48:27.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:27.514" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:27.513" endtime="20250214 14:48:27.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:27.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:27.514" endtime="20250214 14:48:27.514"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.043" endtime="20250214 14:48:27.515"/>
</kw>
<msg timestamp="20250214 14:48:27.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.043" endtime="20250214 14:48:27.515"/>
</kw>
<msg timestamp="20250214 14:48:27.515" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20250214 14:48:27.043" endtime="20250214 14:48:27.515"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.042" endtime="20250214 14:48:27.515"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:27.518" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:27.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:27.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:27.516" endtime="20250214 14:48:27.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:27.525" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:27.525" endtime="20250214 14:48:27.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:27.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:27.525" endtime="20250214 14:48:27.526"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.516" endtime="20250214 14:48:27.526"/>
</kw>
<msg timestamp="20250214 14:48:27.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.515" endtime="20250214 14:48:27.526"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.515" endtime="20250214 14:48:27.526"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:27.530" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:27.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:27.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:27.527" endtime="20250214 14:48:27.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:27.534" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:27.534" endtime="20250214 14:48:27.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:27.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:27.534" endtime="20250214 14:48:27.534"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.527" endtime="20250214 14:48:27.535"/>
</kw>
<msg timestamp="20250214 14:48:27.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.527" endtime="20250214 14:48:27.535"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.526" endtime="20250214 14:48:27.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:25.636" endtime="20250214 14:48:27.535"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:47:56.398" endtime="20250214 14:48:27.536"/>
</suite>
<suite id="s1-s1-s15" name="Objecttagging" source="/opt/hadoop/smoketest/s3/objecttagging.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:48:27.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.547" endtime="20250214 14:48:27.547"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:48:27.548" endtime="20250214 14:48:27.548"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.547" endtime="20250214 14:48:27.548"/>
</kw>
<test id="s1-s1-s15-t1" name="Put object tagging" line="33">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:27.552" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250214 14:48:27.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:27.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:27.550" endtime="20250214 14:48:27.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:27.555" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:27.554" endtime="20250214 14:48:27.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:27.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:27.555" endtime="20250214 14:48:27.555"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.549" endtime="20250214 14:48:27.555"/>
</kw>
<msg timestamp="20250214 14:48:27.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.549" endtime="20250214 14:48:27.555"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.549" endtime="20250214 14:48:27.555"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:27.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:28.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:28.087" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:27.557" endtime="20250214 14:48:28.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:28.088" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:28.087" endtime="20250214 14:48:28.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:28.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:28.088" endtime="20250214 14:48:28.088"/>
</kw>
<status status="PASS" starttime="20250214 14:48:27.556" endtime="20250214 14:48:28.088"/>
</kw>
<msg timestamp="20250214 14:48:28.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:27.556" endtime="20250214 14:48:28.089"/>
</kw>
<msg timestamp="20250214 14:48:28.089" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:27.556" endtime="20250214 14:48:28.089"/>
</kw>
<msg timestamp="20250214 14:48:28.089" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250214 14:48:27.556" endtime="20250214 14:48:28.089"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:28.093" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-7682815004/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:28.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:28.598" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:48:28.018Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:48:28.090" endtime="20250214 14:48:28.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:28.599" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:48:28.018Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        },
        {
            "Key": "ozone-test-7682815004/putobject/key=value/zerobyte",
            "LastModified": "2025-02-14T14:47:57.895Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "dlfknslnfslf",
                "ID": "dlfknslnfslf"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-7682815004/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250214 14:48:28.598" endtime="20250214 14:48:28.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:28.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:28.599" endtime="20250214 14:48:28.600"/>
</kw>
<status status="PASS" starttime="20250214 14:48:28.090" endtime="20250214 14:48:28.600"/>
</kw>
<msg timestamp="20250214 14:48:28.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:28.090" endtime="20250214 14:48:28.600"/>
</kw>
<msg timestamp="20250214 14:48:28.600" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:48:28.018Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:48:28.090" endtime="20250214 14:48:28.600"/>
</kw>
<msg timestamp="20250214 14:48:28.600" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7682815004/putobject/key=value/f1",
            "LastModified": "2025-02-14T14:48:28.018Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250214 14:48:28.089" endtime="20250214 14:48:28.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:28.601" endtime="20250214 14:48:28.601"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:28.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:29.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:29.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:28.603" endtime="20250214 14:48:29.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:29.102" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:29.102" endtime="20250214 14:48:29.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:29.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:29.102" endtime="20250214 14:48:29.103"/>
</kw>
<status status="PASS" starttime="20250214 14:48:28.602" endtime="20250214 14:48:29.103"/>
</kw>
<msg timestamp="20250214 14:48:29.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:28.602" endtime="20250214 14:48:29.103"/>
</kw>
<msg timestamp="20250214 14:48:29.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:28.602" endtime="20250214 14:48:29.103"/>
</kw>
<msg timestamp="20250214 14:48:29.103" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:48:28.601" endtime="20250214 14:48:29.103"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:29.107" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:29.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:29.596" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:29.104" endtime="20250214 14:48:29.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:29.597" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:29 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:29 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:29.596" endtime="20250214 14:48:29.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:29.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:29.597" endtime="20250214 14:48:29.597"/>
</kw>
<status status="PASS" starttime="20250214 14:48:29.104" endtime="20250214 14:48:29.597"/>
</kw>
<msg timestamp="20250214 14:48:29.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:29.104" endtime="20250214 14:48:29.598"/>
</kw>
<msg timestamp="20250214 14:48:29.598" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:29.104" endtime="20250214 14:48:29.598"/>
</kw>
<msg timestamp="20250214 14:48:29.598" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:29.103" endtime="20250214 14:48:29.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:29.598" endtime="20250214 14:48:29.598"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:29.601" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:29 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:29 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:29.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:29.606" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250214 14:48:29.599" endtime="20250214 14:48:29.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:29.607" level="INFO">1</msg>
<status status="PASS" starttime="20250214 14:48:29.607" endtime="20250214 14:48:29.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:29.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:29.607" endtime="20250214 14:48:29.608"/>
</kw>
<msg timestamp="20250214 14:48:29.608" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250214 14:48:29.598" endtime="20250214 14:48:29.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:29.608" endtime="20250214 14:48:29.608"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:29.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:30.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:30.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:29.610" endtime="20250214 14:48:30.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:30.118" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:30.118" endtime="20250214 14:48:30.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:30.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:30.118" endtime="20250214 14:48:30.119"/>
</kw>
<status status="PASS" starttime="20250214 14:48:29.609" endtime="20250214 14:48:30.119"/>
</kw>
<msg timestamp="20250214 14:48:30.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:29.609" endtime="20250214 14:48:30.119"/>
</kw>
<msg timestamp="20250214 14:48:30.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:29.609" endtime="20250214 14:48:30.119"/>
</kw>
<msg timestamp="20250214 14:48:30.119" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:48:29.608" endtime="20250214 14:48:30.119"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:30.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:30.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:30.594" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:30.121" endtime="20250214 14:48:30.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:30.595" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:30 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:30 GMT"
}</msg>
<status status="PASS" starttime="20250214 14:48:30.594" endtime="20250214 14:48:30.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:30.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:30.595" endtime="20250214 14:48:30.595"/>
</kw>
<status status="PASS" starttime="20250214 14:48:30.121" endtime="20250214 14:48:30.595"/>
</kw>
<msg timestamp="20250214 14:48:30.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:30.120" endtime="20250214 14:48:30.596"/>
</kw>
<msg timestamp="20250214 14:48:30.596" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:30.120" endtime="20250214 14:48:30.596"/>
</kw>
<msg timestamp="20250214 14:48:30.596" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250214 14:48:30.120" endtime="20250214 14:48:30.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:30.596" endtime="20250214 14:48:30.596"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:30.599" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 14 Feb 2025 14:48:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 14 Feb 2025 14:48:30 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Fri, 14 Feb 2025 14:48:30 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:30.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:30.604" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:48:30.597" endtime="20250214 14:48:30.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:30.605" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:48:30.604" endtime="20250214 14:48:30.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:30.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:30.605" endtime="20250214 14:48:30.605"/>
</kw>
<msg timestamp="20250214 14:48:30.605" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:48:30.596" endtime="20250214 14:48:30.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:30.606" endtime="20250214 14:48:30.606"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:30.609" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket erasure --key ozone-test-7682815004/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:31.082" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:48:31.082" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:48:30.607" endtime="20250214 14:48:31.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:31.083" level="INFO">
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:48:31.083" endtime="20250214 14:48:31.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:31.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:31.083" endtime="20250214 14:48:31.084"/>
</kw>
<msg timestamp="20250214 14:48:31.084" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:48:30.606" endtime="20250214 14:48:31.084"/>
</kw>
<msg timestamp="20250214 14:48:31.084" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250214 14:48:30.606" endtime="20250214 14:48:31.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:31.084" endtime="20250214 14:48:31.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:27.549" endtime="20250214 14:48:31.085"/>
</test>
<test id="s1-s1-s15-t2" name="Get object tagging" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:31.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:31.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:31.569" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 14:48:31.087" endtime="20250214 14:48:31.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:31.570" level="INFO">{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 14:48:31.569" endtime="20250214 14:48:31.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:31.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:31.570" endtime="20250214 14:48:31.570"/>
</kw>
<status status="PASS" starttime="20250214 14:48:31.087" endtime="20250214 14:48:31.571"/>
</kw>
<msg timestamp="20250214 14:48:31.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:31.087" endtime="20250214 14:48:31.571"/>
</kw>
<msg timestamp="20250214 14:48:31.571" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 14:48:31.086" endtime="20250214 14:48:31.571"/>
</kw>
<msg timestamp="20250214 14:48:31.571" level="INFO">${result} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250214 14:48:31.085" endtime="20250214 14:48:31.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:31.571" endtime="20250214 14:48:31.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:31.574" level="INFO">Running command 'echo '{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:31.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:31.579" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250214 14:48:31.572" endtime="20250214 14:48:31.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:31.580" level="INFO">2</msg>
<status status="PASS" starttime="20250214 14:48:31.579" endtime="20250214 14:48:31.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:31.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:31.580" endtime="20250214 14:48:31.580"/>
</kw>
<msg timestamp="20250214 14:48:31.580" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250214 14:48:31.572" endtime="20250214 14:48:31.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:31.580" endtime="20250214 14:48:31.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:31.085" endtime="20250214 14:48:31.581"/>
</test>
<test id="s1-s1-s15-t3" name="Delete object tagging" line="67">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:31.585" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object-tagging --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:32.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:32.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:31.583" endtime="20250214 14:48:32.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:32.109" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:32.108" endtime="20250214 14:48:32.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:32.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:32.109" endtime="20250214 14:48:32.109"/>
</kw>
<status status="PASS" starttime="20250214 14:48:31.583" endtime="20250214 14:48:32.110"/>
</kw>
<msg timestamp="20250214 14:48:32.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:31.582" endtime="20250214 14:48:32.110"/>
</kw>
<msg timestamp="20250214 14:48:32.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:31.582" endtime="20250214 14:48:32.110"/>
</kw>
<msg timestamp="20250214 14:48:32.110" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:48:31.582" endtime="20250214 14:48:32.110"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:32.114" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket erasure --key ozone-test-7682815004/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:32.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:32.592" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 14:48:32.112" endtime="20250214 14:48:32.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:32.593" level="INFO">{
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 14:48:32.592" endtime="20250214 14:48:32.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:32.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:32.593" endtime="20250214 14:48:32.593"/>
</kw>
<status status="PASS" starttime="20250214 14:48:32.111" endtime="20250214 14:48:32.594"/>
</kw>
<msg timestamp="20250214 14:48:32.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:32.111" endtime="20250214 14:48:32.594"/>
</kw>
<msg timestamp="20250214 14:48:32.594" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 14:48:32.111" endtime="20250214 14:48:32.594"/>
</kw>
<msg timestamp="20250214 14:48:32.594" level="INFO">${result} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250214 14:48:32.110" endtime="20250214 14:48:32.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:32.594" endtime="20250214 14:48:32.595"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:32.598" level="INFO">Running command 'echo '{
    "TagSet": []
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:32.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:32.604" level="INFO">${output} = 0</msg>
<status status="PASS" starttime="20250214 14:48:32.595" endtime="20250214 14:48:32.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:32.605" level="INFO">0</msg>
<status status="PASS" starttime="20250214 14:48:32.604" endtime="20250214 14:48:32.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:32.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:32.605" endtime="20250214 14:48:32.605"/>
</kw>
<msg timestamp="20250214 14:48:32.606" level="INFO">${tagCount} = 0</msg>
<status status="PASS" starttime="20250214 14:48:32.595" endtime="20250214 14:48:32.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>0</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:48:32.606" endtime="20250214 14:48:32.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:31.581" endtime="20250214 14:48:32.606"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250214 14:48:27.540" endtime="20250214 14:48:32.607"/>
</suite>
<suite id="s1-s1-s16" name="Rclone" source="/opt/hadoop/smoketest/s3/rclone.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:48:32.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:32.618" endtime="20250214 14:48:32.618"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.618" endtime="20250214 14:48:32.618"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.618" endtime="20250214 14:48:32.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.618" endtime="20250214 14:48:32.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.618" endtime="20250214 14:48:32.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.619" endtime="20250214 14:48:32.619"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.619" endtime="20250214 14:48:32.619"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.619" endtime="20250214 14:48:32.619"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:48:32.619" endtime="20250214 14:48:32.619"/>
</kw>
<status status="PASS" starttime="20250214 14:48:32.617" endtime="20250214 14:48:32.619"/>
</kw>
<test id="s1-s1-s16-t1" name="Rclone Client Test" line="41">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:32.624" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:32.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:32.980" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:32.621" endtime="20250214 14:48:32.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:32.981" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:32.981" endtime="20250214 14:48:32.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:32.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:32.981" endtime="20250214 14:48:32.982"/>
</kw>
<status status="PASS" starttime="20250214 14:48:32.620" endtime="20250214 14:48:32.982"/>
</kw>
<msg timestamp="20250214 14:48:32.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:32.620" endtime="20250214 14:48:32.982"/>
</kw>
<msg timestamp="20250214 14:48:32.982" level="INFO">${accessKey} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:32.620" endtime="20250214 14:48:32.982"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:32.985" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:33.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:33.333" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:32.983" endtime="20250214 14:48:33.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:33.334" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:33.333" endtime="20250214 14:48:33.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:33.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:33.334" endtime="20250214 14:48:33.334"/>
</kw>
<status status="PASS" starttime="20250214 14:48:32.983" endtime="20250214 14:48:33.334"/>
</kw>
<msg timestamp="20250214 14:48:33.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:32.983" endtime="20250214 14:48:33.335"/>
</kw>
<msg timestamp="20250214 14:48:33.335" level="INFO">${secret} = dlfknslnfslf</msg>
<status status="PASS" starttime="20250214 14:48:32.982" endtime="20250214 14:48:33.335"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:48:33.335" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20250214 14:48:33.335" endtime="20250214 14:48:33.335"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:48:33.335" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20250214 14:48:33.335" endtime="20250214 14:48:33.336"/>
</kw>
<status status="PASS" starttime="20250214 14:48:32.620" endtime="20250214 14:48:33.336"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_CONFIG</arg>
<arg>${RCLONE_CONFIG_PATH}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:48:33.336" level="INFO">Environment variable 'RCLONE_CONFIG' set to value '/tmp/rclone.conf'.</msg>
<status status="PASS" starttime="20250214 14:48:33.336" endtime="20250214 14:48:33.336"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_VERBOSE</arg>
<arg>${RCLONE_VERBOSE_LEVEL}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250214 14:48:33.336" level="INFO">Environment variable 'RCLONE_VERBOSE' set to value '2'.</msg>
<status status="PASS" starttime="20250214 14:48:33.336" endtime="20250214 14:48:33.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone config create ${RCLONE_CONFIG_NAME} s3 env_auth=true provider=Other endpoint=${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:33.340" level="INFO">Running command 'rclone config create ozone s3 env_auth=true provider=Other endpoint=http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:33.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:33.398" level="INFO">${output} = 2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 14:48:33...</msg>
<status status="PASS" starttime="20250214 14:48:33.337" endtime="20250214 14:48:33.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:33.399" level="INFO">2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 14:48:33 NOTICE: Config file "/tmp/rclone.conf" not found - using defaults
2025/02/14 14:48:33 DEBUG : Saving config "env_auth" in section "ozone" of the config file
2025/02/14 14:48:33 DEBUG : Using default permissions for config file: -rw-------
2025/02/14 14:48:33 DEBUG : Saving config "provider" in section "ozone" of the config file
2025/02/14 14:48:33 DEBUG : Saving config "endpoint" in section "ozone" of the config file
2025/02/14 14:48:33 DEBUG : ozone: config in: state="", result=""
2025/02/14 14:48:33 DEBUG : ozone: config out: out=&lt;nil&gt;, err=&lt;nil&gt;
[ozone]
type = s3
env_auth = true
provider = Other
endpoint = http://s3g:9878
2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" finishing with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]</msg>
<status status="PASS" starttime="20250214 14:48:33.399" endtime="20250214 14:48:33.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:33.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:33.399" endtime="20250214 14:48:33.400"/>
</kw>
<status status="PASS" starttime="20250214 14:48:33.337" endtime="20250214 14:48:33.400"/>
</kw>
<msg timestamp="20250214 14:48:33.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:33.337" endtime="20250214 14:48:33.400"/>
</kw>
<msg timestamp="20250214 14:48:33.400" level="INFO">${result} = 2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/02/14 14:48:33...</msg>
<status status="PASS" starttime="20250214 14:48:33.336" endtime="20250214 14:48:33.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone copy /opt/hadoop/smoketest ${RCLONE_CONFIG_NAME}:/${S3_VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:33.403" level="INFO">Running command 'rclone copy /opt/hadoop/smoketest ozone:/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:39.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:39.045" level="INFO">${output} = 2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 14:48:33 DEBUG : Creating backend with remote "...</msg>
<status status="PASS" starttime="20250214 14:48:33.401" endtime="20250214 14:48:39.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:39.049" level="INFO">2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 14:48:33 DEBUG : Creating backend with remote "/opt/hadoop/smoketest"
2025/02/14 14:48:33 DEBUG : Using config file from "/tmp/rclone.conf"
2025/02/14 14:48:33 DEBUG : Creating backend with remote "ozone:/s3v/erasure"
2025/02/14 14:48:33 DEBUG : fs cache: renaming cache item "ozone:/s3v/erasure" to be canonical "ozone:s3v/erasure"
2025/02/14 14:48:33 DEBUG : .env: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : README.md: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : __init__.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : commonlib.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : createbucketenv.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : createmrenv.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : csi.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : kinit-hadoop.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : kinit.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : mapreduce.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : test.sh: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : testlib.sh: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : balancer/testBalancer.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ec/basic.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : certrotation/cert-rotation.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : certrotation/root-ca-rotation-client-checks.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : auditparser/auditparser.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : fcq/s3_om_fcq.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/basic.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/admin.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/getconf.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/links.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/cert.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/ozone-shell-lib.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/container.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/ozone-shell-single.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/datanode.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/ozone-shell.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/lease-recovery.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : basic/single_node.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/pipeline.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/printTopology.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/reconfigure.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/replicationmanager.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/safemode.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : admincli/scmrole.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : cli/classpath.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : cli/envvars.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : hsync/upgrade-hsync-check.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : httpfs/operations.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : httpfs/operations_tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-corrupt-block.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-dead-datanode.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/dn-one-rocksdb.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/fs.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : grpc/grpc-om-s3-metrics.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/fs_tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/os.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/os_tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/string.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : lib/string_tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/dn.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/om.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/read.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/recon.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/scm.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/setup.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : compatibility/write.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-ldb.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozone-lib/freon.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozone-lib/shell.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozone-lib/shell_tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/data-creation-before-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/data-validation-after-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-cancel-prepare.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-fetch-key.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-prepare.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-prepared.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/om-roles.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : omha/testOMHA.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozonefs/hadoopo3fs.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozonefs/ozonefs.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ozonefs/setup.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : repair/bucket-encryption.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : recon/recon-api.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : recon/recon-nssummary.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : recon/recon-taskstatus.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : replication/wait.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : scmha/primordial-scm.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : scmha/root-ca-rotation.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : scmha/scm-decommission.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : scmha/scm-leader-transfer.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/S3-secret.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/admin-cert.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/ozone-secure-fs.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/ozone-secure-owner-s3.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/ozone-secure-s3.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/ozone-secure-tenant.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : security/ozone-secure-token.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-stale-datanode.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-tests-ec3-2.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-tests-ec6-3.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug-tests.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : debug/ozone-debug.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : snapshot/snapshot-acls.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : snapshot/snapshot-fs.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : spnego/web.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : snapshot/snapshot-setup.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : snapshot/snapshot-sh.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : snapshot/upgrade-snapshot-check.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : topology/cli.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : topology/loaddata.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : topology/readdata.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/echoRPCLoad.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/generate-chunk.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/generate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/hsync.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : upgrade/check-finalization.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/metadata-generate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : upgrade/finalize.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/read-write-key.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : upgrade/generate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/remove.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : upgrade/prepare.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : om-ratis/testOMAdminCmd.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ec/lib.resource: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ec/read.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ec/rewrite.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : ec/upgrade-ec-check.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/validate-chunk.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : freon/validate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : gdpr/gdpr.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : failing/test1.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : failing/test2.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : upgrade/validate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/MultipartUpload.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/README.md: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/__init__.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/awss3.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/awss3virtualhost.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/boto3.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/boto_client.py: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/bucketcreate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/bucketdelete.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/buckethead.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/bucketlist.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/commonawslib.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/freon.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/mpu_lib.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objectcopy.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objectcopys3a.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objectdelete.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objecthead.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objectmultidelete.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objectputget.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/objecttagging.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/rclone.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/s3_compatbility_check.sh: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/s3_getsecret.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/secretgenerate.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/secretrevoke.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : s3/webui.robot: Need to transfer - File not found at Destination
2025/02/14 14:48:33 DEBUG : S3 bucket s3v path erasure: Waiting for checks to finish
2025/02/14 14:48:33 DEBUG : S3 bucket s3v path erasure: Waiting for transfers to finish
2025/02/14 14:48:33 INFO  : S3 bucket s3v path erasure: Bucket "s3v" created with ACL ""
2025/02/14 14:48:33 DEBUG : README.md: md5 = 17df896fbc01fff5fb5b9db87fd9e014 OK
2025/02/14 14:48:33 INFO  : README.md: Copied (new)
2025/02/14 14:48:33 DEBUG : commonlib.robot: md5 = f35ee74dcb4b089c1dd2a06c8d59a7cb OK
2025/02/14 14:48:33 INFO  : commonlib.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : __init__.robot: md5 = 3e4f357bbd75e1f408f5730125e3d69f OK
2025/02/14 14:48:33 INFO  : __init__.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : .env: md5 = 856bb7fb5c872feedbd56751ab2de082 OK
2025/02/14 14:48:33 INFO  : .env: Copied (new)
2025/02/14 14:48:33 DEBUG : createbucketenv.robot: md5 = c879380e6beff95ce11e3a64a51f113e OK
2025/02/14 14:48:33 INFO  : createbucketenv.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : createmrenv.robot: md5 = 76f31b9aa05ce60f5b2960a224ba8cfd OK
2025/02/14 14:48:33 INFO  : createmrenv.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : kinit-hadoop.robot: md5 = 8401390e0e40e74a4185c2b7f4187b01 OK
2025/02/14 14:48:33 INFO  : kinit-hadoop.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : csi.robot: md5 = b626d511d7707277a894085bf5374e83 OK
2025/02/14 14:48:33 INFO  : csi.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : mapreduce.robot: md5 = 0f9c6faf7612a3a08a73382cc5cc3285 OK
2025/02/14 14:48:33 INFO  : mapreduce.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : kinit.robot: md5 = ff777fbe3aa12927c1de1e4a3d0126bf OK
2025/02/14 14:48:33 INFO  : kinit.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : testlib.sh: md5 = 854af5a9711319c1c1d472e1919f5980 OK
2025/02/14 14:48:33 INFO  : testlib.sh: Copied (new)
2025/02/14 14:48:33 DEBUG : test.sh: md5 = ed5682637036980f884a70c9d898cffd OK
2025/02/14 14:48:33 INFO  : test.sh: Copied (new)
2025/02/14 14:48:33 DEBUG : balancer/testBalancer.robot: md5 = b100fea9912fc01d1e27cc1b77c83b31 OK
2025/02/14 14:48:33 INFO  : balancer/testBalancer.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : ec/basic.robot: md5 = 5c31a5db433ed08496f786ee27531a8e OK
2025/02/14 14:48:33 INFO  : ec/basic.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : certrotation/root-ca-rotation-client-checks.robot: md5 = 753e60393a600d76facb7a02c9377546 OK
2025/02/14 14:48:33 INFO  : certrotation/root-ca-rotation-client-checks.robot: Copied (new)
2025/02/14 14:48:33 DEBUG : certrotation/cert-rotation.robot: md5 = c5c790317ea695e9a10056e4d3345633 OK
2025/02/14 14:48:33 INFO  : certrotation/cert-rotation.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : auditparser/auditparser.robot: md5 = 8ff2197aa518510361cdc3ce585b6ce2 OK
2025/02/14 14:48:34 INFO  : auditparser/auditparser.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : fcq/s3_om_fcq.robot: md5 = 09872d18952b1ed19476e9be82197d97 OK
2025/02/14 14:48:34 INFO  : fcq/s3_om_fcq.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/basic.robot: md5 = 82a250b46e17af336904e2a40ae44f7c OK
2025/02/14 14:48:34 INFO  : basic/basic.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/admin.robot: md5 = d39b70dc555c6c987f6cc5bed2811b3d OK
2025/02/14 14:48:34 INFO  : admincli/admin.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/getconf.robot: md5 = e4b3cc6aba745ad47ae7096b96b696d7 OK
2025/02/14 14:48:34 INFO  : basic/getconf.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/links.robot: md5 = e12a2214f323103b90e5dc88e00d771a OK
2025/02/14 14:48:34 INFO  : basic/links.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/ozone-shell-lib.robot: md5 = 61d5fbea8cc2fe5b99d9b929ace79b7b OK
2025/02/14 14:48:34 INFO  : basic/ozone-shell-lib.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/cert.robot: md5 = 77dfdeefa42fc03d3ad817a2764b9278 OK
2025/02/14 14:48:34 INFO  : admincli/cert.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/container.robot: md5 = a7eb0d23c26a124b37bf2286589a01d2 OK
2025/02/14 14:48:34 INFO  : admincli/container.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/ozone-shell-single.robot: md5 = 91830dc70ef59cdfc3776547feecf417 OK
2025/02/14 14:48:34 INFO  : basic/ozone-shell-single.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/datanode.robot: md5 = b80f648efc34bae344513a2bbf822420 OK
2025/02/14 14:48:34 INFO  : admincli/datanode.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/ozone-shell.robot: md5 = 3afa3f07707cfbf3931b321af6db8332 OK
2025/02/14 14:48:34 INFO  : basic/ozone-shell.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/lease-recovery.robot: md5 = dedf24150a762af48094f7ac0fb0cf46 OK
2025/02/14 14:48:34 INFO  : admincli/lease-recovery.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : basic/single_node.robot: md5 = 83014215421eac19113e5d9e73d3b5d8 OK
2025/02/14 14:48:34 INFO  : basic/single_node.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/printTopology.robot: md5 = b13fb6db17d23a519907f231ccf56059 OK
2025/02/14 14:48:34 INFO  : admincli/printTopology.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/pipeline.robot: md5 = f21de9178c946f815dca4591c48b6dce OK
2025/02/14 14:48:34 INFO  : admincli/pipeline.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/reconfigure.robot: md5 = 1a9e5cf67cb3472c99ca26262e522fcf OK
2025/02/14 14:48:34 INFO  : admincli/reconfigure.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/replicationmanager.robot: md5 = 93b30cc65865d2d684e987c4b94610e4 OK
2025/02/14 14:48:34 INFO  : admincli/replicationmanager.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/safemode.robot: md5 = d547033e4e042a61474a44e175954b86 OK
2025/02/14 14:48:34 INFO  : admincli/safemode.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : admincli/scmrole.robot: md5 = c7a5aa9ad1e2277764da1517ff91e386 OK
2025/02/14 14:48:34 INFO  : admincli/scmrole.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : cli/classpath.robot: md5 = 56071fa2cdcf819011667d597f0de700 OK
2025/02/14 14:48:34 INFO  : cli/classpath.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : cli/envvars.robot: md5 = 97be7992b4b7681defe5391bbe55c75d OK
2025/02/14 14:48:34 INFO  : cli/envvars.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : hsync/upgrade-hsync-check.robot: md5 = 29b422caf7a6104c83d4dd7403c43bb3 OK
2025/02/14 14:48:34 INFO  : hsync/upgrade-hsync-check.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : httpfs/operations.robot: md5 = 3abce0ef1c2d9e19c348e2eb093a0123 OK
2025/02/14 14:48:34 INFO  : httpfs/operations.robot: Copied (new)
2025/02/14 14:48:34 DEBUG : httpfs/operations_tests.robot: md5 = b5037537a59479fa397f521858151de7 OK
2025/02/14 14:48:34 INFO  : httpfs/operations_tests.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : debug/ozone-debug-dead-datanode.robot: md5 = 4aef4e89c8971dfb52dfc5cbaa3478e2 OK
2025/02/14 14:48:35 INFO  : debug/ozone-debug-dead-datanode.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : debug/ozone-debug-corrupt-block.robot: md5 = f556fab8e3925a4fea40eb972f71bc27 OK
2025/02/14 14:48:35 INFO  : debug/ozone-debug-corrupt-block.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/dn-one-rocksdb.robot: md5 = 88430ae0b01aad442da17efb6dceeff5 OK
2025/02/14 14:48:35 INFO  : compatibility/dn-one-rocksdb.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/fs.robot: md5 = 37f5052dda89a5965f9b25e32a19400f OK
2025/02/14 14:48:35 INFO  : lib/fs.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : grpc/grpc-om-s3-metrics.robot: md5 = 46e600db0f1a54a11f51e680ea737807 OK
2025/02/14 14:48:35 INFO  : grpc/grpc-om-s3-metrics.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/fs_tests.robot: md5 = 659a8762cd74723d9f1aa58553c56bd3 OK
2025/02/14 14:48:35 INFO  : lib/fs_tests.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/os.robot: md5 = 0d5c26d90f992ec5e493fbd261b802a0 OK
2025/02/14 14:48:35 INFO  : lib/os.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/os_tests.robot: md5 = 2fff5aeac04f4cd0b44ad37027aee143 OK
2025/02/14 14:48:35 INFO  : lib/os_tests.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/string.robot: md5 = 3f328b056d05b4c0b1de0155300722b3 OK
2025/02/14 14:48:35 INFO  : lib/string.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : lib/string_tests.robot: md5 = 6cb4abeaa32800093caab1e3ef3a6dc8 OK
2025/02/14 14:48:35 INFO  : lib/string_tests.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/om.robot: md5 = 214be7d865c25b6c8808ddae5aceea2b OK
2025/02/14 14:48:35 INFO  : compatibility/om.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/dn.robot: md5 = 1562fd650324206ae5229fcaf4d978c3 OK
2025/02/14 14:48:35 INFO  : compatibility/dn.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/read.robot: md5 = 9efb635ef918f329d6c8e47aca554f3d OK
2025/02/14 14:48:35 INFO  : compatibility/read.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/recon.robot: md5 = 17fc42834a46180c6a0d09722792d51a OK
2025/02/14 14:48:35 INFO  : compatibility/recon.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/setup.robot: md5 = abee4cf943dea0d9eb9404a65c62259c OK
2025/02/14 14:48:35 INFO  : compatibility/setup.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : debug/ozone-debug-ldb.robot: md5 = b8ccca17d5a70220be57068aaabdf361 OK
2025/02/14 14:48:35 INFO  : debug/ozone-debug-ldb.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/scm.robot: md5 = b52956a2ccb6ca2ead8138b966a3cf69 OK
2025/02/14 14:48:35 INFO  : compatibility/scm.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : compatibility/write.robot: md5 = 27c4325259d4b71fd120a49c8a5b6246 OK
2025/02/14 14:48:35 INFO  : compatibility/write.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : ozone-lib/freon.robot: md5 = 92b3859196c46cf840c46923815692a5 OK
2025/02/14 14:48:35 INFO  : ozone-lib/freon.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : ozone-lib/shell.robot: md5 = 31382dc80887332e0c4cd46ce5d11d18 OK
2025/02/14 14:48:35 INFO  : ozone-lib/shell.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : ozone-lib/shell_tests.robot: md5 = 0731e1512a9ef08685cd5f1a671a0374 OK
2025/02/14 14:48:35 INFO  : ozone-lib/shell_tests.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : omha/data-creation-before-om-bootstrap.robot: md5 = 7ce911a55a7fb5edd84c77e3942ae57b OK
2025/02/14 14:48:35 INFO  : omha/data-creation-before-om-bootstrap.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : omha/data-validation-after-om-bootstrap.robot: md5 = ebef0dcb8b6ade5f72ea7805764edd61 OK
2025/02/14 14:48:35 INFO  : omha/data-validation-after-om-bootstrap.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : omha/om-fetch-key.robot: md5 = 107bc35bac744c63479a62c484173dcd OK
2025/02/14 14:48:35 INFO  : omha/om-fetch-key.robot: Copied (new)
2025/02/14 14:48:35 DEBUG : omha/om-cancel-prepare.robot: md5 = 9d970a2b8e82faa67bfb3f2559f3b2d5 OK
2025/02/14 14:48:35 INFO  : omha/om-cancel-prepare.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : omha/om-leader-transfer.robot: md5 = 2300435cfdb5fd36295701e65c730217 OK
2025/02/14 14:48:36 INFO  : omha/om-leader-transfer.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : omha/om-prepare.robot: md5 = d555d6a6176d694c0e68139157d7178f OK
2025/02/14 14:48:36 INFO  : omha/om-prepare.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : omha/om-prepared.robot: md5 = cef530c89296bc0f60aa3abc750c67ae OK
2025/02/14 14:48:36 INFO  : omha/om-prepared.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : omha/om-roles.robot: md5 = 72254e4c5dcce7eb25e939dd388c184e OK
2025/02/14 14:48:36 INFO  : omha/om-roles.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : omha/testOMHA.robot: md5 = 76420a98f0abcd940eb808e88dca8ddb OK
2025/02/14 14:48:36 INFO  : omha/testOMHA.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : ozonefs/hadoopo3fs.robot: md5 = af6c7cdaa17e6814065c51678a719de8 OK
2025/02/14 14:48:36 INFO  : ozonefs/hadoopo3fs.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : ozonefs/ozonefs.robot: md5 = c065378df949a1edbd8438dc17438755 OK
2025/02/14 14:48:36 INFO  : ozonefs/ozonefs.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : ozonefs/setup.robot: md5 = 654df9c1aba73bbe70615bd138bbe9ea OK
2025/02/14 14:48:36 INFO  : ozonefs/setup.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : repair/bucket-encryption.robot: md5 = 85fb3e7e6bc38056a137d3b55df020da OK
2025/02/14 14:48:36 INFO  : repair/bucket-encryption.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : recon/recon-nssummary.robot: md5 = 6913f9075574a8ea22e660e42bda74fe OK
2025/02/14 14:48:36 INFO  : recon/recon-nssummary.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : recon/recon-api.robot: md5 = f5af7d2e74c23d011027ac387f521a4b OK
2025/02/14 14:48:36 INFO  : recon/recon-api.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : recon/recon-taskstatus.robot: md5 = 103ee5fcec5f0332cb9efd35f877aabd OK
2025/02/14 14:48:36 INFO  : recon/recon-taskstatus.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : scmha/primordial-scm.robot: md5 = c6be6e3c99778e59a6941565ea904f37 OK
2025/02/14 14:48:36 INFO  : scmha/primordial-scm.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : replication/wait.robot: md5 = 6c2234cd0a195a66958f1b95e06ca22f OK
2025/02/14 14:48:36 INFO  : replication/wait.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : scmha/root-ca-rotation.robot: md5 = bcffcde9f44f71177636bd67d64cde0c OK
2025/02/14 14:48:36 INFO  : scmha/root-ca-rotation.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : scmha/scm-decommission.robot: md5 = 4f92e183f637f288f1c09cc28e5c35f8 OK
2025/02/14 14:48:36 INFO  : scmha/scm-decommission.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : scmha/scm-leader-transfer.robot: md5 = 51aaf7c7dd2e3a9ef6ce31b50e617425 OK
2025/02/14 14:48:36 INFO  : scmha/scm-leader-transfer.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/S3-secret.robot: md5 = d7dcdb93c4d1410f43c692576b9a021e OK
2025/02/14 14:48:36 INFO  : security/S3-secret.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/admin-cert.robot: md5 = 77c7d7f0aa43c7b81b26021bd3da0531 OK
2025/02/14 14:48:36 INFO  : security/admin-cert.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/ozone-secure-fs.robot: md5 = feac34a4a3e86b047206038a9018f31a OK
2025/02/14 14:48:36 INFO  : security/ozone-secure-fs.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/ozone-secure-owner-s3.robot: md5 = 3e7cfb86bcac237e0fbb8d56f0f744b0 OK
2025/02/14 14:48:36 INFO  : security/ozone-secure-owner-s3.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/ozone-secure-s3.robot: md5 = f2ee95c122db6a64890f21818ff5d0f5 OK
2025/02/14 14:48:36 INFO  : security/ozone-secure-s3.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/ozone-secure-tenant.robot: md5 = 638546f4ca6201cfc7bba27b87a2495c OK
2025/02/14 14:48:36 INFO  : security/ozone-secure-tenant.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : security/ozone-secure-token.robot: md5 = f0bc9c409bf869d559d0386a5d3bd826 OK
2025/02/14 14:48:36 INFO  : security/ozone-secure-token.robot: Copied (new)
2025/02/14 14:48:36 DEBUG : debug/ozone-debug-stale-datanode.robot: md5 = 9997cee365bb0695b2d9d37c2752b77c OK
2025/02/14 14:48:36 INFO  : debug/ozone-debug-stale-datanode.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : debug/ozone-debug-tests-ec3-2.robot: md5 = 0b4321adf32a1d975fde7defdd1b0688 OK
2025/02/14 14:48:37 INFO  : debug/ozone-debug-tests-ec3-2.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : debug/ozone-debug-tests-ec6-3.robot: md5 = 3261caa6be3a690633cc90c05d6e57c2 OK
2025/02/14 14:48:37 INFO  : debug/ozone-debug-tests-ec6-3.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : debug/ozone-debug-tests.robot: md5 = a81feeb100f6d06d2844a10a0c3cfa0e OK
2025/02/14 14:48:37 INFO  : debug/ozone-debug-tests.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : debug/ozone-debug.robot: md5 = 04d77beb89b0bf6d7c25ff2a81b8abe7 OK
2025/02/14 14:48:37 INFO  : debug/ozone-debug.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : snapshot/snapshot-acls.robot: md5 = 5165ce0e5d63ddba8123fccdbc7fe74e OK
2025/02/14 14:48:37 INFO  : snapshot/snapshot-acls.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : snapshot/snapshot-fs.robot: md5 = 8303ebaf2fc12efc0eedf897a3b8388b OK
2025/02/14 14:48:37 INFO  : snapshot/snapshot-fs.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : spnego/web.robot: md5 = 6891b9a6a120773f347563f2b334730e OK
2025/02/14 14:48:37 INFO  : spnego/web.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : snapshot/snapshot-setup.robot: md5 = deee56580a640f4f2a24c27e2875deef OK
2025/02/14 14:48:37 INFO  : snapshot/snapshot-setup.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : snapshot/snapshot-sh.robot: md5 = b7089719e57e909dc80406968156276e OK
2025/02/14 14:48:37 INFO  : snapshot/snapshot-sh.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : snapshot/upgrade-snapshot-check.robot: md5 = 94052acf25531c5779f6e67fe1a5e5d8 OK
2025/02/14 14:48:37 INFO  : snapshot/upgrade-snapshot-check.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : topology/loaddata.robot: md5 = 6f2723e7d07650f411a67a272b33de40 OK
2025/02/14 14:48:37 INFO  : topology/loaddata.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : topology/readdata.robot: md5 = 924403a1188642f6cb1f939631d9b8fd OK
2025/02/14 14:48:37 INFO  : topology/readdata.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : topology/cli.robot: md5 = 1312a3e8e54ae621f71b8c579610389c OK
2025/02/14 14:48:37 INFO  : topology/cli.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/echoRPCLoad.robot: md5 = 2fc53080896aa6c46c9065a2f95f8a06 OK
2025/02/14 14:48:37 INFO  : freon/echoRPCLoad.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/generate-chunk.robot: md5 = b2ea5843932f9dd4aace06b987a5a95b OK
2025/02/14 14:48:37 INFO  : freon/generate-chunk.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/hsync.robot: md5 = 67303a57b73bf512cd3c115506691ab4 OK
2025/02/14 14:48:37 INFO  : freon/hsync.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/generate.robot: md5 = 794114406a50ce0efa2eb018c63e3569 OK
2025/02/14 14:48:37 INFO  : freon/generate.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : upgrade/check-finalization.robot: md5 = 2ec44c3cfb922f39cc948eee24d3ee44 OK
2025/02/14 14:48:37 INFO  : upgrade/check-finalization.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/metadata-generate.robot: md5 = 9212bb41f3c6725b4cfbf27563256dc1 OK
2025/02/14 14:48:37 INFO  : freon/metadata-generate.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : upgrade/finalize.robot: md5 = 2a8a50ebe55fd6527750e3f997a3caed OK
2025/02/14 14:48:37 INFO  : upgrade/finalize.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/read-write-key.robot: md5 = 97b5b3757ce62078e01acb30bf857bc9 OK
2025/02/14 14:48:37 INFO  : freon/read-write-key.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : upgrade/generate.robot: md5 = 87c3babbadb7231a37035b0fb45c012d OK
2025/02/14 14:48:37 INFO  : upgrade/generate.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : freon/remove.robot: md5 = 069bd821affc2700b55e95e923debb40 OK
2025/02/14 14:48:37 INFO  : freon/remove.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : upgrade/prepare.robot: md5 = 6b07fdc028074a0ea045f14392770610 OK
2025/02/14 14:48:37 INFO  : upgrade/prepare.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : om-ratis/testOMAdminCmd.robot: md5 = b3e566d742593fdcbd4b25c49c1df9b9 OK
2025/02/14 14:48:37 INFO  : om-ratis/testOMAdminCmd.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : ec/lib.resource: md5 = 9db19e6c4eec84a56e1527a0e5c0eedb OK
2025/02/14 14:48:37 INFO  : ec/lib.resource: Copied (new)
2025/02/14 14:48:37 DEBUG : ec/read.robot: md5 = 6a1409d13888ee6c452afae4e1fa5440 OK
2025/02/14 14:48:37 INFO  : ec/read.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : ec/upgrade-ec-check.robot: md5 = 98acf9175a001fb901e6fc90808a6c5b OK
2025/02/14 14:48:37 INFO  : ec/upgrade-ec-check.robot: Copied (new)
2025/02/14 14:48:37 DEBUG : ec/rewrite.robot: md5 = 58ee9e6157cf8e88593d686d55eebea5 OK
2025/02/14 14:48:37 INFO  : ec/rewrite.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : freon/validate-chunk.robot: md5 = 59e91563fa0a2fb6c3c84ca4e85fa12a OK
2025/02/14 14:48:38 INFO  : freon/validate-chunk.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : gdpr/gdpr.robot: md5 = 55db38304c3687e1ced9f24c5351acc3 OK
2025/02/14 14:48:38 INFO  : gdpr/gdpr.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : failing/test1.robot: md5 = 096d2965be1aba0411e6f60d8b90db60 OK
2025/02/14 14:48:38 INFO  : failing/test1.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : freon/validate.robot: md5 = de7167e08a627d9edba48f6493b3b21d OK
2025/02/14 14:48:38 INFO  : freon/validate.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : upgrade/validate.robot: md5 = 4997452324a0fd6c01066d94d2938704 OK
2025/02/14 14:48:38 INFO  : upgrade/validate.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : failing/test2.robot: md5 = 48a8a3810b50776e3c666ad8329874c4 OK
2025/02/14 14:48:38 INFO  : failing/test2.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/README.md: md5 = 4967f548b5fbc96c22e590f6352de20c OK
2025/02/14 14:48:38 INFO  : s3/README.md: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/MultipartUpload.robot: md5 = 5209a614d9e0d992293d0ad44c060759 OK
2025/02/14 14:48:38 INFO  : s3/MultipartUpload.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/__init__.robot: md5 = 23063b5cc483e26c9391946748d0e9c0 OK
2025/02/14 14:48:38 INFO  : s3/__init__.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/awss3.robot: md5 = 613af88fef39a5eb7fd1ad90f655accf OK
2025/02/14 14:48:38 INFO  : s3/awss3.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/awss3virtualhost.robot: md5 = 96d3468b5d85ac399b3955acfb0f5dfb OK
2025/02/14 14:48:38 INFO  : s3/awss3virtualhost.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/boto3.robot: md5 = 57deba6f5134410aa7132bcbba35bf02 OK
2025/02/14 14:48:38 INFO  : s3/boto3.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/boto_client.py: md5 = 67191f51cc17259b5b31d0083dd1c8af OK
2025/02/14 14:48:38 INFO  : s3/boto_client.py: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/bucketcreate.robot: md5 = 62dba6ffa76fe172082a845dca604d6e OK
2025/02/14 14:48:38 INFO  : s3/bucketcreate.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/bucketdelete.robot: md5 = c1d00766ad49e0c124d009c6007d5c91 OK
2025/02/14 14:48:38 INFO  : s3/bucketdelete.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/buckethead.robot: md5 = 2bb1986d15d3ae567300b5e313e894bb OK
2025/02/14 14:48:38 INFO  : s3/buckethead.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/bucketlist.robot: md5 = fbb9afb6fa4f7f2ac2eea383f8bf319e OK
2025/02/14 14:48:38 INFO  : s3/bucketlist.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/commonawslib.robot: md5 = 24fad4f84a921ea9819269ea5c1c1104 OK
2025/02/14 14:48:38 INFO  : s3/commonawslib.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/mpu_lib.robot: md5 = 64b8fcd0c76085408602f5224a615a5d OK
2025/02/14 14:48:38 INFO  : s3/mpu_lib.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/freon.robot: md5 = a0a59d691e3baf7be0aea34198319f79 OK
2025/02/14 14:48:38 INFO  : s3/freon.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objectcopys3a.robot: md5 = bef140aaa9c1c502fabaf129f9ac516c OK
2025/02/14 14:48:38 INFO  : s3/objectcopys3a.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objectcopy.robot: md5 = 30e2c16d6411104c566d3d278fe9158c OK
2025/02/14 14:48:38 INFO  : s3/objectcopy.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objectdelete.robot: md5 = e088e8a4177b2a88978d9d7b0e0eca7c OK
2025/02/14 14:48:38 INFO  : s3/objectdelete.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objecthead.robot: md5 = 013c35538293ecef75dec800ad2052e2 OK
2025/02/14 14:48:38 INFO  : s3/objecthead.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objectputget.robot: md5 = 7219881d97216436b5c6a392a958128c OK
2025/02/14 14:48:38 INFO  : s3/objectputget.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objectmultidelete.robot: md5 = df1f9f0b36f9093d141d3eee4ea1a941 OK
2025/02/14 14:48:38 INFO  : s3/objectmultidelete.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/objecttagging.robot: md5 = 91be9cf21ad20dcdec46bd5b4ee2df90 OK
2025/02/14 14:48:38 INFO  : s3/objecttagging.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/rclone.robot: md5 = d21ab56698189510215111a278dad68e OK
2025/02/14 14:48:38 INFO  : s3/rclone.robot: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/s3_compatbility_check.sh: md5 = 034162b7078c6076ebb59eaa4b5473cc OK
2025/02/14 14:48:38 INFO  : s3/s3_compatbility_check.sh: Copied (new)
2025/02/14 14:48:38 DEBUG : s3/s3_getsecret.robot: md5 = 13e88d6b5040c3bfd441335745f803bc OK
2025/02/14 14:48:38 INFO  : s3/s3_getsecret.robot: Copied (new)
2025/02/14 14:48:39 DEBUG : s3/secretgenerate.robot: md5 = 6488717e37a1b9dfdcb45948caf4eaf2 OK
2025/02/14 14:48:39 INFO  : s3/secretgenerate.robot: Copied (new)
2025/02/14 14:48:39 DEBUG : s3/secretrevoke.robot: md5 = fad00ae3b97b2b3e21180a73f59f44c8 OK
2025/02/14 14:48:39 INFO  : s3/secretrevoke.robot: Copied (new)
2025/02/14 14:48:39 DEBUG : s3/webui.robot: md5 = 9bb0ab60ddd8632befc79c71790aeaa0 OK
2025/02/14 14:48:39 INFO  : s3/webui.robot: Copied (new)
2025/02/14 14:48:39 INFO  : 
Transferred:   	  554.617 KiB / 554.617 KiB, 100%, 97.526 KiB/s, ETA 0s
Transferred:          153 / 153, 100%
Elapsed time:         5.5s

2025/02/14 14:48:39 DEBUG : 13 go routines active</msg>
<status status="PASS" starttime="20250214 14:48:39.046" endtime="20250214 14:48:39.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:39.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:39.049" endtime="20250214 14:48:39.051"/>
</kw>
<status status="PASS" starttime="20250214 14:48:33.401" endtime="20250214 14:48:39.052"/>
</kw>
<msg timestamp="20250214 14:48:39.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:33.401" endtime="20250214 14:48:39.052"/>
</kw>
<msg timestamp="20250214 14:48:39.054" level="INFO">${result} = 2025/02/14 14:48:33 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/erasure"]
2025/02/14 14:48:33 DEBUG : Creating backend with remote "...</msg>
<status status="PASS" starttime="20250214 14:48:33.400" endtime="20250214 14:48:39.054"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250214 14:48:32.619" endtime="20250214 14:48:39.054"/>
</test>
<doc>S3 gateway test with rclone client</doc>
<status status="PASS" starttime="20250214 14:48:32.608" endtime="20250214 14:48:39.055"/>
</suite>
<suite id="s1-s1-s17" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:48:39.063" endtime="20250214 14:48:39.063"/>
</kw>
<test id="s1-s1-s17-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:39.064" level="INFO">Execution passed with message:
N/A</msg>
<status status="PASS" starttime="20250214 14:48:39.064" endtime="20250214 14:48:39.064"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 14:48:39.064" endtime="20250214 14:48:39.064"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.065" endtime="20250214 14:48:39.065"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.065" endtime="20250214 14:48:39.065"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 14:48:39.065" endtime="20250214 14:48:39.065"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250214 14:48:39.063" endtime="20250214 14:48:39.065">N/A</status>
</test>
<test id="s1-s1-s17-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:39.067" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20250214 14:48:39.066" endtime="20250214 14:48:39.067"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20250214 14:48:39.067" endtime="20250214 14:48:39.067"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 14:48:39.067" endtime="20250214 14:48:39.067"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.067" endtime="20250214 14:48:39.067"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.068" endtime="20250214 14:48:39.068"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250214 14:48:39.068" endtime="20250214 14:48:39.068"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250214 14:48:39.066" endtime="20250214 14:48:39.068">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20250214 14:48:39.056" endtime="20250214 14:48:39.068"/>
</suite>
<suite id="s1-s1-s18" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s1-s18-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:39.081" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:39.081" endtime="20250214 14:48:39.081"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.081" endtime="20250214 14:48:39.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:39.082" endtime="20250214 14:48:39.082"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:39.082" endtime="20250214 14:48:39.082"/>
</kw>
<status status="PASS" starttime="20250214 14:48:39.080" endtime="20250214 14:48:39.082"/>
</kw>
<status status="PASS" starttime="20250214 14:48:39.080" endtime="20250214 14:48:39.082"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:39.082" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:39.082" endtime="20250214 14:48:39.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<status status="NOT RUN" starttime="20250214 14:48:39.082" endtime="20250214 14:48:39.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:39.083" endtime="20250214 14:48:39.083"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250214 14:48:39.083" endtime="20250214 14:48:39.083"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:39.088" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:40.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:40.390" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:39.084" endtime="20250214 14:48:40.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:40.390" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:40.390" endtime="20250214 14:48:40.390"/>
</kw>
<status status="PASS" starttime="20250214 14:48:39.084" endtime="20250214 14:48:40.391"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:40.393" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:41.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:41.624" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:40.391" endtime="20250214 14:48:41.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:41.625" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:41.625" endtime="20250214 14:48:41.625"/>
</kw>
<status status="PASS" starttime="20250214 14:48:40.391" endtime="20250214 14:48:41.625"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:41.628" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:42.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:42.858" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:41.626" endtime="20250214 14:48:42.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:42.859" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:42.858" endtime="20250214 14:48:42.859"/>
</kw>
<status status="PASS" starttime="20250214 14:48:41.625" endtime="20250214 14:48:42.859"/>
</kw>
<status status="PASS" starttime="20250214 14:48:39.083" endtime="20250214 14:48:42.859"/>
</kw>
<status status="PASS" starttime="20250214 14:48:39.083" endtime="20250214 14:48:42.859"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:39.079" endtime="20250214 14:48:42.859">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s18-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:42.861" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:42.861" endtime="20250214 14:48:42.861"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:42.861" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:42.862" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:42.862" endtime="20250214 14:48:42.862"/>
</kw>
<status status="PASS" starttime="20250214 14:48:42.861" endtime="20250214 14:48:42.862"/>
</kw>
<status status="PASS" starttime="20250214 14:48:42.860" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:42.862" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:42.862" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:48:42.862" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<status status="NOT RUN" starttime="20250214 14:48:42.862" endtime="20250214 14:48:42.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:42.863" endtime="20250214 14:48:42.863"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:42.866" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:44.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:44.069" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:42.864" endtime="20250214 14:48:44.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:44.070" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:44.069" endtime="20250214 14:48:44.070"/>
</kw>
<status status="PASS" starttime="20250214 14:48:42.863" endtime="20250214 14:48:44.070"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:44.072" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:45.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:45.327" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:44.070" endtime="20250214 14:48:45.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:45.328" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:45.328" endtime="20250214 14:48:45.328"/>
</kw>
<status status="PASS" starttime="20250214 14:48:44.070" endtime="20250214 14:48:45.328"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:45.331" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:46.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:46.582" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:45.329" endtime="20250214 14:48:46.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:46.582" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:46.582" endtime="20250214 14:48:46.582"/>
</kw>
<status status="PASS" starttime="20250214 14:48:45.328" endtime="20250214 14:48:46.583"/>
</kw>
<status status="PASS" starttime="20250214 14:48:42.863" endtime="20250214 14:48:46.583"/>
</kw>
<status status="PASS" starttime="20250214 14:48:42.863" endtime="20250214 14:48:46.583"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:42.860" endtime="20250214 14:48:46.583">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s18-t3" name="S3 Gateway Generate Secret By Username" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:46.585" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:46.585" endtime="20250214 14:48:46.585"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:46.585" endtime="20250214 14:48:46.585"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:46.585" endtime="20250214 14:48:46.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:46.585" endtime="20250214 14:48:46.585"/>
</kw>
<status status="PASS" starttime="20250214 14:48:46.584" endtime="20250214 14:48:46.585"/>
</kw>
<status status="PASS" starttime="20250214 14:48:46.584" endtime="20250214 14:48:46.585"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:46.586" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:46.585" endtime="20250214 14:48:46.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<status status="NOT RUN" starttime="20250214 14:48:46.586" endtime="20250214 14:48:46.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:46.586" endtime="20250214 14:48:46.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250214 14:48:46.586" endtime="20250214 14:48:46.586"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:46.589" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:47.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:47.862" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:46.587" endtime="20250214 14:48:47.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:47.862" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:47.862" endtime="20250214 14:48:47.862"/>
</kw>
<status status="PASS" starttime="20250214 14:48:46.587" endtime="20250214 14:48:47.863"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:47.865" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:49.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:49.094" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:47.863" endtime="20250214 14:48:49.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:49.095" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:49.094" endtime="20250214 14:48:49.095"/>
</kw>
<status status="PASS" starttime="20250214 14:48:47.863" endtime="20250214 14:48:49.095"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:49.097" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:50.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:50.371" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:49.095" endtime="20250214 14:48:50.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:50.372" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:50.372" endtime="20250214 14:48:50.372"/>
</kw>
<status status="PASS" starttime="20250214 14:48:49.095" endtime="20250214 14:48:50.372"/>
</kw>
<status status="PASS" starttime="20250214 14:48:46.586" endtime="20250214 14:48:50.373"/>
</kw>
<status status="PASS" starttime="20250214 14:48:46.586" endtime="20250214 14:48:50.373"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:46.583" endtime="20250214 14:48:50.373">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s18-t4" name="S3 Gateway Generate Secret By Username For Other User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:50.375" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:50.374" endtime="20250214 14:48:50.375"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:50.375" endtime="20250214 14:48:50.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:50.375" endtime="20250214 14:48:50.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:50.375" endtime="20250214 14:48:50.375"/>
</kw>
<status status="PASS" starttime="20250214 14:48:50.374" endtime="20250214 14:48:50.375"/>
</kw>
<status status="PASS" starttime="20250214 14:48:50.374" endtime="20250214 14:48:50.375"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:50.376" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:50.376" endtime="20250214 14:48:50.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<status status="NOT RUN" starttime="20250214 14:48:50.376" endtime="20250214 14:48:50.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:50.376" endtime="20250214 14:48:50.376"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250214 14:48:50.376" endtime="20250214 14:48:50.376"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:50.379" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:51.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:51.612" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:50.377" endtime="20250214 14:48:51.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:51.613" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:51.612" endtime="20250214 14:48:51.613"/>
</kw>
<status status="PASS" starttime="20250214 14:48:50.377" endtime="20250214 14:48:51.613"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:51.616" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:52.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:52.917" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:51.614" endtime="20250214 14:48:52.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:52.918" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:52.918" endtime="20250214 14:48:52.918"/>
</kw>
<status status="PASS" starttime="20250214 14:48:51.613" endtime="20250214 14:48:52.918"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:52.921" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:54.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:54.195" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:52.919" endtime="20250214 14:48:54.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:54.196" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:54.196" endtime="20250214 14:48:54.196"/>
</kw>
<status status="PASS" starttime="20250214 14:48:52.918" endtime="20250214 14:48:54.196"/>
</kw>
<status status="PASS" starttime="20250214 14:48:50.376" endtime="20250214 14:48:54.196"/>
</kw>
<status status="PASS" starttime="20250214 14:48:50.376" endtime="20250214 14:48:54.196"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:50.373" endtime="20250214 14:48:54.197">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s18-t5" name="S3 Gateway Reject Secret Generation By Non-admin User" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:54.199" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:54.198" endtime="20250214 14:48:54.199"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:54.199" endtime="20250214 14:48:54.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:54.199" endtime="20250214 14:48:54.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:54.199" endtime="20250214 14:48:54.199"/>
</kw>
<status status="PASS" starttime="20250214 14:48:54.198" endtime="20250214 14:48:54.199"/>
</kw>
<status status="PASS" starttime="20250214 14:48:54.198" endtime="20250214 14:48:54.199"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:54.199" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:54.199" endtime="20250214 14:48:54.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:54.200" endtime="20250214 14:48:54.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<status status="NOT RUN" starttime="20250214 14:48:54.200" endtime="20250214 14:48:54.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:54.200" endtime="20250214 14:48:54.200"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:54.203" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:55.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:55.416" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:54.201" endtime="20250214 14:48:55.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:55.417" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:55.417" endtime="20250214 14:48:55.417"/>
</kw>
<status status="PASS" starttime="20250214 14:48:54.200" endtime="20250214 14:48:55.418"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:55.421" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:56.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:56.707" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:55.418" endtime="20250214 14:48:56.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:56.707" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:56.707" endtime="20250214 14:48:56.708"/>
</kw>
<status status="PASS" starttime="20250214 14:48:55.418" endtime="20250214 14:48:56.708"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:56.710" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:57.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:57.939" level="INFO">${output} = Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:56.708" endtime="20250214 14:48:57.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:57.940" level="INFO">Error: 'ozone s3 revokesecret' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250214 14:48:57.939" endtime="20250214 14:48:57.940"/>
</kw>
<status status="PASS" starttime="20250214 14:48:56.708" endtime="20250214 14:48:57.940"/>
</kw>
<status status="PASS" starttime="20250214 14:48:54.200" endtime="20250214 14:48:57.940"/>
</kw>
<status status="PASS" starttime="20250214 14:48:54.200" endtime="20250214 14:48:57.940"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:54.197" endtime="20250214 14:48:57.940">Skipping this check as security is not enabled</status>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20250214 14:48:39.069" endtime="20250214 14:48:57.941"/>
</suite>
<suite id="s1-s1-s19" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s1-s19-t1" name="S3 Gateway Revoke Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.954" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:57.954" endtime="20250214 14:48:57.954"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.954" endtime="20250214 14:48:57.954"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.954" endtime="20250214 14:48:57.955"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.955" endtime="20250214 14:48:57.955"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.953" endtime="20250214 14:48:57.955"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.953" endtime="20250214 14:48:57.955"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.955" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:57.955" endtime="20250214 14:48:57.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.955" endtime="20250214 14:48:57.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.956" endtime="20250214 14:48:57.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.956" endtime="20250214 14:48:57.956"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:57.953" endtime="20250214 14:48:57.956">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s19-t2" name="S3 Gateway Revoke Secret By Username" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.957" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:57.957" endtime="20250214 14:48:57.958"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.958" endtime="20250214 14:48:57.958"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.958" endtime="20250214 14:48:57.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.958" endtime="20250214 14:48:57.958"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.957" endtime="20250214 14:48:57.958"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.957" endtime="20250214 14:48:57.958"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.959" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:57.958" endtime="20250214 14:48:57.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.959" endtime="20250214 14:48:57.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.959" endtime="20250214 14:48:57.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.959" endtime="20250214 14:48:57.959"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:57.956" endtime="20250214 14:48:57.959">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s19-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.961" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:57.961" endtime="20250214 14:48:57.961"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.961" endtime="20250214 14:48:57.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.961" endtime="20250214 14:48:57.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.961" endtime="20250214 14:48:57.962"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.960" endtime="20250214 14:48:57.962"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.960" endtime="20250214 14:48:57.962"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.962" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:57.962" endtime="20250214 14:48:57.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.962" endtime="20250214 14:48:57.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.962" endtime="20250214 14:48:57.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.962" endtime="20250214 14:48:57.963"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:57.960" endtime="20250214 14:48:57.963">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s19-t4" name="S3 Gateway Reject Secret Revoke By Non-admin User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.964" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20250214 14:48:57.964" endtime="20250214 14:48:57.964"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.964" endtime="20250214 14:48:57.964"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.964" endtime="20250214 14:48:57.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.965" endtime="20250214 14:48:57.965"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.964" endtime="20250214 14:48:57.965"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.963" endtime="20250214 14:48:57.965"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250214 14:48:57.965" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20250214 14:48:57.965" endtime="20250214 14:48:57.965"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.965" endtime="20250214 14:48:57.965"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<status status="NOT RUN" starttime="20250214 14:48:57.965" endtime="20250214 14:48:57.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250214 14:48:57.966" endtime="20250214 14:48:57.966"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:57.963" endtime="20250214 14:48:57.966">Skipping this check as security is not enabled</status>
</test>
<kw name="Setup v4 headers" library="commonawslib" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:48:57.966" endtime="20250214 14:48:57.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:48:57.967" endtime="20250214 14:48:57.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:57.971" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:58.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:58.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:57.969" endtime="20250214 14:48:58.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:58.349" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:58.349" endtime="20250214 14:48:58.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:58.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:58.350" endtime="20250214 14:48:58.350"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.968" endtime="20250214 14:48:58.350"/>
</kw>
<msg timestamp="20250214 14:48:58.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:57.968" endtime="20250214 14:48:58.350"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.968" endtime="20250214 14:48:58.350"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:58.354" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:58.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:58.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:58.351" endtime="20250214 14:48:58.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:58.703" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:58.703" endtime="20250214 14:48:58.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:58.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:58.703" endtime="20250214 14:48:58.704"/>
</kw>
<status status="PASS" starttime="20250214 14:48:58.351" endtime="20250214 14:48:58.704"/>
</kw>
<msg timestamp="20250214 14:48:58.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:58.351" endtime="20250214 14:48:58.704"/>
</kw>
<status status="PASS" starttime="20250214 14:48:58.350" endtime="20250214 14:48:58.704"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:58.707" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:59.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:59.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:58.705" endtime="20250214 14:48:59.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:59.057" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:59.056" endtime="20250214 14:48:59.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:59.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:59.057" endtime="20250214 14:48:59.057"/>
</kw>
<status status="PASS" starttime="20250214 14:48:58.705" endtime="20250214 14:48:59.057"/>
</kw>
<msg timestamp="20250214 14:48:59.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:58.704" endtime="20250214 14:48:59.057"/>
</kw>
<status status="PASS" starttime="20250214 14:48:58.704" endtime="20250214 14:48:59.058"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:59.061" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:59.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:59.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:48:59.058" endtime="20250214 14:48:59.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:59.409" level="INFO"/>
<status status="PASS" starttime="20250214 14:48:59.409" endtime="20250214 14:48:59.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:59.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:59.409" endtime="20250214 14:48:59.409"/>
</kw>
<status status="PASS" starttime="20250214 14:48:59.058" endtime="20250214 14:48:59.410"/>
</kw>
<msg timestamp="20250214 14:48:59.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:59.058" endtime="20250214 14:48:59.410"/>
</kw>
<status status="PASS" starttime="20250214 14:48:59.058" endtime="20250214 14:48:59.410"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.967" endtime="20250214 14:48:59.410"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.967" endtime="20250214 14:48:59.410"/>
</kw>
<status status="PASS" starttime="20250214 14:48:57.966" endtime="20250214 14:48:59.410"/>
</kw>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20250214 14:48:57.943" endtime="20250214 14:48:59.410"/>
</suite>
<suite id="s1-s1-s20" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250214 14:48:59.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:59.418" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.419" endtime="20250214 14:48:59.419"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250214 14:48:59.420" endtime="20250214 14:48:59.420"/>
</kw>
<status status="PASS" starttime="20250214 14:48:59.418" endtime="20250214 14:48:59.420"/>
</kw>
<test id="s1-s1-s20-t1" name="Check web UI" line="33">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${S3G_WEB_UI}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:48:59.423" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:19878 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:48:59.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:48:59.440" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,s3g,recon,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 14:48:59.421" endtime="20250214 14:48:59.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:48:59.441" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,s3g,recon,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.18.0.2:19878...
* Connected to s3g (172.18.0.2) port 19878 (#0)
* gss_init_sec_context() failed: No credentials were supplied, or the credentials were unavailable or inaccessible. SPNEGO cannot find mechanisms to negotiate. 
* Server auth using Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Host: s3g:19878
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 14 Feb 2025 14:48:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 14 Feb 2025 14:48:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Last-Modified: Sun, 01 Jan 2023 00:00:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2761
&lt; 
{ [2761 bytes data]

100  2761  100  2761    0     0   269k      0 --:--:-- --:--:-- --:--:--  269k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="static/bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="static/hadoop.css" rel="stylesheet"&gt;
    &lt;link href="static/ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="static/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;For more information, please check the &lt;a href="static/docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="static/jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="static/bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20250214 14:48:59.441" endtime="20250214 14:48:59.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:48:59.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:48:59.441" endtime="20250214 14:48:59.442"/>
</kw>
<status status="PASS" starttime="20250214 14:48:59.421" endtime="20250214 14:48:59.442"/>
</kw>
<msg timestamp="20250214 14:48:59.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:48:59.420" endtime="20250214 14:48:59.442"/>
</kw>
<msg timestamp="20250214 14:48:59.442" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,s3g,recon,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250214 14:48:59.420" endtime="20250214 14:48:59.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:48:59.443" endtime="20250214 14:48:59.443"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:48:59.420" endtime="20250214 14:48:59.443"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20250214 14:48:59.411" endtime="20250214 14:48:59.443"/>
</suite>
<status status="PASS" starttime="20250214 14:45:34.321" endtime="20250214 14:48:59.447"/>
</suite>
<suite id="s1-s2" name="Rewrite" source="/opt/hadoop/smoketest/ec/rewrite.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:49:00.039" endtime="20250214 14:49:00.039"/>
</kw>
<test id="s1-s2-t1" name="Rewrite Multipart Key" line="33">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:49:00.040" endtime="20250214 14:49:00.040"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:49:00.040" endtime="20250214 14:49:00.040"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:00.044" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:00.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:00.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:00.041" endtime="20250214 14:49:00.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:00.398" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:00.397" endtime="20250214 14:49:00.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:00.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:00.398" endtime="20250214 14:49:00.398"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.041" endtime="20250214 14:49:00.398"/>
</kw>
<msg timestamp="20250214 14:49:00.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:00.041" endtime="20250214 14:49:00.398"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.041" endtime="20250214 14:49:00.399"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:00.402" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:00.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:00.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:00.400" endtime="20250214 14:49:00.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:00.745" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:00.744" endtime="20250214 14:49:00.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:00.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:00.745" endtime="20250214 14:49:00.745"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.399" endtime="20250214 14:49:00.745"/>
</kw>
<msg timestamp="20250214 14:49:00.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:00.399" endtime="20250214 14:49:00.745"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.399" endtime="20250214 14:49:00.745"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:00.748" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:01.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:01.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:00.746" endtime="20250214 14:49:01.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:01.099" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:01.099" endtime="20250214 14:49:01.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:01.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:01.100" endtime="20250214 14:49:01.100"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.746" endtime="20250214 14:49:01.100"/>
</kw>
<msg timestamp="20250214 14:49:01.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:00.746" endtime="20250214 14:49:01.100"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.746" endtime="20250214 14:49:01.100"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:01.104" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:01.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:01.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:01.101" endtime="20250214 14:49:01.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:01.449" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:01.448" endtime="20250214 14:49:01.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:01.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:01.449" endtime="20250214 14:49:01.449"/>
</kw>
<status status="PASS" starttime="20250214 14:49:01.101" endtime="20250214 14:49:01.449"/>
</kw>
<msg timestamp="20250214 14:49:01.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:01.101" endtime="20250214 14:49:01.449"/>
</kw>
<status status="PASS" starttime="20250214 14:49:01.100" endtime="20250214 14:49:01.450"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.041" endtime="20250214 14:49:01.450"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.040" endtime="20250214 14:49:01.450"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.040" endtime="20250214 14:49:01.450"/>
</kw>
<kw name="Create bucket with layout" library="shell">
<var>${bucket}</var>
<arg>/s3v</arg>
<arg>OBJECT_STORE</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:49:01.450" level="INFO">${postfix} = dzxbctrxva</msg>
<status status="PASS" starttime="20250214 14:49:01.450" endtime="20250214 14:49:01.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:01.451" level="INFO">${bucket} = bucket-dzxbctrxva</msg>
<status status="PASS" starttime="20250214 14:49:01.451" endtime="20250214 14:49:01.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:01.454" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE /s3v/bucket-dzxbctrxva 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:04.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:04.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:01.452" endtime="20250214 14:49:04.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:04.236" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:04.235" endtime="20250214 14:49:04.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:04.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:04.236" endtime="20250214 14:49:04.237"/>
</kw>
<status status="PASS" starttime="20250214 14:49:01.451" endtime="20250214 14:49:04.237"/>
</kw>
<msg timestamp="20250214 14:49:04.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:01.451" endtime="20250214 14:49:04.237"/>
</kw>
<msg timestamp="20250214 14:49:04.237" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:49:01.451" endtime="20250214 14:49:04.237"/>
</kw>
<msg timestamp="20250214 14:49:04.238" level="INFO">${bucket} = bucket-dzxbctrxva</msg>
<status status="PASS" starttime="20250214 14:49:01.450" endtime="20250214 14:49:04.238"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>multipart.key</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:04.238" level="INFO">${key} = multipart.key</msg>
<status status="PASS" starttime="20250214 14:49:04.238" endtime="20250214 14:49:04.238"/>
</kw>
<kw name="Create Random File MB" library="os">
<var>${file}</var>
<arg>12</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:49:04.242" level="INFO">${postfix} = qfkmfornpz</msg>
<status status="PASS" starttime="20250214 14:49:04.242" endtime="20250214 14:49:04.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:04.242" level="INFO">${tmpfile} = /tmp/tempfile-qfkmfornpz</msg>
<status status="PASS" starttime="20250214 14:49:04.242" endtime="20250214 14:49:04.242"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250214 14:49:04.243" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-qfkmfornpz"&gt;/tmp/tempfile-qfkmfornpz&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250214 14:49:04.243" endtime="20250214 14:49:04.243"/>
</kw>
<status status="PASS" starttime="20250214 14:49:04.241" endtime="20250214 14:49:04.243"/>
</kw>
<msg timestamp="20250214 14:49:04.243" level="INFO">${path} = /tmp/tempfile-qfkmfornpz</msg>
<status status="PASS" starttime="20250214 14:49:04.240" endtime="20250214 14:49:04.243"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:04.248" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-qfkmfornpz bs=1048576 count=12 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:04.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:04.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:04.245" endtime="20250214 14:49:04.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:04.301" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:04.300" endtime="20250214 14:49:04.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:04.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:04.301" endtime="20250214 14:49:04.301"/>
</kw>
<status status="PASS" starttime="20250214 14:49:04.244" endtime="20250214 14:49:04.301"/>
</kw>
<msg timestamp="20250214 14:49:04.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:04.244" endtime="20250214 14:49:04.301"/>
</kw>
<status status="PASS" starttime="20250214 14:49:04.243" endtime="20250214 14:49:04.302"/>
</kw>
<msg timestamp="20250214 14:49:04.302" level="INFO">${path} = /tmp/tempfile-qfkmfornpz</msg>
<status status="PASS" starttime="20250214 14:49:04.239" endtime="20250214 14:49:04.302"/>
</kw>
<msg timestamp="20250214 14:49:04.302" level="INFO">${file} = /tmp/tempfile-qfkmfornpz</msg>
<status status="PASS" starttime="20250214 14:49:04.238" endtime="20250214 14:49:04.302"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${file} s3://${bucket}/${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:04.305" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/tempfile-qfkmfornpz s3://bucket-dzxbctrxva/multipart.key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:06.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:06.052" level="INFO">${output} = Completed 256.0 KiB/12.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (11.9 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:49:04.303" endtime="20250214 14:49:06.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:06.053" level="INFO">Completed 256.0 KiB/12.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (11.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/12.0 MiB (15.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/12.0 MiB (19.4 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/12.0 MiB (23.0 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/12.0 MiB (18.1 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/12.0 MiB (20.6 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/12.0 MiB (23.0 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/12.0 MiB (25.5 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/12.0 MiB (27.9 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/12.0 MiB (30.2 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/12.0 MiB (23.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/12.0 MiB (24.3 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/12.0 MiB (19.6 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/12.0 MiB (20.5 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/12.0 MiB (21.7 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/12.0 MiB (22.9 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/12.0 MiB (23.9 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/12.0 MiB (25.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/12.0 MiB (26.0 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/12.0 MiB (27.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/12.0 MiB (28.1 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/12.0 MiB (29.2 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/12.0 MiB (30.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/12.0 MiB (31.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/12.0 MiB (32.2 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/12.0 MiB (33.4 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/12.0 MiB (34.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/12.0 MiB (35.6 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/12.0 MiB (36.7 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/12.0 MiB (33.3 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/12.0 MiB (34.0 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/12.0 MiB (34.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/12.0 MiB (35.8 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/12.0 MiB (36.7 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/12.0 MiB (37.7 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/12.0 MiB (38.7 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/12.0 MiB (39.4 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/12.0 MiB (15.8 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/12.0 MiB (16.0 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/12.0 MiB (16.2 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/12.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/12.0 MiB (13.1 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/12.0 MiB (13.4 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/12.0 MiB (13.6 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/12.0 MiB (13.9 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/12.0 MiB (14.2 MiB/s) with 1 file(s) remaining 
upload: ../../tmp/tempfile-qfkmfornpz to s3://bucket-dzxbctrxva/multipart.key</msg>
<status status="PASS" starttime="20250214 14:49:06.053" endtime="20250214 14:49:06.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:06.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:06.053" endtime="20250214 14:49:06.054"/>
</kw>
<status status="PASS" starttime="20250214 14:49:04.303" endtime="20250214 14:49:06.054"/>
</kw>
<msg timestamp="20250214 14:49:06.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:04.303" endtime="20250214 14:49:06.054"/>
</kw>
<msg timestamp="20250214 14:49:06.054" level="INFO">${output} = Completed 256.0 KiB/12.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/12.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/12.0 MiB (11.9 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20250214 14:49:04.302" endtime="20250214 14:49:06.054"/>
</kw>
<status status="PASS" starttime="20250214 14:49:04.302" endtime="20250214 14:49:06.055"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:49:06.056" level="INFO">${postfix} = 04566</msg>
<status status="PASS" starttime="20250214 14:49:06.056" endtime="20250214 14:49:06.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:06.057" level="INFO">${tmpfile} = /tmp/tempkey-04566</msg>
<status status="PASS" starttime="20250214 14:49:06.056" endtime="20250214 14:49:06.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:06.060" level="INFO">Running command 'ozone sh key get /s3v/bucket-dzxbctrxva/multipart.key /tmp/tempkey-04566 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:10.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:10.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:06.058" endtime="20250214 14:49:10.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:10.470" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:10.470" endtime="20250214 14:49:10.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:10.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:10.471" endtime="20250214 14:49:10.471"/>
</kw>
<status status="PASS" starttime="20250214 14:49:06.057" endtime="20250214 14:49:10.471"/>
</kw>
<msg timestamp="20250214 14:49:10.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:06.057" endtime="20250214 14:49:10.471"/>
</kw>
<status status="PASS" starttime="20250214 14:49:06.057" endtime="20250214 14:49:10.471"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:49:10.473" level="INFO">Running command 'diff -q /tmp/tempfile-qfkmfornpz /tmp/tempkey-04566 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:10.485" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:49:10.471" endtime="20250214 14:49:10.485"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:10.489" level="INFO">Running command 'rm -f /tmp/tempkey-04566 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:10.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:10.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:10.487" endtime="20250214 14:49:10.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:10.495" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:10.495" endtime="20250214 14:49:10.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:10.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:10.495" endtime="20250214 14:49:10.496"/>
</kw>
<status status="PASS" starttime="20250214 14:49:10.486" endtime="20250214 14:49:10.496"/>
</kw>
<msg timestamp="20250214 14:49:10.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:10.486" endtime="20250214 14:49:10.496"/>
</kw>
<status status="PASS" starttime="20250214 14:49:10.485" endtime="20250214 14:49:10.496"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:49:10.496" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:49:10.496" endtime="20250214 14:49:10.496"/>
</kw>
<msg timestamp="20250214 14:49:10.496" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:49:06.055" endtime="20250214 14:49:10.496"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:49:10.497" endtime="20250214 14:49:10.497"/>
</kw>
<status status="PASS" starttime="20250214 14:49:06.055" endtime="20250214 14:49:10.497"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:10.500" level="INFO">Running command 'ozone sh key info /s3v/bucket-dzxbctrxva/multipart.key | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:13.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:13.560" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:10.498" endtime="20250214 14:49:13.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:13.560" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:13.560" endtime="20250214 14:49:13.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:13.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:13.561" endtime="20250214 14:49:13.561"/>
</kw>
<status status="PASS" starttime="20250214 14:49:10.498" endtime="20250214 14:49:13.561"/>
</kw>
<msg timestamp="20250214 14:49:13.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:10.498" endtime="20250214 14:49:13.561"/>
</kw>
<msg timestamp="20250214 14:49:13.561" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:10.497" endtime="20250214 14:49:13.561"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:13.562" endtime="20250214 14:49:13.562"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:13.562" endtime="20250214 14:49:13.563"/>
</kw>
<status status="PASS" starttime="20250214 14:49:13.561" endtime="20250214 14:49:13.563"/>
</kw>
<status status="PASS" starttime="20250214 14:49:10.497" endtime="20250214 14:49:13.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rewrite -t EC -r rs-3-2-1024k /s3v/${bucket}/${key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:13.566" level="INFO">Running command 'ozone sh key rewrite -t EC -r rs-3-2-1024k /s3v/bucket-dzxbctrxva/multipart.key 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:18.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:18.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:13.564" endtime="20250214 14:49:18.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:18.608" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:18.607" endtime="20250214 14:49:18.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:18.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:18.608" endtime="20250214 14:49:18.608"/>
</kw>
<status status="PASS" starttime="20250214 14:49:13.563" endtime="20250214 14:49:18.608"/>
</kw>
<msg timestamp="20250214 14:49:18.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:13.563" endtime="20250214 14:49:18.608"/>
</kw>
<status status="PASS" starttime="20250214 14:49:13.563" endtime="20250214 14:49:18.609"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:49:18.610" level="INFO">${postfix} = 58569</msg>
<status status="PASS" starttime="20250214 14:49:18.609" endtime="20250214 14:49:18.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:18.610" level="INFO">${tmpfile} = /tmp/tempkey-58569</msg>
<status status="PASS" starttime="20250214 14:49:18.610" endtime="20250214 14:49:18.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:18.613" level="INFO">Running command 'ozone sh key get /s3v/bucket-dzxbctrxva/multipart.key /tmp/tempkey-58569 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:23.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:23.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:18.611" endtime="20250214 14:49:23.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:23.035" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:23.035" endtime="20250214 14:49:23.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:23.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:23.035" endtime="20250214 14:49:23.036"/>
</kw>
<status status="PASS" starttime="20250214 14:49:18.611" endtime="20250214 14:49:23.036"/>
</kw>
<msg timestamp="20250214 14:49:23.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:18.611" endtime="20250214 14:49:23.036"/>
</kw>
<status status="PASS" starttime="20250214 14:49:18.610" endtime="20250214 14:49:23.036"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:49:23.038" level="INFO">Running command 'diff -q /tmp/tempfile-qfkmfornpz /tmp/tempkey-58569 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:23.049" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:49:23.036" endtime="20250214 14:49:23.049"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:23.053" level="INFO">Running command 'rm -f /tmp/tempkey-58569 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:23.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:23.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:23.051" endtime="20250214 14:49:23.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:23.059" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:23.059" endtime="20250214 14:49:23.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:23.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:23.059" endtime="20250214 14:49:23.060"/>
</kw>
<status status="PASS" starttime="20250214 14:49:23.050" endtime="20250214 14:49:23.060"/>
</kw>
<msg timestamp="20250214 14:49:23.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:23.050" endtime="20250214 14:49:23.060"/>
</kw>
<status status="PASS" starttime="20250214 14:49:23.050" endtime="20250214 14:49:23.060"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:49:23.061" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:49:23.060" endtime="20250214 14:49:23.061"/>
</kw>
<msg timestamp="20250214 14:49:23.061" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:49:18.609" endtime="20250214 14:49:23.061"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:49:23.061" endtime="20250214 14:49:23.061"/>
</kw>
<status status="PASS" starttime="20250214 14:49:18.609" endtime="20250214 14:49:23.061"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>/s3v/${bucket}/${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:23.064" level="INFO">Running command 'ozone sh key info /s3v/bucket-dzxbctrxva/multipart.key | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:26.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:26.200" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:23.062" endtime="20250214 14:49:26.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:26.201" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:26.201" endtime="20250214 14:49:26.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:26.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:26.201" endtime="20250214 14:49:26.202"/>
</kw>
<status status="PASS" starttime="20250214 14:49:23.062" endtime="20250214 14:49:26.202"/>
</kw>
<msg timestamp="20250214 14:49:26.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:23.062" endtime="20250214 14:49:26.202"/>
</kw>
<msg timestamp="20250214 14:49:26.202" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:23.062" endtime="20250214 14:49:26.202"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:26.203" endtime="20250214 14:49:26.203"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:26.203" endtime="20250214 14:49:26.203"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:26.203" endtime="20250214 14:49:26.204"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:26.204" endtime="20250214 14:49:26.204"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:26.204" endtime="20250214 14:49:26.204"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.202" endtime="20250214 14:49:26.204"/>
</kw>
<status status="PASS" starttime="20250214 14:49:23.061" endtime="20250214 14:49:26.204"/>
</kw>
<status status="PASS" starttime="20250214 14:49:00.039" endtime="20250214 14:49:26.205"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20250214 14:48:59.971" endtime="20250214 14:49:26.205"/>
</suite>
<suite id="s1-s3" name="Basic" source="/opt/hadoop/smoketest/ec/basic.robot">
<kw name="Prepare For Tests" library="lib" type="SETUP">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:26.792" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:26.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:26.800" level="INFO">${output} = 1+0 records in
1+0 records out
1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00398858 s, 263 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.790" endtime="20250214 14:49:26.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:26.800" level="INFO">1+0 records in
1+0 records out
1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00398858 s, 263 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.800" endtime="20250214 14:49:26.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:26.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:26.801" endtime="20250214 14:49:26.801"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.790" endtime="20250214 14:49:26.801"/>
</kw>
<msg timestamp="20250214 14:49:26.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:26.789" endtime="20250214 14:49:26.801"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.789" endtime="20250214 14:49:26.801"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:26.804" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:26.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:26.815" level="INFO">${output} = 2+0 records in
2+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.00751739 s, 279 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.802" endtime="20250214 14:49:26.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:26.815" level="INFO">2+0 records in
2+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.00751739 s, 279 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.815" endtime="20250214 14:49:26.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:26.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:26.816" endtime="20250214 14:49:26.816"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.802" endtime="20250214 14:49:26.816"/>
</kw>
<msg timestamp="20250214 14:49:26.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:26.802" endtime="20250214 14:49:26.816"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.801" endtime="20250214 14:49:26.816"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:26.819" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:26.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:26.835" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0120288 s, 262 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.817" endtime="20250214 14:49:26.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:26.835" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0120288 s, 262 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.835" endtime="20250214 14:49:26.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:26.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:26.835" endtime="20250214 14:49:26.836"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.817" endtime="20250214 14:49:26.836"/>
</kw>
<msg timestamp="20250214 14:49:26.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:26.816" endtime="20250214 14:49:26.836"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.816" endtime="20250214 14:49:26.836"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:26.839" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:27.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:27.200" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.35636 s, 294 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:26.837" endtime="20250214 14:49:27.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:27.200" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.35636 s, 294 MB/s</msg>
<status status="PASS" starttime="20250214 14:49:27.200" endtime="20250214 14:49:27.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:27.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:27.200" endtime="20250214 14:49:27.201"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.837" endtime="20250214 14:49:27.201"/>
</kw>
<msg timestamp="20250214 14:49:27.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:26.837" endtime="20250214 14:49:27.201"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.836" endtime="20250214 14:49:27.201"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250214 14:49:27.201" endtime="20250214 14:49:27.201"/>
</kw>
<status status="PASS" starttime="20250214 14:49:26.789" endtime="20250214 14:49:27.202"/>
</kw>
<test id="s1-s3-t1" name="Test Bucket Creation" line="62">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:27.205" level="INFO">Running command 'ozone sh volume create /vol16002 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:29.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:29.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:27.203" endtime="20250214 14:49:29.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:29.947" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:29.946" endtime="20250214 14:49:29.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:29.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:29.947" endtime="20250214 14:49:29.947"/>
</kw>
<status status="PASS" starttime="20250214 14:49:27.203" endtime="20250214 14:49:29.947"/>
</kw>
<msg timestamp="20250214 14:49:29.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:27.203" endtime="20250214 14:49:29.948"/>
</kw>
<msg timestamp="20250214 14:49:29.948" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:49:27.202" endtime="20250214 14:49:29.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:49:29.948" endtime="20250214 14:49:29.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/default</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:29.951" level="INFO">Running command 'ozone sh bucket create /vol16002/default 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:32.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:32.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:29.949" endtime="20250214 14:49:32.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:32.858" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:32.858" endtime="20250214 14:49:32.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:32.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:32.858" endtime="20250214 14:49:32.859"/>
</kw>
<status status="PASS" starttime="20250214 14:49:29.949" endtime="20250214 14:49:32.859"/>
</kw>
<msg timestamp="20250214 14:49:32.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:29.949" endtime="20250214 14:49:32.859"/>
</kw>
<msg timestamp="20250214 14:49:32.859" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:49:29.948" endtime="20250214 14:49:32.859"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:49:32.859" endtime="20250214 14:49:32.859"/>
</kw>
<kw name="Verify Bucket Empty Replication Config" library="shell">
<arg>/${VOLUME}/default</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:32.863" level="INFO">Running command 'ozone sh bucket info /vol16002/default | jq -r '.replicationConfig' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:35.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:35.807" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250214 14:49:32.861" endtime="20250214 14:49:35.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:35.807" level="INFO">null</msg>
<status status="PASS" starttime="20250214 14:49:35.807" endtime="20250214 14:49:35.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:35.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:35.807" endtime="20250214 14:49:35.808"/>
</kw>
<status status="PASS" starttime="20250214 14:49:32.860" endtime="20250214 14:49:35.808"/>
</kw>
<msg timestamp="20250214 14:49:35.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:32.860" endtime="20250214 14:49:35.808"/>
</kw>
<msg timestamp="20250214 14:49:35.808" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250214 14:49:32.860" endtime="20250214 14:49:35.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:49:35.808" endtime="20250214 14:49:35.809"/>
</kw>
<status status="PASS" starttime="20250214 14:49:32.859" endtime="20250214 14:49:35.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication 3 --type RATIS /${VOLUME}/ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:35.812" level="INFO">Running command 'ozone sh bucket create --replication 3 --type RATIS /vol16002/ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:38.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:38.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:35.810" endtime="20250214 14:49:38.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:38.649" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:38.648" endtime="20250214 14:49:38.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:38.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:38.649" endtime="20250214 14:49:38.649"/>
</kw>
<status status="PASS" starttime="20250214 14:49:35.810" endtime="20250214 14:49:38.649"/>
</kw>
<msg timestamp="20250214 14:49:38.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:35.809" endtime="20250214 14:49:38.649"/>
</kw>
<msg timestamp="20250214 14:49:38.650" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:49:35.809" endtime="20250214 14:49:38.650"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:49:38.650" endtime="20250214 14:49:38.650"/>
</kw>
<kw name="Verify Bucket Replica Replication Config" library="shell">
<arg>/${VOLUME}/ratis</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:38.653" level="INFO">Running command 'ozone sh bucket info /vol16002/ratis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:41.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:41.531" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:38.651" endtime="20250214 14:49:41.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:41.532" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:41.532" endtime="20250214 14:49:41.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:41.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:41.532" endtime="20250214 14:49:41.533"/>
</kw>
<status status="PASS" starttime="20250214 14:49:38.651" endtime="20250214 14:49:41.533"/>
</kw>
<msg timestamp="20250214 14:49:41.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:38.651" endtime="20250214 14:49:41.533"/>
</kw>
<msg timestamp="20250214 14:49:41.533" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:49:38.650" endtime="20250214 14:49:41.533"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:41.534" endtime="20250214 14:49:41.534"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:41.534" endtime="20250214 14:49:41.534"/>
</kw>
<status status="PASS" starttime="20250214 14:49:41.533" endtime="20250214 14:49:41.534"/>
</kw>
<status status="PASS" starttime="20250214 14:49:38.650" endtime="20250214 14:49:41.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /${VOLUME}/ecbucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:41.538" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /vol16002/ecbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:44.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:44.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:41.535" endtime="20250214 14:49:44.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:44.246" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:44.246" endtime="20250214 14:49:44.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:44.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:44.247" endtime="20250214 14:49:44.247"/>
</kw>
<status status="PASS" starttime="20250214 14:49:41.535" endtime="20250214 14:49:44.247"/>
</kw>
<msg timestamp="20250214 14:49:44.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:41.535" endtime="20250214 14:49:44.247"/>
</kw>
<msg timestamp="20250214 14:49:44.247" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250214 14:49:41.535" endtime="20250214 14:49:44.247"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:49:44.247" endtime="20250214 14:49:44.248"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/${VOLUME}/ecbucket</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:44.251" level="INFO">Running command 'ozone sh bucket info /vol16002/ecbucket | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:47.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:47.228" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:44.249" endtime="20250214 14:49:47.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:47.228" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:47.228" endtime="20250214 14:49:47.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:47.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:47.228" endtime="20250214 14:49:47.229"/>
</kw>
<status status="PASS" starttime="20250214 14:49:44.249" endtime="20250214 14:49:47.229"/>
</kw>
<msg timestamp="20250214 14:49:47.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:44.248" endtime="20250214 14:49:47.229"/>
</kw>
<msg timestamp="20250214 14:49:47.229" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:44.248" endtime="20250214 14:49:47.229"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:47.230" endtime="20250214 14:49:47.230"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:47.230" endtime="20250214 14:49:47.231"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:47.231" endtime="20250214 14:49:47.231"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:47.231" endtime="20250214 14:49:47.231"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:47.231" endtime="20250214 14:49:47.232"/>
</kw>
<status status="PASS" starttime="20250214 14:49:47.229" endtime="20250214 14:49:47.232"/>
</kw>
<status status="PASS" starttime="20250214 14:49:44.248" endtime="20250214 14:49:47.232"/>
</kw>
<status status="PASS" starttime="20250214 14:49:27.202" endtime="20250214 14:49:47.232"/>
</test>
<test id="s1-s3-t2" name="Create 1MB Key In EC Bucket" line="75">
<kw name="Create Key In EC Bucket">
<arg>1mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:47.233" level="INFO">${dir} = /vol16002/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 14:49:47.233" endtime="20250214 14:49:47.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:47.233" level="INFO">${key} = /vol16002/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:49:47.233" endtime="20250214 14:49:47.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:47.234" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 14:49:47.234" endtime="20250214 14:49:47.234"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:47.238" level="INFO">Running command 'ozone sh key put  /vol16002/ecbucket/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:51.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:51.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:47.235" endtime="20250214 14:49:51.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:51.434" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:51.434" endtime="20250214 14:49:51.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:51.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:51.434" endtime="20250214 14:49:51.435"/>
</kw>
<status status="PASS" starttime="20250214 14:49:47.235" endtime="20250214 14:49:51.435"/>
</kw>
<msg timestamp="20250214 14:49:51.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:47.235" endtime="20250214 14:49:51.435"/>
</kw>
<msg timestamp="20250214 14:49:51.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:47.235" endtime="20250214 14:49:51.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:49:51.435" endtime="20250214 14:49:51.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:51.436" level="INFO">Uploaded /tmp/1mb to /vol16002/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:49:51.436" endtime="20250214 14:49:51.436"/>
</kw>
<status status="PASS" starttime="20250214 14:49:47.234" endtime="20250214 14:49:51.436"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:49:51.437" level="INFO">${postfix} = 76366</msg>
<status status="PASS" starttime="20250214 14:49:51.437" endtime="20250214 14:49:51.437"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:49:51.438" level="INFO">${tmpfile} = /tmp/tempkey-76366</msg>
<status status="PASS" starttime="20250214 14:49:51.437" endtime="20250214 14:49:51.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:51.441" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/1mb /tmp/tempkey-76366 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:55.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:55.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:51.439" endtime="20250214 14:49:55.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:55.459" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:55.459" endtime="20250214 14:49:55.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:55.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:55.459" endtime="20250214 14:49:55.460"/>
</kw>
<status status="PASS" starttime="20250214 14:49:51.438" endtime="20250214 14:49:55.460"/>
</kw>
<msg timestamp="20250214 14:49:55.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:51.438" endtime="20250214 14:49:55.460"/>
</kw>
<status status="PASS" starttime="20250214 14:49:51.438" endtime="20250214 14:49:55.460"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:49:55.462" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-76366 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:55.465" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:49:55.460" endtime="20250214 14:49:55.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:55.469" level="INFO">Running command 'rm -f /tmp/tempkey-76366 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:55.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:55.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:49:55.467" endtime="20250214 14:49:55.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:55.473" level="INFO"/>
<status status="PASS" starttime="20250214 14:49:55.472" endtime="20250214 14:49:55.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:55.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:55.473" endtime="20250214 14:49:55.473"/>
</kw>
<status status="PASS" starttime="20250214 14:49:55.466" endtime="20250214 14:49:55.473"/>
</kw>
<msg timestamp="20250214 14:49:55.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:55.466" endtime="20250214 14:49:55.473"/>
</kw>
<status status="PASS" starttime="20250214 14:49:55.466" endtime="20250214 14:49:55.473"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:49:55.474" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:49:55.473" endtime="20250214 14:49:55.474"/>
</kw>
<msg timestamp="20250214 14:49:55.474" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:49:51.437" endtime="20250214 14:49:55.474"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:49:55.474" endtime="20250214 14:49:55.474"/>
</kw>
<status status="PASS" starttime="20250214 14:49:51.436" endtime="20250214 14:49:55.474"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:55.477" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:49:58.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:49:58.499" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:55.476" endtime="20250214 14:49:58.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:49:58.500" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:58.500" endtime="20250214 14:49:58.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:49:58.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:49:58.500" endtime="20250214 14:49:58.501"/>
</kw>
<status status="PASS" starttime="20250214 14:49:55.475" endtime="20250214 14:49:58.501"/>
</kw>
<msg timestamp="20250214 14:49:58.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:55.475" endtime="20250214 14:49:58.501"/>
</kw>
<msg timestamp="20250214 14:49:58.501" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:55.475" endtime="20250214 14:49:58.501"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:58.502" endtime="20250214 14:49:58.502"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:58.502" endtime="20250214 14:49:58.502"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:58.502" endtime="20250214 14:49:58.503"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:58.503" endtime="20250214 14:49:58.503"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:49:58.503" endtime="20250214 14:49:58.503"/>
</kw>
<status status="PASS" starttime="20250214 14:49:58.501" endtime="20250214 14:49:58.503"/>
</kw>
<status status="PASS" starttime="20250214 14:49:55.474" endtime="20250214 14:49:58.503"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:49:58.508" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:01.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:01.702" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:58.505" endtime="20250214 14:50:01.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:01.703" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:01.702" endtime="20250214 14:50:01.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:01.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:01.703" endtime="20250214 14:50:01.703"/>
</kw>
<status status="PASS" starttime="20250214 14:49:58.504" endtime="20250214 14:50:01.703"/>
</kw>
<msg timestamp="20250214 14:50:01.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:49:58.504" endtime="20250214 14:50:01.703"/>
</kw>
<msg timestamp="20250214 14:50:01.703" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:49:58.504" endtime="20250214 14:50:01.703"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:01.704" endtime="20250214 14:50:01.704"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:01.704" endtime="20250214 14:50:01.705"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:01.705" endtime="20250214 14:50:01.705"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:01.705" endtime="20250214 14:50:01.705"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:01.705" endtime="20250214 14:50:01.705"/>
</kw>
<status status="PASS" starttime="20250214 14:50:01.704" endtime="20250214 14:50:01.705"/>
</kw>
<status status="PASS" starttime="20250214 14:49:58.503" endtime="20250214 14:50:01.705"/>
</kw>
<status status="PASS" starttime="20250214 14:49:47.233" endtime="20250214 14:50:01.705"/>
</kw>
<status status="PASS" starttime="20250214 14:49:47.232" endtime="20250214 14:50:01.706"/>
</test>
<test id="s1-s3-t3" name="Create 2MB Key In EC Bucket" line="78">
<kw name="Create Key In EC Bucket">
<arg>2mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:01.707" level="INFO">${dir} = /vol16002/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 14:50:01.707" endtime="20250214 14:50:01.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:01.707" level="INFO">${key} = /vol16002/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20250214 14:50:01.707" endtime="20250214 14:50:01.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:01.707" level="INFO">${file} = /tmp/2mb</msg>
<status status="PASS" starttime="20250214 14:50:01.707" endtime="20250214 14:50:01.708"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:01.711" level="INFO">Running command 'ozone sh key put  /vol16002/ecbucket/dir/2mb /tmp/2mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:05.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:05.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:01.709" endtime="20250214 14:50:05.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:05.940" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:05.939" endtime="20250214 14:50:05.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:05.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:05.940" endtime="20250214 14:50:05.940"/>
</kw>
<status status="PASS" starttime="20250214 14:50:01.709" endtime="20250214 14:50:05.940"/>
</kw>
<msg timestamp="20250214 14:50:05.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:01.709" endtime="20250214 14:50:05.940"/>
</kw>
<msg timestamp="20250214 14:50:05.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:01.708" endtime="20250214 14:50:05.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:50:05.941" endtime="20250214 14:50:05.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:05.941" level="INFO">Uploaded /tmp/2mb to /vol16002/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20250214 14:50:05.941" endtime="20250214 14:50:05.941"/>
</kw>
<status status="PASS" starttime="20250214 14:50:01.708" endtime="20250214 14:50:05.941"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:50:05.942" level="INFO">${postfix} = 52108</msg>
<status status="PASS" starttime="20250214 14:50:05.942" endtime="20250214 14:50:05.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:05.943" level="INFO">${tmpfile} = /tmp/tempkey-52108</msg>
<status status="PASS" starttime="20250214 14:50:05.943" endtime="20250214 14:50:05.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:05.946" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/2mb /tmp/tempkey-52108 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:09.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:09.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:05.944" endtime="20250214 14:50:09.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:09.963" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:09.962" endtime="20250214 14:50:09.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:09.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:09.963" endtime="20250214 14:50:09.963"/>
</kw>
<status status="PASS" starttime="20250214 14:50:05.943" endtime="20250214 14:50:09.963"/>
</kw>
<msg timestamp="20250214 14:50:09.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:05.943" endtime="20250214 14:50:09.964"/>
</kw>
<status status="PASS" starttime="20250214 14:50:05.943" endtime="20250214 14:50:09.964"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:50:09.966" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-52108 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:09.970" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:50:09.964" endtime="20250214 14:50:09.970"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:09.973" level="INFO">Running command 'rm -f /tmp/tempkey-52108 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:09.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:09.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:09.971" endtime="20250214 14:50:09.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:09.978" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:09.977" endtime="20250214 14:50:09.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:09.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:09.978" endtime="20250214 14:50:09.978"/>
</kw>
<status status="PASS" starttime="20250214 14:50:09.971" endtime="20250214 14:50:09.978"/>
</kw>
<msg timestamp="20250214 14:50:09.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:09.971" endtime="20250214 14:50:09.978"/>
</kw>
<status status="PASS" starttime="20250214 14:50:09.970" endtime="20250214 14:50:09.978"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:50:09.979" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:50:09.979" endtime="20250214 14:50:09.979"/>
</kw>
<msg timestamp="20250214 14:50:09.979" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:50:05.942" endtime="20250214 14:50:09.979"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:50:09.979" endtime="20250214 14:50:09.979"/>
</kw>
<status status="PASS" starttime="20250214 14:50:05.941" endtime="20250214 14:50:09.979"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:09.982" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir/2mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:13.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:13.206" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:09.980" endtime="20250214 14:50:13.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:13.207" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:13.206" endtime="20250214 14:50:13.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:13.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:13.207" endtime="20250214 14:50:13.207"/>
</kw>
<status status="PASS" starttime="20250214 14:50:09.980" endtime="20250214 14:50:13.207"/>
</kw>
<msg timestamp="20250214 14:50:13.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:09.980" endtime="20250214 14:50:13.208"/>
</kw>
<msg timestamp="20250214 14:50:13.208" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:09.980" endtime="20250214 14:50:13.208"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:13.208" endtime="20250214 14:50:13.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:13.209" endtime="20250214 14:50:13.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:13.209" endtime="20250214 14:50:13.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:13.209" endtime="20250214 14:50:13.210"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:13.210" endtime="20250214 14:50:13.210"/>
</kw>
<status status="PASS" starttime="20250214 14:50:13.208" endtime="20250214 14:50:13.210"/>
</kw>
<status status="PASS" starttime="20250214 14:50:09.979" endtime="20250214 14:50:13.210"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:13.213" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:16.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:16.268" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:13.211" endtime="20250214 14:50:16.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:16.269" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:16.268" endtime="20250214 14:50:16.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:16.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:16.269" endtime="20250214 14:50:16.269"/>
</kw>
<status status="PASS" starttime="20250214 14:50:13.211" endtime="20250214 14:50:16.270"/>
</kw>
<msg timestamp="20250214 14:50:16.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:13.211" endtime="20250214 14:50:16.270"/>
</kw>
<msg timestamp="20250214 14:50:16.270" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:13.210" endtime="20250214 14:50:16.270"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:16.270" endtime="20250214 14:50:16.271"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:16.271" endtime="20250214 14:50:16.271"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:16.271" endtime="20250214 14:50:16.271"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:16.271" endtime="20250214 14:50:16.271"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:16.271" endtime="20250214 14:50:16.272"/>
</kw>
<status status="PASS" starttime="20250214 14:50:16.270" endtime="20250214 14:50:16.272"/>
</kw>
<status status="PASS" starttime="20250214 14:50:13.210" endtime="20250214 14:50:16.272"/>
</kw>
<status status="PASS" starttime="20250214 14:50:01.706" endtime="20250214 14:50:16.272"/>
</kw>
<status status="PASS" starttime="20250214 14:50:01.706" endtime="20250214 14:50:16.272"/>
</test>
<test id="s1-s3-t4" name="Create 3MB Key In EC Bucket" line="81">
<kw name="Create Key In EC Bucket">
<arg>3mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:16.273" level="INFO">${dir} = /vol16002/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 14:50:16.273" endtime="20250214 14:50:16.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:16.273" level="INFO">${key} = /vol16002/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20250214 14:50:16.273" endtime="20250214 14:50:16.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:16.274" level="INFO">${file} = /tmp/3mb</msg>
<status status="PASS" starttime="20250214 14:50:16.274" endtime="20250214 14:50:16.274"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:16.277" level="INFO">Running command 'ozone sh key put  /vol16002/ecbucket/dir/3mb /tmp/3mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:20.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:20.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:16.275" endtime="20250214 14:50:20.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:20.932" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:20.932" endtime="20250214 14:50:20.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:20.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:20.932" endtime="20250214 14:50:20.933"/>
</kw>
<status status="PASS" starttime="20250214 14:50:16.275" endtime="20250214 14:50:20.933"/>
</kw>
<msg timestamp="20250214 14:50:20.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:16.275" endtime="20250214 14:50:20.933"/>
</kw>
<msg timestamp="20250214 14:50:20.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:16.275" endtime="20250214 14:50:20.933"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:50:20.933" endtime="20250214 14:50:20.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:20.934" level="INFO">Uploaded /tmp/3mb to /vol16002/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20250214 14:50:20.933" endtime="20250214 14:50:20.934"/>
</kw>
<status status="PASS" starttime="20250214 14:50:16.274" endtime="20250214 14:50:20.934"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:50:20.935" level="INFO">${postfix} = 15731</msg>
<status status="PASS" starttime="20250214 14:50:20.935" endtime="20250214 14:50:20.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:20.935" level="INFO">${tmpfile} = /tmp/tempkey-15731</msg>
<status status="PASS" starttime="20250214 14:50:20.935" endtime="20250214 14:50:20.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:20.938" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/3mb /tmp/tempkey-15731 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:24.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:24.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:20.936" endtime="20250214 14:50:24.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:24.914" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:24.914" endtime="20250214 14:50:24.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:24.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:24.914" endtime="20250214 14:50:24.914"/>
</kw>
<status status="PASS" starttime="20250214 14:50:20.936" endtime="20250214 14:50:24.915"/>
</kw>
<msg timestamp="20250214 14:50:24.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:20.936" endtime="20250214 14:50:24.915"/>
</kw>
<status status="PASS" starttime="20250214 14:50:20.935" endtime="20250214 14:50:24.915"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:50:24.917" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-15731 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:24.922" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:50:24.915" endtime="20250214 14:50:24.922"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:24.925" level="INFO">Running command 'rm -f /tmp/tempkey-15731 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:24.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:24.923" endtime="20250214 14:50:24.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:24.929" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:24.929" endtime="20250214 14:50:24.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:24.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:24.929" endtime="20250214 14:50:24.930"/>
</kw>
<status status="PASS" starttime="20250214 14:50:24.923" endtime="20250214 14:50:24.930"/>
</kw>
<msg timestamp="20250214 14:50:24.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:24.922" endtime="20250214 14:50:24.930"/>
</kw>
<status status="PASS" starttime="20250214 14:50:24.922" endtime="20250214 14:50:24.930"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:50:24.930" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:50:24.930" endtime="20250214 14:50:24.930"/>
</kw>
<msg timestamp="20250214 14:50:24.931" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:50:20.934" endtime="20250214 14:50:24.931"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:50:24.931" endtime="20250214 14:50:24.931"/>
</kw>
<status status="PASS" starttime="20250214 14:50:20.934" endtime="20250214 14:50:24.931"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:24.934" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir/3mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:27.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:27.939" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:24.932" endtime="20250214 14:50:27.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:27.939" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:27.939" endtime="20250214 14:50:27.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:27.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:27.940" endtime="20250214 14:50:27.940"/>
</kw>
<status status="PASS" starttime="20250214 14:50:24.932" endtime="20250214 14:50:27.940"/>
</kw>
<msg timestamp="20250214 14:50:27.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:24.932" endtime="20250214 14:50:27.940"/>
</kw>
<msg timestamp="20250214 14:50:27.940" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:24.931" endtime="20250214 14:50:27.940"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:27.941" endtime="20250214 14:50:27.941"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:27.941" endtime="20250214 14:50:27.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:27.942" endtime="20250214 14:50:27.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:27.942" endtime="20250214 14:50:27.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:27.942" endtime="20250214 14:50:27.942"/>
</kw>
<status status="PASS" starttime="20250214 14:50:27.940" endtime="20250214 14:50:27.943"/>
</kw>
<status status="PASS" starttime="20250214 14:50:24.931" endtime="20250214 14:50:27.943"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:27.947" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:30.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:30.983" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:27.944" endtime="20250214 14:50:30.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:30.984" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:30.984" endtime="20250214 14:50:30.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:30.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:30.984" endtime="20250214 14:50:30.984"/>
</kw>
<status status="PASS" starttime="20250214 14:50:27.944" endtime="20250214 14:50:30.985"/>
</kw>
<msg timestamp="20250214 14:50:30.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:27.944" endtime="20250214 14:50:30.985"/>
</kw>
<msg timestamp="20250214 14:50:30.985" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:27.943" endtime="20250214 14:50:30.985"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:30.985" endtime="20250214 14:50:30.986"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:30.986" endtime="20250214 14:50:30.986"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:30.986" endtime="20250214 14:50:30.986"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:30.986" endtime="20250214 14:50:30.987"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:30.987" endtime="20250214 14:50:30.987"/>
</kw>
<status status="PASS" starttime="20250214 14:50:30.985" endtime="20250214 14:50:30.987"/>
</kw>
<status status="PASS" starttime="20250214 14:50:27.943" endtime="20250214 14:50:30.987"/>
</kw>
<status status="PASS" starttime="20250214 14:50:16.273" endtime="20250214 14:50:30.987"/>
</kw>
<status status="PASS" starttime="20250214 14:50:16.272" endtime="20250214 14:50:30.987"/>
</test>
<test id="s1-s3-t5" name="Create 100MB Key In EC Bucket" line="84">
<kw name="Create Key In EC Bucket">
<arg>100mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:30.988" level="INFO">${dir} = /vol16002/ecbucket/dir</msg>
<status status="PASS" starttime="20250214 14:50:30.988" endtime="20250214 14:50:30.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:30.989" level="INFO">${key} = /vol16002/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20250214 14:50:30.989" endtime="20250214 14:50:30.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:30.989" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20250214 14:50:30.989" endtime="20250214 14:50:30.989"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:30.993" level="INFO">Running command 'ozone sh key put  /vol16002/ecbucket/dir/100mb /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:37.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:37.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:30.991" endtime="20250214 14:50:37.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:37.738" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:37.738" endtime="20250214 14:50:37.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:37.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:37.739" endtime="20250214 14:50:37.739"/>
</kw>
<status status="PASS" starttime="20250214 14:50:30.990" endtime="20250214 14:50:37.739"/>
</kw>
<msg timestamp="20250214 14:50:37.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:30.990" endtime="20250214 14:50:37.739"/>
</kw>
<msg timestamp="20250214 14:50:37.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:30.990" endtime="20250214 14:50:37.739"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:50:37.739" endtime="20250214 14:50:37.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:37.740" level="INFO">Uploaded /tmp/100mb to /vol16002/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20250214 14:50:37.740" endtime="20250214 14:50:37.740"/>
</kw>
<status status="PASS" starttime="20250214 14:50:30.989" endtime="20250214 14:50:37.740"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:50:37.741" level="INFO">${postfix} = 93476</msg>
<status status="PASS" starttime="20250214 14:50:37.741" endtime="20250214 14:50:37.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:37.742" level="INFO">${tmpfile} = /tmp/tempkey-93476</msg>
<status status="PASS" starttime="20250214 14:50:37.741" endtime="20250214 14:50:37.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:37.745" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/100mb /tmp/tempkey-93476 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:43.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:43.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:37.742" endtime="20250214 14:50:43.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:43.479" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:43.479" endtime="20250214 14:50:43.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:43.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:43.480" endtime="20250214 14:50:43.480"/>
</kw>
<status status="PASS" starttime="20250214 14:50:37.742" endtime="20250214 14:50:43.480"/>
</kw>
<msg timestamp="20250214 14:50:43.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:37.742" endtime="20250214 14:50:43.480"/>
</kw>
<status status="PASS" starttime="20250214 14:50:37.742" endtime="20250214 14:50:43.480"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:50:43.482" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-93476 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:43.552" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:50:43.480" endtime="20250214 14:50:43.552"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:43.556" level="INFO">Running command 'rm -f /tmp/tempkey-93476 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:43.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:43.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:43.553" endtime="20250214 14:50:43.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:43.582" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:43.581" endtime="20250214 14:50:43.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:43.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:43.582" endtime="20250214 14:50:43.582"/>
</kw>
<status status="PASS" starttime="20250214 14:50:43.553" endtime="20250214 14:50:43.582"/>
</kw>
<msg timestamp="20250214 14:50:43.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:43.553" endtime="20250214 14:50:43.582"/>
</kw>
<status status="PASS" starttime="20250214 14:50:43.552" endtime="20250214 14:50:43.582"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:50:43.583" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:50:43.583" endtime="20250214 14:50:43.583"/>
</kw>
<msg timestamp="20250214 14:50:43.583" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:50:37.740" endtime="20250214 14:50:43.583"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:50:43.583" endtime="20250214 14:50:43.583"/>
</kw>
<status status="PASS" starttime="20250214 14:50:37.740" endtime="20250214 14:50:43.583"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:43.587" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir/100mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:46.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:46.554" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:43.585" endtime="20250214 14:50:46.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:46.555" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:46.555" endtime="20250214 14:50:46.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:46.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:46.555" endtime="20250214 14:50:46.556"/>
</kw>
<status status="PASS" starttime="20250214 14:50:43.584" endtime="20250214 14:50:46.556"/>
</kw>
<msg timestamp="20250214 14:50:46.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:43.584" endtime="20250214 14:50:46.556"/>
</kw>
<msg timestamp="20250214 14:50:46.556" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:43.584" endtime="20250214 14:50:46.556"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:46.557" endtime="20250214 14:50:46.557"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:46.557" endtime="20250214 14:50:46.557"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:46.557" endtime="20250214 14:50:46.557"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:46.557" endtime="20250214 14:50:46.558"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:46.558" endtime="20250214 14:50:46.558"/>
</kw>
<status status="PASS" starttime="20250214 14:50:46.556" endtime="20250214 14:50:46.558"/>
</kw>
<status status="PASS" starttime="20250214 14:50:43.583" endtime="20250214 14:50:46.558"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:46.562" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:49.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:49.510" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:46.559" endtime="20250214 14:50:49.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:49.511" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:49.511" endtime="20250214 14:50:49.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:49.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:49.511" endtime="20250214 14:50:49.512"/>
</kw>
<status status="PASS" starttime="20250214 14:50:46.559" endtime="20250214 14:50:49.512"/>
</kw>
<msg timestamp="20250214 14:50:49.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:46.559" endtime="20250214 14:50:49.512"/>
</kw>
<msg timestamp="20250214 14:50:49.512" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:50:46.558" endtime="20250214 14:50:49.512"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:49.513" endtime="20250214 14:50:49.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:49.513" endtime="20250214 14:50:49.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:49.513" endtime="20250214 14:50:49.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:49.513" endtime="20250214 14:50:49.514"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:50:49.514" endtime="20250214 14:50:49.514"/>
</kw>
<status status="PASS" starttime="20250214 14:50:49.512" endtime="20250214 14:50:49.514"/>
</kw>
<status status="PASS" starttime="20250214 14:50:46.558" endtime="20250214 14:50:49.514"/>
</kw>
<status status="PASS" starttime="20250214 14:50:30.988" endtime="20250214 14:50:49.514"/>
</kw>
<status status="PASS" starttime="20250214 14:50:30.987" endtime="20250214 14:50:49.514"/>
</test>
<test id="s1-s3-t6" name="Create Key in Default Bucket" line="87">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:49.515" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 14:50:49.515" endtime="20250214 14:50:49.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/default/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:49.516" level="INFO">${dir} = /vol16002/default/dir</msg>
<status status="PASS" starttime="20250214 14:50:49.515" endtime="20250214 14:50:49.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:49.516" level="INFO">${key} = /vol16002/default/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:50:49.516" endtime="20250214 14:50:49.516"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:49.516" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 14:50:49.516" endtime="20250214 14:50:49.516"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:49.520" level="INFO">Running command 'ozone sh key put  /vol16002/default/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:53.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:53.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:49.518" endtime="20250214 14:50:53.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:53.960" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:53.960" endtime="20250214 14:50:53.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:53.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:53.961" endtime="20250214 14:50:53.961"/>
</kw>
<status status="PASS" starttime="20250214 14:50:49.517" endtime="20250214 14:50:53.961"/>
</kw>
<msg timestamp="20250214 14:50:53.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:49.517" endtime="20250214 14:50:53.961"/>
</kw>
<msg timestamp="20250214 14:50:53.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:49.517" endtime="20250214 14:50:53.961"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:50:53.961" endtime="20250214 14:50:53.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:53.962" level="INFO">Uploaded /tmp/1mb to /vol16002/default/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:50:53.962" endtime="20250214 14:50:53.962"/>
</kw>
<status status="PASS" starttime="20250214 14:50:49.516" endtime="20250214 14:50:53.962"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:50:53.963" level="INFO">${postfix} = 40460</msg>
<status status="PASS" starttime="20250214 14:50:53.963" endtime="20250214 14:50:53.963"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:50:53.963" level="INFO">${tmpfile} = /tmp/tempkey-40460</msg>
<status status="PASS" starttime="20250214 14:50:53.963" endtime="20250214 14:50:53.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:53.967" level="INFO">Running command 'ozone sh key get /vol16002/default/dir/1mb /tmp/tempkey-40460 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:58.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:58.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:53.965" endtime="20250214 14:50:58.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:58.017" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:58.017" endtime="20250214 14:50:58.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:58.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:58.018" endtime="20250214 14:50:58.018"/>
</kw>
<status status="PASS" starttime="20250214 14:50:53.964" endtime="20250214 14:50:58.018"/>
</kw>
<msg timestamp="20250214 14:50:58.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:53.964" endtime="20250214 14:50:58.018"/>
</kw>
<status status="PASS" starttime="20250214 14:50:53.964" endtime="20250214 14:50:58.018"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:50:58.021" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-40460 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:58.024" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:50:58.018" endtime="20250214 14:50:58.024"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:58.027" level="INFO">Running command 'rm -f /tmp/tempkey-40460 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:50:58.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:50:58.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:50:58.025" endtime="20250214 14:50:58.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:50:58.032" level="INFO"/>
<status status="PASS" starttime="20250214 14:50:58.031" endtime="20250214 14:50:58.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:50:58.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:50:58.032" endtime="20250214 14:50:58.032"/>
</kw>
<status status="PASS" starttime="20250214 14:50:58.025" endtime="20250214 14:50:58.032"/>
</kw>
<msg timestamp="20250214 14:50:58.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:58.025" endtime="20250214 14:50:58.032"/>
</kw>
<status status="PASS" starttime="20250214 14:50:58.024" endtime="20250214 14:50:58.032"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:50:58.033" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:50:58.032" endtime="20250214 14:50:58.033"/>
</kw>
<msg timestamp="20250214 14:50:58.033" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:50:53.963" endtime="20250214 14:50:58.033"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:50:58.033" endtime="20250214 14:50:58.033"/>
</kw>
<status status="PASS" starttime="20250214 14:50:53.962" endtime="20250214 14:50:58.033"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:50:58.036" level="INFO">Running command 'ozone sh key info /vol16002/default/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:01.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:01.168" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:50:58.034" endtime="20250214 14:51:01.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:01.168" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:01.168" endtime="20250214 14:51:01.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:01.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:01.169" endtime="20250214 14:51:01.169"/>
</kw>
<status status="PASS" starttime="20250214 14:50:58.034" endtime="20250214 14:51:01.169"/>
</kw>
<msg timestamp="20250214 14:51:01.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:50:58.034" endtime="20250214 14:51:01.169"/>
</kw>
<msg timestamp="20250214 14:51:01.169" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:50:58.034" endtime="20250214 14:51:01.169"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:01.170" endtime="20250214 14:51:01.170"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:01.170" endtime="20250214 14:51:01.170"/>
</kw>
<status status="PASS" starttime="20250214 14:51:01.169" endtime="20250214 14:51:01.170"/>
</kw>
<status status="PASS" starttime="20250214 14:50:58.033" endtime="20250214 14:51:01.170"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:01.174" level="INFO">Running command 'ozone sh key info /vol16002/default/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:04.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:04.259" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:01.172" endtime="20250214 14:51:04.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:04.260" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:04.259" endtime="20250214 14:51:04.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:04.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:04.260" endtime="20250214 14:51:04.260"/>
</kw>
<status status="PASS" starttime="20250214 14:51:01.171" endtime="20250214 14:51:04.260"/>
</kw>
<msg timestamp="20250214 14:51:04.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:01.171" endtime="20250214 14:51:04.260"/>
</kw>
<msg timestamp="20250214 14:51:04.260" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:01.171" endtime="20250214 14:51:04.260"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:04.261" endtime="20250214 14:51:04.261"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:04.261" endtime="20250214 14:51:04.261"/>
</kw>
<status status="PASS" starttime="20250214 14:51:04.261" endtime="20250214 14:51:04.261"/>
</kw>
<status status="PASS" starttime="20250214 14:51:01.171" endtime="20250214 14:51:04.262"/>
</kw>
<status status="PASS" starttime="20250214 14:50:49.515" endtime="20250214 14:51:04.262"/>
</test>
<test id="s1-s3-t7" name="Create Key in Ratis Bucket" line="97">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:04.263" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 14:51:04.263" endtime="20250214 14:51:04.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:04.263" level="INFO">${dir} = /vol16002/ratis/dir</msg>
<status status="PASS" starttime="20250214 14:51:04.263" endtime="20250214 14:51:04.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:04.263" level="INFO">${key} = /vol16002/ratis/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:51:04.263" endtime="20250214 14:51:04.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:04.264" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 14:51:04.263" endtime="20250214 14:51:04.264"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:04.267" level="INFO">Running command 'ozone sh key put  /vol16002/ratis/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:08.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:08.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:04.265" endtime="20250214 14:51:08.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:08.545" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:08.544" endtime="20250214 14:51:08.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:08.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:08.545" endtime="20250214 14:51:08.545"/>
</kw>
<status status="PASS" starttime="20250214 14:51:04.265" endtime="20250214 14:51:08.545"/>
</kw>
<msg timestamp="20250214 14:51:08.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:04.265" endtime="20250214 14:51:08.545"/>
</kw>
<msg timestamp="20250214 14:51:08.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:04.264" endtime="20250214 14:51:08.546"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:08.546" endtime="20250214 14:51:08.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:08.546" level="INFO">Uploaded /tmp/1mb to /vol16002/ratis/dir/1mb</msg>
<status status="PASS" starttime="20250214 14:51:08.546" endtime="20250214 14:51:08.546"/>
</kw>
<status status="PASS" starttime="20250214 14:51:04.264" endtime="20250214 14:51:08.546"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:51:08.547" level="INFO">${postfix} = 66713</msg>
<status status="PASS" starttime="20250214 14:51:08.547" endtime="20250214 14:51:08.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:08.548" level="INFO">${tmpfile} = /tmp/tempkey-66713</msg>
<status status="PASS" starttime="20250214 14:51:08.548" endtime="20250214 14:51:08.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:08.551" level="INFO">Running command 'ozone sh key get /vol16002/ratis/dir/1mb /tmp/tempkey-66713 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:12.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:12.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:08.549" endtime="20250214 14:51:12.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:12.531" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:12.531" endtime="20250214 14:51:12.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:12.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:12.532" endtime="20250214 14:51:12.532"/>
</kw>
<status status="PASS" starttime="20250214 14:51:08.548" endtime="20250214 14:51:12.532"/>
</kw>
<msg timestamp="20250214 14:51:12.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:08.548" endtime="20250214 14:51:12.532"/>
</kw>
<status status="PASS" starttime="20250214 14:51:08.548" endtime="20250214 14:51:12.532"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:51:12.535" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-66713 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:12.538" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:51:12.532" endtime="20250214 14:51:12.538"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:12.541" level="INFO">Running command 'rm -f /tmp/tempkey-66713 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:12.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:12.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:12.539" endtime="20250214 14:51:12.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:12.545" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:12.545" endtime="20250214 14:51:12.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:12.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:12.546" endtime="20250214 14:51:12.546"/>
</kw>
<status status="PASS" starttime="20250214 14:51:12.539" endtime="20250214 14:51:12.546"/>
</kw>
<msg timestamp="20250214 14:51:12.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:12.539" endtime="20250214 14:51:12.546"/>
</kw>
<status status="PASS" starttime="20250214 14:51:12.538" endtime="20250214 14:51:12.546"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:51:12.547" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:51:12.546" endtime="20250214 14:51:12.547"/>
</kw>
<msg timestamp="20250214 14:51:12.547" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:51:08.547" endtime="20250214 14:51:12.547"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:51:12.547" endtime="20250214 14:51:12.547"/>
</kw>
<status status="PASS" starttime="20250214 14:51:08.546" endtime="20250214 14:51:12.547"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:12.550" level="INFO">Running command 'ozone sh key info /vol16002/ratis/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:15.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:15.538" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:12.548" endtime="20250214 14:51:15.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:15.539" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:15.539" endtime="20250214 14:51:15.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:15.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:15.539" endtime="20250214 14:51:15.539"/>
</kw>
<status status="PASS" starttime="20250214 14:51:12.548" endtime="20250214 14:51:15.540"/>
</kw>
<msg timestamp="20250214 14:51:15.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:12.548" endtime="20250214 14:51:15.540"/>
</kw>
<msg timestamp="20250214 14:51:15.540" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:12.547" endtime="20250214 14:51:15.540"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:15.540" endtime="20250214 14:51:15.541"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:15.541" endtime="20250214 14:51:15.541"/>
</kw>
<status status="PASS" starttime="20250214 14:51:15.540" endtime="20250214 14:51:15.541"/>
</kw>
<status status="PASS" starttime="20250214 14:51:12.547" endtime="20250214 14:51:15.541"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:15.544" level="INFO">Running command 'ozone sh key info /vol16002/ratis/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:18.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:18.445" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:15.542" endtime="20250214 14:51:18.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:18.446" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:18.445" endtime="20250214 14:51:18.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:18.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:18.446" endtime="20250214 14:51:18.446"/>
</kw>
<status status="PASS" starttime="20250214 14:51:15.542" endtime="20250214 14:51:18.446"/>
</kw>
<msg timestamp="20250214 14:51:18.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:15.542" endtime="20250214 14:51:18.446"/>
</kw>
<msg timestamp="20250214 14:51:18.446" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:15.541" endtime="20250214 14:51:18.446"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:18.447" endtime="20250214 14:51:18.448"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:18.448" endtime="20250214 14:51:18.448"/>
</kw>
<status status="PASS" starttime="20250214 14:51:18.447" endtime="20250214 14:51:18.448"/>
</kw>
<status status="PASS" starttime="20250214 14:51:15.541" endtime="20250214 14:51:18.448"/>
</kw>
<status status="PASS" starttime="20250214 14:51:04.262" endtime="20250214 14:51:18.448"/>
</test>
<test id="s1-s3-t8" name="Create Ratis Key In EC Bucket" line="107">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:18.449" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 14:51:18.449" endtime="20250214 14:51:18.449"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:18.449" level="INFO">${dir} = /vol16002/ecbucket/dir2</msg>
<status status="PASS" starttime="20250214 14:51:18.449" endtime="20250214 14:51:18.449"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}Ratis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:18.450" level="INFO">${key} = /vol16002/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20250214 14:51:18.449" endtime="20250214 14:51:18.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:18.450" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 14:51:18.450" endtime="20250214 14:51:18.450"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=THREE --type=RATIS</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:18.453" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /vol16002/ecbucket/dir2/1mbRatis /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:22.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:22.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:18.451" endtime="20250214 14:51:22.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:22.611" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:22.610" endtime="20250214 14:51:22.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:22.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:22.611" endtime="20250214 14:51:22.611"/>
</kw>
<status status="PASS" starttime="20250214 14:51:18.451" endtime="20250214 14:51:22.611"/>
</kw>
<msg timestamp="20250214 14:51:22.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:18.451" endtime="20250214 14:51:22.611"/>
</kw>
<msg timestamp="20250214 14:51:22.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:18.450" endtime="20250214 14:51:22.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:22.612" endtime="20250214 14:51:22.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:22.612" level="INFO">Uploaded /tmp/1mb to /vol16002/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20250214 14:51:22.612" endtime="20250214 14:51:22.612"/>
</kw>
<status status="PASS" starttime="20250214 14:51:18.450" endtime="20250214 14:51:22.612"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:51:22.613" level="INFO">${postfix} = 80902</msg>
<status status="PASS" starttime="20250214 14:51:22.613" endtime="20250214 14:51:22.613"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:22.614" level="INFO">${tmpfile} = /tmp/tempkey-80902</msg>
<status status="PASS" starttime="20250214 14:51:22.613" endtime="20250214 14:51:22.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:22.617" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir2/1mbRatis /tmp/tempkey-80902 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:26.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:26.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:22.615" endtime="20250214 14:51:26.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:26.588" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:26.587" endtime="20250214 14:51:26.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:26.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:26.588" endtime="20250214 14:51:26.588"/>
</kw>
<status status="PASS" starttime="20250214 14:51:22.614" endtime="20250214 14:51:26.588"/>
</kw>
<msg timestamp="20250214 14:51:26.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:22.614" endtime="20250214 14:51:26.589"/>
</kw>
<status status="PASS" starttime="20250214 14:51:22.614" endtime="20250214 14:51:26.589"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:51:26.591" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-80902 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:26.594" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:51:26.589" endtime="20250214 14:51:26.594"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:26.598" level="INFO">Running command 'rm -f /tmp/tempkey-80902 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:26.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:26.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:26.596" endtime="20250214 14:51:26.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:26.602" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:26.601" endtime="20250214 14:51:26.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:26.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:26.602" endtime="20250214 14:51:26.602"/>
</kw>
<status status="PASS" starttime="20250214 14:51:26.596" endtime="20250214 14:51:26.602"/>
</kw>
<msg timestamp="20250214 14:51:26.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:26.595" endtime="20250214 14:51:26.602"/>
</kw>
<status status="PASS" starttime="20250214 14:51:26.594" endtime="20250214 14:51:26.602"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:51:26.603" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:51:26.603" endtime="20250214 14:51:26.603"/>
</kw>
<msg timestamp="20250214 14:51:26.603" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:51:22.613" endtime="20250214 14:51:26.603"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:51:26.603" endtime="20250214 14:51:26.603"/>
</kw>
<status status="PASS" starttime="20250214 14:51:22.612" endtime="20250214 14:51:26.603"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:26.606" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir2/1mbRatis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:29.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:29.669" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:26.604" endtime="20250214 14:51:29.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:29.669" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:29.669" endtime="20250214 14:51:29.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:29.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:29.670" endtime="20250214 14:51:29.670"/>
</kw>
<status status="PASS" starttime="20250214 14:51:26.604" endtime="20250214 14:51:29.670"/>
</kw>
<msg timestamp="20250214 14:51:29.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:26.604" endtime="20250214 14:51:29.670"/>
</kw>
<msg timestamp="20250214 14:51:29.670" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:26.604" endtime="20250214 14:51:29.670"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:29.671" endtime="20250214 14:51:29.671"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:29.671" endtime="20250214 14:51:29.671"/>
</kw>
<status status="PASS" starttime="20250214 14:51:29.670" endtime="20250214 14:51:29.671"/>
</kw>
<status status="PASS" starttime="20250214 14:51:26.603" endtime="20250214 14:51:29.671"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:29.675" level="INFO">Running command 'ozone sh key info /vol16002/ecbucket/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:32.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:32.796" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:29.673" endtime="20250214 14:51:32.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:32.797" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:32.796" endtime="20250214 14:51:32.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:32.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:32.797" endtime="20250214 14:51:32.797"/>
</kw>
<status status="PASS" starttime="20250214 14:51:29.672" endtime="20250214 14:51:32.798"/>
</kw>
<msg timestamp="20250214 14:51:32.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:29.672" endtime="20250214 14:51:32.798"/>
</kw>
<msg timestamp="20250214 14:51:32.798" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:29.672" endtime="20250214 14:51:32.798"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:32.798" endtime="20250214 14:51:32.799"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:32.799" endtime="20250214 14:51:32.799"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:32.799" endtime="20250214 14:51:32.799"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:32.799" endtime="20250214 14:51:32.800"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:32.800" endtime="20250214 14:51:32.800"/>
</kw>
<status status="PASS" starttime="20250214 14:51:32.798" endtime="20250214 14:51:32.800"/>
</kw>
<status status="PASS" starttime="20250214 14:51:29.671" endtime="20250214 14:51:32.800"/>
</kw>
<status status="PASS" starttime="20250214 14:51:18.448" endtime="20250214 14:51:32.800"/>
</test>
<test id="s1-s3-t9" name="Create EC Key In Ratis Bucket" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:32.801" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20250214 14:51:32.801" endtime="20250214 14:51:32.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:32.801" level="INFO">${dir} = /vol16002/ratis/dir2</msg>
<status status="PASS" starttime="20250214 14:51:32.801" endtime="20250214 14:51:32.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}EC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:32.802" level="INFO">${key} = /vol16002/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20250214 14:51:32.801" endtime="20250214 14:51:32.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:32.802" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20250214 14:51:32.802" endtime="20250214 14:51:32.802"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=rs-3-2-1024k --type=EC</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:32.806" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /vol16002/ratis/dir2/1mbEC /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:37.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:37.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:32.803" endtime="20250214 14:51:37.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:37.095" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:37.095" endtime="20250214 14:51:37.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:37.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:37.095" endtime="20250214 14:51:37.095"/>
</kw>
<status status="PASS" starttime="20250214 14:51:32.803" endtime="20250214 14:51:37.096"/>
</kw>
<msg timestamp="20250214 14:51:37.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:32.803" endtime="20250214 14:51:37.096"/>
</kw>
<msg timestamp="20250214 14:51:37.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:32.803" endtime="20250214 14:51:37.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:37.096" endtime="20250214 14:51:37.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:37.097" level="INFO">Uploaded /tmp/1mb to /vol16002/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20250214 14:51:37.096" endtime="20250214 14:51:37.097"/>
</kw>
<status status="PASS" starttime="20250214 14:51:32.802" endtime="20250214 14:51:37.097"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:51:37.098" level="INFO">${postfix} = 42490</msg>
<status status="PASS" starttime="20250214 14:51:37.097" endtime="20250214 14:51:37.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:51:37.098" level="INFO">${tmpfile} = /tmp/tempkey-42490</msg>
<status status="PASS" starttime="20250214 14:51:37.098" endtime="20250214 14:51:37.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:37.101" level="INFO">Running command 'ozone sh key get /vol16002/ratis/dir2/1mbEC /tmp/tempkey-42490 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:41.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:41.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:37.099" endtime="20250214 14:51:41.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:41.066" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:41.066" endtime="20250214 14:51:41.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:41.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:41.066" endtime="20250214 14:51:41.067"/>
</kw>
<status status="PASS" starttime="20250214 14:51:37.099" endtime="20250214 14:51:41.067"/>
</kw>
<msg timestamp="20250214 14:51:41.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:37.098" endtime="20250214 14:51:41.067"/>
</kw>
<status status="PASS" starttime="20250214 14:51:37.098" endtime="20250214 14:51:41.067"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:51:41.069" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-42490 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:41.073" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:51:41.067" endtime="20250214 14:51:41.073"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:41.076" level="INFO">Running command 'rm -f /tmp/tempkey-42490 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:41.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:41.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:51:41.074" endtime="20250214 14:51:41.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:41.080" level="INFO"/>
<status status="PASS" starttime="20250214 14:51:41.080" endtime="20250214 14:51:41.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:41.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:41.080" endtime="20250214 14:51:41.081"/>
</kw>
<status status="PASS" starttime="20250214 14:51:41.074" endtime="20250214 14:51:41.081"/>
</kw>
<msg timestamp="20250214 14:51:41.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:41.074" endtime="20250214 14:51:41.081"/>
</kw>
<status status="PASS" starttime="20250214 14:51:41.073" endtime="20250214 14:51:41.081"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:51:41.081" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:51:41.081" endtime="20250214 14:51:41.081"/>
</kw>
<msg timestamp="20250214 14:51:41.082" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:51:37.097" endtime="20250214 14:51:41.082"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:51:41.082" endtime="20250214 14:51:41.082"/>
</kw>
<status status="PASS" starttime="20250214 14:51:37.097" endtime="20250214 14:51:41.082"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:41.085" level="INFO">Running command 'ozone sh key info /vol16002/ratis/dir2/1mbEC | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:44.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:44.222" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:41.083" endtime="20250214 14:51:44.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:44.223" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:44.222" endtime="20250214 14:51:44.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:44.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:44.223" endtime="20250214 14:51:44.223"/>
</kw>
<status status="PASS" starttime="20250214 14:51:41.083" endtime="20250214 14:51:44.223"/>
</kw>
<msg timestamp="20250214 14:51:44.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:41.083" endtime="20250214 14:51:44.224"/>
</kw>
<msg timestamp="20250214 14:51:44.224" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20250214 14:51:41.082" endtime="20250214 14:51:44.224"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:44.224" endtime="20250214 14:51:44.225"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:44.225" endtime="20250214 14:51:44.225"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:44.225" endtime="20250214 14:51:44.225"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:44.225" endtime="20250214 14:51:44.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:44.226" endtime="20250214 14:51:44.226"/>
</kw>
<status status="PASS" starttime="20250214 14:51:44.224" endtime="20250214 14:51:44.226"/>
</kw>
<status status="PASS" starttime="20250214 14:51:41.082" endtime="20250214 14:51:44.226"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:44.230" level="INFO">Running command 'ozone sh key info /vol16002/ratis/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:47.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:51:47.395" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:44.227" endtime="20250214 14:51:47.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:47.396" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:47.395" endtime="20250214 14:51:47.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:51:47.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:51:47.396" endtime="20250214 14:51:47.396"/>
</kw>
<status status="PASS" starttime="20250214 14:51:44.227" endtime="20250214 14:51:47.396"/>
</kw>
<msg timestamp="20250214 14:51:47.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:51:44.227" endtime="20250214 14:51:47.397"/>
</kw>
<msg timestamp="20250214 14:51:47.397" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20250214 14:51:44.227" endtime="20250214 14:51:47.397"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:47.397" endtime="20250214 14:51:47.397"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250214 14:51:47.398" endtime="20250214 14:51:47.398"/>
</kw>
<status status="PASS" starttime="20250214 14:51:47.397" endtime="20250214 14:51:47.398"/>
</kw>
<status status="PASS" starttime="20250214 14:51:44.226" endtime="20250214 14:51:47.398"/>
</kw>
<status status="PASS" starttime="20250214 14:51:32.800" endtime="20250214 14:51:47.398"/>
</test>
<test id="s1-s3-t10" name="Test Invalid Replication Parameters" line="127">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:47.401" level="INFO">Running command 'ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /vol16002/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:50.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:51:50.245" level="INFO">${output} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:47.399" endtime="20250214 14:51:50.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:50.246" level="INFO">rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:50.245" endtime="20250214 14:51:50.246"/>
</kw>
<msg timestamp="20250214 14:51:50.246" level="INFO">${message} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:47.399" endtime="20250214 14:51:50.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:50.246" endtime="20250214 14:51:50.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-3-2-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:50.246" endtime="20250214 14:51:50.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:50.247" endtime="20250214 14:51:50.247"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-6-3-1024k --type=RATIS /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:50.250" level="INFO">Running command 'ozone sh key put --replication=rs-6-3-1024k --type=RATIS /vol16002/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:53.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:51:53.050" level="INFO">${output} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:50.248" endtime="20250214 14:51:53.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:53.051" level="INFO">rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:53.051" endtime="20250214 14:51:53.051"/>
</kw>
<msg timestamp="20250214 14:51:53.051" level="INFO">${message} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20250214 14:51:50.247" endtime="20250214 14:51:53.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:53.052" endtime="20250214 14:51:53.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-6-3-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:53.052" endtime="20250214 14:51:53.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:53.052" endtime="20250214 14:51:53.052"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:53.055" level="INFO">Running command 'ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /vol16002/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:54.267" level="INFO">${rc} = 2</msg>
<msg timestamp="20250214 14:51:54.267" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 14:51:53.053" endtime="20250214 14:51:54.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:54.267" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: fso (for file system
                             optimized buckets FILE_SYSTEM_OPTIMIZED), obs (for
                             object store optimized OBJECT_STORE) and legacy
                             (LEGACY is Deprecated)
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20250214 14:51:54.267" endtime="20250214 14:51:54.268"/>
</kw>
<msg timestamp="20250214 14:51:54.268" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 14:51:53.052" endtime="20250214 14:51:54.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:54.268" endtime="20250214 14:51:54.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:54.268" endtime="20250214 14:51:54.268"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:54.271" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /vol16002/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:55.468" level="INFO">${rc} = 2</msg>
<msg timestamp="20250214 14:51:55.468" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 14:51:54.269" endtime="20250214 14:51:55.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:55.469" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20250214 14:51:55.469" endtime="20250214 14:51:55.469"/>
</kw>
<msg timestamp="20250214 14:51:55.470" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20250214 14:51:54.268" endtime="20250214 14:51:55.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:55.470" endtime="20250214 14:51:55.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:55.470" endtime="20250214 14:51:55.470"/>
</kw>
<status status="PASS" starttime="20250214 14:51:47.398" endtime="20250214 14:51:55.470"/>
</test>
<test id="s1-s3-t11" name="Invalid Replication With Misconfigured Client" line="143">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /${VOLUME}/invalid</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:55.474" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /vol16002/invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:51:58.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:51:58.138" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 14:51:55.472" endtime="20250214 14:51:58.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:51:58.139" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 14:51:58.139" endtime="20250214 14:51:58.139"/>
</kw>
<msg timestamp="20250214 14:51:58.139" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20250214 14:51:55.471" endtime="20250214 14:51:58.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:51:58.139" endtime="20250214 14:51:58.140"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /${VOLUME}/ecbucket/invalid /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:51:58.142" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /vol16002/ecbucket/invalid /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:01.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20250214 14:52:01.010" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 14:51:58.140" endtime="20250214 14:52:01.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:01.011" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 14:52:01.010" endtime="20250214 14:52:01.011"/>
</kw>
<msg timestamp="20250214 14:52:01.011" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20250214 14:51:58.140" endtime="20250214 14:52:01.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:52:01.011" endtime="20250214 14:52:01.011"/>
</kw>
<status status="PASS" starttime="20250214 14:51:55.471" endtime="20250214 14:52:01.012"/>
</test>
<test id="s1-s3-t12" name="Check disk usage after create a file which uses EC replication type" line="152">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:01.013" level="INFO">${vol} = zbgrojfn</msg>
<status status="PASS" starttime="20250214 14:52:01.012" endtime="20250214 14:52:01.013"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:01.013" level="INFO">${bucket} = ohajiiia</msg>
<status status="PASS" starttime="20250214 14:52:01.013" endtime="20250214 14:52:01.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:01.016" level="INFO">Running command 'ozone sh volume create /zbgrojfn 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:03.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:03.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:01.014" endtime="20250214 14:52:03.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:03.854" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:03.854" endtime="20250214 14:52:03.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:03.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:03.854" endtime="20250214 14:52:03.855"/>
</kw>
<status status="PASS" starttime="20250214 14:52:01.014" endtime="20250214 14:52:03.855"/>
</kw>
<msg timestamp="20250214 14:52:03.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:01.013" endtime="20250214 14:52:03.855"/>
</kw>
<status status="PASS" starttime="20250214 14:52:01.013" endtime="20250214 14:52:03.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type EC --replication rs-3-2-1024k</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:03.858" level="INFO">Running command 'ozone sh bucket create /zbgrojfn/ohajiiia --type EC --replication rs-3-2-1024k 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:06.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:06.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:03.856" endtime="20250214 14:52:06.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:06.715" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:06.715" endtime="20250214 14:52:06.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:06.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:06.716" endtime="20250214 14:52:06.716"/>
</kw>
<status status="PASS" starttime="20250214 14:52:03.856" endtime="20250214 14:52:06.716"/>
</kw>
<msg timestamp="20250214 14:52:06.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:03.856" endtime="20250214 14:52:06.716"/>
</kw>
<status status="PASS" starttime="20250214 14:52:03.855" endtime="20250214 14:52:06.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE2.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:06.720" level="INFO">Running command 'ozone fs -put NOTICE.txt /zbgrojfn/ohajiiia/PUTFILE2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:11.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:11.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:06.718" endtime="20250214 14:52:11.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:11.115" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:11.115" endtime="20250214 14:52:11.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:11.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:11.115" endtime="20250214 14:52:11.116"/>
</kw>
<status status="PASS" starttime="20250214 14:52:06.717" endtime="20250214 14:52:11.116"/>
</kw>
<msg timestamp="20250214 14:52:11.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:06.717" endtime="20250214 14:52:11.116"/>
</kw>
<status status="PASS" starttime="20250214 14:52:06.717" endtime="20250214 14:52:11.116"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:11.119" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:11.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:11.123" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20250214 14:52:11.117" endtime="20250214 14:52:11.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:11.123" level="INFO">17289</msg>
<status status="PASS" starttime="20250214 14:52:11.123" endtime="20250214 14:52:11.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:11.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:11.123" endtime="20250214 14:52:11.124"/>
</kw>
<status status="PASS" starttime="20250214 14:52:11.117" endtime="20250214 14:52:11.124"/>
</kw>
<msg timestamp="20250214 14:52:11.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:11.116" endtime="20250214 14:52:11.124"/>
</kw>
<msg timestamp="20250214 14:52:11.124" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20250214 14:52:11.116" endtime="20250214 14:52:11.124"/>
</kw>
<kw name="Get Disk Usage of File with EC RS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1024</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.125" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20250214 14:52:11.125" endtime="20250214 14:52:11.125"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${dataStripeSize}</var>
<arg>${dataChunkCount} * ${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.125" level="INFO">${dataStripeSize} = 3221225472</msg>
<status status="PASS" starttime="20250214 14:52:11.125" endtime="20250214 14:52:11.125"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fileLength}/${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.126" level="INFO">${fullStripes} = 5.367211997509003e-06</msg>
<status status="PASS" starttime="20250214 14:52:11.125" endtime="20250214 14:52:11.126"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 14:52:11.126" level="INFO">${fullStripes} = 0</msg>
<status status="PASS" starttime="20250214 14:52:11.126" endtime="20250214 14:52:11.126"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 14:52:11.126" level="INFO">${fullStripes} = 0.0</msg>
<status status="PASS" starttime="20250214 14:52:11.126" endtime="20250214 14:52:11.126"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${fileLength} % ${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.127" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 14:52:11.126" endtime="20250214 14:52:11.127"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 14:52:11.127" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20250214 14:52:11.127" endtime="20250214 14:52:11.127"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${partialFirstChunk}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 14:52:11.127" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 14:52:11.127" endtime="20250214 14:52:11.127"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${partialFirstChunkOptions}</var>
<arg>${ecChunkSize}</arg>
<arg>${partialFirstChunk}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 14:52:11.128" level="INFO">${partialFirstChunkOptions} = [1048576, 17289]</msg>
<status status="PASS" starttime="20250214 14:52:11.127" endtime="20250214 14:52:11.128"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>min(${partialFirstChunkOptions})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.128" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20250214 14:52:11.128" endtime="20250214 14:52:11.128"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${replicationOverhead}</var>
<arg>${fullStripes} * 2 * 1024 * 1024 + ${partialFirstChunk} * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.129" level="INFO">${replicationOverhead} = 34578.0</msg>
<status status="PASS" starttime="20250214 14:52:11.128" endtime="20250214 14:52:11.129"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} + ${replicationOverhead}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250214 14:52:11.129" level="INFO">${expectedDiskUsage} = 51867.0</msg>
<status status="PASS" starttime="20250214 14:52:11.129" endtime="20250214 14:52:11.129"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20250214 14:52:11.129" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 14:52:11.129" endtime="20250214 14:52:11.129"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250214 14:52:11.130" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 14:52:11.129" endtime="20250214 14:52:11.130"/>
</kw>
<msg timestamp="20250214 14:52:11.130" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20250214 14:52:11.124" endtime="20250214 14:52:11.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:11.133" level="INFO">Running command 'ozone fs -du /zbgrojfn/ohajiiia 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:14.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:14.196" level="INFO">${output} = 17289  51867  /zbgrojfn/ohajiiia/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 14:52:11.131" endtime="20250214 14:52:14.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:14.197" level="INFO">17289  51867  /zbgrojfn/ohajiiia/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 14:52:14.197" endtime="20250214 14:52:14.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:14.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:14.197" endtime="20250214 14:52:14.198"/>
</kw>
<status status="PASS" starttime="20250214 14:52:11.130" endtime="20250214 14:52:14.198"/>
</kw>
<msg timestamp="20250214 14:52:14.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:11.130" endtime="20250214 14:52:14.198"/>
</kw>
<msg timestamp="20250214 14:52:14.198" level="INFO">${result} = 17289  51867  /zbgrojfn/ohajiiia/PUTFILE2.txt</msg>
<status status="PASS" starttime="20250214 14:52:11.130" endtime="20250214 14:52:14.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE2.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:52:14.198" endtime="20250214 14:52:14.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:52:14.198" endtime="20250214 14:52:14.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250214 14:52:14.199" endtime="20250214 14:52:14.199"/>
</kw>
<status status="PASS" starttime="20250214 14:52:01.012" endtime="20250214 14:52:14.199"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20250214 14:49:26.748" endtime="20250214 14:52:14.200"/>
</suite>
<suite id="s1-s4" name="read-4-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s4-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:18.153" level="INFO">${postfix} = 17668</msg>
<status status="PASS" starttime="20250214 14:52:18.153" endtime="20250214 14:52:18.153"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:52:18.153" level="INFO">${tmpfile} = /tmp/tempkey-17668</msg>
<status status="PASS" starttime="20250214 14:52:18.153" endtime="20250214 14:52:18.153"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:18.156" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/1mb /tmp/tempkey-17668 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:22.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:22.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:18.154" endtime="20250214 14:52:22.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:22.266" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:22.266" endtime="20250214 14:52:22.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:22.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:22.266" endtime="20250214 14:52:22.266"/>
</kw>
<status status="PASS" starttime="20250214 14:52:18.154" endtime="20250214 14:52:22.267"/>
</kw>
<msg timestamp="20250214 14:52:22.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:18.154" endtime="20250214 14:52:22.267"/>
</kw>
<status status="PASS" starttime="20250214 14:52:18.153" endtime="20250214 14:52:22.267"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:52:22.269" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-17668 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:22.273" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:52:22.267" endtime="20250214 14:52:22.273"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:22.276" level="INFO">Running command 'rm -f /tmp/tempkey-17668 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:22.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:22.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:22.274" endtime="20250214 14:52:22.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:22.280" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:22.280" endtime="20250214 14:52:22.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:22.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:22.280" endtime="20250214 14:52:22.281"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.274" endtime="20250214 14:52:22.281"/>
</kw>
<msg timestamp="20250214 14:52:22.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:22.274" endtime="20250214 14:52:22.281"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.273" endtime="20250214 14:52:22.281"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:52:22.281" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:52:22.281" endtime="20250214 14:52:22.281"/>
</kw>
<msg timestamp="20250214 14:52:22.282" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:52:18.152" endtime="20250214 14:52:22.282"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:52:22.282" endtime="20250214 14:52:22.282"/>
</kw>
<status status="PASS" starttime="20250214 14:52:18.152" endtime="20250214 14:52:22.282"/>
</kw>
<status status="PASS" starttime="20250214 14:52:18.151" endtime="20250214 14:52:22.282"/>
</test>
<test id="s1-s4-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:22.284" level="INFO">${postfix} = 99210</msg>
<status status="PASS" starttime="20250214 14:52:22.283" endtime="20250214 14:52:22.284"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:52:22.284" level="INFO">${tmpfile} = /tmp/tempkey-99210</msg>
<status status="PASS" starttime="20250214 14:52:22.284" endtime="20250214 14:52:22.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:22.287" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/2mb /tmp/tempkey-99210 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:26.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:26.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:22.285" endtime="20250214 14:52:26.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:26.390" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:26.389" endtime="20250214 14:52:26.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:26.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:26.390" endtime="20250214 14:52:26.390"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.285" endtime="20250214 14:52:26.390"/>
</kw>
<msg timestamp="20250214 14:52:26.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:22.285" endtime="20250214 14:52:26.390"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.284" endtime="20250214 14:52:26.391"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:52:26.393" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-99210 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:26.397" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:52:26.391" endtime="20250214 14:52:26.397"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:26.401" level="INFO">Running command 'rm -f /tmp/tempkey-99210 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:26.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:26.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:26.399" endtime="20250214 14:52:26.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:26.405" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:26.405" endtime="20250214 14:52:26.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:26.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:26.405" endtime="20250214 14:52:26.406"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.398" endtime="20250214 14:52:26.406"/>
</kw>
<msg timestamp="20250214 14:52:26.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:26.398" endtime="20250214 14:52:26.406"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.397" endtime="20250214 14:52:26.406"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:52:26.406" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:52:26.406" endtime="20250214 14:52:26.406"/>
</kw>
<msg timestamp="20250214 14:52:26.407" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:52:22.283" endtime="20250214 14:52:26.407"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:52:26.407" endtime="20250214 14:52:26.407"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.283" endtime="20250214 14:52:26.407"/>
</kw>
<status status="PASS" starttime="20250214 14:52:22.282" endtime="20250214 14:52:26.407"/>
</test>
<test id="s1-s4-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:26.409" level="INFO">${postfix} = 54297</msg>
<status status="PASS" starttime="20250214 14:52:26.408" endtime="20250214 14:52:26.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:52:26.409" level="INFO">${tmpfile} = /tmp/tempkey-54297</msg>
<status status="PASS" starttime="20250214 14:52:26.409" endtime="20250214 14:52:26.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:26.412" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/3mb /tmp/tempkey-54297 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:30.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:30.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:26.410" endtime="20250214 14:52:30.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:30.616" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:30.615" endtime="20250214 14:52:30.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:30.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:30.616" endtime="20250214 14:52:30.616"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.409" endtime="20250214 14:52:30.616"/>
</kw>
<msg timestamp="20250214 14:52:30.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:26.409" endtime="20250214 14:52:30.616"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.409" endtime="20250214 14:52:30.617"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:52:30.619" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-54297 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:30.624" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:52:30.617" endtime="20250214 14:52:30.624"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:30.627" level="INFO">Running command 'rm -f /tmp/tempkey-54297 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:52:30.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:52:30.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:30.625" endtime="20250214 14:52:30.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:52:30.632" level="INFO"/>
<status status="PASS" starttime="20250214 14:52:30.631" endtime="20250214 14:52:30.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:52:30.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:52:30.632" endtime="20250214 14:52:30.632"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.625" endtime="20250214 14:52:30.632"/>
</kw>
<msg timestamp="20250214 14:52:30.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:30.625" endtime="20250214 14:52:30.632"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.624" endtime="20250214 14:52:30.632"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:52:30.633" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:52:30.632" endtime="20250214 14:52:30.633"/>
</kw>
<msg timestamp="20250214 14:52:30.633" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:52:26.408" endtime="20250214 14:52:30.633"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:52:30.633" endtime="20250214 14:52:30.633"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.408" endtime="20250214 14:52:30.633"/>
</kw>
<status status="PASS" starttime="20250214 14:52:26.407" endtime="20250214 14:52:30.633"/>
</test>
<test id="s1-s4-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:52:30.635" level="INFO">${postfix} = 55432</msg>
<status status="PASS" starttime="20250214 14:52:30.635" endtime="20250214 14:52:30.635"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:52:30.635" level="INFO">${tmpfile} = /tmp/tempkey-55432</msg>
<status status="PASS" starttime="20250214 14:52:30.635" endtime="20250214 14:52:30.635"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:52:30.638" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/100mb /tmp/tempkey-55432 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:53:58.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:53:58.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:52:30.636" endtime="20250214 14:53:58.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:53:58.428" level="INFO"/>
<status status="PASS" starttime="20250214 14:53:58.428" endtime="20250214 14:53:58.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:53:58.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:53:58.428" endtime="20250214 14:53:58.429"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.636" endtime="20250214 14:53:58.429"/>
</kw>
<msg timestamp="20250214 14:53:58.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:52:30.635" endtime="20250214 14:53:58.429"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.635" endtime="20250214 14:53:58.429"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:53:58.431" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-55432 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:53:58.502" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:53:58.429" endtime="20250214 14:53:58.502"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:53:58.506" level="INFO">Running command 'rm -f /tmp/tempkey-55432 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:53:58.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:53:58.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:53:58.504" endtime="20250214 14:53:58.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:53:58.531" level="INFO"/>
<status status="PASS" starttime="20250214 14:53:58.530" endtime="20250214 14:53:58.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:53:58.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:53:58.531" endtime="20250214 14:53:58.531"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.504" endtime="20250214 14:53:58.531"/>
</kw>
<msg timestamp="20250214 14:53:58.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:53:58.503" endtime="20250214 14:53:58.532"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.503" endtime="20250214 14:53:58.532"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:53:58.532" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:53:58.532" endtime="20250214 14:53:58.532"/>
</kw>
<msg timestamp="20250214 14:53:58.532" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:52:30.634" endtime="20250214 14:53:58.532"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:53:58.532" endtime="20250214 14:53:58.532"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.634" endtime="20250214 14:53:58.533"/>
</kw>
<status status="PASS" starttime="20250214 14:52:30.634" endtime="20250214 14:53:58.533"/>
</test>
<test id="s1-s4-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:53:58.534" level="INFO">${postfix} = 97794</msg>
<status status="PASS" starttime="20250214 14:53:58.534" endtime="20250214 14:53:58.534"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:53:58.535" level="INFO">${tmpfile} = /tmp/tempkey-97794</msg>
<status status="PASS" starttime="20250214 14:53:58.534" endtime="20250214 14:53:58.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:53:58.538" level="INFO">Running command 'ozone sh key get /vol16002/ratis/dir2/1mbEC /tmp/tempkey-97794 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:02.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:02.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:53:58.536" endtime="20250214 14:54:02.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:02.665" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:02.664" endtime="20250214 14:54:02.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:02.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:02.665" endtime="20250214 14:54:02.665"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.536" endtime="20250214 14:54:02.665"/>
</kw>
<msg timestamp="20250214 14:54:02.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:53:58.535" endtime="20250214 14:54:02.665"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.535" endtime="20250214 14:54:02.665"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:54:02.668" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-97794 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:02.671" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:54:02.665" endtime="20250214 14:54:02.672"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:02.676" level="INFO">Running command 'rm -f /tmp/tempkey-97794 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:02.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:02.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:02.673" endtime="20250214 14:54:02.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:02.680" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:02.680" endtime="20250214 14:54:02.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:02.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:02.680" endtime="20250214 14:54:02.681"/>
</kw>
<status status="PASS" starttime="20250214 14:54:02.673" endtime="20250214 14:54:02.681"/>
</kw>
<msg timestamp="20250214 14:54:02.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:02.673" endtime="20250214 14:54:02.681"/>
</kw>
<status status="PASS" starttime="20250214 14:54:02.672" endtime="20250214 14:54:02.681"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:54:02.681" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:54:02.681" endtime="20250214 14:54:02.681"/>
</kw>
<msg timestamp="20250214 14:54:02.681" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:53:58.534" endtime="20250214 14:54:02.681"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:54:02.682" endtime="20250214 14:54:02.682"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.533" endtime="20250214 14:54:02.682"/>
</kw>
<status status="PASS" starttime="20250214 14:53:58.533" endtime="20250214 14:54:02.682"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20250214 14:52:18.115" endtime="20250214 14:54:02.683"/>
</suite>
<suite id="s1-s5" name="read-3-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s5-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:54:06.705" level="INFO">${postfix} = 51612</msg>
<status status="PASS" starttime="20250214 14:54:06.704" endtime="20250214 14:54:06.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:54:06.705" level="INFO">${tmpfile} = /tmp/tempkey-51612</msg>
<status status="PASS" starttime="20250214 14:54:06.705" endtime="20250214 14:54:06.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:06.708" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/1mb /tmp/tempkey-51612 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:10.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:10.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:06.706" endtime="20250214 14:54:10.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:10.903" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:10.902" endtime="20250214 14:54:10.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:10.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:10.903" endtime="20250214 14:54:10.903"/>
</kw>
<status status="PASS" starttime="20250214 14:54:06.705" endtime="20250214 14:54:10.903"/>
</kw>
<msg timestamp="20250214 14:54:10.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:06.705" endtime="20250214 14:54:10.903"/>
</kw>
<status status="PASS" starttime="20250214 14:54:06.705" endtime="20250214 14:54:10.903"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:54:10.906" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-51612 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:10.909" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:54:10.903" endtime="20250214 14:54:10.909"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:10.912" level="INFO">Running command 'rm -f /tmp/tempkey-51612 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:10.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:10.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:10.910" endtime="20250214 14:54:10.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:10.917" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:10.916" endtime="20250214 14:54:10.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:10.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:10.917" endtime="20250214 14:54:10.917"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.910" endtime="20250214 14:54:10.917"/>
</kw>
<msg timestamp="20250214 14:54:10.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:10.910" endtime="20250214 14:54:10.917"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.909" endtime="20250214 14:54:10.917"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:54:10.918" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:54:10.918" endtime="20250214 14:54:10.918"/>
</kw>
<msg timestamp="20250214 14:54:10.918" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:54:06.704" endtime="20250214 14:54:10.918"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:54:10.918" endtime="20250214 14:54:10.918"/>
</kw>
<status status="PASS" starttime="20250214 14:54:06.704" endtime="20250214 14:54:10.918"/>
</kw>
<status status="PASS" starttime="20250214 14:54:06.703" endtime="20250214 14:54:10.918"/>
</test>
<test id="s1-s5-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:54:10.920" level="INFO">${postfix} = 43015</msg>
<status status="PASS" starttime="20250214 14:54:10.920" endtime="20250214 14:54:10.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:54:10.920" level="INFO">${tmpfile} = /tmp/tempkey-43015</msg>
<status status="PASS" starttime="20250214 14:54:10.920" endtime="20250214 14:54:10.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:10.923" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/2mb /tmp/tempkey-43015 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:51.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:51.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:10.921" endtime="20250214 14:54:51.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:51.439" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:51.438" endtime="20250214 14:54:51.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:51.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:51.439" endtime="20250214 14:54:51.439"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.921" endtime="20250214 14:54:51.439"/>
</kw>
<msg timestamp="20250214 14:54:51.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:10.921" endtime="20250214 14:54:51.439"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.920" endtime="20250214 14:54:51.439"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:54:51.442" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-43015 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:51.446" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:54:51.439" endtime="20250214 14:54:51.446"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:51.449" level="INFO">Running command 'rm -f /tmp/tempkey-43015 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:54:51.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:54:51.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:51.447" endtime="20250214 14:54:51.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:54:51.453" level="INFO"/>
<status status="PASS" starttime="20250214 14:54:51.453" endtime="20250214 14:54:51.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:54:51.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:54:51.453" endtime="20250214 14:54:51.453"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.447" endtime="20250214 14:54:51.453"/>
</kw>
<msg timestamp="20250214 14:54:51.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:51.446" endtime="20250214 14:54:51.454"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.446" endtime="20250214 14:54:51.454"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:54:51.454" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:54:51.454" endtime="20250214 14:54:51.454"/>
</kw>
<msg timestamp="20250214 14:54:51.454" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:54:10.919" endtime="20250214 14:54:51.454"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:54:51.454" endtime="20250214 14:54:51.454"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.919" endtime="20250214 14:54:51.455"/>
</kw>
<status status="PASS" starttime="20250214 14:54:10.919" endtime="20250214 14:54:51.455"/>
</test>
<test id="s1-s5-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:54:51.456" level="INFO">${postfix} = 49025</msg>
<status status="PASS" starttime="20250214 14:54:51.456" endtime="20250214 14:54:51.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:54:51.457" level="INFO">${tmpfile} = /tmp/tempkey-49025</msg>
<status status="PASS" starttime="20250214 14:54:51.456" endtime="20250214 14:54:51.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:54:51.459" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/3mb /tmp/tempkey-49025 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:05.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:05.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:54:51.458" endtime="20250214 14:55:05.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:05.161" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:05.161" endtime="20250214 14:55:05.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:05.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:05.161" endtime="20250214 14:55:05.161"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.457" endtime="20250214 14:55:05.162"/>
</kw>
<msg timestamp="20250214 14:55:05.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:54:51.457" endtime="20250214 14:55:05.162"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.457" endtime="20250214 14:55:05.162"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:55:05.164" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-49025 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:05.169" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:55:05.162" endtime="20250214 14:55:05.169"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:05.172" level="INFO">Running command 'rm -f /tmp/tempkey-49025 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:05.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:05.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:55:05.170" endtime="20250214 14:55:05.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:05.177" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:05.176" endtime="20250214 14:55:05.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:05.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:05.177" endtime="20250214 14:55:05.177"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.170" endtime="20250214 14:55:05.177"/>
</kw>
<msg timestamp="20250214 14:55:05.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:05.170" endtime="20250214 14:55:05.177"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.169" endtime="20250214 14:55:05.177"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:55:05.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:55:05.177" endtime="20250214 14:55:05.178"/>
</kw>
<msg timestamp="20250214 14:55:05.178" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:54:51.456" endtime="20250214 14:55:05.178"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:55:05.178" endtime="20250214 14:55:05.178"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.455" endtime="20250214 14:55:05.178"/>
</kw>
<status status="PASS" starttime="20250214 14:54:51.455" endtime="20250214 14:55:05.178"/>
</test>
<test id="s1-s5-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:55:05.180" level="INFO">${postfix} = 42743</msg>
<status status="PASS" starttime="20250214 14:55:05.180" endtime="20250214 14:55:05.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:55:05.180" level="INFO">${tmpfile} = /tmp/tempkey-42743</msg>
<status status="PASS" starttime="20250214 14:55:05.180" endtime="20250214 14:55:05.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:05.183" level="INFO">Running command 'ozone sh key get /vol16002/ecbucket/dir/100mb /tmp/tempkey-42743 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:36.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:36.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:55:05.181" endtime="20250214 14:55:36.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:36.759" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:36.758" endtime="20250214 14:55:36.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:36.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:36.759" endtime="20250214 14:55:36.759"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.181" endtime="20250214 14:55:36.759"/>
</kw>
<msg timestamp="20250214 14:55:36.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:05.181" endtime="20250214 14:55:36.759"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.180" endtime="20250214 14:55:36.759"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:55:36.762" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-42743 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:36.832" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:55:36.760" endtime="20250214 14:55:36.832"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:36.836" level="INFO">Running command 'rm -f /tmp/tempkey-42743 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:36.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:36.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:55:36.834" endtime="20250214 14:55:36.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:36.864" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:36.864" endtime="20250214 14:55:36.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:36.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:36.864" endtime="20250214 14:55:36.864"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.833" endtime="20250214 14:55:36.865"/>
</kw>
<msg timestamp="20250214 14:55:36.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:36.833" endtime="20250214 14:55:36.865"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.833" endtime="20250214 14:55:36.865"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:55:36.865" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:55:36.865" endtime="20250214 14:55:36.865"/>
</kw>
<msg timestamp="20250214 14:55:36.865" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:55:05.179" endtime="20250214 14:55:36.865"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:55:36.866" endtime="20250214 14:55:36.866"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.179" endtime="20250214 14:55:36.866"/>
</kw>
<status status="PASS" starttime="20250214 14:55:05.179" endtime="20250214 14:55:36.866"/>
</test>
<test id="s1-s5-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250214 14:55:36.868" level="INFO">${postfix} = 38114</msg>
<status status="PASS" starttime="20250214 14:55:36.867" endtime="20250214 14:55:36.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 14:55:36.868" level="INFO">${tmpfile} = /tmp/tempkey-38114</msg>
<status status="PASS" starttime="20250214 14:55:36.868" endtime="20250214 14:55:36.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:36.871" level="INFO">Running command 'ozone sh key get /vol16002/ratis/dir2/1mbEC /tmp/tempkey-38114 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:41.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:41.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:55:36.869" endtime="20250214 14:55:41.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:41.121" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:41.121" endtime="20250214 14:55:41.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:41.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:41.122" endtime="20250214 14:55:41.122"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.869" endtime="20250214 14:55:41.122"/>
</kw>
<msg timestamp="20250214 14:55:41.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:36.869" endtime="20250214 14:55:41.122"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.868" endtime="20250214 14:55:41.122"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250214 14:55:41.124" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-38114 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:41.128" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250214 14:55:41.122" endtime="20250214 14:55:41.128"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:41.131" level="INFO">Running command 'rm -f /tmp/tempkey-38114 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:41.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:41.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250214 14:55:41.130" endtime="20250214 14:55:41.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:41.135" level="INFO"/>
<status status="PASS" starttime="20250214 14:55:41.135" endtime="20250214 14:55:41.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:41.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:41.136" endtime="20250214 14:55:41.136"/>
</kw>
<status status="PASS" starttime="20250214 14:55:41.129" endtime="20250214 14:55:41.136"/>
</kw>
<msg timestamp="20250214 14:55:41.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:41.129" endtime="20250214 14:55:41.136"/>
</kw>
<status status="PASS" starttime="20250214 14:55:41.128" endtime="20250214 14:55:41.136"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250214 14:55:41.137" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250214 14:55:41.136" endtime="20250214 14:55:41.137"/>
</kw>
<msg timestamp="20250214 14:55:41.137" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250214 14:55:36.867" endtime="20250214 14:55:41.137"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250214 14:55:41.137" endtime="20250214 14:55:41.137"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.867" endtime="20250214 14:55:41.137"/>
</kw>
<status status="PASS" starttime="20250214 14:55:36.866" endtime="20250214 14:55:41.137"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20250214 14:54:06.667" endtime="20250214 14:55:41.138"/>
</suite>
<suite id="s1-s6" name="EC-recovery" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s6-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:42.533" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:55:48.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:55:48.899" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 14:55:42.529" endtime="20250214 14:55:48.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:55:48.901" level="INFO">3</msg>
<status status="PASS" starttime="20250214 14:55:48.901" endtime="20250214 14:55:48.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:55:48.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:55:48.902" endtime="20250214 14:55:48.903"/>
</kw>
<status status="PASS" starttime="20250214 14:55:42.529" endtime="20250214 14:55:48.903"/>
</kw>
<msg timestamp="20250214 14:55:48.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:42.529" endtime="20250214 14:55:48.903"/>
</kw>
<msg timestamp="20250214 14:55:48.903" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 14:55:42.528" endtime="20250214 14:55:48.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 14:55:48.906" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20250214 14:55:48.904" endtime="20250214 14:55:48.906"/>
</kw>
<status status="FAIL" starttime="20250214 14:55:42.528" endtime="20250214 14:55:48.906"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:55:58.916" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:56:07.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:56:07.558" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 14:55:58.909" endtime="20250214 14:56:07.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:56:07.559" level="INFO">3</msg>
<status status="PASS" starttime="20250214 14:56:07.558" endtime="20250214 14:56:07.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:56:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:56:07.560" endtime="20250214 14:56:07.561"/>
</kw>
<status status="PASS" starttime="20250214 14:55:58.908" endtime="20250214 14:56:07.561"/>
</kw>
<msg timestamp="20250214 14:56:07.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:55:58.908" endtime="20250214 14:56:07.562"/>
</kw>
<msg timestamp="20250214 14:56:07.562" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250214 14:55:58.907" endtime="20250214 14:56:07.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 14:56:07.563" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20250214 14:56:07.562" endtime="20250214 14:56:07.563"/>
</kw>
<status status="FAIL" starttime="20250214 14:55:58.907" endtime="20250214 14:56:07.563"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250214 14:56:17.568" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250214 14:56:19.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250214 14:56:19.998" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250214 14:56:17.565" endtime="20250214 14:56:19.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250214 14:56:19.999" level="INFO">5</msg>
<status status="PASS" starttime="20250214 14:56:19.998" endtime="20250214 14:56:19.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250214 14:56:19.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250214 14:56:19.999" endtime="20250214 14:56:19.999"/>
</kw>
<status status="PASS" starttime="20250214 14:56:17.565" endtime="20250214 14:56:19.999"/>
</kw>
<msg timestamp="20250214 14:56:19.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250214 14:56:17.565" endtime="20250214 14:56:20.000"/>
</kw>
<msg timestamp="20250214 14:56:20.000" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250214 14:56:17.564" endtime="20250214 14:56:20.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 14:56:20.000" endtime="20250214 14:56:20.000"/>
</kw>
<status status="PASS" starttime="20250214 14:56:17.564" endtime="20250214 14:56:20.000"/>
</kw>
<status status="PASS" starttime="20250214 14:55:42.527" endtime="20250214 14:56:20.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250214 14:55:42.526" endtime="20250214 14:56:20.000"/>
</test>
<doc>Wait for replication to succeed</doc>
<status status="PASS" starttime="20250214 14:55:42.469" endtime="20250214 14:56:20.001"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="635383"/>
</suite>
<statistics>
<total>
<stat pass="114" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">aws-skip</stat>
<stat pass="19" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="114" fail="0" skip="0" id="s1" name="ozone-ec">ozone-ec</stat>
<stat pass="90" fail="0" skip="0" id="s1-s1" name="S3">ozone-ec.S3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Awss3">ozone-ec.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Boto3">ozone-ec.S3.Boto3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s3" name="Bucketcreate">ozone-ec.S3.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Bucketdelete">ozone-ec.S3.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Buckethead">ozone-ec.S3.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s6" name="Bucketlist">ozone-ec.S3.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Freon">ozone-ec.S3.Freon</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s8" name="MultipartUpload">ozone-ec.S3.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s9" name="Objectcopy">ozone-ec.S3.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s10" name="Objectcopys3A">ozone-ec.S3.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s11" name="Objectdelete">ozone-ec.S3.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s12" name="Objecthead">ozone-ec.S3.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s13" name="Objectmultidelete">ozone-ec.S3.Objectmultidelete</stat>
<stat pass="23" fail="0" skip="0" id="s1-s1-s14" name="Objectputget">ozone-ec.S3.Objectputget</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s15" name="Objecttagging">ozone-ec.S3.Objecttagging</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s16" name="Rclone">ozone-ec.S3.Rclone</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s17" name="S3 Getsecret">ozone-ec.S3.S3 Getsecret</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s18" name="Secretgenerate">ozone-ec.S3.Secretgenerate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s19" name="Secretrevoke">ozone-ec.S3.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s20" name="Webui">ozone-ec.S3.Webui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Rewrite">ozone-ec.Rewrite</stat>
<stat pass="12" fail="0" skip="0" id="s1-s3" name="Basic">ozone-ec.Basic</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="read-4-datanodes">ozone-ec.read-4-datanodes</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="read-3-datanodes">ozone-ec.read-3-datanodes</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="EC-recovery">ozone-ec.EC-recovery</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
