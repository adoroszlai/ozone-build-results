<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.19 on linux)" generated="20250104 11:06:07.110" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-balancer-ratis" source="/opt/hadoop/smoketest/balancer/testBalancer.robot">
<test id="s1-t1" name="Verify Container Balancer for RATIS/EC containers" line="157">
<kw name="Prepare For Tests">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:26.743" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:27.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:27.195" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.448794 s, 234 MB/s</msg>
<status status="PASS" starttime="20250104 10:57:26.741" endtime="20250104 10:57:27.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:27.196" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.448794 s, 234 MB/s</msg>
<status status="PASS" starttime="20250104 10:57:27.196" endtime="20250104 10:57:27.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:27.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:27.196" endtime="20250104 10:57:27.197"/>
</kw>
<status status="PASS" starttime="20250104 10:57:26.740" endtime="20250104 10:57:27.197"/>
</kw>
<msg timestamp="20250104 10:57:27.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:26.740" endtime="20250104 10:57:27.197"/>
</kw>
<status status="PASS" starttime="20250104 10:57:26.740" endtime="20250104 10:57:27.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250104 10:57:27.198" endtime="20250104 10:57:27.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:27.201" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:29.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:29.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:57:27.199" endtime="20250104 10:57:29.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:29.487" level="INFO"/>
<status status="PASS" starttime="20250104 10:57:29.487" endtime="20250104 10:57:29.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:29.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:29.487" endtime="20250104 10:57:29.488"/>
</kw>
<status status="PASS" starttime="20250104 10:57:27.199" endtime="20250104 10:57:29.488"/>
</kw>
<msg timestamp="20250104 10:57:29.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:27.199" endtime="20250104 10:57:29.488"/>
</kw>
<status status="PASS" starttime="20250104 10:57:27.198" endtime="20250104 10:57:29.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication ${REPLICATION} --type ${TYPE} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:29.491" level="INFO">Running command 'ozone sh bucket create --replication THREE --type RATIS /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:31.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:31.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:57:29.489" endtime="20250104 10:57:31.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:31.747" level="INFO"/>
<status status="PASS" starttime="20250104 10:57:31.746" endtime="20250104 10:57:31.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:31.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:31.747" endtime="20250104 10:57:31.747"/>
</kw>
<status status="PASS" starttime="20250104 10:57:29.489" endtime="20250104 10:57:31.748"/>
</kw>
<msg timestamp="20250104 10:57:31.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:29.489" endtime="20250104 10:57:31.748"/>
</kw>
<status status="PASS" starttime="20250104 10:57:29.488" endtime="20250104 10:57:31.748"/>
</kw>
<status status="PASS" starttime="20250104 10:57:26.739" endtime="20250104 10:57:31.748"/>
</kw>
<kw name="Datanode In Maintenance Mode">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode maintenance ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:31.752" level="INFO">Running command 'ozone admin datanode maintenance datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:33.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:33.449" level="INFO">${output} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 10:57:31.749" endtime="20250104 10:57:33.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:33.450" level="INFO">Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 10:57:33.449" endtime="20250104 10:57:33.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:33.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:33.450" endtime="20250104 10:57:33.450"/>
</kw>
<status status="PASS" starttime="20250104 10:57:31.749" endtime="20250104 10:57:33.450"/>
</kw>
<msg timestamp="20250104 10:57:33.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:31.749" endtime="20250104 10:57:33.451"/>
</kw>
<msg timestamp="20250104 10:57:33.451" level="INFO">${result} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 10:57:31.748" endtime="20250104 10:57:33.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Entering maintenance mode on datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:57:33.451" endtime="20250104 10:57:33.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:33.454" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:35.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:35.189" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 10:57:33.452" endtime="20250104 10:57:35.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:35.190" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 10:57:35.189" endtime="20250104 10:57:35.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:35.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:35.190" endtime="20250104 10:57:35.191"/>
</kw>
<status status="PASS" starttime="20250104 10:57:33.452" endtime="20250104 10:57:35.191"/>
</kw>
<msg timestamp="20250104 10:57:35.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:33.451" endtime="20250104 10:57:35.191"/>
</kw>
<msg timestamp="20250104 10:57:35.191" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 10:57:33.451" endtime="20250104 10:57:35.191"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:57:35.191" endtime="20250104 10:57:35.192"/>
</kw>
<status status="PASS" starttime="20250104 10:57:35.191" endtime="20250104 10:57:35.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Related pipelines are closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:35.195" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:36.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:36.964" level="INFO">${output} = cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20250104 10:57:35.193" endtime="20250104 10:57:36.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:36.965" level="INFO">cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20250104 10:57:36.964" endtime="20250104 10:57:36.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:36.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:36.965" endtime="20250104 10:57:36.965"/>
</kw>
<status status="PASS" starttime="20250104 10:57:35.193" endtime="20250104 10:57:36.965"/>
</kw>
<msg timestamp="20250104 10:57:36.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:35.193" endtime="20250104 10:57:36.966"/>
</kw>
<msg timestamp="20250104 10:57:36.966" level="INFO">${result} = cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20250104 10:57:35.192" endtime="20250104 10:57:36.966"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<msg timestamp="20250104 10:57:36.966" level="FAIL">'cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/OPEN/Follower' does not contain any of 'CLOSED' or 'No related pipelines or the node is not in Healthy state.'</msg>
<status status="FAIL" starttime="20250104 10:57:36.966" endtime="20250104 10:57:36.966"/>
</kw>
<status status="FAIL" starttime="20250104 10:57:35.192" endtime="20250104 10:57:36.966"/>
</kw>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:57:46.977" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:57:48.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:57:48.846" level="INFO">${output} = cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250104 10:57:46.968" endtime="20250104 10:57:48.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:57:48.847" level="INFO">cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250104 10:57:48.847" endtime="20250104 10:57:48.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:57:48.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:57:48.847" endtime="20250104 10:57:48.848"/>
</kw>
<status status="PASS" starttime="20250104 10:57:46.968" endtime="20250104 10:57:48.848"/>
</kw>
<msg timestamp="20250104 10:57:48.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:57:46.967" endtime="20250104 10:57:48.848"/>
</kw>
<msg timestamp="20250104 10:57:48.848" level="INFO">${result} = cf0094e9-b57c-4918-a6ef-c0ee6d82cb71/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250104 10:57:46.967" endtime="20250104 10:57:48.848"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250104 10:57:48.848" endtime="20250104 10:57:48.848"/>
</kw>
<status status="PASS" starttime="20250104 10:57:46.967" endtime="20250104 10:57:48.848"/>
</kw>
<status status="PASS" starttime="20250104 10:57:35.192" endtime="20250104 10:57:48.848"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250104 10:58:48.849" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20250104 10:57:48.849" endtime="20250104 10:58:48.849"/>
</kw>
<status status="PASS" starttime="20250104 10:57:31.748" endtime="20250104 10:58:48.849"/>
</kw>
<kw name="Get Uuid">
<var>${uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep ${HOST} | sed -e 's/Datanode: //'|sed -e 's/ .*$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:58:48.853" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep datanode1 | sed -e 's/Datanode: //'|sed -e 's/ .*$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:58:50.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:58:50.404" level="INFO">${output} = 6c24107f-27c3-484c-b99e-96d4464c0897</msg>
<status status="PASS" starttime="20250104 10:58:48.851" endtime="20250104 10:58:50.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:58:50.405" level="INFO">6c24107f-27c3-484c-b99e-96d4464c0897</msg>
<status status="PASS" starttime="20250104 10:58:50.404" endtime="20250104 10:58:50.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:58:50.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:58:50.405" endtime="20250104 10:58:50.405"/>
</kw>
<status status="PASS" starttime="20250104 10:58:48.850" endtime="20250104 10:58:50.406"/>
</kw>
<msg timestamp="20250104 10:58:50.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:58:48.850" endtime="20250104 10:58:50.406"/>
</kw>
<msg timestamp="20250104 10:58:50.406" level="INFO">${result} = 6c24107f-27c3-484c-b99e-96d4464c0897</msg>
<status status="PASS" starttime="20250104 10:58:48.850" endtime="20250104 10:58:50.406"/>
</kw>
<msg timestamp="20250104 10:58:50.406" level="INFO">${uuid} = 6c24107f-27c3-484c-b99e-96d4464c0897</msg>
<status status="PASS" starttime="20250104 10:58:48.849" endtime="20250104 10:58:50.406"/>
</kw>
<kw name="Datanode Usageinfo">
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode usageinfo --uuid=${uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:58:50.409" level="INFO">Running command 'ozone admin datanode usageinfo --uuid=6c24107f-27c3-484c-b99e-96d4464c0897 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:58:52.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:58:52.116" level="INFO">${output} = Usage Information (1 Datanodes)

UUID         : 6c24107f-27c3-484c-b99e-96d4464c0897 
IP Address   : 172.19.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 10736...</msg>
<status status="PASS" starttime="20250104 10:58:50.407" endtime="20250104 10:58:52.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:58:52.117" level="INFO">Usage Information (1 Datanodes)

UUID         : 6c24107f-27c3-484c-b99e-96d4464c0897 
IP Address   : 172.19.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 1073634449 B (1023.90 MB) 
Total Used   : 12729489 B (12.14 MB) 
Total Used % : 1.19% 
Ozone Used   : 4096 B (4 KB) 
Ozone Used % : 0.00% 
Remaining    : 1060904960 B (1011.76 MB) 
Remaining %  : 98.81% 
Pipeline(s)  : 1 
Container(s) : 0 
Container Pre-allocated : 0 B (0 B) 
Remaining Allocatable   : 1060904960 B (1011.76 MB) 
Free Space To Spare     : 104857600 B (100 MB) 
</msg>
<status status="PASS" starttime="20250104 10:58:52.116" endtime="20250104 10:58:52.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:58:52.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:58:52.117" endtime="20250104 10:58:52.117"/>
</kw>
<status status="PASS" starttime="20250104 10:58:50.407" endtime="20250104 10:58:52.117"/>
</kw>
<msg timestamp="20250104 10:58:52.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:58:50.407" endtime="20250104 10:58:52.118"/>
</kw>
<msg timestamp="20250104 10:58:52.118" level="INFO">${result} = Usage Information (1 Datanodes)

UUID         : 6c24107f-27c3-484c-b99e-96d4464c0897 
IP Address   : 172.19.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 10736...</msg>
<status status="PASS" starttime="20250104 10:58:50.406" endtime="20250104 10:58:52.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Used</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:58:52.118" endtime="20250104 10:58:52.118"/>
</kw>
<status status="PASS" starttime="20250104 10:58:50.406" endtime="20250104 10:58:52.118"/>
</kw>
<kw name="Create Multiple Keys">
<arg>3</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/100mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:58:52.119" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20250104 10:58:52.119" endtime="20250104 10:58:52.119"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>${NUM_KEYS}</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:58:52.119" level="INFO">${fileName} = file-0.txt</msg>
<status status="PASS" starttime="20250104 10:58:52.119" endtime="20250104 10:58:52.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:58:52.120" level="INFO">${key} = /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250104 10:58:52.120" endtime="20250104 10:58:52.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:58:52.120" level="INFO">file-0.txt</msg>
<status status="PASS" starttime="20250104 10:58:52.120" endtime="20250104 10:58:52.120"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:58:52.124" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-0.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:18.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:18.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:58:52.122" endtime="20250104 10:59:18.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:18.158" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:18.158" endtime="20250104 10:59:18.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:18.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:18.158" endtime="20250104 10:59:18.159"/>
</kw>
<status status="PASS" starttime="20250104 10:58:52.121" endtime="20250104 10:59:18.159"/>
</kw>
<msg timestamp="20250104 10:59:18.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:58:52.121" endtime="20250104 10:59:18.159"/>
</kw>
<msg timestamp="20250104 10:59:18.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:58:52.121" endtime="20250104 10:59:18.159"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:59:18.160" endtime="20250104 10:59:18.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:18.160" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250104 10:59:18.160" endtime="20250104 10:59:18.160"/>
</kw>
<status status="PASS" starttime="20250104 10:58:52.120" endtime="20250104 10:59:18.160"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250104 10:59:18.162" level="INFO">${postfix} = 59217</msg>
<status status="PASS" starttime="20250104 10:59:18.161" endtime="20250104 10:59:18.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:18.162" level="INFO">${tmpfile} = /tmp/tempkey-59217</msg>
<status status="PASS" starttime="20250104 10:59:18.162" endtime="20250104 10:59:18.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:18.166" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-0.txt /tmp/tempkey-59217 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:22.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:22.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:18.163" endtime="20250104 10:59:22.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:22.675" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:22.674" endtime="20250104 10:59:22.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:22.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:22.675" endtime="20250104 10:59:22.675"/>
</kw>
<status status="PASS" starttime="20250104 10:59:18.163" endtime="20250104 10:59:22.675"/>
</kw>
<msg timestamp="20250104 10:59:22.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:18.163" endtime="20250104 10:59:22.676"/>
</kw>
<status status="PASS" starttime="20250104 10:59:18.162" endtime="20250104 10:59:22.676"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250104 10:59:22.678" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-59217 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:22.744" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250104 10:59:22.676" endtime="20250104 10:59:22.744"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:22.747" level="INFO">Running command 'rm -f /tmp/tempkey-59217 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:22.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:22.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:22.745" endtime="20250104 10:59:22.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:22.777" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:22.777" endtime="20250104 10:59:22.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:22.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:22.778" endtime="20250104 10:59:22.778"/>
</kw>
<status status="PASS" starttime="20250104 10:59:22.745" endtime="20250104 10:59:22.778"/>
</kw>
<msg timestamp="20250104 10:59:22.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:22.745" endtime="20250104 10:59:22.778"/>
</kw>
<status status="PASS" starttime="20250104 10:59:22.744" endtime="20250104 10:59:22.778"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250104 10:59:22.779" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250104 10:59:22.778" endtime="20250104 10:59:22.779"/>
</kw>
<msg timestamp="20250104 10:59:22.779" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250104 10:59:18.161" endtime="20250104 10:59:22.779"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250104 10:59:22.779" endtime="20250104 10:59:22.779"/>
</kw>
<status status="PASS" starttime="20250104 10:59:18.160" endtime="20250104 10:59:22.779"/>
</kw>
<status status="PASS" starttime="20250104 10:58:52.119" endtime="20250104 10:59:22.779"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:22.780" level="INFO">${fileName} = file-1.txt</msg>
<status status="PASS" starttime="20250104 10:59:22.780" endtime="20250104 10:59:22.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:22.780" level="INFO">${key} = /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250104 10:59:22.780" endtime="20250104 10:59:22.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:22.781" level="INFO">file-1.txt</msg>
<status status="PASS" starttime="20250104 10:59:22.780" endtime="20250104 10:59:22.781"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:22.784" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-1.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:28.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:28.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:22.782" endtime="20250104 10:59:28.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:28.523" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:28.522" endtime="20250104 10:59:28.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:28.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:28.523" endtime="20250104 10:59:28.524"/>
</kw>
<status status="PASS" starttime="20250104 10:59:22.782" endtime="20250104 10:59:28.524"/>
</kw>
<msg timestamp="20250104 10:59:28.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:22.782" endtime="20250104 10:59:28.524"/>
</kw>
<msg timestamp="20250104 10:59:28.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:22.781" endtime="20250104 10:59:28.524"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:59:28.524" endtime="20250104 10:59:28.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:28.525" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250104 10:59:28.524" endtime="20250104 10:59:28.525"/>
</kw>
<status status="PASS" starttime="20250104 10:59:22.781" endtime="20250104 10:59:28.525"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250104 10:59:28.526" level="INFO">${postfix} = 93719</msg>
<status status="PASS" starttime="20250104 10:59:28.526" endtime="20250104 10:59:28.526"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:28.526" level="INFO">${tmpfile} = /tmp/tempkey-93719</msg>
<status status="PASS" starttime="20250104 10:59:28.526" endtime="20250104 10:59:28.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:28.529" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-1.txt /tmp/tempkey-93719 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:32.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:32.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:28.527" endtime="20250104 10:59:32.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:32.833" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:32.832" endtime="20250104 10:59:32.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:32.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:32.833" endtime="20250104 10:59:32.833"/>
</kw>
<status status="PASS" starttime="20250104 10:59:28.527" endtime="20250104 10:59:32.833"/>
</kw>
<msg timestamp="20250104 10:59:32.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:28.527" endtime="20250104 10:59:32.833"/>
</kw>
<status status="PASS" starttime="20250104 10:59:28.526" endtime="20250104 10:59:32.833"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250104 10:59:32.835" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-93719 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:32.900" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250104 10:59:32.834" endtime="20250104 10:59:32.900"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:32.904" level="INFO">Running command 'rm -f /tmp/tempkey-93719 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:32.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:32.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:32.902" endtime="20250104 10:59:32.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:32.932" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:32.931" endtime="20250104 10:59:32.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:32.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:32.932" endtime="20250104 10:59:32.932"/>
</kw>
<status status="PASS" starttime="20250104 10:59:32.901" endtime="20250104 10:59:32.932"/>
</kw>
<msg timestamp="20250104 10:59:32.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:32.901" endtime="20250104 10:59:32.933"/>
</kw>
<status status="PASS" starttime="20250104 10:59:32.901" endtime="20250104 10:59:32.933"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250104 10:59:32.933" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250104 10:59:32.933" endtime="20250104 10:59:32.933"/>
</kw>
<msg timestamp="20250104 10:59:32.933" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250104 10:59:28.525" endtime="20250104 10:59:32.933"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250104 10:59:32.933" endtime="20250104 10:59:32.934"/>
</kw>
<status status="PASS" starttime="20250104 10:59:28.525" endtime="20250104 10:59:32.934"/>
</kw>
<status status="PASS" starttime="20250104 10:59:22.779" endtime="20250104 10:59:32.934"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:32.934" level="INFO">${fileName} = file-2.txt</msg>
<status status="PASS" starttime="20250104 10:59:32.934" endtime="20250104 10:59:32.934"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:32.935" level="INFO">${key} = /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250104 10:59:32.934" endtime="20250104 10:59:32.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:32.935" level="INFO">file-2.txt</msg>
<status status="PASS" starttime="20250104 10:59:32.935" endtime="20250104 10:59:32.935"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:32.938" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-2.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:38.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:38.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:32.936" endtime="20250104 10:59:38.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:38.200" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:38.199" endtime="20250104 10:59:38.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:38.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:38.200" endtime="20250104 10:59:38.200"/>
</kw>
<status status="PASS" starttime="20250104 10:59:32.936" endtime="20250104 10:59:38.200"/>
</kw>
<msg timestamp="20250104 10:59:38.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:32.936" endtime="20250104 10:59:38.201"/>
</kw>
<msg timestamp="20250104 10:59:38.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:32.935" endtime="20250104 10:59:38.201"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 10:59:38.201" endtime="20250104 10:59:38.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:38.201" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250104 10:59:38.201" endtime="20250104 10:59:38.201"/>
</kw>
<status status="PASS" starttime="20250104 10:59:32.935" endtime="20250104 10:59:38.201"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250104 10:59:38.203" level="INFO">${postfix} = 86582</msg>
<status status="PASS" starttime="20250104 10:59:38.202" endtime="20250104 10:59:38.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250104 10:59:38.203" level="INFO">${tmpfile} = /tmp/tempkey-86582</msg>
<status status="PASS" starttime="20250104 10:59:38.203" endtime="20250104 10:59:38.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:38.206" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-2.txt /tmp/tempkey-86582 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:42.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:42.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:38.204" endtime="20250104 10:59:42.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:42.787" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:42.787" endtime="20250104 10:59:42.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:42.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:42.787" endtime="20250104 10:59:42.788"/>
</kw>
<status status="PASS" starttime="20250104 10:59:38.204" endtime="20250104 10:59:42.788"/>
</kw>
<msg timestamp="20250104 10:59:42.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:38.203" endtime="20250104 10:59:42.788"/>
</kw>
<status status="PASS" starttime="20250104 10:59:38.203" endtime="20250104 10:59:42.788"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250104 10:59:42.790" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-86582 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:42.856" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250104 10:59:42.788" endtime="20250104 10:59:42.856"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:42.860" level="INFO">Running command 'rm -f /tmp/tempkey-86582 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:42.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:42.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:42.858" endtime="20250104 10:59:42.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:42.888" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:42.887" endtime="20250104 10:59:42.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:42.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:42.888" endtime="20250104 10:59:42.888"/>
</kw>
<status status="PASS" starttime="20250104 10:59:42.857" endtime="20250104 10:59:42.888"/>
</kw>
<msg timestamp="20250104 10:59:42.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:42.857" endtime="20250104 10:59:42.888"/>
</kw>
<status status="PASS" starttime="20250104 10:59:42.856" endtime="20250104 10:59:42.889"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250104 10:59:42.889" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250104 10:59:42.889" endtime="20250104 10:59:42.889"/>
</kw>
<msg timestamp="20250104 10:59:42.889" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250104 10:59:38.202" endtime="20250104 10:59:42.889"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250104 10:59:42.889" endtime="20250104 10:59:42.889"/>
</kw>
<status status="PASS" starttime="20250104 10:59:38.202" endtime="20250104 10:59:42.890"/>
</kw>
<status status="PASS" starttime="20250104 10:59:32.934" endtime="20250104 10:59:42.890"/>
</iter>
<status status="PASS" starttime="20250104 10:58:52.119" endtime="20250104 10:59:42.890"/>
</for>
<status status="PASS" starttime="20250104 10:58:52.118" endtime="20250104 10:59:42.890"/>
</kw>
<kw name="Close All Containers">
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>15</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:42.893" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:44.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:44.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:42.891" endtime="20250104 10:59:44.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:44.614" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:44.613" endtime="20250104 10:59:44.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:44.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:44.614" endtime="20250104 10:59:44.614"/>
</kw>
<status status="PASS" starttime="20250104 10:59:42.891" endtime="20250104 10:59:44.614"/>
</kw>
<msg timestamp="20250104 10:59:44.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:42.891" endtime="20250104 10:59:44.615"/>
</kw>
<msg timestamp="20250104 10:59:44.615" level="INFO">${container} = </msg>
<status status="PASS" starttime="20250104 10:59:42.890" endtime="20250104 10:59:44.615"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20250104 10:59:44.616" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20250104 10:59:44.615" endtime="20250104 10:59:44.616"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<status status="NOT RUN" starttime="20250104 10:59:44.616" endtime="20250104 10:59:44.616"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250104 10:59:44.616" endtime="20250104 10:59:44.616"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<status status="NOT RUN" starttime="20250104 10:59:44.616" endtime="20250104 10:59:44.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250104 10:59:44.616" endtime="20250104 10:59:44.616"/>
</kw>
<status status="PASS" starttime="20250104 10:59:42.890" endtime="20250104 10:59:44.616"/>
</iter>
<status status="PASS" starttime="20250104 10:59:42.890" endtime="20250104 10:59:44.616"/>
</for>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>All container is closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:44.620" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:46.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:46.377" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.855Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfK...</msg>
<status status="PASS" starttime="20250104 10:59:44.618" endtime="20250104 10:59:46.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:46.377" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.855Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300108769Z",
  "owner" : "om",
  "containerID" : 1,
  "deleteTransactionId" : 0,
  "sequenceId" : 127,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.903Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300127093Z",
  "owner" : "om",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 100,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.915Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300135950Z",
  "owner" : "om",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 112,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20250104 10:59:46.377" endtime="20250104 10:59:46.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:46.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:46.378" endtime="20250104 10:59:46.378"/>
</kw>
<status status="PASS" starttime="20250104 10:59:44.617" endtime="20250104 10:59:46.378"/>
</kw>
<msg timestamp="20250104 10:59:46.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:44.617" endtime="20250104 10:59:46.378"/>
</kw>
<msg timestamp="20250104 10:59:46.378" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.855Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfK...</msg>
<status status="PASS" starttime="20250104 10:59:44.617" endtime="20250104 10:59:46.378"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250104 10:59:46.379" level="INFO">Length is 1163</msg>
<msg timestamp="20250104 10:59:46.379" level="FAIL">'{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.855Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300108769Z",
  "owner" : "om",
  "containerID" : 1,
  "deleteTransactionId" : 0,
  "sequenceId" : 127,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.903Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300127093Z",
  "owner" : "om",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 100,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2025-01-04T10:59:13.915Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2025-01-04T10:59:46.300135950Z",
  "owner" : "om",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 112,
  "open" : true,
  "deleted" : false
}' should be empty.</msg>
<status status="FAIL" starttime="20250104 10:59:46.378" endtime="20250104 10:59:46.379"/>
</kw>
<status status="FAIL" starttime="20250104 10:59:44.617" endtime="20250104 10:59:46.379"/>
</kw>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:56.383" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 10:59:58.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 10:59:58.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:56.381" endtime="20250104 10:59:58.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 10:59:58.095" level="INFO"/>
<status status="PASS" starttime="20250104 10:59:58.094" endtime="20250104 10:59:58.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 10:59:58.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 10:59:58.095" endtime="20250104 10:59:58.095"/>
</kw>
<status status="PASS" starttime="20250104 10:59:56.381" endtime="20250104 10:59:58.095"/>
</kw>
<msg timestamp="20250104 10:59:58.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:56.381" endtime="20250104 10:59:58.095"/>
</kw>
<msg timestamp="20250104 10:59:58.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250104 10:59:56.380" endtime="20250104 10:59:58.096"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250104 10:59:58.096" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250104 10:59:58.096" endtime="20250104 10:59:58.096"/>
</kw>
<status status="PASS" starttime="20250104 10:59:56.380" endtime="20250104 10:59:58.096"/>
</kw>
<status status="PASS" starttime="20250104 10:59:44.617" endtime="20250104 10:59:58.096"/>
</kw>
<status status="PASS" starttime="20250104 10:59:42.890" endtime="20250104 10:59:58.096"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfo}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 10:59:58.099" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:07.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:07.025" level="INFO">${output} = {
  "a646e353-f483-4df1-afd2-80f64effd55d": 314589184,
  "34077cd0-7c90-4ff3-a9eb-1c8b8e23c757": 314589184,
  "6c24107f-27c3-484c-b99e-96d4464c0897": 4096,
  "7abee973-9058-46d6-af69-e0799f57e448": 31...</msg>
<status status="PASS" starttime="20250104 10:59:58.097" endtime="20250104 11:00:07.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:07.026" level="INFO">{
  "a646e353-f483-4df1-afd2-80f64effd55d": 314589184,
  "34077cd0-7c90-4ff3-a9eb-1c8b8e23c757": 314589184,
  "6c24107f-27c3-484c-b99e-96d4464c0897": 4096,
  "7abee973-9058-46d6-af69-e0799f57e448": 314589184
}</msg>
<status status="PASS" starttime="20250104 11:00:07.026" endtime="20250104 11:00:07.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:07.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:07.026" endtime="20250104 11:00:07.027"/>
</kw>
<status status="PASS" starttime="20250104 10:59:58.097" endtime="20250104 11:00:07.027"/>
</kw>
<msg timestamp="20250104 11:00:07.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 10:59:58.097" endtime="20250104 11:00:07.027"/>
</kw>
<msg timestamp="20250104 11:00:07.027" level="INFO">${output} = {
  "a646e353-f483-4df1-afd2-80f64effd55d": 314589184,
  "34077cd0-7c90-4ff3-a9eb-1c8b8e23c757": 314589184,
  "6c24107f-27c3-484c-b99e-96d4464c0897": 4096,
  "7abee973-9058-46d6-af69-e0799f57e448": 31...</msg>
<status status="PASS" starttime="20250104 10:59:58.097" endtime="20250104 11:00:07.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:07.030" level="INFO">Running command 'echo '{
  "a646e353-f483-4df1-afd2-80f64effd55d": 314589184,
  "34077cd0-7c90-4ff3-a9eb-1c8b8e23c757": 314589184,
  "6c24107f-27c3-484c-b99e-96d4464c0897": 4096,
  "7abee973-9058-46d6-af69-e0799f57e448": 314589184
}' | jq '. | to_entries | .[] | select(.key == "6c24107f-27c3-484c-b99e-96d4464c0897") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:07.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:07.035" level="INFO">${output} = 4096</msg>
<status status="PASS" starttime="20250104 11:00:07.028" endtime="20250104 11:00:07.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:07.036" level="INFO">4096</msg>
<status status="PASS" starttime="20250104 11:00:07.035" endtime="20250104 11:00:07.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:07.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:07.036" endtime="20250104 11:00:07.036"/>
</kw>
<status status="PASS" starttime="20250104 11:00:07.028" endtime="20250104 11:00:07.036"/>
</kw>
<msg timestamp="20250104 11:00:07.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:07.028" endtime="20250104 11:00:07.037"/>
</kw>
<msg timestamp="20250104 11:00:07.037" level="INFO">${result} = 4096</msg>
<status status="PASS" starttime="20250104 11:00:07.027" endtime="20250104 11:00:07.037"/>
</kw>
<msg timestamp="20250104 11:00:07.037" level="INFO">${datanodeOzoneUsedBytesInfo} = 4096</msg>
<status status="PASS" starttime="20250104 10:59:58.096" endtime="20250104 11:00:07.037"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo} &lt; ${SIZE}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250104 11:00:07.037" endtime="20250104 11:00:07.037"/>
</kw>
<kw name="Datanode Recommission">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode recommission ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:07.041" level="INFO">Running command 'ozone admin datanode recommission datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:08.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:08.784" level="INFO">${output} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 11:00:07.038" endtime="20250104 11:00:08.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:08.785" level="INFO">Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 11:00:08.784" endtime="20250104 11:00:08.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:08.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:08.785" endtime="20250104 11:00:08.786"/>
</kw>
<status status="PASS" starttime="20250104 11:00:07.038" endtime="20250104 11:00:08.786"/>
</kw>
<msg timestamp="20250104 11:00:08.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:07.038" endtime="20250104 11:00:08.786"/>
</kw>
<msg timestamp="20250104 11:00:08.786" level="INFO">${result} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250104 11:00:07.038" endtime="20250104 11:00:08.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Started recommissioning datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 11:00:08.786" endtime="20250104 11:00:08.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Datanode Recommission is Finished</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:08.790" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:10.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:10.441" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:08.788" endtime="20250104 11:00:10.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:10.442" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:10.442" endtime="20250104 11:00:10.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:10.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:10.443" endtime="20250104 11:00:10.443"/>
</kw>
<status status="PASS" starttime="20250104 11:00:08.788" endtime="20250104 11:00:10.443"/>
</kw>
<msg timestamp="20250104 11:00:10.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:08.788" endtime="20250104 11:00:10.443"/>
</kw>
<msg timestamp="20250104 11:00:10.443" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:08.787" endtime="20250104 11:00:10.443"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250104 11:00:10.444" level="FAIL">'Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250104 11:00:10.443" endtime="20250104 11:00:10.444"/>
</kw>
<status status="FAIL" starttime="20250104 11:00:08.787" endtime="20250104 11:00:10.444"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:20.448" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:22.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:22.203" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:20.446" endtime="20250104 11:00:22.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:22.204" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:22.203" endtime="20250104 11:00:22.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:22.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:22.204" endtime="20250104 11:00:22.204"/>
</kw>
<status status="PASS" starttime="20250104 11:00:20.446" endtime="20250104 11:00:22.205"/>
</kw>
<msg timestamp="20250104 11:00:22.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:20.445" endtime="20250104 11:00:22.205"/>
</kw>
<msg timestamp="20250104 11:00:22.205" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:20.445" endtime="20250104 11:00:22.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250104 11:00:22.205" level="FAIL">'Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250104 11:00:22.205" endtime="20250104 11:00:22.205"/>
</kw>
<status status="FAIL" starttime="20250104 11:00:20.444" endtime="20250104 11:00:22.206"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:32.210" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:33.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:33.876" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:32.208" endtime="20250104 11:00:33.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:33.877" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:33.876" endtime="20250104 11:00:33.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:33.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:33.877" endtime="20250104 11:00:33.877"/>
</kw>
<status status="PASS" starttime="20250104 11:00:32.207" endtime="20250104 11:00:33.878"/>
</kw>
<msg timestamp="20250104 11:00:33.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:32.207" endtime="20250104 11:00:33.878"/>
</kw>
<msg timestamp="20250104 11:00:33.878" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:32.206" endtime="20250104 11:00:33.878"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250104 11:00:33.878" level="FAIL">'Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250104 11:00:33.878" endtime="20250104 11:00:33.878"/>
</kw>
<status status="FAIL" starttime="20250104 11:00:32.206" endtime="20250104 11:00:33.879"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:00:43.882" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:00:45.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:00:45.539" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:43.880" endtime="20250104 11:00:45.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:00:45.540" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:45.539" endtime="20250104 11:00:45.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:00:45.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:00:45.540" endtime="20250104 11:00:45.540"/>
</kw>
<status status="PASS" starttime="20250104 11:00:43.880" endtime="20250104 11:00:45.541"/>
</kw>
<msg timestamp="20250104 11:00:45.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:00:43.880" endtime="20250104 11:00:45.541"/>
</kw>
<msg timestamp="20250104 11:00:45.541" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250104 11:00:43.879" endtime="20250104 11:00:45.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 11:00:45.541" endtime="20250104 11:00:45.541"/>
</kw>
<status status="PASS" starttime="20250104 11:00:43.879" endtime="20250104 11:00:45.541"/>
</kw>
<status status="PASS" starttime="20250104 11:00:08.787" endtime="20250104 11:00:45.541"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>300000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250104 11:05:45.542" level="INFO">Slept 5 minutes</msg>
<status status="PASS" starttime="20250104 11:00:45.541" endtime="20250104 11:05:45.542"/>
</kw>
<status status="PASS" starttime="20250104 11:00:07.037" endtime="20250104 11:05:45.542"/>
</kw>
<kw name="Run Container Balancer">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer start -t 0.1 -d 100 -i 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:05:45.546" level="INFO">Running command 'ozone admin containerbalancer start -t 0.1 -d 100 -i 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:05:49.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:05:49.375" level="INFO">${output} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250104 11:05:45.543" endtime="20250104 11:05:49.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:05:49.376" level="INFO">Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250104 11:05:49.375" endtime="20250104 11:05:49.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:05:49.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:05:49.376" endtime="20250104 11:05:49.376"/>
</kw>
<status status="PASS" starttime="20250104 11:05:45.543" endtime="20250104 11:05:49.376"/>
</kw>
<msg timestamp="20250104 11:05:49.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:05:45.543" endtime="20250104 11:05:49.377"/>
</kw>
<msg timestamp="20250104 11:05:49.377" level="INFO">${result} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250104 11:05:45.543" endtime="20250104 11:05:49.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Container Balancer started successfully.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250104 11:05:49.377" endtime="20250104 11:05:49.377"/>
</kw>
<status status="PASS" starttime="20250104 11:05:45.542" endtime="20250104 11:05:49.377"/>
</kw>
<kw name="Run Balancer Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250104 11:05:49.380" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250104 11:05:53.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250104 11:05:53.034" level="INFO">${output} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250104 11:05:49.379" endtime="20250104 11:05:53.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250104 11:05:53.035" level="INFO">ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250104 11:05:53.034" endtime="20250104 11:05:53.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250104 11:05:53.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250104 11:05:53.035" endtime="20250104 11:05:53.036"/>
</kw>
<status status="PASS" starttime="20250104 11:05:49.378" endtime="20250104 11:05:53.036"/>
</kw>
<msg timestamp="20250104 11:05:53.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250104 11:05:49.378" endtime="20250104 11:05:53.036"/>
</kw>
<msg timestamp="20250104 11:05:53.036" level="INFO">${result} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250104 11:05:49.378" endtime="20250104 11:05:53.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250104 11:05:53.036" level="FAIL">'ContainerBalancer is Not Running.' does not contain 'ContainerBalancer is Running.'</msg>
<status status="FAIL" starttime="20250104 11:05:53.036" endtime="20250104 11:05:53.036"/>
</kw>
<status status="FAIL" starttime="20250104 11:05:49.377" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Run Balancer Verbose Status">
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>40sec</arg>
<arg>5sec</arg>
<arg>Run Balancer Verbose History Status</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Wait Finish Of Balancing">
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</var>
<arg>${uuid}</arg>
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo}</arg>
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &lt; ${SIZE} * ${UPPER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20250104 11:05:53.037" endtime="20250104 11:05:53.037"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &gt; ${SIZE} * ${LOWER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20250104 11:05:53.038" endtime="20250104 11:05:53.038"/>
</kw>
<timeout value="20 minutes"/>
<status status="FAIL" starttime="20250104 10:57:26.739" endtime="20250104 11:05:53.038">'ContainerBalancer is Not Running.' does not contain 'ContainerBalancer is Running.'</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20250104 10:57:26.690" endtime="20250104 11:05:53.039"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="ozone-balancer-ratis">ozone-balancer-ratis</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
